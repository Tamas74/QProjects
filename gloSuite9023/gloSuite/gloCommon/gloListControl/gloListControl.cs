using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Text;
using System.Windows.Forms;
using System.Collections;
using gloSettings;
using gloGlobal;
using System.Linq;
//using System.Collections;
//using System.Collections.Generic;  

namespace gloListControl
{

    public enum gloListControlType
    {
        Other = 1, Patient = 2, Pharmacy = 3, Insurance = 4, Referrals = 5, Providers = 6, Resources = 7,
        Physicians = 8, Procedures = 9, Coverage = 10, CPT = 11, Diagnosis = 12, Modifier = 13, Users = 14,
        PatientInsurence = 15, Hospital = 16, EMRPatient = 17, InsuranceServiceType = 18, Taxonomy = 19,
        AppointmentType = 20, AllPatientInsurances = 21, AllPatient = 22, PendingLabPatients = 23, PreferredLab = 24,
        Facility = 25, ChargeTray = 26, PaymentTray = 27, ConflictingPatient = 28, PaymentType = 29, InsuranceCompany = 30,
        InsuranceReportingCategory = 31, BillingType = 32, FeeShedule = 33, ERAPayer = 34, HistoryItem = 35,
        Location = 36, AppointmentTypeType = 37, gloVaultEmail = 38, gloVaultData = 39, PatientOtherGuarantors = 40,
        GuarantorsAccounts = 41, PatientAccounts = 42, Accounts = 43, Template = 44, ReportProviders = 45, ReportAccountActionCode = 46, StmtDisplaySettings = 47,
        Race = 48, ClinicalInstruction = 49, PatientRepresentative = 50, OrderQuickNotes = 51, CarePlan = 52, MedicalCategory = 53, BillingQuickNotes = 54, MedicalCategoryReport = 55, OBMedicalCategory = 56, HistoryOBPhysicalExam = 57,
        PatientConsent = 58, OBVitalComments = 59, ApptSelectedCols = 60, ReasonCode = 61, RemarkCode = 62, DMSCategory = 63, MUCQMRefusedCode = 64,
        CQMICD9 = 65, CQMICD10 = 66, CQMOrders = 67, CQMSnomed = 68, CQMRxNorm = 69, CQMHCPCS = 70, CQMCVX = 71, HistoryLOINC = 72,Ethnicity=73 ,TagSnomed = 74, CQMCategoriesValueSet = 75, ConceptID=76, ImplantableDevices=77, CPTProcedures=78,PatientProblemList=79,CarePlanLoincs = 80,
        CarePlanMedication = 81, CarePlanEncounter = 82, CarePlanImmunization = 83, CarePlanEducation = 84, CarePlanNutrition = 85, CarePlanLabOrder = 86, CarePlanGoals = 87, HealthConcern = 88, Intervention = 89, CarePlanProblemList = 90,
        CQMCVXCOdes = 91
        //added for cqm measure changes  CQMICD9 = 65, CQMICD10 = 66, CQMOrders = 67, CQMSnomed = 68, CQMRxNorm = 69, CQMHCPCS,CQMCVX  
    }

    public partial class gloListControl : UserControl
    {
        public string CMSID = "";
        public string ReportingYear = "";
        #region " Constructors "

        public gloListControl()
        {
            InitializeComponent();
            if (SelectedItems != null)
            {
                _SelectedItems.Dispose();
                _SelectedItems = null;
            }
            _SelectedItems = new gloGeneralItem.gloItems();

            if (appSettings["ClinicID"] != null)
            {
                if (appSettings["ClinicID"] != "")
                { _ClinicID = Convert.ToInt64(appSettings["ClinicID"]); }
                else { _ClinicID = 0; }
            }
            else
            { _ClinicID = 0; }

            #region " Retrieve MessageBoxCaption from AppSettings "

            if (appSettings["MessageBOXCaption"] != null)
            {
                if (appSettings["MessageBOXCaption"] != "")
                {
                    _MessageBoxCaption = Convert.ToString(appSettings["MessageBOXCaption"]);
                }
                else
                {
                    _MessageBoxCaption = "gloPM";
                }
            }
            else
            { _MessageBoxCaption = "gloPM"; }

            #endregion
        }

        public gloListControl(DataTable dtList, bool IsMultiSelect, int ControlWidth)
        {
            InitializeComponent();

            if (appSettings["ClinicID"] != null)
            {
                if (appSettings["ClinicID"] != "")
                { _ClinicID = Convert.ToInt64(appSettings["ClinicID"]); }
                else { _ClinicID = 0; }
            }
            else
            { _ClinicID = 0; }

            #region " Retrieve MessageBoxCaption from AppSettings "

            if (appSettings["MessageBOXCaption"] != null)
            {
                if (appSettings["MessageBOXCaption"] != "")
                {
                    _MessageBoxCaption = Convert.ToString(appSettings["MessageBOXCaption"]);
                }
                else
                {
                    _MessageBoxCaption = "gloPM";
                }
            }
            else
            { _MessageBoxCaption = "gloPM"; }

            #endregion
            if (_dtList != null)
            {
                _dtList.Dispose();
                _dtList = null;
            }
            _dtList = dtList;
            _ismultiselect = IsMultiSelect;
            _DatabaseConnectionString = "";
            _ListControlType = gloListControlType.Other;
            //if (ControlWidth <= 0)
            //{ _thiswidth = this.Width; }
            //else
            //{ _thiswidth = ControlWidth; }
            _thiswidth = this.Width;
            if (SelectedItems != null)
            {
                _SelectedItems.Dispose();
                _SelectedItems = null;
            }
            _SelectedItems = new gloGeneralItem.gloItems();


        }

        public gloListControl(DataTable dtList, gloListControlType fillControlType, bool IsMultiSelect, int ControlWidth)
        {
            InitializeComponent();

            if (appSettings["ClinicID"] != null)
            {
                if (appSettings["ClinicID"] != "")
                { _ClinicID = Convert.ToInt64(appSettings["ClinicID"]); }
                else { _ClinicID = 0; }
            }
            else
            { _ClinicID = 0; }

            #region " Retrieve MessageBoxCaption from AppSettings "

            if (appSettings["MessageBOXCaption"] != null)
            {
                if (appSettings["MessageBOXCaption"] != "")
                {
                    _MessageBoxCaption = Convert.ToString(appSettings["MessageBOXCaption"]);
                }
                else
                {
                    _MessageBoxCaption = "gloPM";
                }
            }
            else
            { _MessageBoxCaption = "gloPM"; }

            #endregion
            if (_dtList != null)
            {
                _dtList.Dispose();
                _dtList = null;
            }
            _dtList = dtList;
            _ListControlType = fillControlType;
            _ismultiselect = IsMultiSelect;
            _DatabaseConnectionString = "";

            _thiswidth = this.Width;
            if (SelectedItems != null)
            {
                _SelectedItems.Dispose();
                _SelectedItems = null;
            }
            _SelectedItems = new gloGeneralItem.gloItems();

        }

        public gloListControl(string DatabaseConnectionString, gloListControlType fillControlType, bool IsMultiSelect, int ControlWidth, string CallForm = "")
        {
            InitializeComponent();

            if (appSettings["ClinicID"] != null)
            {
                if (appSettings["ClinicID"] != "")
                { _ClinicID = Convert.ToInt64(appSettings["ClinicID"]); }
                else { _ClinicID = 0; }
            }
            else
            { _ClinicID = 0; }

            #region " Retrieve MessageBoxCaption from AppSettings "

            if (appSettings["MessageBOXCaption"] != null)
            {
                if (appSettings["MessageBOXCaption"] != "")
                {
                    _MessageBoxCaption = Convert.ToString(appSettings["MessageBOXCaption"]);
                }
                else
                {
                    _MessageBoxCaption = "gloPM";
                }
            }
            else
            { _MessageBoxCaption = "gloPM"; }

            #endregion
            if (_dtList != null)
            {
                _dtList.Dispose();
                _dtList = null;
            }

            _dtList = null;
            _ListControlType = fillControlType;
            _ismultiselect = IsMultiSelect;
            _DatabaseConnectionString = DatabaseConnectionString;
            _thiswidth = this.Width;
            if (SelectedItems != null)
            {
                _SelectedItems.Dispose();
                _SelectedItems = null;
            }
            _SelectedItems = new gloGeneralItem.gloItems();
            CallingForm = CallForm;
        }

        //Added by madan for gloVault
        public gloListControl(string DatabaseConnectionString, gloListControlType fillControlType, bool IsMultiSelect, bool IsForgloVault, int ControlWidth)
        {
            InitializeComponent();

            if (appSettings["ClinicID"] != null)
            {
                if (appSettings["ClinicID"] != "")
                { _ClinicID = Convert.ToInt64(appSettings["ClinicID"]); }
                else { _ClinicID = 0; }
            }
            else
            { _ClinicID = 0; }

            #region " Retrieve MessageBoxCaption from AppSettings "

            if (appSettings["MessageBOXCaption"] != null)
            {
                if (appSettings["MessageBOXCaption"] != "")
                {
                    _MessageBoxCaption = Convert.ToString(appSettings["MessageBOXCaption"]);
                }
                else
                {
                    _MessageBoxCaption = "gloPM";
                }
            }
            else
            { _MessageBoxCaption = "gloPM"; }

            #endregion
            if (_dtList != null)
            {
                _dtList.Dispose();
                _dtList = null;
            }
            _dtList = null;
            _ListControlType = fillControlType;
            _ismultiselect = IsMultiSelect;
            _DatabaseConnectionString = DatabaseConnectionString;

            _IsForgloVault = IsForgloVault;
            _thiswidth = this.Width;
            if (SelectedItems != null)
            {
                _SelectedItems.Dispose();
                _SelectedItems = null;
            }
            _SelectedItems = new gloGeneralItem.gloItems();
        }

        //Added By Mahesh Satlapalli (Apollo) On 2011-06-27(yyyy-mm-dd) for Pass MergeAccount- adding PatientId And nAccountId
        public gloListControl(string DatabaseConnectionString, gloListControlType fillControlType, bool IsMultiSelect, int ControlWidth, Int64 nPatientId, Int64 nAccountId)
        {
            InitializeComponent();

            if (appSettings["ClinicID"] != null)
            {
                if (appSettings["ClinicID"] != "")
                { _ClinicID = Convert.ToInt64(appSettings["ClinicID"]); }
                else { _ClinicID = 0; }
            }
            else
            { _ClinicID = 0; }

            #region " Retrieve MessageBoxCaption from AppSettings "

            if (appSettings["MessageBOXCaption"] != null)
            {
                if (appSettings["MessageBOXCaption"] != "")
                {
                    _MessageBoxCaption = Convert.ToString(appSettings["MessageBOXCaption"]);
                }
                else
                {
                    _MessageBoxCaption = "gloPM";
                }
            }
            else
            { _MessageBoxCaption = "gloPM"; }

            #endregion
            if (_dtList != null)
            {
                _dtList.Dispose();
                _dtList = null;
            }
            _dtList = null;
            _ListControlType = fillControlType;
            _ismultiselect = IsMultiSelect;
            _DatabaseConnectionString = DatabaseConnectionString;

            _thiswidth = this.Width;

            //Added By Mahesh S(Apollo) for MergeAccount, To show the Patient Accounts.
            _PatientID = PatientID;
            _nAccountID = nAccountId;
            //End
            if (SelectedItems != null)
            {
                _SelectedItems.Dispose();
                _SelectedItems = null;
            }
            _SelectedItems = new gloGeneralItem.gloItems();
        }

        public gloListControl(string DatabaseConnectionString, gloListControlType fillControlType, bool IsMultiSelect, int ControlWidth,Int64 nPatientId)
        {
            InitializeComponent();

            if (appSettings["ClinicID"] != null)
            {
                if (appSettings["ClinicID"] != "")
                { _ClinicID = Convert.ToInt64(appSettings["ClinicID"]); }
                else { _ClinicID = 0; }
            }
            else
            { _ClinicID = 0; }

            #region " Retrieve MessageBoxCaption from AppSettings "

            if (appSettings["MessageBOXCaption"] != null)
            {
                if (appSettings["MessageBOXCaption"] != "")
                {
                    _MessageBoxCaption = Convert.ToString(appSettings["MessageBOXCaption"]);
                }
                else
                {
                    _MessageBoxCaption = "gloPM";
                }
            }
            else
            { _MessageBoxCaption = "gloPM"; }

            #endregion
            if (_dtList != null)
            {
                _dtList.Dispose();
                _dtList = null;
            }
            _dtList = null;
            _ListControlType = fillControlType;
            _ismultiselect = IsMultiSelect;
            _DatabaseConnectionString = DatabaseConnectionString;

            _thiswidth = this.Width;

            //Added By Mahesh S(Apollo) for MergeAccount, To show the Patient Accounts.
            _PatientID = nPatientId;
            
            //End
            if (SelectedItems != null)
            {
                _SelectedItems.Dispose();
                _SelectedItems = null;
            }
            _SelectedItems = new gloGeneralItem.gloItems();
        }

        public gloListControl(Int64 nPatientId,Int64 nVisitID, string DatabaseConnectionString, gloListControlType fillControlType, bool IsMultiSelect, int ControlWidth )
        {
            InitializeComponent();

            if (appSettings["ClinicID"] != null)
            {
                if (appSettings["ClinicID"] != "")
                { _ClinicID = Convert.ToInt64(appSettings["ClinicID"]); }
                else { _ClinicID = 0; }
            }
            else
            { _ClinicID = 0; }

            #region " Retrieve MessageBoxCaption from AppSettings "

            if (appSettings["MessageBOXCaption"] != null)
            {
                if (appSettings["MessageBOXCaption"] != "")
                {
                    _MessageBoxCaption = Convert.ToString(appSettings["MessageBOXCaption"]);
                }
                else
                {
                    _MessageBoxCaption = "gloPM";
                }
            }
            else
            { _MessageBoxCaption = "gloPM"; }

            #endregion
            if (_dtList != null)
            {
                _dtList.Dispose();
                _dtList = null;
            }
            _dtList = null;
            _ListControlType = fillControlType;
            _ismultiselect = IsMultiSelect;
            _DatabaseConnectionString = DatabaseConnectionString;

            _thiswidth = this.Width;

            //Added By Mahesh S(Apollo) for MergeAccount, To show the Patient Accounts.
            _PatientID = nPatientId;
            _VisitId = nVisitID;

            //End
            if (SelectedItems != null)
            {
                _SelectedItems.Dispose();
                _SelectedItems = null;
            }
            _SelectedItems = new gloGeneralItem.gloItems();
        }

        #endregion " Constructors "

        #region " Private and Public Variables "

        System.Collections.Specialized.NameValueCollection appSettings = System.Configuration.ConfigurationManager.AppSettings;

        private gloGeneralItem.gloItems _SelectedItems = null;
        private DataTable _dtSelectedRecords = null;
        private DataTable _dtList = new DataTable();
        private DataTable _dtGroupList;
        public DataTable _dtInputTable;
        public DataTable _dtInputBusinessCenterUsers;
        public DataTable _dtStoreDiagnosis = null;  //added to maintain selected ICD so it can be appended to List at end

        DataTable dtSelected = new DataTable();
        //  DataTable dtForSearch;

        private DataView _dvList;
        private DataView _dvSubList;

        private bool loadfirsttime = true;
        private gloListControlType _ListControlType = gloListControlType.Other;
        private bool _IsFormClosing = false;
        private bool _ismultiselect = false;
        private int _thiswidth = 0;
        //   private bool _mod1 = false;
        //   private bool _mod2 = false;
        //   private bool _mod3 = false;
        private int _previndex = -1;
        //Added By Mahesh S(Apollo) on 2011-06-27

        private string _ControlHeader = "";
        private string _code = "";
        private string _name = "";
        public string _phoneNumber = "";
        public string _faxNumber = "";
        public string _address1 = "";
        public string _address2 = "";
        public string _city = "";
        public string _state = "";
        public string _zip = "";
        public bool gblnIcd10Transition = false;
        private string _MyCaller;
        private string _MessageBoxCaption = String.Empty;
        private string _DatabaseConnectionString = "";

        string strfilterForReferral = "";
        string _strPatientCol = "";
        string sFilter = "";

        private string[] strSearchArray;


        private bool _IsOwnAccounts = false;
        private bool _FillInProcess = false;
        private bool _bHideToolStrip = false;
        private bool _IsUsergroup = false;
        private bool _closeOnDoubleClick = true;
        private bool _isExcludeFromStatement = false;
        private bool _isFilterPaymentTray;
        private bool _ShowInsPlansWithoutCompany = false;
        private bool _ShowInsPlansWithoutCategories = false;
        private bool _isFromStatement = false;
        private bool _isFromReport = false;
        private bool _isBusinessCenterUsers = false;
        private int _isIcd9_10 = 9;//added for icd10 implementation
        private bool _OBVitalComments = false;
        bool _IsTextchanged = false;
        bool _isModify = false;
        bool _IsForgloVault = false;

        public Int64 _id = 0;
        public Int64 _isdefault = 0;

        private Int64 _TOSID = 0;
        private Int64 _ClinicID = 0;
        private Int64 _nAccountID;
        private Int64 _PatientID;
        private Int64 _VisitId;
        private Int64 _defaultPatientId = 0;

        //  private Int64 _SpecialityID = 0;
        int VisibleColumns = 0;//For Calculating Visible Columns
        DataTable dtPatientStList = null;

        public delegate void ItemSelected(object sender, EventArgs e);
        public event ItemSelected ItemSelectedClick;

        public delegate void ItemSelectionChange(object sender, EventArgs e);
        public event ItemSelectionChange ItemSelection_Change;

        public delegate void ItemClosed(object sender, EventArgs e);
        public event ItemClosed ItemClosedClick;

        public delegate void AddFormHandler(object sender, EventArgs e);
        public event AddFormHandler AddFormHandlerClick;

        public delegate void ModifyFormHandler(object sender, EventArgs e);
        public event ModifyFormHandler ModifyFormHandlerClick;

        public delegate void chkShowActpatientChange(object sender, EventArgs e);
        public event chkShowActpatientChange chkShowActpatient_Change;

        gloGeneralItem.gloItems glItems = new gloGeneralItem.gloItems();
        gloGeneralItem.gloItem glItem;

        private Boolean _isRequireBUSonPatientAccts = false;

        private string _SecureMessage = "";

        private Int64 _UserID = 0;
        private bool _ShowAllDiagnosis = false; //to Show All ICD radiobutton on charge summary report
        public int _DiagnosisType = 0; //to maintain ICD type for charge summary report
        public int QuickNoteTypes = 0;

        private bool _IsgloCollectCustomer = false;

        private bool _chkIncludeAllUsers = false;
        private bool _IsReLoad = true;

        private bool _AllCodes = false;
        private bool _NotTaken = false;
        private bool _Laterality = false;
        private bool _ICD9Code = false;
        private bool _ICD10Code = false;
        private bool _SnomedCode = false;
       
        private bool _LonicCode = false;
        private bool _Attribute = false;
        private bool _RefusedImmunizationCode = false;
        private string _sPredicateType = "";
        #endregion " Private and Public Variables "

        #region "List Properties"

        public Int64 UserID
        {
            get { return _UserID; }
            set { _UserID = value; }
        }

        public string SecureMessage
        {
            get { return _SecureMessage; }
            set { _SecureMessage = value; }
        }


        public gloGeneralItem.gloItems SelectedItems
        {
            get { return _SelectedItems; }
            set { _SelectedItems = value; }
        }

        public DataTable SelectedRecords
        {
            get { return _dtSelectedRecords; }
            set { _dtSelectedRecords = value; }
        }

        public void ShowOKCancel(bool show)
        {
            if (show == true)
            {
                pnlCommand.Visible = true;
            }
            else
            {
                pnlCommand.Visible = false;
            }
        }

        public void ShowHeaderPanel(bool ShowValue)
        {
            panel1.Visible = ShowValue;
        }

        public Int64 ClinicID
        {
            get { return _ClinicID; }
            set { _ClinicID = value; }
        }


        private bool _ShowPhysiciansWithProvider = false;
        public bool ShowPhysiciansWithProvider
        {
            get { return _ShowPhysiciansWithProvider; }
            set { _ShowPhysiciansWithProvider = value; }
        }

        public bool IsOwnAccounts
        {
            get { return _IsOwnAccounts; }
            set { _IsOwnAccounts = value; }
        }


        public Int64 PatientID
        {
            get { return _PatientID; }
            set { _PatientID = value; }
        }

        public Int64 nAccountID
        {
            get { return _nAccountID; }
            set { _nAccountID = value; }
        }


        public string ControlHeader
        {
            get { return _ControlHeader; }
            set { _ControlHeader = value; }
        }

        public Int64 TOSID
        {
            get { return _TOSID; }
            set { _TOSID = value; }
        }

        public bool HideToolStrip
        {
            get { return _bHideToolStrip; }
            set { _bHideToolStrip = value; }
        }

        public Int64 DefaultPatientID
        {
            get { return _defaultPatientId; }
            set { _defaultPatientId = value; }
        }

        public bool CloseOnDoubleClick
        {
            get { return _closeOnDoubleClick; }
            set { _closeOnDoubleClick = value; }
        }


        public bool ExcludeFromStatement
        {
            get { return _isExcludeFromStatement; }
            set { _isExcludeFromStatement = value; }
        }
        public bool IsFromStatement
        {
            get { return _isFromStatement; }
            set { _isFromStatement = value; }
        }
        public bool IsFromReport
        {
            get { return _isFromReport; }
            set { _isFromReport = value; }
        }

        public bool FilterPaymentTrayByUsers
        {
            get { return _isFilterPaymentTray; }
            set { _isFilterPaymentTray = value; }
        }

        public bool ShowInsPlansWithoutCompany
        {
            get { return _ShowInsPlansWithoutCompany; }
            set { _ShowInsPlansWithoutCompany = value; }
        }

        public bool ShowInsPlansWithoutCategories
        {
            get { return _ShowInsPlansWithoutCategories; }
            set { _ShowInsPlansWithoutCategories = value; }
        }

        public string MyCaller
        {
            get { return _MyCaller; }
            set { _MyCaller = value; }
        }

        public DataTable InputTable
        {
            get { return _dtInputTable; }
            set { _dtInputTable = value; }
        }

        public DataTable InputBusinessCenterUsersTable
        {
            get { return _dtInputBusinessCenterUsers; }
            set { _dtInputBusinessCenterUsers = value; }
        }

        public String strSearchText { get; set; }

        public string CallingForm { get; set; } //// used for Storing the form name from which control is called


        public bool IsBusinessCenterUsers
        {
            get { return _isBusinessCenterUsers; }
            set { _isBusinessCenterUsers = value; }
        }
        public bool ShowAllDiagnosis
        {
            get { return _ShowAllDiagnosis; }
            set { _ShowAllDiagnosis = value; }
        }


        public bool IsgloCollectCustomer
        {
            get { return _IsgloCollectCustomer; }
            set { _IsgloCollectCustomer = value; }
        }

        public bool bchkIncludeAllUsers
        {
            get { return _chkIncludeAllUsers; }
            set { _chkIncludeAllUsers = value; }
        }

        public bool OBVitalComments
        {
            get { return _OBVitalComments; }
            set { _OBVitalComments = value; }
        }

        public Boolean bShowAllCodes
        {
            get { return _AllCodes; }
            set { _AllCodes = value; }
        }

        public Boolean bShowNotTakenCodes
        {
            get { return _NotTaken; }
            set { _NotTaken = value; }
        }

        public Boolean bShowLateralityCodes
        {
            get { return _Laterality; }
            set { _Laterality = value; }
        }

        public Boolean bShowICD9Codes
        {
            get { return _ICD9Code; }
            set { _ICD9Code = value; }
        }

        public Boolean bShowICD10Codes
        {
            get { return _ICD10Code; }
            set { _ICD10Code = value; }
        }

        public Boolean bShowSnomedCodes
        {
            get { return _SnomedCode; }
            set { _SnomedCode = value; }
        }

        public Boolean bShowLonicCodes
        {
            get { return _LonicCode; }
            set { _LonicCode = value; }
        }
       
        public Boolean bShowAttributeCodes
        {
            get { return _Attribute; }
            set { _Attribute = value; }
        }

        public Boolean bRefusedImmunizationCode
        {
            get { return _RefusedImmunizationCode; }
            set { _RefusedImmunizationCode = value; }
        }
        public string sPredicateType
        {
            get { return _sPredicateType; }
            set { _sPredicateType = value; }
        }
        #endregion
        public int IsICD9_10 //added for icd10 implementation
        {
            get { return _isIcd9_10; }
            set { _isIcd9_10 = value; }
        }
        private void gloListControl_Load(object sender, EventArgs e)
        {
            arrSSNColumnNames.Add("SSNNo".ToLower());
            arrSSNColumnNames.Add("SSN".ToLower());
            oTimerSearch.Interval = 100;  //added by nilesh on 20110328

            if (_ListControlType == gloListControlType.Modifier)
            {
                dgListView.AllowUserToOrderColumns = false;

            }
            if (_ListControlType == gloListControlType.Users)
            {
                tsb_UserGroups.Visible = true;
                if (_ismultiselect == false)
                {
                    tsb_UserGroups.Visible = false;
                }
                if (IsBusinessCenterUsers)
                { tsb_UserGroups.Visible = false; }
            }
            else
            {
                tsb_UserGroups.Visible = false;
            }
            //chetan added for ICD10
            FillDiagnosisControl();

            //Added by Mayuri:20100705
            if (_ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians || _ListControlType == gloListControlType.Pharmacy)
            {
                //In PM click on Reports/Provider-Referrals-Patient report then click on the Referral: magnifying glass find a provider,
                //click on the checkbox and then hit the Modify button and you will get the error message. GLO2012-0016143
                //To solve above issue Roopali babriya added If condition _isFromReport == false on 6 June 2012.
                // Default set to _isFromReport = false from frmRpt_ReferralProviderPatients it is set to true.

                if (_isFromReport == false)
                {
                    tsb_New.Visible = true;
                    tsb_Modify.Visible = true;
                }
            }
            else if (_ListControlType == gloListControlType.PreferredLab && CallingForm == "gloLabUC_Transaction")
            {
                tsb_New.Visible = true;
            }
            else if (_ListControlType == gloListControlType.Race ||_ListControlType == gloListControlType.Ethnicity)
            {
                tsb_New.Visible = false;
                tsb_Modify.Visible = false;
                tsb_ShowAllRace.Visible = true;
            }
            pnlCommand.Visible = false;
            try
            {
                //-----Saket 20080516
                if (_ListControlType == gloListControlType.CPT || _ListControlType == gloListControlType.HistoryLOINC  || _ListControlType == gloListControlType.CQMCVXCOdes)
                {
                }

                if (_ismultiselect == true)
                    //removed select all option in 6050 for Usability issue
                    if (_ListControlType == gloListControlType.Pharmacy)
                    {
                        chkSelectAll.Visible = false;
                    }
                    else
                    {
                        if (_ListControlType == gloListControlType.Race || _ListControlType == gloListControlType.Ethnicity)
                        {
                            chkSelectAll.Visible = false;
                        }
                        else
                        {
                            chkSelectAll.Visible = true;
                        }
                    }
                else
                    chkSelectAll.Visible = false;

                if (_bHideToolStrip == true)
                {
                    pnlToolStrip.Visible = false;
                }


                //Added by madan for gloVault
                if (_ismultiselect == true && _IsForgloVault == true)
                {
                    chkSelectAll.Visible = false;
                }
                //End madan.

                if (_ListControlType == gloListControlType.Pharmacy)
                {
                    FillSpecialityType();
                    lblSpeciality.Visible = true;
                    cmbSpeciality.Visible = true;
                }
                else
                {
                    lblSpeciality.Visible = false;
                    cmbSpeciality.Visible = false;
                }

                //condition added for ICd10 implementation
                if (_ListControlType != gloListControlType.Diagnosis)
                {
                    FillListAsCriteria(0);
                }

              
                //if (_ListControlType == gloListControlType.CarePlanLoincs)
                //{
                //    FillCareplanLoincs();
                //}


                if (dgListView != null)
                {
                    if (dgListView.RowCount > 0)
                    {
                        if (_ismultiselect == false)
                        {
                            lblSearch.Text = dgListView.Columns[1].HeaderText.ToString() + " :";
                            dgListView.ScrollBars = ScrollBars.Both;
                            dgListView.ReadOnly = true;
                        }
                        else
                        {
                            lblSearch.Text = dgListView.Columns[2].HeaderText.ToString() + " :";
                            for (int i = 0; i < dgListView.Columns.Count; i++)
                            {
                                dgListView.Columns[i].ReadOnly = true;
                            }
                            dgListView.Columns[0].ReadOnly = false;

                            if (_ListControlType == gloListControlType.Modifier)
                            {
                                dgListView.Columns[6].ReadOnly = false;
                                chkSelectAll.Visible = false;
                                if (CallingForm == "Claim Rule")
                                {
                                    dgListView.Columns[6].Visible = false;
                                }
                            }
                            if (CallingForm == "Claim Rule")
                            {
                                //dgListView.Columns[6].Visible = false;
                                pnlExistsPredicate.Visible = true;
                                if (sPredicateType == "And")
                                {
                                    rd_ANDPredicate.Checked = true;
                                    rd_ORPredicate.Checked = false;
                                }
                                else
                                {
                                    rd_ANDPredicate.Checked = false;
                                    rd_ORPredicate.Checked = true;
                                }
                            }
                        }


                        //Sandip Darade 20080812 ....
                        //code to set Last name column as default search column
                        lblSearch.Text = "Search :";
                        if (_ListControlType == gloListControlType.Providers || _ListControlType == gloListControlType.Physicians || _ListControlType == gloListControlType.Physicians || _ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.EMRPatient)
                        {
                            if (_ismultiselect == true)
                            {
                                dgListView.Sort(dgListView.Columns[5], ListSortDirection.Ascending);
                            }
                            else
                            {
                                dgListView.Sort(dgListView.Columns[4], ListSortDirection.Ascending);
                            }
                            if (CallingForm == "Tax ID Providers")
                            {
                                chkSelectAll.Visible = true;
                            }
                        }
                        if (_ListControlType == gloListControlType.Users)
                        {
                            if (!IsgloCollectCustomer)
                            {

                                if (_ismultiselect == true)
                                {
                                    dgListView.Sort(dgListView.Columns[3], ListSortDirection.Ascending);
                                }
                                else
                                {
                                    dgListView.Sort(dgListView.Columns[2], ListSortDirection.Ascending);
                                }
                            }

                        }
                    }
                    if (_ListControlType == gloListControlType.Patient || _ListControlType == gloListControlType.AllPatient || _ListControlType == gloListControlType.PendingLabPatients)
                    {
                    }
                }
                //To search Insurance plan in OCR scan shell
                if (strSearchText != null)
                {
                    if (strSearchText != "")
                    {
                        txtSearch.Text = strSearchText;
                    }
                }


                if (_ListControlType == gloListControlType.ReasonCode || _ListControlType == gloListControlType.RemarkCode)
                {
                    chkSelectAll.Visible = false;
                    if (_ismultiselect)
                    {
                        chkIncludeDescription.Visible = true;
                    }
                    else
                    {
                        chkIncludeDescription.Checked=false;
                        chkIncludeDescription.Visible = false;
                    }
                    
                }

                if (CallingForm == "Claim Rule")
                {
                    if (_ListControlType == gloListControlType.Modifier) //|| _ListControlType == gloListControlType.CPT || _ListControlType == gloListControlType.Diagnosis
                    {
                        chkSelectAll.Visible = false;
                    }
                    if (_ListControlType==gloListControlType.CPT)
                    {
                        pnlExistsPredicate.Visible = true;
                    }
                }
            }
            catch (Exception ex)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
            }
            finally
            {
                if (_ListControlType == gloListControlType.PatientOtherGuarantors)
                {
                    if (dgListView == null || dgListView.Rows.Count <= 0)
                    {
                        tsb_OK.Enabled = false;
                        txtSearch.Enabled = false;
                    }
                }
                //_isControlLoading = false;
            }
            txtSearch.Focus();
        }

        private void FillDiagnosisControl()
        {
            if (_ListControlType == gloListControlType.Diagnosis)
            {
                if (_ShowAllDiagnosis)
                    rbAll.Visible = true;

                if (SelectedItems.Count == 0) //if selected items is zero the according to ICD setting from admin ICD9 or 10 gets selected 
                {
                    if (CallingForm == "Claim Rule" && _DiagnosisType == 1)
                    {
                        rbAll.Checked = true;
                    }
                    else
                    {
                        if (gblnIcd10Transition == true)
                            rbICD10.Checked = true;
                        else
                            rbICD9.Checked = true;
                    }
                }
                else
                {
                    if (_ShowAllDiagnosis)
                    {
                        if (_DiagnosisType == 1)
                        {
                            rbAll.Checked = true;
                        }
                        else if (_DiagnosisType == (int)gloGlobal.gloICD.CodeRevision.ICD9)
                        {
                            rbICD9.Checked = true;
                        }
                        else
                        {
                            rbICD10.Checked = true;
                        }
                    }
                    else
                    {
                        if (IsICD9_10 == 10) //added for icd10 implementation
                        {
                            rbICD10.Checked = true;
                        }
                        else
                        {
                            rbICD9.Checked = true;
                        }

                    }
                }
                if (CallingForm == "Claim Rule")
                {
                    //rbAll.Checked = true;
                    pnlICD9_10.Visible = false;
                }
                else
                {
                    pnlICD9_10.Visible = true;
                }
            }
            else
            {
                pnlICD9_10.Visible = false;
            }
        }
        #region "Fill Control Methods"

        // new function added for ICD10 Implementation 
        public void FillICD9ICD10()
        {
            this.Cursor = Cursors.WaitCursor;
            gloDatabaseLayer.DBLayer oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
            gloDatabaseLayer.DBParameters oParameters = new gloDatabaseLayer.DBParameters();
            System.Collections.Specialized.NameValueCollection appSettings = System.Configuration.ConfigurationManager.AppSettings;
            oDB.Connect(false);
            string strSearch = txtSearch.Text.Trim();

            try
            {

                strSearch = strSearch.Replace("'", "''").Replace("[", "").Replace("]", "").Replace("*", "");

                int ICD = 0;
                if (rbICD9.Checked == true)
                {
                    ICD = (int)gloGlobal.gloICD.CodeRevision.ICD9;
                    IsICD9_10 = (int)gloGlobal.gloICD.CodeRevision.ICD9;
                    _DiagnosisType = (int)gloGlobal.gloICD.CodeRevision.ICD9; //It contain 1,9,10 value for All & for resp ICD so took different variable
                }
                else
                {
                    ICD = (int)gloGlobal.gloICD.CodeRevision.ICD10;
                    IsICD9_10 = (int)gloGlobal.gloICD.CodeRevision.ICD10;
                    _DiagnosisType = (int)gloGlobal.gloICD.CodeRevision.ICD10;
                }

                oParameters.Add("@SearchString", strSearch, ParameterDirection.Input, SqlDbType.VarChar);
                if (_dtList != null)
                {
                    _dtList.Dispose();
                    _dtList = null;
                }
                if (rbAll.Checked == true)
                {
                    _DiagnosisType = 1;
                    oDB.Retrive("gsp_Diagnosis_Search_All", oParameters, out _dtList);
                }
                else
                {
                    oParameters.Add("@nICDRevision", ICD, ParameterDirection.Input, SqlDbType.Int);
                    oDB.Retrive("gsp_Diagnosis_Search", oParameters, out _dtList);
                }

                // _dtList.Columns.Remove("InvalidICD9");
                // _dtList.Columns.Remove("nICDRevision");
                //  dgListView.DataSource = _dtList;
                if (_dvList != null)
                {
                    _dvList.Dispose();
                    _dvList = null;
                }


                _dvList = _dtList.DefaultView;
                if (_ismultiselect == true)
                {
                    DataColumn dcID1 = new DataColumn("Check1", typeof(int));

                    dcID1.DefaultValue = 0;
                    _dvList.Table.Columns.Add(dcID1);
                    DataColumn[] pk5 = new DataColumn[] { _dvList.Table.Columns[0] };
                    _dvList.Table.PrimaryKey = pk5;

                    if (dtSelected.Columns.Count == 0)
                    {
                        DataColumn col1 = new DataColumn("ID");
                        DataColumn col2 = new DataColumn("Name");
                        dtSelected.Columns.Add(col1);
                        dtSelected.Columns.Add(col2);
                    }

                    DataColumn[] pkey = new DataColumn[] { dtSelected.Columns[0] };
                    dtSelected.PrimaryKey = pkey;
                }

                if (tsb_UserGroups.Text == "Groups")
                {
                    _dtGroupList = GetGroups();
                    DataColumn dcID1 = new DataColumn("Check1", typeof(int));

                    dcID1.DefaultValue = 0;
                    _dtGroupList.Columns.Add(dcID1);
                    DataColumn[] pk2 = new DataColumn[] { _dtGroupList.Columns[0] };
                    _dtGroupList.PrimaryKey = pk2;
                }

                if ((strSearch.Trim() == "") && (_ismultiselect == true))  //when search textbox is empty then previously selected ICD gets appended to List
                {
                    if (_dtStoreDiagnosis != null)
                    {
                        foreach (DataRow dr in _dtStoreDiagnosis.Rows)
                        {
                            DataRow[] drr = _dvList.Table.Select("nICD9ID=" + dr["nICD9ID"]);
                            if (drr.Length == 0)
                            {
                                dr["Check1"] = true;

                                _dvList.Table.ImportRow(dr);
                            }
                        }
                    }
                }
                //DataView dt =(DataView )  dgListView.DataSource;
                //if (dt != null)
                //    dt.Dispose();
                //   dt = null;

                dgListView.DataSource = null;
                dgListView.Columns.Clear();
                dgListView.DataSource = _dvList;
                if ((_dtStoreDiagnosis == null) && (_ismultiselect == true))
                    _dtStoreDiagnosis = _dvList.Table.Clone();
                dgListView.Columns[3].Visible = false;
                dgListView.Columns[4].Visible = false;
                if (_ismultiselect == true)
                {
                    dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                    dgListView.Columns[0].HeaderText = "Select";
                    dgListView.Columns[1].HeaderText = "Id";
                    dgListView.Columns[2].HeaderText = "Code";
                    dgListView.Columns[3].HeaderText = "Description";

                    dgListView.Columns[0].Visible = true;
                    dgListView.Columns[1].Visible = false;
                    dgListView.Columns[2].Visible = true;
                    dgListView.Columns[3].Visible = true;
                    if (dgListView.Columns.Contains("check1") == true)
                    {
                        dgListView.Columns["check1"].Visible = false;
                    }

                    int _width = (_thiswidth - 17) / 9;
                    dgListView.Columns[0].Width = _width * 1;
                    dgListView.Columns[2].Width = _width * 3;
                    dgListView.Columns[3].Width = _width * 5;

                    if (dtSelected.Rows.Count > 0)
                    {
                        for (int Count = 0; Count < dgListView.Rows.Count; Count++)
                        {
                            dgListView.CommitEdit(DataGridViewDataErrorContexts.Display);
                            DataRow rw = _dvList.Table.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                            if (rw != null)
                            {
                                if (Convert.ToInt32(rw["Check1"]) != 0)
                                {
                                    dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check1"]);
                                }
                            }

                            DataRow dr = dtSelected.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                            if (dr != null)
                            {
                                dgListView.Rows[Count].Cells[0].Value = 1;
                            }
                        }
                    }
                }
                else
                {
                    dgListView.Columns[0].HeaderText = "Id";
                    dgListView.Columns[1].HeaderText = "Code";
                    dgListView.Columns[2].HeaderText = "Description";

                    dgListView.Columns[0].Visible = false;
                    dgListView.Columns[1].Visible = true;
                    dgListView.Columns[2].Visible = true;

                    int _width = (_thiswidth - 17) / 5;
                    dgListView.Columns[1].Width = _width * 2;
                    dgListView.Columns[2].Width = _width * 3;
                }


                //08-Apr-14 Aniket: Resolving Bug #66748:
                for (int i = 0; i < dgListView.Columns.Count; i++)
                {
                    dgListView.Columns[i].ReadOnly = true;
                }
                dgListView.Columns[0].ReadOnly = false;


            }
            catch //(Exception ex)
            {

            }
            finally
            {
                oDB.Disconnect();
                oDB.Dispose();
                oDB = null;
                oParameters.Dispose();
                oParameters = null;
                this.Cursor = Cursors.Default;
                strSearch = null;
            }

        }

        public DataTable FillICDSelectedDiagnosis()
        {
            DataTable dtSelectedDiag = null;
            gloDatabaseLayer.DBLayer oDB = null;
            gloDatabaseLayer.DBParameters oParameters = null;
            System.Collections.Specialized.NameValueCollection appSettings = System.Configuration.ConfigurationManager.AppSettings;

            string strSearch = "";

            for (int cnt = 0; cnt < _SelectedItems.Count; cnt++)
            {
                //  dr[0] = Convert.ToInt64(_SelectedItems[nSelCount].ID);
                strSearch += _SelectedItems[cnt].Code.ToString().Trim() + ",";


                //dtSelected.Rows.Add(dr);

            }


            if (strSearch.Length > 2)

                strSearch = strSearch.Substring(0, strSearch.Length - 1);
            else
                return null;

            try
            {
                oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
                oParameters = new gloDatabaseLayer.DBParameters();

                oDB.Connect(false);


                //       dtSelectedDiag = new DataTable(); 

                int ICD = 0;
                if (rbICD9.Checked == true)
                {
                    ICD = (int)gloGlobal.gloICD.CodeRevision.ICD9;
                    IsICD9_10 = (int)gloGlobal.gloICD.CodeRevision.ICD9;

                }
                else
                {
                    ICD = (int)gloGlobal.gloICD.CodeRevision.ICD10;
                    IsICD9_10 = (int)gloGlobal.gloICD.CodeRevision.ICD10;

                }
                oParameters.Add("@SearchString", "", ParameterDirection.Input, SqlDbType.VarChar);
                oParameters.Add("@ListofCodes", strSearch, ParameterDirection.Input, SqlDbType.VarChar);
                if (rbAll.Checked)
                {
                    oDB.Retrive("gsp_Diagnosis_Search_All", oParameters, out dtSelectedDiag);
                }
                else
                {
                    oParameters.Add("@nICDRevision", ICD, ParameterDirection.Input, SqlDbType.Int);
                    oDB.Retrive("gsp_Diagnosis_Search", oParameters, out dtSelectedDiag);
                }
                // _dtList.Columns.Remove("InvalidICD9");
                // _dtList.Columns.Remove("nICDRevision");
                //  dgListView.DataSource = _dtList;

                return dtSelectedDiag;
            }
            catch //(Exception ex)
            {
                return null;
            }

            finally
            {
                if (oDB != null)
                {
                    oDB.Disconnect();
                    oDB.Dispose();
                }
                oDB = null;
                if (oParameters != null)
                {
                    oParameters.Dispose();
                    oParameters = null;
                }
                this.Cursor = Cursors.Default;
                strSearch = null;
            }

        }

        public void FillListAsCriteria(Int64 ID, DataTable dtPatientIds = null) //dtPatientIds is an optional parameter and should be always at last
        {
            if (_isModify == true)
            {
                txtSearch.ResetText();
                strfilterForReferral = "";
                _isModify = false;
            }

            _FillInProcess = true;

            if (_ListControlType != gloListControlType.Other)
            {
                DataTable _dtList = null;

                if (_DatabaseConnectionString.Trim() != "")
                {
                    string _sqlQuery = "";
                    gloDatabaseLayer.DBLayer oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
                    gloDatabaseLayer.DBParameters oParameters = new gloDatabaseLayer.DBParameters();
                    System.Collections.Specialized.NameValueCollection appSettings = System.Configuration.ConfigurationManager.AppSettings;
                    oDB.Connect(false);

                    try
                    {
                        switch (_ListControlType)
                        {
                            case gloListControlType.PatientConsent:
                                _sqlQuery = "SELECT DISTINCT  nCategoryID  ,ISNULL(sDescription, '') ConsentType"

                                    + " FROM    Category_MST "
                                    + "  WHERE   sCategoryType = 'Consent Type'";

                                break;
                            case gloListControlType.Patient:
                                {
                                    Int64 tempProviderID;
                                    if (appSettings["ProviderID"] != null)
                                    {
                                        if (appSettings["ProviderID"] != "")
                                        { tempProviderID = Convert.ToInt64(appSettings["ProviderID"]); }
                                        else { tempProviderID = 0; }
                                    }
                                    else
                                    { tempProviderID = 0; }

                                    //ADD THE CONDITION FOR MIDDLE NAME WHEHTER IT IS BLANK 20100619
                                    //Bug ID: 47918	Date Sort: Modify Patient - Guarantor screen - DOB sort order not working.
                                    //Remove convert(varchar,Patient.dtDOB,101) for Patient.DOB and place Patient.DOB.
                                    _sqlQuery = " SELECT DISTINCT TOP 1000 Patient.nPatientID AS PatientID,Patient.sPatientCode AS PatientCode,  "
                                    + " Patient.sFirstName as PatientFirstName,ISNULL(Patient.sMiddleName,'') AS PatientMiddleName,Patient.sLastName AS PatientLastName,   "
                                    + " dbo.FormatPhone(Convert(Varchar(10),Patient.nSSN),1) AS SSNNo,     "
                                    + " isnull(Provider_MST.sFirstName,'')+space(1)+CASE ISNULL(Provider_MST.sMiddleName,'') WHEN  '' THEN '' When Provider_MST.sMiddleName then "
                                    + "Provider_MST.sMiddleName + SPACE(1) END+isnull(Provider_MST.sLastName,'') AS Provider,    "
                                    + " Patient.dtDOB as PatientDOB, dbo.FormatPhone(sPhone,0) as Phone,dbo.FormatPhone(ISNULL(sMobile,''),0) AS Mobile,ISNULL(sPatientStatus,'') AS PatientStatus   "
                                    + " FROM Patient LEFT OUTER JOIN Provider_MST ON Patient.nProviderID = Provider_MST.nProviderID ";

                                    String _Condition = "";

                                    //Added by Mukesh 20090829
                                    if (_isExcludeFromStatement == true)
                                    {
                                        if (_Condition == "")
                                        {
                                            _Condition = " WHERE Patient.nPatientID not in (select nPatientID from PatientSettings where svalue='1' and sName='Exclude from Statement') ";
                                        }
                                        else
                                        {
                                            _Condition += " and Patient.nPatientID not in (select nPatientID from PatientSettings where svalue='1' and sName='Exclude from Statement')";
                                        }
                                    }
                                    //

                                    if (ClinicID > 0)
                                    {
                                        if (_Condition == "")
                                        {
                                            _Condition = " WHERE Patient.nClinicID = " + ClinicID + " ";
                                        }
                                        else
                                        {
                                            _Condition += " and Patient.nClinicID = " + ClinicID + " ";
                                        }
                                    }
                                    if (_isFromStatement && dtPatientIds != null && dtPatientIds.Rows.Count > 0 && chkShowActpatient.Checked == true)
                                    {
                                        string ourstring = "";
                                        try
                                        {
                                            ourstring = String.Join(",", dtPatientIds.AsEnumerable().Select(x => x.Field<Decimal>("PatientID").ToString()).ToArray());
                                        }
                                        catch (Exception)
                                        {
                                            ourstring = "";
                                        }


                                        if (ourstring != "")
                                        {
                                            if (_Condition == "")
                                            {
                                                _Condition = " WHERE Patient.nPatientID in (" + ourstring + ") ";
                                            }
                                            else
                                            {
                                                _Condition += " and Patient.nPatientID in  (" + ourstring + ") ";
                                            }
                                        }
                                    }
                                    _sqlQuery = _sqlQuery + _Condition;


                                    // code below added to pull 1000 records only while loading 20100728
                                    #region Gurantor changes

                                    _sqlQuery = _sqlQuery + strfilterForReferral;

                                    #endregion Gurantor changes

                                    _sqlQuery = _sqlQuery + " ORDER BY PatientFirstName,PatientLastName  ";


                                }
                                break;
                            case gloListControlType.AllPatient:
                                {
                                    //ADD THE CONDITION FOR MIDDLE NAME WHEHTER IT IS BLANK 20100619
                                    //Bug ID: 47918	Date Sort: Modify Patient - Guarantor screen - DOB sort order not working.
                                    //Remove convert(varchar,Patient.dtDOB,101) for Patient.DOB and place Patient.DOB.
                                    _sqlQuery = " SELECT DISTINCT Patient.nPatientID AS PatientID,Patient.sPatientCode AS PatientCode,  "
                                    + " Patient.sFirstName as PatientFirstName,ISNULL(Patient.sMiddleName,'') AS PatientMiddleName,Patient.sLastName AS PatientLastName,   "
                                    + " dbo.FormatPhone(Convert(Varchar(10),Patient.nSSN),1) AS SSNNo,     "
                                    + " isnull(Provider_MST.sFirstName,'')+space(1)+CASE ISNULL(Provider_MST.sMiddleName,'') WHEN  '' THEN '' When ISNULL(Provider_MST.sMiddleName,'') then "
                                    + "ISNULL(Provider_MST.sMiddleName,'') + SPACE(1) END +isnull(Provider_MST.sLastName,'') AS Provider,    "
                                    + " Patient.dtDOB as PatientDOB, dbo.FormatPhone(sPhone,0) as Phone,dbo.FormatPhone(ISNULL(sMobile,''),0) AS Mobile,ISNULL(sPatientStatus,'') AS PatientStatus   "
                                    + " FROM Patient LEFT OUTER JOIN Provider_MST ON Patient.nProviderID = Provider_MST.nProviderID ";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " WHERE Patient.nClinicID = " + ClinicID + "  ORDER BY PatientFirstName,PatientLastName ";
                                    }
                                    else
                                    {
                                        _sqlQuery = _sqlQuery + "  ORDER BY PatientFirstName,PatientLastName ";
                                    }

                                }
                                break;
                            //Added By MaheshB For Merge Patient
                            case gloListControlType.ConflictingPatient:
                                {
                                    //ADD THE CONDITION FOR MIDDLE NAME WHEHTER IT IS BLANK 20100619
                                    //modified by Mayuri:20100630-Changed middlename case -To fix bug:2431,2411
                                    //Bug ID: 47918	Date Sort: Modify Patient - Guarantor screen - DOB sort order not working.
                                    //Remove convert(varchar,Patient.dtDOB,101) for Patient.DOB and place Patient.DOB.
                                    _sqlQuery = " SELECT DISTINCT Patient.nPatientID AS PatientID,Patient.sPatientCode AS PatientCode,  "
                                    + " Patient.sFirstName as PatientFirstName,ISNULL(Patient.sMiddleName,'') AS PatientMiddleName,Patient.sLastName AS PatientLastName,   "
                                    + " dbo.FormatPhone(Convert(Varchar(10),Patient.nSSN),1) AS SSNNo,     "
                                    + " isnull(Provider_MST.sFirstName,'')+space(1)+CASE ISNULL(Provider_MST.sMiddleName,'') WHEN  '' THEN '' WHEN Provider_MST.sMiddleName THEN "
                                    + "Provider_MST.sMiddleName + SPACE(1) END+isnull(Provider_MST.sLastName,'') AS Provider,    "
                                    + " Patient.dtDOB as PatientDOB, dbo.FormatPhone(sPhone,0) as Phone,dbo.FormatPhone(ISNULL(sMobile,''),0) AS Mobile,ISNULL(sPatientStatus,'') AS PatientStatus   "
                                    + " FROM Patient LEFT OUTER JOIN Provider_MST ON Patient.nProviderID = Provider_MST.nProviderID "
                                    + " WHERE Patient.nPatientID IN ( "
                                    + " Select nPatientID as PatientID from Patient "
                                    + " where isnull(sFirstName,'')+space(2)+isnull(sMiddleName,'')+space(2)+isnull(sLastName,'') in  "
                                    + " (select isnull(sFirstName,'')+space(2)+isnull(sMiddleName,'')+space(2)+isnull(sLastName,'') "
                                    + " from Patient group by sFirstName,sMiddleName,sLastName   "
                                    + " having count(isnull(sFirstName,'')+space(2)+isnull(sMiddleName,'')+space(2)+isnull(sLastName,'') )>1)  "
                                    + " )";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " and Patient.nClinicID = " + ClinicID + " ";
                                    }
                                    _sqlQuery = _sqlQuery + " Order By PatientLastName ";
                                }
                                break;

                            case gloListControlType.PendingLabPatients:
                                {

                                    //Code added on 13/02/2009 -by Sagar Ghodke to load Pending Lab patients (Ref  Table : HL7_PendingLabOrders);

                                    _sqlQuery = " SELECT DISTINCT Patient.nPatientID AS PatientID, Patient.sPatientCode AS PatientCode, " +
                                    " Patient.sFirstName AS PatientFirstName,  " +
                                    " Patient.sLastName AS PatientLastName, dbo.FormatPhone(CONVERT(Varchar(10), Patient.nSSN),1) AS SSNNo, Patient.dtDOB AS PatientDOB " +
                                    " FROM  Patient INNER JOIN " +
                                    " HL7_PendingLabOrders ON Patient.nPatientID = HL7_PendingLabOrders.nPatientID ";
                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " WHERE Patient.nClinicID = " + ClinicID + " ORDER BY Patient.sFirstName";
                                    }
                                    else
                                    {
                                        _sqlQuery = _sqlQuery + " ORDER BY Patient.sFirstName";
                                    }

                                }
                                break;

                            case gloListControlType.Pharmacy:
                                {
                                    oParameters.Add("@ContactType", gloListControlType.Pharmacy, ParameterDirection.Input, SqlDbType.VarChar);
                                    oParameters.Add("@nClinicID", ClinicID, ParameterDirection.Input, SqlDbType.BigInt);
                                    oParameters.Add("@strSearch", strfilterForReferral, ParameterDirection.Input, SqlDbType.VarChar);
                                    oParameters.Add("@IsPhysicianwithprovider", false, ParameterDirection.Input, SqlDbType.Bit);
                                    oParameters.Add("@CallingForm", CallingForm, ParameterDirection.Input, SqlDbType.VarChar);
                                    oParameters.Add("@PharmacySpecialty", cmbSpeciality.Text, ParameterDirection.Input, SqlDbType.VarChar);


                                    oDB.Retrive("gsp_GetPatient_OtherDetails", oParameters, out _dtList);
                                    oParameters.Clear();
                                }
                                break;

                            case gloListControlType.Insurance:
                                {
                                    _sqlQuery = " SELECT DISTINCT Contacts_MST.nContactID AS ContactID, ISNULL(Contacts_MST.sFirstName, '') + SPACE(1) +  " +
                                        " ISNULL(Contacts_MST.sMiddleName, '') + SPACE(1) + ISNULL(Contacts_MST.sLastName, '') AS PhysicianName, ISNULL(Contacts_MST.sLastName, '') AS LastName,  " +
                                        " ISNULL(Contacts_MST.sName, '') AS sName,ISNULL(Contacts_InsuranceCompany_MST.sDescription, '') AS Company, " +
                                        " ISNULL(Contacts_InsuranceReportingCategory_MST.sDescription, '') AS ReportingCategory,  " +
                                        " ISNULL(Contacts_Insurance_DTL.sInsuranceTypeDesc, '') AS InsuranceTypeDesc, " +
                                        " ISNULL(Contacts_MST.sGender, '') AS Gender, ISNULL(Contacts_MST.sAddressLine1,'') AS AddressLine1,  " +
                                        " ISNULL(Contacts_MST.sAddressLine2, '') AS AddressLine2, ISNULL(Contacts_MST.sCity, '') AS City, ISNULL(Contacts_MST.sState, '') AS State,  " +
                                        " ISNULL(Contacts_MST.sZIP, '') AS ZIP, ISNULL(Contacts_MST.sContact, '') AS ContactName,  dbo.FormatPhone(ISNULL(Contacts_MST.sPhone, ''),0) AS Phone,  " +
                                        " dbo.FormatFax(ISNULL(Contacts_MST.sFax, '')) AS FAX, dbo.FormatPhone(ISNULL(Contacts_MST.sMobile, ''),0) AS Mobile, ISNULL(Contacts_MST.sEmail, '') AS Email,  " +
                                        " ISNULL(Contacts_Insurance_DTL.sInsuranceTypeCode, '') AS InsuranceTypeCode FROM Contact_InsurancePlanReportingCat_Association  " +
                                        " INNER JOIN Contacts_InsuranceReportingCategory_MST ON Contact_InsurancePlanReportingCat_Association.nReportingCategoryId = Contacts_InsuranceReportingCategory_MST.nID  " +
                                        " RIGHT OUTER JOIN Contacts_MST ON Contact_InsurancePlanReportingCat_Association.nContactId = Contacts_MST.nContactID  " +
                                        " LEFT OUTER JOIN Contacts_InsuranceCompany_MST INNER JOIN Contact_InsurancePlan_Association ON  " +
                                        " Contacts_InsuranceCompany_MST.nID = Contact_InsurancePlan_Association.nCompanyId  " +
                                        " ON Contacts_MST.nContactID = Contact_InsurancePlan_Association.nContactId LEFT OUTER JOIN  " +
                                        " Contacts_Insurance_DTL ON Contacts_MST.nContactID = Contacts_Insurance_DTL.nContactID  " +
                                        " WHERE (ISNULL(Contacts_MST.bIsBlocked, 0) = 0) AND (Contacts_MST.sContactType = 'Insurance')  ";

                                    if (_ShowInsPlansWithoutCompany == true)
                                        _sqlQuery = _sqlQuery + " AND ISNULL(Contacts_InsuranceCompany_MST.sDescription, '') = '' ";

                                    if (_ShowInsPlansWithoutCategories == true)
                                        _sqlQuery = _sqlQuery + " AND ISNULL(Contacts_InsuranceReportingCategory_MST.sDescription, '') = '' ";

                                    if (ClinicID > 0)
                                        _sqlQuery = _sqlQuery + " AND (ISNULL(Contacts_MST.nClinicID, 1) = " + _ClinicID + ")";

                                    _sqlQuery = _sqlQuery + " ORDER BY sName";
                                }
                                break;

                            case gloListControlType.Hospital:
                                {
                                    _sqlQuery = "SELECT nContactID, sName, sContact " +
                                    " FROM Contacts_MST WHERE (bIsBlocked = 0 AND sContactType = 'Hospital')"; // AND nClinicID = " + ClinicID + "";
                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " AND nClinicID = " + ClinicID + "";
                                    }
                                    _sqlQuery = _sqlQuery + "ORDER BY sName"; //20100527
                                }
                                break;

                            case gloListControlType.Physicians:
                                {
                                    //ADDED PREFIX & SUFFIX BY SHUBHANGI 20100609
                                    if (_ShowPhysiciansWithProvider == true)
                                    {
                                        oParameters.Add("@ContactType", gloListControlType.Physicians, ParameterDirection.Input, SqlDbType.VarChar);
                                        oParameters.Add("@nClinicID", ClinicID, ParameterDirection.Input, SqlDbType.BigInt);
                                        oParameters.Add("@strSearch", strfilterForReferral, ParameterDirection.Input, SqlDbType.VarChar);
                                        oParameters.Add("@IsPhysicianwithprovider", _ShowPhysiciansWithProvider, ParameterDirection.Input, SqlDbType.Bit);
                                        oParameters.Add("@CallingForm", "", ParameterDirection.Input, SqlDbType.VarChar);
                                        oParameters.Add("@PharmacySpecialty", "", ParameterDirection.Input, SqlDbType.VarChar);


                                        oDB.Retrive("gsp_GetPatient_OtherDetails", oParameters, out _dtList);
                                        oParameters.Clear();

                                    }
                                    else
                                    {
                                        oParameters.Add("@ContactType", gloListControlType.Physicians, ParameterDirection.Input, SqlDbType.VarChar);
                                        oParameters.Add("@nClinicID", ClinicID, ParameterDirection.Input, SqlDbType.BigInt);
                                        oParameters.Add("@strSearch", strfilterForReferral, ParameterDirection.Input, SqlDbType.VarChar);
                                        oParameters.Add("@IsPhysicianwithprovider", _ShowPhysiciansWithProvider, ParameterDirection.Input, SqlDbType.Bit);
                                        oParameters.Add("@CallingForm", "", ParameterDirection.Input, SqlDbType.VarChar);
                                        oParameters.Add("@PharmacySpecialty", "", ParameterDirection.Input, SqlDbType.VarChar);


                                        oDB.Retrive("gsp_GetPatient_OtherDetails", oParameters, out _dtList);
                                        oParameters.Clear();
                                        
                                    }

                                }
                                break;
                            case gloListControlType.Referrals:
                                {

                                    //Sandip Darade 20100422
                                    //initially only 1000 records will be pulled from database 
                                    //records will be now pulled as per user search query
                                    //PREFIX & SUFFIX ADDED BY SHUBHANGI 20100609
                                    oParameters.Add("@ContactType", gloListControlType.Referrals, ParameterDirection.Input, SqlDbType.VarChar);
                                    oParameters.Add("@nClinicID", ClinicID, ParameterDirection.Input, SqlDbType.BigInt);
                                    oParameters.Add("@strSearch", strfilterForReferral, ParameterDirection.Input, SqlDbType.VarChar);
                                    oParameters.Add("@IsPhysicianwithprovider", false, ParameterDirection.Input, SqlDbType.Bit);
                                    oParameters.Add("@CallingForm", CallingForm, ParameterDirection.Input, SqlDbType.VarChar);
                                    oParameters.Add("@PharmacySpecialty", "", ParameterDirection.Input, SqlDbType.VarChar);


                                    oDB.Retrive("gsp_GetPatient_OtherDetails", oParameters, out _dtList);
                                    oParameters.Clear();
                                }
                                break;

                            case gloListControlType.Providers:
                                {
                                    _sqlQuery = " SELECT nProviderID, " +
                                                " ISNULL(sFirstName,''),CASE ISNULL(Provider_MST.sMiddleName,'') WHEN  '' THEN '' When ISNULL(Provider_MST.sMiddleName,'') then " +
                                                "ISNULL(Provider_MST.sMiddleName,'')  END,ISNULL(sLastName,'')," +
                                                " ISNULL(sSuffix,'') From Provider_MST WHERE  ISNULL(bIsblocked,0)=0";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " AND Provider_MST.nClinicID = " + ClinicID + " ";
                                    }
                                    _sqlQuery = _sqlQuery + "ORDER BY sLastName";
                                }
                                break;

                            case gloListControlType.ReportProviders:
                                {
                                    _sqlQuery = " SELECT nProviderID, " +
                                               " ISNULL(sFirstName,'') +  CASE ISNULL(Provider_MST.sMiddleName,'') WHEN  '' THEN ' ' When ISNULL(Provider_MST.sMiddleName,'')  then  " +
                                                " + ' ' +ISNULL(Provider_MST.sMiddleName,'') + ' '  END  + ISNULL(sLastName,'') " +
                                               " From Provider_MST ";
                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " where Provider_MST.nClinicID = " + ClinicID + " ";
                                    }

                                    _sqlQuery = _sqlQuery + "ORDER BY sLastName";
                                }
                                break;
                            case gloListControlType.ClinicalInstruction:
                                {
                                    _sqlQuery = "SELECT [nID] as ID, [sClinicalInstruction] as Instruction ,[sClinicalInstructionDtl]  as Description FROM [ClinicalInstruction_MST] order by sClinicalInstruction";
                                }
                                break;
                            case gloListControlType.ReportAccountActionCode:
                                {
                                    _sqlQuery = "select nFollowUpActionID,sFollowUpActionCode , sFollowUpActionDescription  from dbo.CL_FollowUpAction_Mst where nFollowUpActionType = 2 order by sFollowUpActionCode";
                                }
                                break;

                            case gloListControlType.Resources:
                                {
                                    _sqlQuery = " SELECT AB_Resource_MST.nResourceID, AB_Resource_MST.sCode, AB_Resource_MST.sDescription  " +
                                   " FROM AB_Resource_MST INNER JOIN AB_ResourceType_MST ON AB_Resource_MST.nResourceTypeID = AB_ResourceType_MST.nResourceTypeID " +
                                   " WHERE ((AB_Resource_MST.bitIsBlocked = 0) AND AB_ResourceType_MST.nResourceType <>  1) " +
                                   " AND AB_Resource_MST.nClinicID = " + this.ClinicID + " ";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " AND AB_Resource_MST.nClinicID = " + ClinicID + " ";
                                    }
                                    _sqlQuery = _sqlQuery + "ORDER BY sDescription"; //20100527
                                }
                                break;

                            case gloListControlType.Procedures:
                                {
                                    _sqlQuery = "SELECT nAppointmentTypeID, sAppointmentType,nDuration, sColorCode " +
                                    " FROM AB_AppointmentType WHERE ((bIsBlocked = 0) AND (nAppProcType = 2))"; // AND nClinicID=" + ClinicID + " ";
                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " AND nClinicID=" + ClinicID + " ";
                                    }
                                }
                                break;

                            case gloListControlType.CPT:
                                {
                                    if (_TOSID == 0)
                                    {
                                        _sqlQuery = "SELECT DISTINCT nCPTID,sCPTCode,sDescription FROM CPT_MST WHERE nClinicID = " + _ClinicID + "";
                                    }
                                    else
                                    {
                                        _sqlQuery = "SELECT DISTINCT nCPTID,sCPTCode,sDescription FROM CPT_MST WHERE nClinicID = " + _ClinicID + "";
                                    }

                                    _sqlQuery = _sqlQuery + "ORDER BY sCPTCode"; //20100527

                                }
                                break;
                            case gloListControlType.CPTProcedures:
                                {
                                    gloDatabaseLayer.DBParameters oDBParameters = new gloDatabaseLayer.DBParameters();
                                    oDBParameters.Add("@nPatientId", _PatientID, ParameterDirection.Input, SqlDbType.BigInt);
                                    oDB.Retrive("gsp_getProcedures", oDBParameters, out _dtList);

                                    oDBParameters.Dispose();
                                    oDBParameters = null;
                                }
                                break;
                           //added for showing loinc code on history screen
                            case gloListControlType.HistoryLOINC:
                                {

                                    oDB.Retrive("gsp_getcqmhistoryloinccodes", out _dtList);
                                       
                                }
                                break;
                            case gloListControlType.CQMCVXCOdes:
                                {
                                       gloDatabaseLayer.DBParameters oDBParameters = new gloDatabaseLayer.DBParameters();
                                    oDBParameters.Add("@CodeSystem", "CVX", ParameterDirection.Input, SqlDbType.VarChar);
                                    oDB.Retrive("gsp_getCVXCodes", oDBParameters,out _dtList);

                                }
                                break;

                            case gloListControlType.Diagnosis:
                                {
                                    
                                }

                                break;

                            case gloListControlType.Modifier:
                                {
                                    _sqlQuery = "SELECT nModifierID,sModifierCode,sDescription FROM Modifier_MST where (bIsBlocked IS NULL OR bIsBlocked = '" + false + "') ";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " AND nClinicID = " + ClinicID + "";
                                    }

                                    _sqlQuery = _sqlQuery + "ORDER BY sModifierCode"; //20100527
                                }
                                break;

                            //Code Added by Sagar Ghodke Date : 05 March 2008
                            case gloListControlType.Users:
                                {
                                    if (!IsBusinessCenterUsers)
                                    {
                                        if (IsgloCollectCustomer)
                                        {
                                            DataTable dtUsersCount = null;
                                            oDB.Retrive_Query("Select count(nUserId) From user_mst where isnull(bisglocollect,0) = 1", out dtUsersCount);
                                            if (Convert.ToInt64(dtUsersCount.Rows[0][0]) > 0)
                                            {
                                                this.chkIncludeAllUsers.CheckedChanged -= new System.EventHandler(this.chkIncludeAllUsers_CheckedChanged);
                                                chkIncludeAllUsers.Visible = true;
                                                chkIncludeAllUsers.Checked = _chkIncludeAllUsers;
                                                this.chkIncludeAllUsers.CheckedChanged += new System.EventHandler(this.chkIncludeAllUsers_CheckedChanged);
                                            }

                                            if (dtUsersCount != null)
                                            {
                                                dtUsersCount.Dispose();
                                                dtUsersCount = null;
                                            }
                                            _sqlQuery = "Select nUserID,nProviderID,sLoginName,sFirstName,sMiddleName,sLastName,sEmail,sExchangeLogin, Case ISNULL(bIsGloCollect,0) when 0 then 'False' else 'True'  end as GloCollect from User_MST ";
                                        }
                                        else
                                        {
                                            _sqlQuery = "Select nUserID,nProviderID,sLoginName,sFirstName,sMiddleName,sLastName,sEmail,sExchangeLogin  from User_MST ";
                                        }


                                        if (ClinicID > 0)
                                        {
                                            _sqlQuery = _sqlQuery + " where nClinicID =  " + ClinicID + " AND ISNULL(nBlockStatus,'false') <> '" + true + "'";
                                        }
                                        else
                                        {
                                            _sqlQuery = _sqlQuery + " where ISNULL(nBlockStatus,'false') <> '" + true + "'";
                                        }

                                        if (IsgloCollectCustomer && chkIncludeAllUsers.Checked)
                                        {
                                            _sqlQuery = _sqlQuery + "ORDER BY ISNULL(bIsGloCollect,0), sLoginName";

                                        }
                                        else if (IsgloCollectCustomer && !chkIncludeAllUsers.Checked)
                                        {
                                            _sqlQuery = _sqlQuery + " AND ISNULL(bIsgloCollect,0) = 0";
                                            _sqlQuery = _sqlQuery + " ORDER BY sLoginName";
                                        }
                                        else
                                        {
                                            _sqlQuery = _sqlQuery + "ORDER BY sLoginName";
                                        }

                                    }
                                    else
                                    {
                                        _sqlQuery = "Select nUserID,nProviderID,sLoginName,sFirstName,sMiddleName,sLastName,sEmail,sExchangeLogin from User_MST ";
                                        _sqlQuery = _sqlQuery + " where ISNULL(nBlockStatus,'false') <> '" + true + "' AND nUserID NOT IN (SELECT nUserID FROM BL_BusinessCenter_UsersAssociation) ";

                                        if (IsgloCollectCustomer)
                                        {
                                            _sqlQuery = _sqlQuery + "ORDER BY ISNULL(bIsGloCollect,0), sLoginName";
                                        }
                                        else
                                        {
                                            _sqlQuery = _sqlQuery + "ORDER BY sLoginName";
                                        }
                                    }
                                }
                                break;

                            case gloListControlType.PatientInsurence:
                                {
                                    _sqlQuery = "SELECT DISTINCT nInsuranceID, ISNULL(sInsuranceName,'') AS sInsuranceName FROM  PatientInsurance_DTL "
                                     + " WHERE (nPatientID = " + _PatientID + ") AND (nInsuranceFlag IS NOT NULL AND nInsuranceFlag <> 0 ) "
                                    + " ORDER BY sInsuranceName "; //20100527

                                }
                                break;

                            case gloListControlType.EMRPatient:
                                {
                                    _sqlQuery = "SELECT ISNULL(Patient.nPatientID,0) AS PatientID, " +
                                                "ISNULL(Patient.sPatientCode,'') AS PatientCode, " +
                                                "ISNULL(Patient.sFirstName,'') AS PatientFirstName, " +
                                                "ISNULL(Patient.sLastName,'') AS PatientLastName, " +
                                                "dbo.FormatPhone(ISNULL(Patient.nSSN,''),1) AS SSNNo, " +
                                                "ISNULL(Patient.dtDOB,'') AS PatientDOB " +
                                                "FROM Patient ORDER BY PatientFirstName";
                                }
                                break;

                            case gloListControlType.InsuranceServiceType:
                                {
                                    _sqlQuery = "SELECT  nServiceTypeID, sServiceTypeCode, sServiceTypeDesc, sInsuranceType FROM BL_InsuranceServiceType";
                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " where nClinicID =  " + ClinicID + "";
                                    }
                                }
                                break;

                            case gloListControlType.Taxonomy:
                                {
                                    _sqlQuery = "SELECT DISTINCT nSpecialtyID,sTaxonomyCode,sTaxonomyDesc,sTaxonomyClassification  FROM Specialty_MST where ISNULL(sTaxonomyCode,'') <>'' AND ISNULL(sTaxonomyDesc,'') <>''";
                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " and nClinicID =  " + ClinicID + " ";
                                    }
                                }
                                break;

                            case gloListControlType.AppointmentType:
                                {
                                    _sqlQuery = "SELECT nAppointmentTypeID, sAppointmentType, nDuration FROM  AB_AppointmentType WHERE nAppProcType = 1 AND (bIsBlocked IS NULL OR bIsBlocked <> 1 ) ";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " AND nClinicID =  " + ClinicID + "";
                                    }
                                }
                                break;

                            case gloListControlType.AllPatientInsurances:
                                {
                                    _sqlQuery = "SELECT distinct Contacts_MST.nContactID, Contacts_MST.sName FROM Contacts_MST INNER JOIN PatientInsurance_DTL ON Contacts_MST.nContactID = PatientInsurance_DTL.nContactID ORDER BY Contacts_MST.sName";
                                }
                                break;

                            case gloListControlType.PreferredLab:
                                {
                                    _sqlQuery = "select labci_Id AS ContactID, labci_ContactName AS ContactName from Lab_ContactInfo where labci_Type = 1  AND labci_Id IS NOT NULL";
                                }
                                break;

                            case gloListControlType.Facility:
                                {
                                    _sqlQuery = " SELECT nFacilityID,sFacilityCode,sFacilityName "
                                              + " FROM   BL_Facility_MST WHERE bIsBlocked = '" + false + "' AND nClinicID = " + this.ClinicID + " order by sFacilityName";
                                }
                                break;

                            case gloListControlType.ChargeTray:
                                {
                                    Int64 nUserID = 0;
                                    if (appSettings["UserID"] != null)
                                    {
                                        if (appSettings["UserID"] != "")
                                        {
                                            nUserID = Convert.ToInt64(appSettings["UserID"]);
                                        }
                                    }
                                    if (_isFilterPaymentTray)
                                    {
                                        _sqlQuery = " SELECT nChargeTrayID,sCode,sDescription,User_MST.sLoginName,Case when isnull(bIsActive,1) = 0 Then 'InActive' else ''  end as bIsActive  FROM  BL_ChargesTray left outer JOIN User_MST ON BL_ChargesTray.nUserID = User_MST.nUserID Where BL_ChargesTray.nClinicID = " + _ClinicID + "  And BL_ChargesTray.nUserID = " + nUserID + "";
                                    }
                                    else
                                    {
                                        _sqlQuery = " SELECT nChargeTrayID,sCode,sDescription,User_MST.sLoginName,Case when isnull(bIsActive,1) = 0 Then 'InActive' else ''  end as bIsActive FROM  BL_ChargesTray left outer JOIN User_MST ON BL_ChargesTray.nUserID = User_MST.nUserID Where BL_ChargesTray.nClinicID = " + _ClinicID + " "; //And nUserID = " + nUserID +"";
                                    }
                                    _sqlQuery = _sqlQuery + "ORDER BY sDescription"; //20100527

                                }
                                break;

                            case gloListControlType.PaymentTray:
                                {
                                    Int64 nUserID = 0;
                                    if (appSettings["UserID"] != null)
                                    {
                                        if (appSettings["UserID"] != "")
                                        {
                                            nUserID = Convert.ToInt64(appSettings["UserID"]);
                                        }
                                    }
                                    if (_isFilterPaymentTray)
                                    {
                                        _sqlQuery = " SELECT nCloseDayTrayID,sCode,sDescription,User_MST.sLoginName,Case when isnull(bIsActive,1) = 0 Then 'InActive' else ''  end as bIsActive from BL_CloseDayTray left outer JOIN User_MST ON BL_CloseDayTray.nUserID = User_MST.nUserID Where BL_CloseDayTray.nClinicID = " + _ClinicID + "  And BL_CloseDayTray.nUserID = " + nUserID + "";
                                    }
                                    else
                                    {
                                        _sqlQuery = " SELECT nCloseDayTrayID,sCode,sDescription,User_MST.sLoginName,Case when isnull(bIsActive,1) = 0 Then 'InActive' else ''  end as bIsActive from BL_CloseDayTray left outer JOIN User_MST ON BL_CloseDayTray.nUserID = User_MST.nUserID Where BL_CloseDayTray.nClinicID = " + _ClinicID + " "; // And nUserID = " + nUserID + "";
                                    }

                                }
                                break;

                            //Added for Payment Type.
                            case gloListControlType.PaymentType:
                                {
                                    try
                                    {
                                        DataTable dtPaymentType = new DataTable();
                                        dtPaymentType.Columns.Add("Id");
                                        dtPaymentType.Columns.Add("PaymentType");
                                        DataRow dr = dtPaymentType.NewRow();

                                        dr[0] = 1;
                                        dr[1] = "Cash";
                                        dtPaymentType.Rows.Add(dr);
                                        dtPaymentType.AcceptChanges();

                                        dr = null;
                                        dr = dtPaymentType.NewRow();
                                        dr[0] = 2;
                                        dr[1] = "Check";
                                        dtPaymentType.Rows.Add(dr);
                                        dtPaymentType.AcceptChanges();

                                        dr = null;
                                        dr = dtPaymentType.NewRow();
                                        dr[0] = 3;
                                        dr[1] = "MoneyOrder";
                                        dtPaymentType.Rows.Add(dr);
                                        dtPaymentType.AcceptChanges();

                                        dr = null;
                                        dr = dtPaymentType.NewRow();
                                        dr[0] = 4;
                                        dr[1] = "CreditCard";
                                        dtPaymentType.Rows.Add(dr);
                                        dtPaymentType.AcceptChanges();

                                        dr = null;
                                        dr = dtPaymentType.NewRow();
                                        dr[0] = 5;
                                        dr[1] = "EFT";
                                        dtPaymentType.Rows.Add(dr);
                                        dtPaymentType.AcceptChanges();


                                        if (dtPaymentType != null)
                                        {
                                            dgListView.DataSource = dtPaymentType.DefaultView;
                                        }

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "PaymentType";


                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;


                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Refresh();
                                            dgListView.EndEdit();
                                            dgListView.Columns[0].Width = _width * 2;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 4;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "PaymentType";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                        }

                                    }
                                    catch (Exception ex)
                                    {
                                        ex.ToString();
                                    }
                                    finally
                                    {
                                    }
                                }
                                break;
                            //added for cqm measure changes
                            case gloListControlType.CQMICD9:
                                {
                                    //   _sqlQuery = "SELECT MUCQMCodesID, [Code],[Description] FROM [dbo].[MUCQMCodes] where CMSID='" + CMSID + "'and codesystem='ICD9CM'";
                                    oParameters.Add("@CodeSystem", "ICD9CM", ParameterDirection.Input, SqlDbType.VarChar);
                                    oParameters.Add("@CMSID", CMSID, ParameterDirection.Input, SqlDbType.NVarChar);
                                    oParameters.Add("@ReportingYear", ReportingYear, ParameterDirection.Input, SqlDbType.VarChar);

                                    oDB.Retrive("gsp_getCQMCodeByCodeSystem", oParameters, out _dtList);
                                    oParameters.Clear();
                                }
                                break;
                            case gloListControlType.CQMICD10:
                                {
                                    // _sqlQuery = "SELECT   MUCQMCodesID, [Code],[Description] FROM [dbo].[MUCQMCodes] where CMSID='" + CMSID + "' and codesystem='ICD10CM'";
                                    oParameters.Add("@CodeSystem", "ICD10CM", ParameterDirection.Input, SqlDbType.VarChar);
                                    oParameters.Add("@CMSID", CMSID, ParameterDirection.Input, SqlDbType.NVarChar);
                                    oParameters.Add("@ReportingYear", ReportingYear, ParameterDirection.Input, SqlDbType.VarChar);
                              
                                    oDB.Retrive("gsp_getCQMCodeByCodeSystem", oParameters, out _dtList);
                                    oParameters.Clear();
                                }
                                break;
                            case gloListControlType.CQMOrders:
                                {
                                    //                                    _sqlQuery = "SELECT  MUCQMCodesID,  [Code],[Description] FROM [dbo].[MUCQMCodes] where CMSID='" + CMSID + "' and codesystem='LOINC'";
                                    oParameters.Add("@CodeSystem", "LOINC", ParameterDirection.Input, SqlDbType.VarChar);
                                    oParameters.Add("@CMSID", CMSID, ParameterDirection.Input, SqlDbType.NVarChar);
                                    oParameters.Add("@ReportingYear", ReportingYear, ParameterDirection.Input, SqlDbType.VarChar);
                                 
                                    oDB.Retrive("gsp_getCQMCodeByCodeSystem", oParameters, out _dtList);
                                    oParameters.Clear();
                                }
                                break;

                            case gloListControlType.CQMSnomed:
                                {
                                    // _sqlQuery = "SELECT  MUCQMCodesID,  [Code],[Description] FROM [dbo].[MUCQMCodes] where CMSID='" + CMSID + "' and codesystem='SNOMEDCT'";
                                    oParameters.Add("@CodeSystem", "SNOMEDCT", ParameterDirection.Input, SqlDbType.VarChar);
                                    oParameters.Add("@CMSID", CMSID, ParameterDirection.Input, SqlDbType.NVarChar);
                                    oParameters.Add("@ReportingYear", ReportingYear, ParameterDirection.Input, SqlDbType.VarChar);
                              
                                    oDB.Retrive("gsp_getCQMCodeByCodeSystem", oParameters, out _dtList);
                                    oParameters.Clear();

                                }
                                break;
                            case gloListControlType.CQMRxNorm:
                                {
                                    // _sqlQuery = "SELECT  MUCQMCodesID,  [Code],[Description] FROM [dbo].[MUCQMCodes] where CMSID='" + CMSID + "' and codesystem='RXNORM'";
                                    oParameters.Add("@CodeSystem", "RXNORM", ParameterDirection.Input, SqlDbType.VarChar);

                                    oParameters.Add("@CMSID", CMSID, ParameterDirection.Input, SqlDbType.NVarChar);
                                    oParameters.Add("@ReportingYear", ReportingYear, ParameterDirection.Input, SqlDbType.VarChar);
                                 
                                    oDB.Retrive("gsp_getCQMCodeByCodeSystem", oParameters, out _dtList);
                                    oParameters.Clear();
                                }
                                break;
                            case gloListControlType.ImplantableDevices:
                                {
                                    oParameters.Add("@PatientID", _PatientID, ParameterDirection.Input, SqlDbType.BigInt);

                                    oParameters.Add("@strSearch", strfilterForReferral, ParameterDirection.Input, SqlDbType.Text);
                                    oParameters.Add("@status", 1, ParameterDirection.Input, SqlDbType.Int);

                                    oDB.Retrive("gsp_ShowImplantableDevices", oParameters, out _dtList);

                                    oParameters.Clear();
                                }
                                break;
                            case gloListControlType.CQMHCPCS:
                                {
                                    oParameters.Add("@CodeSystem", "CPT", ParameterDirection.Input, SqlDbType.VarChar);

                                    oParameters.Add("@CMSID", CMSID, ParameterDirection.Input, SqlDbType.NVarChar);
                                    oParameters.Add("@ReportingYear", ReportingYear, ParameterDirection.Input, SqlDbType.VarChar);
                               
                                    oDB.Retrive("gsp_getCQMCodeByCodeSystem", oParameters, out _dtList);

                                    oParameters.Clear();
                                }
                                break;

                            case gloListControlType.CQMCVX:
                                {
                                    // _sqlQuery = "SELECT  MUCQMCodesID,  [Code],[Description] FROM [dbo].[MUCQMCodes] where CMSID='" + CMSID + "' and (codesystem='HCPCS' or codesystem='CPT' )";
                                    oParameters.Add("@CodeSystem", "CVX", ParameterDirection.Input, SqlDbType.VarChar);

                                    oParameters.Add("@CMSID", CMSID, ParameterDirection.Input, SqlDbType.NVarChar);
                                    oParameters.Add("@ReportingYear", ReportingYear, ParameterDirection.Input, SqlDbType.VarChar);
                                  
                                    oDB.Retrive("gsp_getCQMCodeByCodeSystem", oParameters, out _dtList);

                                    oParameters.Clear();
                                }
                                break;
                        
                            case gloListControlType.InsuranceCompany:
                                {
                                    _sqlQuery = "";
                                    _sqlQuery = "select nID, sCode, sDescription from Contacts_InsuranceCompany_MST";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " where Contacts_InsuranceCompany_MST.nClinicID = " + ClinicID + " order by sDescription";
                                    }
                                }
                                break;

                            case gloListControlType.InsuranceReportingCategory:
                                {
                                    _sqlQuery = "";
                                    _sqlQuery = "SELECT nID,sCode,sDescription FROM Contacts_InsuranceReportingCategory_MST ";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " WHERE nClinicID = " + ClinicID + "";
                                    }

                                    _sqlQuery = _sqlQuery + " ORDER BY sDescription ";
                                }
                                break;

                            case gloListControlType.BillingType:
                                {
                                    _sqlQuery = "";
                                    _sqlQuery = "SELECT ninsuranceTypeID,sInsuranceTypeCode,sInsuranceTypeDesc FROM InsuranceType_MST";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " WHERE nClinicID = " + ClinicID + "";
                                    }
                                    _sqlQuery = _sqlQuery + " ORDER BY sInsuranceTypeDesc ";
                                }
                                break;

                            case gloListControlType.FeeShedule:
                                {
                                    _sqlQuery = "";
                                    _sqlQuery = "SELECT ISNULL(nFeeScheduleID,0) AS nFeeScheduleID, ISNULL(nFeeScheduleType,0) As nFeeScheduleType,  ISNULL(sFeeScheduleName,'') AS sFeeScheduleName FROM BL_FeeSchedule_MST ";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " WHERE nClinicID = " + ClinicID + "";
                                    }
                                    _sqlQuery = _sqlQuery + " ORDER BY sFeeScheduleName ";
                                }
                                break;

                            case gloListControlType.ERAPayer:
                                {
                                    _sqlQuery = "";
                                    _sqlQuery = "SELECT nPayerSettingID, ISNULL(sERAPayerID,'') AS sERAPayerID, " +
                                        " CASE bIsActivated WHEN 0 THEN 'No' ELSE 'Yes' END AS bIsActivated, " +
                                        " CASE bUseClaimStatus WHEN 0 THEN 'No' ELSE 'Yes' END AS bUseClaimStatus, " +
                                        " CASE bPostSecondaryAdjs WHEN 0 THEN 'No' ELSE 'Yes' END AS bPostSecondaryAdjs FROM ERA_Payer";

                                    if (ClinicID > 0)
                                        _sqlQuery = _sqlQuery + " WHERE nClinicID = " + ClinicID + "";

                                    _sqlQuery = _sqlQuery + " ORDER BY sERAPayerID ";
                                }
                                break;

                            case gloListControlType.Location:
                                {
                                    _sqlQuery = "";
                                    _sqlQuery = " SELECT ISNULL(nLocationID,0) AS nLocationID ,ISNULL(sLocation,'') AS sLocation , " +
                                                " ISNULL(sAddressLine1,'') AS sAddressLine1,ISNULL(sAddressLine2,'') AS sAddressLine2,ISNULL(sCity,'') AS sCity, " +
                                                " ISNULL(sCounty,'') AS sCounty,ISNULL(sState,'') AS sState,ISNULL(sZIP,'') AS sZIP, " +
                                                " ISNULL(sCountry ,'') AS sCountry " +
                                                " FROM  AB_Location";

                                    if (ClinicID > 0)
                                        _sqlQuery = _sqlQuery + " WHERE nClinicID = " + ClinicID + "";
                                    _sqlQuery = _sqlQuery + " ORDER BY nLocationID";
                                }
                                break;

                            case gloListControlType.AppointmentTypeType:
                                {
                                    _sqlQuery = "";
                                }

                                break;

                            //Added by madan for gloVault.. on 20101029
                            case gloListControlType.gloVaultEmail:
                                {
                                    _sqlQuery = " SELECT DISTINCT Patient.nPatientID AS PatientID,Patient.sPatientCode AS PatientCode,  "
                                    + " Patient.sFirstName as PatientFirstName,ISNULL(Patient.sMiddleName,'') AS PatientMiddleName,Patient.sLastName AS PatientLastName,   "
                                    + " dbo.FormatPhone(Convert(Varchar(10),Patient.nSSN),1) AS SSNNo,     "
                                    + " isnull(Provider_MST.sFirstName,'')+space(1)+CASE ISNULL(Provider_MST.sMiddleName,'') WHEN  '' THEN '' When ISNULL(Provider_MST.sMiddleName,'') then "
                                    + "ISNULL(Provider_MST.sMiddleName,'') + SPACE(1) END +isnull(Provider_MST.sLastName,'') AS Provider,    "
                                    + " convert(varchar,Patient.dtDOB,101) as PatientDOB, dbo.FormatPhone(sPhone,0) as Phone,dbo.FormatPhone(ISNULL(sMobile,''),0) AS Mobile   "
                                    + " FROM Patient LEFT OUTER JOIN Provider_MST ON Patient.nProviderID = Provider_MST.nProviderID  Where dbo.Patient.sEmail IS NOT NULL AND  dbo.Patient.sEmail <> ''";
                                }
                                break;

                            case gloListControlType.gloVaultData:
                                {
                                    _sqlQuery = " SELECT DISTINCT Patient.nPatientID AS PatientID,Patient.sPatientCode AS PatientCode,  "
                                    + " Patient.sFirstName as PatientFirstName,ISNULL(Patient.sMiddleName,'') AS PatientMiddleName,Patient.sLastName AS PatientLastName,   "
                                    + " dbo.FormatPhone(Convert(Varchar(10),Patient.nSSN),1) AS SSNNo,     "
                                    + " isnull(Provider_MST.sFirstName,'')+space(1)+CASE ISNULL(Provider_MST.sMiddleName,'') WHEN  '' THEN '' When ISNULL(Provider_MST.sMiddleName,'') then "
                                    + "ISNULL(Provider_MST.sMiddleName,'') + SPACE(1) END +isnull(Provider_MST.sLastName,'') AS Provider,    "
                                    + " convert(varchar,Patient.dtDOB,101) as PatientDOB, dbo.FormatPhone(sPhone,0) as Phone,dbo.FormatPhone(ISNULL(sMobile,''),0) AS Mobile   "
                                    + " FROM dbo.Patient INNER JOIN dbo.PatientExternalCodes ON dbo.Patient.nPatientID = dbo.PatientExternalCodes.nPatientId INNER JOIN  dbo.Provider_MST ON dbo.Patient.nProviderID = dbo.Provider_MST.nProviderID "
                                    + " WHERE sExternalType='HVSEND' AND sModuleName='HEALTHVAULT' AND nExternalStatus=1";
                                }
                                break;

                            //Added by SaiKrishna:2011-01-04(yyyy-mm-dd) for Patient Account Feature
                            case gloListControlType.GuarantorsAccounts:
                                {
                                    _isRequireBUSonPatientAccts = gloGlobal.gloPMGlobal.GetBusinessCenterSettings("BusinessCenter_PatientAccount");

                                    _sqlQuery = "Select nPAccountID, sAccountNo, nGuarantorID, sGuarantorCode, " +
                                           " sFirstname + ' ' + sMiddleName + ' ' + sLastName as Guarantor,ISNULL(BS.sBusinessCenterCode,'') AS  sBusinessCenterCode, sAccountDesc, " +
                                           " bIsExcludeStatement,bIsSentToCollection,case nEntityType when 0 then 'Personal' else 'Commercial' end as EntityType,ISNULL(sAddressLine1,'') + case when RTRIM(LTRIM(ISNULL(sAddressLine1,''))) != '' then ',' else '' end + ISNULL(sAddressLine2,'')+ISNULL(sCity,'')+SPACE(1)+ISNULL(sState,'')+SPACE(1)" +
                                           " +ISNULL(sZip,'') as Address " +
                                           " from PA_Accounts LEFT OUTER JOIN dbo.BL_BusinessCenterCodes BS ON PA_Accounts.nBusinessCenterID = BS.nBusinessCenterID" +
                                           " Where 1 = 1 and PA_Accounts.bIsActive=1";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " and nClinicID = " + ClinicID + "";
                                    }

                                    if (PatientID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " and nPAccountID Not in (Select nPAccountID from PA_Accounts_Patients " +
                                            " Where nPatientId = " + PatientID + ") ";
                                    }

                                    _sqlQuery = _sqlQuery + " ORDER BY sAccountNo";
                                }
                                break;

                            //Added by Mahesh Satlapalli (Apollo)2011-06-27(yyyy-mm-dd) for MergeAccount to get the patients active accounts
                            case gloListControlType.PatientAccounts:
                                {

                                    _isRequireBUSonPatientAccts = gloGlobal.gloPMGlobal.GetBusinessCenterSettings("BusinessCenter_PatientAccount");

                                    _sqlQuery = "Select nPAccountID, sAccountNo, nGuarantorID, sGuarantorCode, " +
                                           " sFirstname + ' ' + sMiddleName + ' ' + sLastName as Guarantor,ISNULL(BS.sBusinessCenterCode,'') AS  sBusinessCenterCode, sAccountDesc, " +
                                           " bIsExcludeStatement,bIsSentToCollection,case nEntityType when 0 then 'Personal' else 'Commercial' end as EntityType,ISNULL(sAddressLine1, '') " +
                                           " + CASE WHEN RTRIM(LTRIM(ISNULL(sAddressLine1, ''))) != '' THEN ',' " +
                                           " ELSE '' " +
                                           " END + ISNULL(sAddressLine2, '') + ISNULL(sCity, '') + SPACE(1) " +
                                           " + ISNULL(sState, '') + SPACE(1) + ISNULL(sZip, '') AS ADDRESS" +
                                           " from PA_Accounts LEFT OUTER JOIN dbo.BL_BusinessCenterCodes BS ON PA_Accounts.nBusinessCenterID = BS.nBusinessCenterID" +
                                           " Where 1 = 1 and PA_Accounts.bIsActive=1";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " and nClinicID = " + ClinicID + "";
                                    }

                                    if (PatientID > 0)
                                    {
                                        if (IsOwnAccounts == true)
                                        {
                                            if (nAccountID > 0)
                                            {
                                                _sqlQuery = _sqlQuery + " and nPAccountID in (Select nPAccountID from PA_Accounts_Patients " +
                                                    " Where nPatientId = " + PatientID + " and nPAccountID <> " + nAccountID + " ) ";
                                            }
                                            else
                                            {
                                                _sqlQuery = _sqlQuery + " and nPAccountID in (Select nPAccountID from PA_Accounts_Patients " +
                                                    " Where nPatientId = " + PatientID + " ) ";
                                            }
                                        }
                                        else
                                        {
                                            if (nAccountID > 0)
                                            {
                                                _sqlQuery = _sqlQuery + " and nPAccountID in (Select nPAccountID from PA_Accounts_Patients " +
                                                    " Where nPatientId = " + PatientID + " and nPAccountID <> " + nAccountID + " ) ";
                                            }
                                            else
                                            {
                                                _sqlQuery = _sqlQuery + " and nPAccountID in (Select nPAccountID from PA_Accounts_Patients " +
                                                   " Where nPatientId = " + PatientID + ") ";
                                            }
                                        }


                                    }

                                    _sqlQuery = _sqlQuery + " ORDER BY sAccountNo";
                                }
                                break;

                            //Added by SaiKrishna:2011-01-04(yyyy-mm-dd) for Patient Account Feature
                            case gloListControlType.PatientOtherGuarantors:
                                {

                                    _sqlQuery = "Select nPatientID, nPatientContactID, sFirstName,sMiddleName,sLastName,sAddressLine1, sAddressLine2," +
                                                " sCity,sState,sZIP,Case nGuarantorType when 0 then 'personal' else 'Commercial' end as nGuarantorType  from Patient_OtherContacts where nPatientID =" + PatientID + " And nPAccountID = 0";

                                }
                                break;

                            case gloListControlType.Accounts:
                                {
                                    _sqlQuery = "Select nPAccountID, sAccountNo, nGuarantorID, sGuarantorCode, " +
                                              " sFirstname + ' ' + sMiddleName + ' ' + sLastName as Guarantor, sAccountDesc, " +
                                              " bIsExcludeStatement,bIsSentToCollection,case nEntityType when 0 then 'Personal' else 'Commercial' end as EntityType,ISNULL(sAddressLine1,'')+','+ ISNULL(sAddressLine2,'')+ISNULL(sCity,'')+SPACE(1)+ISNULL(sState,'')+SPACE(1)" +
                                              " +ISNULL(sZip,'') as Address " +
                                              " from PA_Accounts " +
                                              " Where 1 = 1 and bIsActive=1";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " and nClinicID = " + ClinicID + "";
                                    }


                                    _sqlQuery = _sqlQuery + " ORDER BY sAccountNo";
                                }
                                break;

                            case gloListControlType.Template:
                                {
                                    _sqlQuery = " SELECT nCategoryID AS CategoryID, TemplateGallery_MST.sCategoryName AS CategoryName, " +
                                                " TemplateGallery_MST.nTemplateID , " +
                                                " ISNULL(TemplateGallery_MST.sTemplateName, '') AS sTemplateName , " +
                                                " TemplateGallery_MST.nProviderID , " +
                                                " ISNULL(Provider_MST.sFirstName, '') + SPACE(1) " +
                                                " + ISNULL(Provider_MST.sMiddleName, '') + SPACE(1) " +
                                                " + ISNULL(Provider_MST.sLastName, '') AS sProviderName " +
                                                " FROM   TemplateGallery_MST WITH ( NOLOCK ) " +
                                                " LEFT OUTER JOIN Provider_MST WITH ( NOLOCK ) ON TemplateGallery_MST.nProviderID = Provider_MST.nProviderID " +
                                                " WHERE  UPPER(ISNULL(TemplateGallery_MST.sCategoryName,'')) <> ''";

                                    _sqlQuery = _sqlQuery + " ORDER BY CategoryName";
                                }
                                break;

                            case gloListControlType.StmtDisplaySettings:
                                {
                                    _sqlQuery = " SELECT  nStatementCriteriaID,ISNULL(sStatementCriteriaName,'') as sStatementCriteriaName, " +
                                                "  CASE  bitIsDefault WHEN 'true' THEN 'Default'ELSE ''END AS [Default]" +
                                                " FROM RPT_PatStatementCriteria_MST WITH(NOLOCK) WHERE CriteriaType = 'Display' ORDER BY sStatementCriteriaName";
                                }
                                break;

                            case gloListControlType.Race:
                            case gloListControlType.Ethnicity:
                                {
                                    //_sqlQuery = " if (select count (nCategoryID) from category_mst where sCategoryType = 'Race' and bFavorites = 1) = 0 " +
                                    //            "	    select nCategoryID, sDescription, sCode, bFavorites from category_mst where sCategoryType = 'Race' order by sDescription " +
                                    //            " else 	" +
                                    //            "	    select nCategoryID, sDescription, sCode, bFavorites from category_mst where sCategoryType = 'Race' and bFavorites = 1 order by sDescription ";
                                    _sqlQuery = "";
                                }

                                break;
                            case gloListControlType.MedicalCategory:
                                {
                                    _sqlQuery = "select nMedicalCategoryID ,sMedicalCategory  from MedicalCategory_Mst  where bIsActive =1 order by sMedicalCategory ";
                                }

                                break;
                            case gloListControlType.OBMedicalCategory:
                                {
                                    //12-May-15 Aniket: Bug #83167: EMR: Case creation- If medical catgegory marked as Inactive ,application should not give popup message for OB medical category selection
                                    _sqlQuery = "SELECT     MedicalCategory_Mst.nMedicalCategoryID, MedicalCategory_Mst.sMedicalCategory FROM         MedicalCategory_Mst INNER JOIN MedicalCategoryOB ON MedicalCategory_Mst.nMedicalCategoryID = MedicalCategoryOB.nMedicalCategoryID WHERE     (MedicalCategory_Mst.bIsActive = 1) ORDER BY MedicalCategory_Mst.sMedicalCategory";
                                }

                                break;
                            case gloListControlType.MedicalCategoryReport:
                                {
                                    _sqlQuery = "select nMedicalCategoryID ,sMedicalCategory  from MedicalCategory_Mst order by sMedicalCategory ";
                                }

                                break;
                            case gloListControlType.PatientRepresentative:
                                {
                                    _sqlQuery = " select nPRID Id, isnull(sFirstName,'') FirstName, isnull(sLastName,'') LastName,dtDOB DOB,isnull(sGender,'') Gender,isnull(sEmail,'') Email,isnull(sPhone,'') Phone from PatientRepresentative_Mst  order by sFirstName ";
                                }

                                break;
                            case gloListControlType.DMSCategory:
                                {
                                    _sqlQuery = " SELECT [CategoryId] Id,[CategoryName] CategoryName FROM [eDocument_Category_V3]";
                                }

                                break;
                            case gloListControlType.OrderQuickNotes:
                                {
                                    if (CallingForm == "InternalNotes")
                                        _sqlQuery = "SELECT labAckNotes_ID, labAckNotes FROM dbo.Lab_AckNotes_MST Where labAckNotes_Type = 0";
                                    else
                                        _sqlQuery = "SELECT labAckNotes_ID, labAckNotes FROM dbo.Lab_AckNotes_MST Where labAckNotes_Type = 1";
                                }

                                break;
                            case gloListControlType.ReasonCode:
                                {
                                    _sqlQuery = "select nReasonID, ISNULL(sGroupCode,'')+ISNULL(sCode,'') AS Code, sDescription,  Case bIsSystem when 1 THEN 'System' ELSE 'User' END as bIsSystem from  BL_ReasonCodes_MST WITH(NOLOCK)  ";
                                }
                                break;
                            case gloListControlType.RemarkCode:
                                {
                                    _sqlQuery = "SELECT  nRemarkID ,sRemarkCode, sRemarkDescription ,CASE bIsSystem WHEN 1 THEN 'System' ELSE 'User' END AS bIsSystem FROM    dbo.BL_RemarkCodes_MST WITH ( NOLOCK )";
                                }
                                break;
                            case gloListControlType.OBVitalComments:
                                {

                                    _sqlQuery = "SELECT  DISTINCT Comments_ID as ID, isnull(Comments,'') as Comments FROM OBVitals_Comments_MST";

                                }

                                break;
                            case gloListControlType.CarePlan:
                                {
                                    _sqlQuery = "SELECT nId,isnull(sProblem,'') as 'sProblem'," +
                                                " isnull(sGoal,'') as 'sGoal',isnull(sInternalNote,'') as 'sNote',isnull(sPatientInstruction,'') as 'sInstruction' " +
                                                " FROM CarePlan_MST where ISNULL(bIsDeleted,0) <> 1 order by  sProblem desc";
                                }
                                break;
                            case gloListControlType.BillingQuickNotes:
                                {
                                    _sqlQuery = "select nID,ISNULL(sNoteDescription,'') as sNoteDescription,nNoteType from BL_NotesMaster where bIsActive <> 'false' and nNoteType=" + QuickNoteTypes + "order by nNoteType";
                                }
                                break;

                            case gloListControlType.HistoryOBPhysicalExam:
                                {

                                    _sqlQuery = "Select ISNULL(Category_MST.sDescription, '') AS Description, Category_MST.nCategoryID from Category_MST  Where sCategoryType = 'OB Initial Physical Examination Answers' ORDER BY Description";

                                }
                                break;
                            case gloListControlType.TagSnomed:
                                    {
                                        oDB.Retrive("gsp_getSnomedCodes", out _dtList);
                                    }
                                    break;

                                case gloListControlType.CQMCategoriesValueSet:
                                    {
                                        //oDB.Retrive("gsp_getCQMCategories", out _dtList);
                                        _sqlQuery = "SELECT Min(MUCQMCodesID),valuesetname,valuesetOID from MUCQMCodes where QDMCategory <> 'attribute' group by valuesetOID,valuesetname";

                                    }
                                    break;

                                case gloListControlType.ConceptID:
                                    {
                                        oDB.Retrive("gsp_getSnomedCodes", out _dtList);
                                        //_sqlQuery = "SELECT Min(MUCQMCodesID),valuesetOID,valuesetname from MUCQMCodes where QDMCategory <> 'attribute' and CodeSystem = 'LOINC' group by valuesetOID,valuesetname";

                                    }
                                    break;

                                case gloListControlType.PatientProblemList :
                                    {
                                        oParameters.Add("@PatientID", _PatientID, ParameterDirection.Input, SqlDbType.BigInt);
                                        oDB.Retrive("gsp_GetPatientProblemListForPlanTreatment", oParameters, out _dtList);
                                        
                                        oParameters.Clear();
                                    }
                                    break;

                                case gloListControlType.CarePlanProblemList:
                                    {
                                        oParameters.Add("@PatientID", _PatientID, ParameterDirection.Input, SqlDbType.BigInt);
                                        oParameters.Add("@Specialty", "", ParameterDirection.Input, SqlDbType.VarChar);

                                        oDB.Retrive("CP_FillProblemList", oParameters, out _dtList);

                                        oParameters.Clear();
                                    }
                                    break;
                                case gloListControlType.CarePlanLoincs:
                                    {
                                        oDB.Retrive("FillLoincs", out _dtList);
                                    }
                                    break;
                                case gloListControlType.HealthConcern:
                                    {
                                        oParameters.Add("@nPatientID", _PatientID, ParameterDirection.Input, SqlDbType.BigInt);
                                        oParameters.Add("@nHealthConcernID", 0, ParameterDirection.Input, SqlDbType.BigInt);
                                        oDB.Retrive("CP_Get_Patient_HCDetails", oParameters, out _dtList);

                                        oParameters.Clear();
                                    }
                                    break;
                                case gloListControlType.Intervention:
                                    {
                                        oParameters.Add("@nPatientID", _PatientID, ParameterDirection.Input, SqlDbType.BigInt);
                                        oParameters.Add("@nInterventionID", 0, ParameterDirection.Input, SqlDbType.BigInt);
                                        oDB.Retrive("CP_Get_Patient_InterventionDetails", oParameters, out _dtList);

                                        oParameters.Clear();
                                    }
                                    break;
                                case gloListControlType.CarePlanMedication:
                                    {
                                        //data retrieved as per CCDA trace, refer \\glosvr01\gloDocuments\gloSuite 9000\gloReports\Care Plan Observations\Get Latest data modules in CCD and CCDA.xlsx
                                        oParameters.Add("@PatientID", _PatientID, ParameterDirection.Input, SqlDbType.NVarChar);
                                        oParameters.Add("@VisitID", 0, ParameterDirection.Input, SqlDbType.NVarChar);
                                        oParameters.Add("@dtsystemdate", DateTime.Now.Date, ParameterDirection.Input, SqlDbType.Date);

                                        oDB.Retrive("CP_LatestMedications", oParameters, out _dtList);

                                        oParameters.Clear();
                                    }
                                    break;
                                case gloListControlType.CarePlanEncounter:
                                    {
                                        //data retrieved as per CCDA trace, refer \\glosvr01\gloDocuments\gloSuite 9000\gloReports\Care Plan Observations\Get Latest data modules in CCD and CCDA.xlsx
                                        oParameters.Add("@PatientID", _PatientID, ParameterDirection.Input, SqlDbType.NVarChar);
                                        oParameters.Add("@VisitID", 0, ParameterDirection.Input, SqlDbType.NVarChar);//All finished exams need to be displayed. as per email CDA team sub:Changes in Intervention and Outcome Section dt: 09/23/2017 
                                        //oParameters.Add("@dtsystemdate", DateTime.Now.Date, ParameterDirection.Input, SqlDbType.Date);

                                        oDB.Retrive("CP_PatientEncounter", oParameters, out _dtList);

                                        oParameters.Clear();
                                    }
                                    break;
                                case gloListControlType.CarePlanImmunization:
                                    {
                                        //data retrieved as per CCDA trace, refer \\glosvr01\gloDocuments\gloSuite 9000\gloReports\Care Plan Observations\Get Latest data modules in CCD and CCDA.xlsx
                                        oParameters.Add("@PatientID", _PatientID, ParameterDirection.Input, SqlDbType.NVarChar);
                                        oParameters.Add("@VisitID", _VisitId, ParameterDirection.Input, SqlDbType.NVarChar);
                                        //oParameters.Add("@dtsystemdate", DateTime.Now.Date, ParameterDirection.Input, SqlDbType.Date);

                                        oDB.Retrive("CP_PatientImmunizations", oParameters, out _dtList);

                                        oParameters.Clear();
                                    }
                                    break;
                                case gloListControlType.CarePlanEducation:
                                    {
                                        //data retrieved as per CCDA trace, refer \\glosvr01\gloDocuments\gloSuite 9000\gloReports\Care Plan Observations\Get Latest data modules in CCD and CCDA.xlsx
                                        oParameters.Add("@PatientID", _PatientID, ParameterDirection.Input, SqlDbType.NVarChar);
                                        oParameters.Add("@VisitID", _VisitId, ParameterDirection.Input, SqlDbType.NVarChar);
                                        //oParameters.Add("@dtsystemdate", DateTime.Now.Date, ParameterDirection.Input, SqlDbType.Date);

                                        oDB.Retrive("CP_getPatientEducation", oParameters, out _dtList);

                                        oParameters.Clear();
                                    }
                                    break;
                                case gloListControlType.CarePlanNutrition:
                                    {
                                        //data retrieved as per CCDA trace, refer \\glosvr01\gloDocuments\gloSuite 9000\gloReports\Care Plan Observations\Get Latest data modules in CCD and CCDA.xlsx
                                        //oParameters.Add("@PatientID", _PatientID, ParameterDirection.Input, SqlDbType.NVarChar);
                                        //oParameters.Add("@VisitID", _VisitId, ParameterDirection.Input, SqlDbType.NVarChar);
                                        //oParameters.Add("@dtsystemdate", DateTime.Now.Date, ParameterDirection.Input, SqlDbType.Date);

                                        oDB.Retrive("CP_InterventionNutrition",  out _dtList);

                                        oParameters.Clear();
                                    }
                                    break;

                                case gloListControlType.CarePlanLabOrder:
                                    {
                                        //data retrieved as per CCDA trace, refer \\glosvr01\gloDocuments\gloSuite 9000\gloReports\Care Plan Observations\Get Latest data modules in CCD and CCDA.xlsx
                                        oParameters.Add("@PatientID", _PatientID, ParameterDirection.Input, SqlDbType.NVarChar);
                                        oParameters.Add("@VisitID", 0, ParameterDirection.Input, SqlDbType.NVarChar);
                                        //oParameters.Add("@dtsystemdate", DateTime.Now.Date, ParameterDirection.Input, SqlDbType.Date);

                                        //oDB.Retrive("CP_LabResults",oParameters,  out _dtList);
                                        oDB.Retrive("CP_CDALabResults_V1", oParameters, out _dtList);
                                        
                                       
                                        oParameters.Clear();
                                    }
                                    break;
                                case gloListControlType.CarePlanGoals:
                                    {
                                        //data retrieved as per CCDA trace, refer \\glosvr01\gloDocuments\gloSuite 9000\gloReports\Care Plan Observations\Get Latest data modules in CCD and CCDA.xlsx
                                        oParameters.Add("@PatientID", _PatientID, ParameterDirection.Input, SqlDbType.NVarChar);
                                        oParameters.Add("@VisitID", _VisitId, ParameterDirection.Input, SqlDbType.NVarChar);
                                        //oParameters.Add("@dtsystemdate", DateTime.Now.Date, ParameterDirection.Input, SqlDbType.Date);

                                        oDB.Retrive("CP_InterventionGoalReference", oParameters, out _dtList);

                                        oParameters.Clear();
                                    }
                                    break;
                            default:
                                {
                                }
                                break;
                        }


                        if (_ListControlType == gloListControlType.Race)
                        {
                            oParameters.Add("@RaceCode", DBNull.Value, ParameterDirection.Input, SqlDbType.NVarChar);
                            oParameters.Add("@RaceCodeCategoryId", DBNull.Value, ParameterDirection.Input, SqlDbType.BigInt);
                            oParameters.Add("@RaceSpecificationCode", DBNull.Value, ParameterDirection.Input, SqlDbType.NVarChar);
                            oParameters.Add("@IncludeParent", 1, ParameterDirection.Input, SqlDbType.Bit);
                            oParameters.Add("@showFavorites", 1, ParameterDirection.Input, SqlDbType.Bit);  //0-All,1-Favorite
                            oDB.Retrive("gsp_GetRaceSpecification", oParameters, out _dtList);
                        }

                        if (_ListControlType == gloListControlType.Ethnicity)
                        {
                            oParameters.Add("@EthinicityCode", DBNull.Value, ParameterDirection.Input, SqlDbType.NVarChar);
                            oParameters.Add("@EthinicityCodeCategoryId", DBNull.Value, ParameterDirection.Input, SqlDbType.BigInt);
                            oParameters.Add("@EthinicitySpecificationCode", DBNull.Value, ParameterDirection.Input, SqlDbType.NVarChar);
                            oParameters.Add("@IncludeParent", 1, ParameterDirection.Input, SqlDbType.Bit);
                            oParameters.Add("@showFavorites", 1, ParameterDirection.Input, SqlDbType.Bit); //0-All,1-Favorite
                            oDB.Retrive("gsp_GetEthnicitySpecification", oParameters, out _dtList);
                        }

                        if (_ListControlType == gloListControlType.MUCQMRefusedCode)
                        {
                            oParameters.Add("@bAllCodes", bShowAllCodes, ParameterDirection.Input, SqlDbType.Bit);
                            oParameters.Add("@bNotTaken", bShowNotTakenCodes, ParameterDirection.Input, SqlDbType.Bit);
                            oParameters.Add("@bLaterality", bShowLateralityCodes, ParameterDirection.Input, SqlDbType.Bit);
                            oParameters.Add("@bICD9Code", bShowICD9Codes, ParameterDirection.Input, SqlDbType.Bit);
                            oParameters.Add("@bICD10Code", bShowICD10Codes, ParameterDirection.Input, SqlDbType.Bit);
                            oParameters.Add("@bSnomedCode", bShowSnomedCodes, ParameterDirection.Input, SqlDbType.Bit);
                            oParameters.Add("@bLonicCode", bShowLonicCodes, ParameterDirection.Input, SqlDbType.Bit);
                            oParameters.Add("@bAttribute", bShowAttributeCodes, ParameterDirection.Input, SqlDbType.Bit);
                            oParameters.Add("@bRefusedImmunizationCode", bRefusedImmunizationCode, ParameterDirection.Input, SqlDbType.Bit);
                           
                            oDB.Retrive("gsp_GetCQMReasonCodes", oParameters, out _dtList);
                        }

                        if (_ListControlType == gloListControlType.HistoryItem)
                        {
                            oDB.Retrive("MU_NQF0028a_HistoryItems", oParameters, out _dtList);
                        }
                        if (_ListControlType == gloListControlType.ApptSelectedCols)
                        {
                            oDB.Retrive("Rpt_AppointmentsList_CustomizeColumns", out _dtList);
                        }
                        if (_dtList == null)
                        {
                            _dtList = new DataTable();
                        }
                        if (_ListControlType == gloListControlType.AppointmentTypeType)
                        {
                            _dtList.Columns.Add("Id");
                            _dtList.Columns.Add("Description");
                            DataRow rowApptType = _dtList.NewRow();
                            rowApptType["Id"] = 1;
                            rowApptType["Description"] = "Follow up";
                            _dtList.Rows.Add(rowApptType);

                            rowApptType = _dtList.NewRow();
                            rowApptType["Id"] = 3;
                            rowApptType["Description"] = "New Patient";
                            _dtList.Rows.Add(rowApptType);
                        }



                        if (_sqlQuery.Trim() != "")
                        {

                            oDB.Retrive_Query(_sqlQuery, out _dtList);
                            if (_ListControlType == gloListControlType.HistoryOBPhysicalExam)
                            {
                                if (_dtList != null)
                                {
                                    if (_dtList.Columns.Count == 2)
                                    {
                                        _dtList.Columns[0].SetOrdinal(1);

                                    }
                                    _dvList = _dtList.DefaultView;
                                    if (_ismultiselect == true)
                                    {
                                        //DataColumn dcID1 = new DataColumn("Check1", typeof(int));

                                        //dcID1.DefaultValue = 0;
                                        //_dvList.Table.Columns.Add(dcID1);
                                        //DataColumn[] pk5 = new DataColumn[] { _dvList.Table.Columns[0] };
                                        //_dvList.Table.PrimaryKey = pk5;

                                        if (dtSelected.Columns.Count == 0)
                                        {
                                            DataColumn col1 = new DataColumn("ID");
                                            DataColumn col2 = new DataColumn("Name");
                                            dtSelected.Columns.Add(col1);
                                            dtSelected.Columns.Add(col2);
                                        }

                                        DataColumn[] pkey = new DataColumn[] { dtSelected.Columns[0] };
                                        dtSelected.PrimaryKey = pkey;
                                    }

                                    if (_ListControlType != gloListControlType.DMSCategory)
                                    {
                                        if (tsb_UserGroups.Text == "Groups")
                                        {
                                            _dtGroupList = GetGroups();
                                            DataColumn dcID1 = new DataColumn("Check1", typeof(int));

                                            dcID1.DefaultValue = 0;
                                            _dtGroupList.Columns.Add(dcID1);
                                            DataColumn[] pk2 = new DataColumn[] { _dtGroupList.Columns[0] };
                                            _dtGroupList.PrimaryKey = pk2;
                                        }
                                    }


                                }
                            }
                        }

                        if (_dtInputTable != null && _dtInputTable.Rows.Count > 0)
                        { _dtList.Merge(_dtInputTable); } // CURRENTLY USED FOR INSURANCE PLAN //

                        if (_dtInputBusinessCenterUsers != null && _dtInputBusinessCenterUsers.Rows.Count > 0)
                        { _dtList.Merge(_dtInputBusinessCenterUsers); }

                        if (_dtList != null)   //if (_dtList != null && _dtList.Rows.Count > 0)                    
                        {
                            //MERGE ORIGINAL LIST WITH INPUT DATATABLE LIST
                            //CURRENTLY USED FOR INSURANCE PLAN //

                            _dvList = _dtList.DefaultView;
                            if (_ismultiselect == true)
                            {
                                DataColumn dcID1 = new DataColumn("Check1", typeof(int));

                                dcID1.DefaultValue = 0;
                                _dvList.Table.Columns.Add(dcID1);

                                if (_ListControlType == gloListControlType.Modifier)
                                {
                                    DataColumn dcMod = new DataColumn("Modifier2", typeof(string));
                                    _dvList.Table.Columns.Add(dcMod);
                                }

                                if (_ListControlType == gloListControlType.CarePlanLabOrder)
                                {
                                    DataColumn[] pk5 = new DataColumn[] { _dvList.Table.Columns[0], _dvList.Table.Columns[1] };
                                    _dvList.Table.PrimaryKey = pk5;
                                }
                                else
                                {
                                    DataColumn[] pk5 = new DataColumn[] { _dvList.Table.Columns[0] };
                                    _dvList.Table.PrimaryKey = pk5;
                                }

                                if (dtSelected.Columns.Count == 0)
                                {
                                    DataColumn col1 = new DataColumn("ID");
                                    DataColumn col2 = new DataColumn("Name");
                                    dtSelected.Columns.Add(col1);
                                    dtSelected.Columns.Add(col2);
                                    if (IsgloCollectCustomer)
                                    {
                                        DataColumn col3 = new DataColumn("GloCollect");
                                        dtSelected.Columns.Add(col3);
                                    }
                                    if (chkIncludeDescription.Checked && (_ListControlType == gloListControlType.ReasonCode || _ListControlType == gloListControlType.RemarkCode))
                                    {
                                        DataColumn col3 = new DataColumn("Description");
                                        dtSelected.Columns.Add(col3);
                                    }
                                    DataColumn[] pkey = new DataColumn[] { dtSelected.Columns[0] };
                                    dtSelected.PrimaryKey = pkey;
                                }

                            }

                            if (_ListControlType != gloListControlType.DMSCategory)
                            {
                                if (tsb_UserGroups.Text == "Groups")
                                {
                                    _dtGroupList = GetGroups();
                                    DataColumn dcID1 = new DataColumn("Check1", typeof(int));

                                    dcID1.DefaultValue = 0;
                                    _dtGroupList.Columns.Add(dcID1);
                                    DataColumn[] pk2 = new DataColumn[] { _dtGroupList.Columns[0] };
                                    _dtGroupList.PrimaryKey = pk2;
                                }
                            }


                             //End code Added by Mayuri:20100706
                            if (_ListControlType == gloListControlType.Insurance)
                                _dvList.Sort = "sName";
                                dgListView.DataSource = _dvList;


                          

                           

                            switch (_ListControlType)
                            {
                                case gloListControlType.PatientConsent:
                                    DataGridViewCheckBoxColumn dgcheckboxcolumn1 = new DataGridViewCheckBoxColumn(false);
                                    dgListView.Columns.Insert(0, dgcheckboxcolumn1);
                                    dgListView.Columns[0].HeaderText = "Select";
                                    dgListView.Columns[0].Visible = true;
                                    dgListView.Columns[1].Visible = false;
                                    dgListView.Columns[2].Visible = true;
                                    dgListView.Columns[3].Visible = false;

                                    break;
                                case gloListControlType.Patient:
                                case gloListControlType.AllPatient:
                                case gloListControlType.ConflictingPatient:
                                    {
                                        if (_dtList.Rows.Count > 0)
                                        {
                                            this.DefaultPatientID = Convert.ToInt64(_dtList.Rows[0]["PatientID"]);
                                        }
                                        dgListView.Columns[0].HeaderText = "Id";
                                        dgListView.Columns[1].HeaderText = "Code";
                                        dgListView.Columns[2].HeaderText = "First Name";
                                        dgListView.Columns[3].HeaderText = "MI";
                                        dgListView.Columns[4].HeaderText = "Last Name";
                                        dgListView.Columns[5].HeaderText = "SSN";
                                        dgListView.Columns[6].HeaderText = "Provider";
                                        dgListView.Columns[7].HeaderText = "DOB";
                                        dgListView.Columns[8].HeaderText = "Phone";
                                        dgListView.Columns[9].HeaderText = "Mobile";
                                        dgListView.Columns[10].HeaderText = "PatientStatus";

                                        dgListView.Columns[0].Visible = false;
                                        dgListView.Columns[3].Visible = false;
                                        dgListView.Columns[5].Visible = false;
                                        dgListView.Columns[6].Visible = false;
                                        dgListView.Columns[7].Visible = false;
                                        dgListView.Columns[8].Visible = false;
                                        dgListView.Columns[9].Visible = false;
                                        dgListView.Columns[10].Visible = false;

                                        if (dgListView.Columns.Contains("check1") == true)
                                        {
                                            dgListView.Columns[11].Visible = false;
                                        }

                                        //Bug ID: 47918	Date Sort: Modify Patient - Guarantor screen - DOB sort order not working.
                                        //Set cell style as "MM/dd/yyyy" for DOB.
                                        dgListView.Columns[7].DefaultCellStyle.Format = "MM/dd/yyyy";
                                        #region "Show Columns as per User patient column Settings"

                                        //Get login user ID from appsettings   
                                        Int64 _nUserID = 0;
                                        if (appSettings["UserID"] != null)
                                        {
                                            if (appSettings["UserID"] != "")
                                            { _nUserID = Convert.ToInt64(appSettings["UserID"]); }
                                            else { _nUserID = 0; }
                                        }
                                        else
                                        { _nUserID = 0; }


                                        //Get Patient Columns settings for current user.
                                        gloSettings.GeneralSettings ogloSettings = new gloSettings.GeneralSettings(_DatabaseConnectionString);
                                        object value = null;
                                        ogloSettings.GetSetting("Patient Columns", _nUserID, _ClinicID, out value);


                                        _strPatientCol = Convert.ToString(value).Trim(); //Sandip Darade 20100428
                                        if (value != null && Convert.ToString(value).Trim() != "")
                                        {
                                            string[] PatientColumns = Convert.ToString(value).Trim().Split(',');
                                            for (int j = 0; j < PatientColumns.Length; j++)
                                            {

                                                for (int i = 1; i < dgListView.Columns.Count; i++)
                                                {
                                                    if (dgListView.Columns[i].HeaderText.Trim() == PatientColumns[j].Trim())
                                                    {
                                                        dgListView.Columns[i].Visible = true;
                                                        break;
                                                    }
                                                }
                                            }
                                        }


                                        //Display Index settings
                                        ogloSettings.LoadGridColumnDisplayIndex(dgListView, gloSettings.ModuleOfGridColumn.DashBoardPatientList, _nUserID);

                                        //Column width settings settings
                                        //if (ogloSettings.LoadGridColumnWidth(dgListView, gloSettings.ModuleOfGridColumn.DashBoardPatientList, _nUserID) == false)
                                        {
                                            try
                                            {
                                                dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                                //int _width = dgListView.Width / 18;
                                                int _width = _thiswidth / 18;
                                                dgListView.Columns[1].Width = _width * 4;
                                                dgListView.Columns[2].Width = _width * 4;
                                                dgListView.Columns[3].Width = _width * 1;
                                                dgListView.Columns[4].Width = _width * 4;
                                                dgListView.Columns[5].Width = _width * 2;
                                                dgListView.Columns[6].Width = _width * 3;
                                                dgListView.Columns[7].Width = _width * 2;
                                                dgListView.Columns[8].Width = _width * 2;
                                                dgListView.Columns[9].Width = _width * 2;
                                            }
                                            catch (Exception ex)
                                            {
                                                ex.ToString();
                                            }
                                        }
                                        #endregion

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[0].Width = 30;
                                        }
                                        if (IsFromStatement)
                                        {
                                            if (gloGlobal.gloPMGlobal.IsAccountsOn)
                                                chkShowActpatient.Visible = true;
                                        }
                                        ogloSettings.Dispose();
                                        ogloSettings = null;
                                    }
                                    break;


                                case gloListControlType.HistoryOBPhysicalExam:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "nHistoryDetailsID";
                                            dgListView.Columns[2].HeaderText = "Description";
                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = false;
                                        }
                                    }
                                    break;


                                case gloListControlType.PendingLabPatients:
                                    {
                                        this.DefaultPatientID = Convert.ToInt64(_dtList.Rows[0]["PatientID"]);
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "First Name";
                                            dgListView.Columns[4].HeaderText = "Last Name";
                                            dgListView.Columns[5].HeaderText = "SSN";
                                            dgListView.Columns[6].HeaderText = "DOB";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[7].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 15;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 2;
                                            dgListView.Columns[3].Width = _width * 4;
                                            dgListView.Columns[4].Width = _width * 4;
                                            dgListView.Columns[5].Width = _width * 2;
                                            dgListView.Columns[6].Width = _width * 2;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "First Name";
                                            dgListView.Columns[3].HeaderText = "Last Name";
                                            dgListView.Columns[4].HeaderText = "SSN";
                                            dgListView.Columns[5].HeaderText = "DOB";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[6].Visible = false;
                                            }


                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.Columns[1].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 2;
                                            dgListView.Columns[3].Width = _width * 2;
                                            dgListView.Columns[4].Width = _width * 1;
                                            dgListView.Columns[5].Width = _width * 1;
                                        }
                                    }
                                    break;

                                case gloListControlType.Pharmacy:
                                    {

                                        //SHUBHANGI IMPLEMENT MULTIPLE PHARMACY FUNCTIONALITY
                                        if (_ismultiselect == true)
                                        {
                                            //ID is used if user adds record from listcontrol itself
                                            //if (ID == 0 || dgListView.Rows.Count == 1)


                                            //if (ID == 0)
                                            // changed condition for fixing bug 12226 in 6050

                                            if (dgListView.Columns[0].HeaderText != "Select")
                                            {
                                                dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                                dgListView.Columns[0].HeaderText = "Select";
                                                dgListView.Columns[1].HeaderText = "Id";
                                                dgListView.Columns[2].HeaderText = "Name";
                                                dgListView.Columns[3].HeaderText = "Ph No";
                                                dgListView.Columns[4].HeaderText = "Fax";
                                                dgListView.Columns[5].HeaderText = "Addr 1";
                                                dgListView.Columns[6].HeaderText = "Addr 2";
                                                dgListView.Columns[7].HeaderText = "City";
                                                dgListView.Columns[8].HeaderText = "State";
                                                dgListView.Columns[9].HeaderText = "Zip";
                                                dgListView.Columns[10].HeaderText = "NCPDID";
                                                //Speciality
                                                dgListView.Columns[13].HeaderText = "Specialty Type1";
                                                dgListView.Columns[14].HeaderText = "Specialty Type2";
                                                dgListView.Columns[15].HeaderText = "Specialty Type3";
                                                dgListView.Columns[16].HeaderText = "Specialty Type4";
                                                //--


                                                //Sandip Darade 20100106
                                                //e-Pharmacy column to distinguish among displayed Pharmacies as e-Pharmacy or normal Pharmacy
                                                dgListView.Columns[11].HeaderText = "e-Pharmacy";
                                                dgListView.Columns[11].Name = "e-Pharmacy";
                                                dgListView.Columns[11].ValueType = typeof(System.Boolean);
                                                //SHUBHANGI 20101223 IsDefault COLUMN ADDED
                                                //dgListView.Columns.Insert(12, new DataGridViewCheckBoxColumn(false));
                                                //dgListView.Columns[12].HeaderText = "IsDefault";
                                                //dgListView.Columns[12].ValueType = typeof(System.Boolean);
                                                dgListView.Columns.Insert(12, new DataGridViewCheckBoxColumn(false));
                                                dgListView.Columns[12].HeaderText = "IsDefault";

                                                dgListView.Columns["Check1"].Visible = true;
                                                dgListView.Columns["nContactID"].Visible = false;
                                                dgListView.Columns["sName"].Visible = true;
                                                dgListView.Columns["sPhone"].Visible = true;
                                                dgListView.Columns["sFax"].Visible = true;
                                                dgListView.Columns["sAddressLine1"].Visible = true;
                                                dgListView.Columns["sAddressLine2"].Visible = true;
                                                dgListView.Columns["sCity"].Visible = true;
                                                dgListView.Columns["sState"].Visible = true;
                                                dgListView.Columns["sZIP"].Visible = true;
                                                dgListView.Columns["sNCPDPID"].Visible = true;
                                                dgListView.Columns["e-Pharmacy"].Visible = true;

                                                dgListView.Columns[12].Visible = true;

                                                if (dgListView.Columns.Contains("Check1") == true)
                                                {
                                                    dgListView.Columns["Check1"].Visible = false;

                                                }
                                                dgListView.Columns[12].ReadOnly = false;

                                                dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                                int _width = (_thiswidth - 17) / 10;

                                                dgListView.Columns[0].Width = _width * 1 / 2;
                                                dgListView.Columns[2].Width = _width * 1;
                                                dgListView.Columns[3].Width = _width * 1;
                                                dgListView.Columns[4].Width = _width * 1;
                                                dgListView.Columns[5].Width = _width * 1;
                                                dgListView.Columns[6].Width = _width * 1;
                                                dgListView.Columns[7].Width = _width * 1;
                                                dgListView.Columns[8].Width = _width * 1 / 2;
                                                dgListView.Columns[9].Width = _width * 1;
                                                dgListView.Columns[10].Width = _width * 1;
                                                dgListView.Columns[11].Width = _width * 1;
                                                dgListView.Columns[12].Width = _width * 1;
                                                dgListView.Columns[13].Width = _width * 1;
                                                dgListView.Columns[14].Width = _width * 1;
                                                dgListView.Columns[15].Width = _width * 1;
                                                dgListView.Columns[16].Width = _width * 1;

                                            }

                                            //SHUBHANGI 20101223 CODE FOR SELECT CHECK BOX AFTER SEARCH

                                            if (_dvList != null && _dvList.Table != null && _ismultiselect == true)
                                            {
                                                if (_dvList.Table.Rows.Count > 0)
                                                {

                                                    Int64 chkId = -1;
                                                    for (int Count = 0; Count < dgListView.Rows.Count; Count++)
                                                    {
                                                        dgListView.CommitEdit(DataGridViewDataErrorContexts.Display);
                                                        DataRow rw = _dvList.Table.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                                        if (rw != null)
                                                        {
                                                            if (Convert.ToInt32(rw["Check1"]) != 0)
                                                            {
                                                                dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check1"]);
                                                            }
                                                        }
                                                        if (_ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians || _ListControlType == gloListControlType.Pharmacy)
                                                        {
                                                            DataRow dr = dtSelected.Rows.Find(dgListView.Rows[Count].Cells[2].Value);
                                                            if (dr != null)
                                                            {

                                                                dgListView.Rows[Count].Cells[0].Value = 1;
                                                                chkId = Convert.ToInt64(dgListView.Rows[Count].Cells[1].Value);

                                                            }
                                                        }
                                                        //20110111 TO SET ISDEFAULT CHECK AFTER MODIFY
                                                        if (_isdefault == chkId)

                                                            if (_isdefault != 0 && Convert.ToString(dgListView.Rows[Count].Cells[0].Value) == "1")
                                                            {
                                                                if (dgListView.Rows[Count].Cells[12].Value.ToString() == "False")
                                                                    dgListView.Rows[Count].Cells[12].Value = true;
                                                            }
                                                            else if (_isdefault != 0)
                                                            {
                                                                if (Convert.ToInt64(dgListView.Rows[Count].Cells[1].Value) == _isdefault)
                                                                {
                                                                    dgListView.Rows[Count].Cells[12].Value = true;
                                                                }
                                                            }
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {

                                            if (ID == 0 || dgListView.Rows.Count == 1)
                                            {
                                                dgListView.Columns[0].HeaderText = "Id";
                                                dgListView.Columns[1].HeaderText = "Name";
                                                dgListView.Columns[2].HeaderText = "Ph No";
                                                dgListView.Columns[3].HeaderText = "Fax";
                                                dgListView.Columns[4].HeaderText = "Addr 1";
                                                dgListView.Columns[5].HeaderText = "Addr 2";
                                                dgListView.Columns[6].HeaderText = "City";
                                                dgListView.Columns[7].HeaderText = "State";
                                                dgListView.Columns[8].HeaderText = "Zip";
                                                dgListView.Columns[9].HeaderText = "NCPDID";

                                                //Speciality
                                                dgListView.Columns[11].HeaderText = "Specialty Type1";
                                                dgListView.Columns[12].HeaderText = "Specialty Type2";
                                                dgListView.Columns[13].HeaderText = "Specialty Type3";
                                                dgListView.Columns[14].HeaderText = "Specialty Type4";
                                                //--


                                                //Sandip Darade 20100106
                                                //e-Pharmacy column to distinguish among displayed Pharmacies as e-Pharmacy or normal Pharmacy 
                                                dgListView.Columns[10].HeaderText = "e-Pharmacy";
                                                dgListView.Columns[10].Name = "e-Pharmacy";
                                                dgListView.Columns[10].ValueType = typeof(System.Boolean);

                                                dgListView.Columns[0].Visible = false;
                                                dgListView.Columns[1].Visible = true;
                                                dgListView.Columns[2].Visible = true;
                                                dgListView.Columns[3].Visible = true;
                                                dgListView.Columns[4].Visible = true;
                                                dgListView.Columns[5].Visible = true;
                                                dgListView.Columns[6].Visible = true;
                                                dgListView.Columns[7].Visible = true;
                                                dgListView.Columns[8].Visible = true;
                                                dgListView.Columns[9].Visible = true;
                                                dgListView.Columns[10].Visible = true;

                                                dgListView.Columns[11].Visible = true;
                                                dgListView.Columns[12].Visible = true;
                                                dgListView.Columns[13].Visible = true;
                                                dgListView.Columns[14].Visible = true;

                                                int _width = (_thiswidth - 16) / 14;
                                                dgListView.Columns[1].Width = _width * 2;
                                                dgListView.Columns[2].Width = _width * 1;
                                                dgListView.Columns[3].Width = _width * 1;
                                                dgListView.Columns[4].Width = _width * 1;
                                                dgListView.Columns[5].Width = _width * 1;
                                                dgListView.Columns[6].Width = _width * 1;
                                                dgListView.Columns[7].Width = _width / 2;
                                                dgListView.Columns[8].Width = _width * 1;
                                                dgListView.Columns[9].Width = _width * 1; //Set Width of NCPDPID
                                                dgListView.Columns[10].Width = _width / 2;
                                                //Speciality
                                                dgListView.Columns[11].Width = (_width * 1) - 10;
                                                dgListView.Columns[12].Width = (_width * 1) - 10;
                                                dgListView.Columns[13].Width = (_width * 1) - 10;
                                                dgListView.Columns[14].Width = (_width * 1) - 10;


                                            }
                                        }

                                        //Added by Mayuri:20100705-To show row highlighted
                                        // show highlited default first row

                                        string ID1 = Convert.ToString(ID);
                                        int RowIndex = -1;
                                        if (ID == 0 && dgListView.Rows.Count > 1)
                                        {
                                            string IsePharmacy = string.Empty;
                                            dgListView.Rows[0].Selected = true;
                                            if (_ismultiselect == true) //
                                            {
                                                if (dgListView.Columns[11].HeaderText != "e-Pharmacy")
                                                {
                                                    IsePharmacy = dgListView[12, 0].Value.ToString();
                                                }
                                                else
                                                {
                                                    IsePharmacy = dgListView[11, 0].Value.ToString();
                                                }
                                            }
                                            else
                                            {
                                                if (dgListView.Columns[10].HeaderText != "e-Pharmacy")
                                                {
                                                    //TODO : Needs to be checked : seems to be 15 is not exist if multiselect is off 
                                                    IsePharmacy = dgListView[15, 0].Value.ToString();
                                                }
                                                else
                                                {
                                                    IsePharmacy = dgListView[10, 0].Value.ToString();
                                                }
                                            }
                                            bool v = Convert.ToBoolean(IsePharmacy);
                                            if (v)
                                            {
                                                tsb_Modify.Enabled = false;
                                            }
                                            else
                                            {
                                                tsb_Modify.Enabled = true;
                                            }
                                        }
                                        else
                                        {
                                            for (int iRow = 0; iRow <= dgListView.Rows.Count - 1; iRow++)
                                            {
                                                if (_ismultiselect == true)
                                                {
                                                    if (Convert.ToString((dgListView[0, iRow].Value)) == ID1)
                                                    {
                                                        RowIndex = iRow;
                                                        dgListView.Rows[RowIndex].Selected = true;
                                                        break;
                                                    }
                                                }
                                                else
                                                {
                                                    if (Convert.ToString((dgListView[0, iRow].Value)) == ID1)
                                                    {
                                                        RowIndex = iRow;
                                                        dgListView.Rows[RowIndex].Selected = true;
                                                        break;
                                                    }
                                                }
                                            }
                                            if (_ismultiselect == true)
                                            {
                                                if (RowIndex >= 0) // to save records without selecting particular cell specially used for newly added record
                                                {
                                                    DataGridViewCellEventArgs dverg = new DataGridViewCellEventArgs(0, RowIndex);
                                                    dgListView.Rows[RowIndex].Cells[0].Value = true;
                                                    dgListView_CellContentClick(null, dverg);
                                                    dverg = null;
                                                }
                                            }

                                            if (RowIndex >= 0)
                                            {
                                                string IsePharmacy = string.Empty;
                                                if (_ismultiselect == true)
                                                {
                                                    IsePharmacy = dgListView[11, RowIndex].Value.ToString();
                                                }
                                                else
                                                {
                                                    IsePharmacy = dgListView[10, RowIndex].Value.ToString();
                                                }
                                                bool v = Convert.ToBoolean(IsePharmacy);
                                                if (v)
                                                {
                                                    tsb_Modify.Enabled = false;
                                                }
                                                else
                                                {
                                                    tsb_Modify.Enabled = true;
                                                }
                                            }
                                        }

                                    }

                                    break;
                                case gloListControlType.ImplantableDevices:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "ID";

                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[3].Visible = false;
                                            dgListView.Columns[9].Visible = false;
                                            dgListView.Columns[10].Visible = false;
                                            dgListView.Columns[15].Visible = false;
                                            dgListView.Columns[16].Visible = false;
                                            dgListView.Columns[17].Visible = false;

                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[2].Width = _width * 4;
                                            dgListView.Columns[4].Width = (_width * 3) - 30;
                                            dgListView.Columns[5].Width = (_width * 3) - 30;
                                            dgListView.Columns[6].Width = (_width * 3) - 30;
                                            dgListView.Columns[7].Width = _width * 3;
                                            dgListView.Columns[8].Width = _width * 3;
                                            dgListView.Columns[11].Width = (_width * 2) - 20;
                                            dgListView.Columns[12].Width = (_width * 1) - 10;
                                            dgListView.Columns[13].Width = (_width * 2) - 30;
                                            dgListView.Columns[14].Width = _width * 2;
                                            dgListView.Columns[15].Width = (_width * 2) - 30;
                                            dgListView.Columns[18].Width = (_width * 2) - 30;   
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "ID";
                                            
                                            dgListView.Columns[0].Visible = false;                                            
                                            dgListView.Columns[2].Visible = false;                                            
                                            dgListView.Columns[8].Visible = false;
                                            dgListView.Columns[9].Visible = false;
                                            dgListView.Columns[14].Visible = false;
                                            dgListView.Columns[15].Visible = false;
                                            dgListView.Columns[16].Visible = false;                                            

                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[1].Width = _width * 4;
                                            dgListView.Columns[3].Width = (_width * 3) - 30;
                                            dgListView.Columns[4].Width = (_width * 3) - 30;
                                            dgListView.Columns[5].Width = (_width * 3) - 30;
                                            dgListView.Columns[6].Width = _width * 3;
                                            dgListView.Columns[7].Width = _width * 3;
                                            dgListView.Columns[10].Width = (_width * 2) - 20;
                                            dgListView.Columns[11].Width = (_width * 1) - 10;
                                            dgListView.Columns[12].Width = (_width * 2) - 30;
                                            dgListView.Columns[13].Width = _width * 2;
                                            dgListView.Columns[14].Width = (_width * 2) - 30;
                                            dgListView.Columns[17].Width = (_width * 2) - 30;                                            
                                        }
                                    }
                                    break;
                                case gloListControlType.Insurance:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "PhysicianName";
                                            dgListView.Columns[3].HeaderText = "LastName";
                                            dgListView.Columns[4].HeaderText = "Insurance Plan";
                                            dgListView.Columns[5].HeaderText = "Insurance Company";
                                            dgListView.Columns[6].HeaderText = "Reporting Category";
                                            dgListView.Columns[7].HeaderText = "Plan Type";
                                            dgListView.Columns[8].HeaderText = "Gender";
                                            dgListView.Columns[9].HeaderText = "Address 1";
                                            dgListView.Columns[10].HeaderText = "Address 2";
                                            dgListView.Columns[11].HeaderText = "City";
                                            dgListView.Columns[12].HeaderText = "State";
                                            dgListView.Columns[13].HeaderText = "Zip";
                                            dgListView.Columns[14].HeaderText = "Contact";
                                            dgListView.Columns[15].HeaderText = "Phone";
                                            dgListView.Columns[16].HeaderText = "Fax";
                                            dgListView.Columns[17].HeaderText = "Mobile";
                                            dgListView.Columns[18].HeaderText = "Email";
                                            dgListView.Columns[19].HeaderText = "InsuranceTypeCode";

                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[3].Visible = false;
                                            dgListView.Columns[8].Visible = false;
                                            dgListView.Columns[17].Visible = false;
                                            dgListView.Columns[19].Visible = false;

                                            if (dgListView.Columns.Contains("Check1") == true)
                                            {
                                                dgListView.Columns[20].Visible = false;
                                            }

                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[0].Width = (_width * 1) - 10;
                                            dgListView.Columns[4].Width = _width * 4;
                                            dgListView.Columns[5].Width = (_width * 3) - 30;
                                            dgListView.Columns[6].Width = (_width * 3) - 30;
                                            dgListView.Columns[7].Width = (_width * 3) - 30;
                                            dgListView.Columns[9].Width = _width * 3;
                                            dgListView.Columns[10].Width = _width * 3;
                                            dgListView.Columns[11].Width = (_width * 2) - 20;
                                            dgListView.Columns[12].Width = (_width * 1) - 10;
                                            dgListView.Columns[13].Width = (_width * 2) - 30;
                                            dgListView.Columns[14].Width = _width * 2;
                                            dgListView.Columns[15].Width = (_width * 2) - 30;
                                            dgListView.Columns[16].Width = (_width * 2) - 30;
                                            dgListView.Columns[18].Width = (_width * 2);
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "PhysicianName";
                                            dgListView.Columns[2].HeaderText = "LastName";
                                            dgListView.Columns[3].HeaderText = "Insurance Plan";
                                            dgListView.Columns[4].HeaderText = "Insurance Company";
                                            dgListView.Columns[5].HeaderText = "Reporting Category";
                                            dgListView.Columns[6].HeaderText = "Plan Type";
                                            dgListView.Columns[7].HeaderText = "Gender";
                                            dgListView.Columns[8].HeaderText = "Address 1";
                                            dgListView.Columns[9].HeaderText = "Address 2";
                                            dgListView.Columns[10].HeaderText = "City";
                                            dgListView.Columns[11].HeaderText = "State";
                                            dgListView.Columns[12].HeaderText = "Zip";
                                            dgListView.Columns[13].HeaderText = "Contact";
                                            dgListView.Columns[14].HeaderText = "Phone";
                                            dgListView.Columns[15].HeaderText = "Fax";
                                            dgListView.Columns[16].HeaderText = "Mobile";
                                            dgListView.Columns[17].HeaderText = "Email";
                                            dgListView.Columns[18].HeaderText = "InsuranceTypeCode";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[7].Visible = false;
                                            dgListView.Columns[16].Visible = false;
                                            dgListView.Columns[18].Visible = false;

                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[3].Width = _width * 4;
                                            dgListView.Columns[4].Width = (_width * 3) - 30;
                                            dgListView.Columns[5].Width = (_width * 3) - 30;
                                            dgListView.Columns[6].Width = (_width * 3) - 30;
                                            dgListView.Columns[8].Width = _width * 3;
                                            dgListView.Columns[9].Width = _width * 3;
                                            dgListView.Columns[10].Width = (_width * 2) - 20;
                                            dgListView.Columns[11].Width = (_width * 1) - 10;
                                            dgListView.Columns[12].Width = (_width * 2) - 30;
                                            dgListView.Columns[13].Width = _width * 2;
                                            dgListView.Columns[14].Width = (_width * 2) - 30;
                                            dgListView.Columns[15].Width = (_width * 2) - 30;
                                            dgListView.Columns[17].Width = (_width * 2);
                                        }
                                    }
                                    break;

                                case gloListControlType.Hospital:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Name";
                                            dgListView.Columns[3].HeaderText = "Contact";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("Check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 5;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Name";
                                            dgListView.Columns[2].HeaderText = "Contact";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    }
                                    break;

                                case gloListControlType.Physicians:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            if (ID == 0)
                                            {
                                                dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                                dgListView.Columns[0].HeaderText = "Select";
                                                dgListView.Columns[1].HeaderText = "Id";
                                                dgListView.Columns[2].HeaderText = "Prefix";
                                                dgListView.Columns[3].HeaderText = "First Name";
                                                dgListView.Columns[4].HeaderText = "Middle Name";
                                                dgListView.Columns[5].HeaderText = "Last Name";
                                                dgListView.Columns[6].HeaderText = "Suffix";
                                                dgListView.Columns[7].HeaderText = "Addr 1";
                                                dgListView.Columns[8].HeaderText = "Addr 2";
                                                dgListView.Columns[9].HeaderText = "City";
                                                dgListView.Columns[10].HeaderText = "State";
                                                dgListView.Columns[11].HeaderText = "Zip";
                                                dgListView.Columns[12].HeaderText = "NPI";
                                                dgListView.Columns[13].HeaderText = "Direct Address";
                                                dgListView.Columns[14].HeaderText = "SPI";

                                                dgListView.Columns[0].Visible = true;
                                                dgListView.Columns[1].Visible = false;
                                                dgListView.Columns[2].Visible = true;
                                                dgListView.Columns[3].Visible = true;
                                                dgListView.Columns[4].Visible = true;
                                                dgListView.Columns[5].Visible = true;
                                                dgListView.Columns[6].Visible = true;
                                                dgListView.Columns[7].Visible = true;
                                                dgListView.Columns[8].Visible = true;
                                                dgListView.Columns[9].Visible = true;
                                                dgListView.Columns[10].Visible = true;
                                                dgListView.Columns[11].Visible = true;
                                                dgListView.Columns[12].Visible = true;
                                                dgListView.Columns[13].Visible = true;
                                                dgListView.Columns[14].Visible = true;

                                                if (dgListView.Columns.Contains("check1") == true)
                                                {
                                                    dgListView.Columns[13].Visible = false;
                                                }

                                                dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;      //Dhruv 20100215 ''To set the datagridviewassutosizecolune to none
                                                int _width = (_thiswidth - 17) / 11;

                                                dgListView.Columns[0].Width = _width * 1;
                                                dgListView.Columns[2].Width = _width * 1;
                                                dgListView.Columns[3].Width = _width * 1;
                                                dgListView.Columns[4].Width = _width * 1;
                                                dgListView.Columns[5].Width = _width * 1;
                                                dgListView.Columns[6].Width = _width * 1;
                                                dgListView.Columns[7].Width = _width * 1;
                                                dgListView.Columns[8].Width = _width * 1;
                                                dgListView.Columns[9].Width = _width * 1;
                                                dgListView.Columns[10].Width = _width * 1;
                                                dgListView.Columns[11].Width = _width * 1;
                                                dgListView.Columns[12].Width = _width * 1;
                                                dgListView.Columns[13].Width = _width * 2;
                                                dgListView.Columns[14].Width = _width * 1;
                                            }
                                        }
                                        else
                                        {
                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.ColumnHeader;

                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Prefix";
                                            dgListView.Columns[2].HeaderText = "First Name";
                                            dgListView.Columns[3].HeaderText = "Middle Name";
                                            dgListView.Columns[4].HeaderText = "Last Name";
                                            dgListView.Columns[5].HeaderText = "Suffix";
                                            dgListView.Columns[6].HeaderText = "Addr 1";
                                            dgListView.Columns[7].HeaderText = "Addr 2";
                                            dgListView.Columns[8].HeaderText = "City";
                                            dgListView.Columns[9].HeaderText = "State";
                                            dgListView.Columns[10].HeaderText = "Zip";
                                            dgListView.Columns[11].HeaderText = "NPI";
                                            dgListView.Columns[12].HeaderText = "Direct Address";
                                            dgListView.Columns[13].HeaderText = "SPI";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;
                                            dgListView.Columns[7].Visible = true;
                                            dgListView.Columns[8].Visible = true;
                                            dgListView.Columns[9].Visible = true;
                                            dgListView.Columns[10].Visible = true;
                                            dgListView.Columns[11].Visible = true;
                                            dgListView.Columns[12].Visible = true;
                                            dgListView.Columns[13].Visible = true;

                                            int _width;
                                            if (_IsTextchanged == true)
                                            {
                                                _width = (_thiswidth - 17) / (int)8.95;
                                            }
                                            else
                                            {
                                                _width = (_thiswidth - 17) / 9;
                                            }
                                            dgListView.Columns[0].Width = 0;
                                            dgListView.Columns[2].Width = _width * 1;
                                            dgListView.Columns[3].Width = _width * 1;
                                            dgListView.Columns[4].Width = _width * 1;
                                            dgListView.Columns[5].Width = _width * 1;
                                            dgListView.Columns[6].Width = _width * 1;
                                            dgListView.Columns[7].Width = _width * 1;
                                            dgListView.Columns[8].Width = _width * 1;
                                            dgListView.Columns[9].Width = _width * 1;
                                            dgListView.Columns[10].Width = 71;
                                            dgListView.Columns[11].Width = 80;
                                            dgListView.Columns[12].Width = _width * 3;
                                            dgListView.Columns[13].Width = _width * 2;
                                        }

                                        //Added by Mayuri:20100705-To show row highlighted
                                        // show highlited default first row
                                        string ID1 = Convert.ToString(ID);
                                        int RowIndex = -1;

                                        if (ID == 0 && dgListView.Rows.Count > 1)
                                        {
                                            dgListView.Rows[0].Selected = true;
                                        }
                                        else
                                        {
                                            for (int iRow = 0; iRow <= dgListView.Rows.Count - 1; iRow++)
                                            {
                                                if (Convert.ToString((dgListView[0, iRow].Value)) == ID1)
                                                {
                                                    RowIndex = iRow;
                                                    dgListView.Rows[RowIndex].Selected = true;
                                                    break;
                                                }
                                            }

                                            //Added by Mayuri:20100706-To save selected physician without selecting cell
                                            if (RowIndex >= 0)
                                            {
                                                _id = Convert.ToInt64(dgListView[0, RowIndex].Value);
                                                _code = "";
                                                if (dgListView[1, RowIndex].Value.ToString() != "" && dgListView[5, RowIndex].Value.ToString() != "")
                                                {
                                                    _name = dgListView[1, RowIndex].Value.ToString().Trim() + " " + dgListView[2, RowIndex].Value.ToString().Trim() + " " + dgListView[3, RowIndex].Value.ToString().Trim() + " " + dgListView[4, RowIndex].Value.ToString().Trim() + " " + dgListView[5, RowIndex].Value.ToString().Trim();
                                                }
                                                else if (dgListView[1, RowIndex].Value.ToString() == "" && dgListView[5, RowIndex].Value.ToString() != "")
                                                {
                                                    _name = dgListView[2, RowIndex].Value.ToString().Trim() + " " + dgListView[3, RowIndex].Value.ToString().Trim() + " " + dgListView[4, RowIndex].Value.ToString().Trim() + " " + dgListView[5, RowIndex].Value.ToString().Trim();
                                                }
                                                else if (dgListView[1, RowIndex].Value.ToString() != "" && dgListView[5, RowIndex].Value.ToString() == "")
                                                {
                                                    _name = dgListView[1, RowIndex].Value.ToString().Trim() + " " + dgListView[2, RowIndex].Value.ToString().Trim() + " " + dgListView[3, RowIndex].Value.ToString().Trim() + " " + dgListView[4, RowIndex].Value.ToString().Trim();
                                                }
                                                else
                                                {
                                                    _name = dgListView[2, RowIndex].Value.ToString().Trim() + " " + dgListView[3, RowIndex].Value.ToString().Trim() + " " + dgListView[4, RowIndex].Value.ToString().Trim();
                                                }
                                            }
                                        }
                                    }
                                    break;

                                case gloListControlType.Referrals:
                                    {

                                        if (_ismultiselect == true)
                                        {

                                            // ID used only if user adds Referrals from listcontrol
                                            if (ID == 0 || dgListView.Rows.Count == 1)
                                            {
                                                if (dgListView.ColumnCount != 23)
                                                {
                                                    DataGridViewCheckBoxColumn dgcheckboxcolumn = new DataGridViewCheckBoxColumn(false);
                                                    dgListView.Columns.Insert(0, dgcheckboxcolumn);
                                                }

                                                dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.ColumnHeader;

                                                dgListView.Columns[0].HeaderText = "Select";
                                                dgListView.Columns[1].HeaderText = "Id";
                                                dgListView.Columns[2].HeaderText = "Prefix";
                                                dgListView.Columns[3].HeaderText = "First Name";
                                                dgListView.Columns[4].HeaderText = "Middle Name";
                                                dgListView.Columns[5].HeaderText = "Last Name";
                                                dgListView.Columns[6].HeaderText = "Suffix";
                                                dgListView.Columns[7].HeaderText = "Gender";
                                                dgListView.Columns[8].HeaderText = "Addr 1";
                                                dgListView.Columns[9].HeaderText = "Addr 2";
                                                dgListView.Columns[10].HeaderText = "City";
                                                dgListView.Columns[11].HeaderText = "State";
                                                dgListView.Columns[12].HeaderText = "Zip";
                                                dgListView.Columns[13].HeaderText = "Phone";
                                                dgListView.Columns[14].HeaderText = "Fax";
                                                dgListView.Columns[15].HeaderText = "Mobile";
                                                dgListView.Columns[16].HeaderText = "Email";
                                                dgListView.Columns[17].HeaderText = "NPI";
                                                dgListView.Columns[18].HeaderText = "Direct Address";
                                                dgListView.Columns[19].HeaderText = "SPI";
                                                dgListView.Columns[20].HeaderText = "Specialty Type1";
                                                dgListView.Columns[21].HeaderText = "Clinic Name";



                                                dgListView.Columns[0].Visible = true;
                                                dgListView.Columns[1].Visible = false;
                                                dgListView.Columns[2].Visible = true;
                                                dgListView.Columns[3].Visible = true;
                                                dgListView.Columns[4].Visible = true;
                                                dgListView.Columns[5].Visible = true;
                                                dgListView.Columns[6].Visible = true;
                                                dgListView.Columns[7].Visible = true;
                                                dgListView.Columns[8].Visible = true;
                                                dgListView.Columns[9].Visible = true;
                                                dgListView.Columns[10].Visible = true;
                                                dgListView.Columns[11].Visible = true;
                                                dgListView.Columns[12].Visible = true;
                                                dgListView.Columns[13].Visible = true;
                                                dgListView.Columns[14].Visible = true;
                                                dgListView.Columns[15].Visible = true;
                                                dgListView.Columns[16].Visible = true;
                                                dgListView.Columns[16].Visible = true;
                                                dgListView.Columns[17].Visible = true;
                                                dgListView.Columns[18].Visible = true;
                                                dgListView.Columns[19].Visible = true;
                                                dgListView.Columns[20].Visible = true;
                                                dgListView.Columns[21].Visible = true;




                                                if (dgListView.Columns.Contains("Check1") == true)
                                                {
                                                    dgListView.Columns[22].Visible = false;
                                                }

                                                int _width;

                                                if (_IsTextchanged == true)
                                                {
                                                    _width = (_thiswidth - 22) / 9;
                                                }
                                                else
                                                {
                                                    _width = (_thiswidth - 22) / 15;
                                                }



                                                if (SecureMessage == "SecureMessage")
                                                {
                                                    gloSettings.GeneralSettings ogloSettings = new gloSettings.GeneralSettings(_DatabaseConnectionString);
                                                    if (ogloSettings.LoadGridColumnWidth(dgListView, ModuleOfGridColumn.SecureReferal, _UserID) == false)
                                                    {
                                                        dgListView.Columns[0].Width = _width * 1;
                                                        dgListView.Columns[2].Width = _width * 1;
                                                        dgListView.Columns[3].Width = _width * 1;
                                                        dgListView.Columns[4].Width = _width * 1;
                                                        dgListView.Columns[5].Width = _width * 1;
                                                        dgListView.Columns[6].Width = _width * 1;
                                                        dgListView.Columns[7].Width = _width * 1;
                                                        dgListView.Columns[8].Width = _width * 1;
                                                        dgListView.Columns[9].Width = _width * 1;
                                                        dgListView.Columns[10].Width = _width * 1;
                                                        dgListView.Columns[11].Width = _width * 1;
                                                        dgListView.Columns[12].Width = _width * 1;
                                                        dgListView.Columns[13].Width = _width * 1;
                                                        dgListView.Columns[14].Width = _width * 1;
                                                        dgListView.Columns[15].Width = _width * 1;
                                                        dgListView.Columns[16].Width = _width * 1;
                                                        dgListView.Columns[17].Width = _width * 1;
                                                        dgListView.Columns[18].Width = _width * 1;
                                                        dgListView.Columns[19].Width = _width * 1;
                                                        dgListView.Columns[20].Width = _width * 1;
                                                        dgListView.Columns[21].Width = _width * 1;

                                                    }
                                                    if (ogloSettings != null)
                                                        ogloSettings.Dispose();
                                                    ogloSettings = null;
                                                }
                                                else
                                                {
                                                    dgListView.Columns[0].Width = _width * 1;
                                                    dgListView.Columns[2].Width = _width * 1;
                                                    dgListView.Columns[3].Width = _width * 1;
                                                    dgListView.Columns[4].Width = _width * 1;
                                                    dgListView.Columns[5].Width = _width * 1;
                                                    dgListView.Columns[6].Width = _width * 1;
                                                    dgListView.Columns[7].Width = _width * 1;
                                                    dgListView.Columns[8].Width = _width * 1;
                                                    dgListView.Columns[9].Width = _width * 1;
                                                    dgListView.Columns[10].Width = _width * 1;
                                                    dgListView.Columns[11].Width = _width * 1;
                                                    dgListView.Columns[12].Width = _width * 1;
                                                    dgListView.Columns[13].Width = _width * 1;
                                                    dgListView.Columns[14].Width = _width * 1;
                                                    dgListView.Columns[15].Width = _width * 1;
                                                    dgListView.Columns[16].Width = _width * 1;
                                                    dgListView.Columns[17].Width = _width * 1;
                                                    dgListView.Columns[18].Width = _width * 1;
                                                    dgListView.Columns[19].Width = _width * 1;
                                                    dgListView.Columns[20].Width = _width * 1;
                                                    dgListView.Columns[21].Width = _width * 1;
                                                }

                                                dgListView.DataSource = _dvList;
                                            }


                                            if (_dvList != null && _dvList.Table != null && _ismultiselect == true)
                                            {
                                                if (_dvList.Table.Rows.Count > 0)
                                                {

                                                    for (int Count = 0; Count < dgListView.Rows.Count; Count++)
                                                    {
                                                        dgListView.CommitEdit(DataGridViewDataErrorContexts.Display);
                                                        DataRow rw = _dvList.Table.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                                        if (rw != null)
                                                        {
                                                            if (Convert.ToInt32(rw["Check1"]) != 0)
                                                            {
                                                                dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check1"]);
                                                            }
                                                        }
                                                        if (_ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians)
                                                        {
                                                            DataRow dr = dtSelected.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                                            if (dr != null)
                                                            {

                                                                dgListView.Rows[Count].Cells[0].Value = 1;

                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            //ID used only if user adds Referrals from listcontrol
                                            if (ID == 0 || dgListView.Rows.Count == 1)
                                            {
                                                dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.ColumnHeader;

                                                dgListView.Columns[0].HeaderText = "Id";
                                                dgListView.Columns[1].HeaderText = "Prefix";
                                                dgListView.Columns[2].HeaderText = "First Name";
                                                dgListView.Columns[3].HeaderText = "Middle Name";
                                                dgListView.Columns[4].HeaderText = "Last Name";
                                                dgListView.Columns[5].HeaderText = "Suffix";
                                                dgListView.Columns[6].HeaderText = "Gender";
                                                dgListView.Columns[7].HeaderText = "Addr 1";
                                                dgListView.Columns[8].HeaderText = "Addr 2";
                                                dgListView.Columns[9].HeaderText = "City";
                                                dgListView.Columns[10].HeaderText = "State";
                                                dgListView.Columns[11].HeaderText = "Zip";
                                                dgListView.Columns[12].HeaderText = "Phone";
                                                dgListView.Columns[13].HeaderText = "Fax";
                                                dgListView.Columns[14].HeaderText = "Mobile";
                                                dgListView.Columns[15].HeaderText = "Email";
                                                dgListView.Columns[16].HeaderText = "NPI";
                                                dgListView.Columns[17].HeaderText = "Direct Address";
                                                dgListView.Columns[18].HeaderText = "SPI";
                                                dgListView.Columns[19].HeaderText = "Specialty Type1";
                                                dgListView.Columns[20].HeaderText = "Clinic Name";



                                                dgListView.Columns[0].Visible = false;
                                                dgListView.Columns[1].Visible = true;
                                                dgListView.Columns[2].Visible = true;
                                                dgListView.Columns[3].Visible = true;
                                                dgListView.Columns[4].Visible = true;
                                                dgListView.Columns[5].Visible = true;
                                                dgListView.Columns[6].Visible = true;
                                                dgListView.Columns[7].Visible = true;
                                                dgListView.Columns[8].Visible = true;
                                                dgListView.Columns[9].Visible = true;
                                                dgListView.Columns[10].Visible = true;
                                                dgListView.Columns[11].Visible = true;
                                                dgListView.Columns[12].Visible = true;
                                                dgListView.Columns[13].Visible = true;
                                                dgListView.Columns[14].Visible = true;
                                                dgListView.Columns[15].Visible = true;
                                                dgListView.Columns[16].Visible = true;
                                                dgListView.Columns[17].Visible = true;
                                                dgListView.Columns[18].Visible = true;
                                                dgListView.Columns[19].Visible = true;
                                                dgListView.Columns[20].Visible = true;


                                                int _width = (_thiswidth - 21) / 9;
                                                dgListView.Columns[0].Width = 0;
                                                dgListView.Columns[2].Width = _width * 1;
                                                dgListView.Columns[3].Width = _width * 1;
                                                dgListView.Columns[4].Width = _width * 1;
                                                dgListView.Columns[5].Width = _width * 1;
                                                dgListView.Columns[6].Width = _width * 1;
                                                dgListView.Columns[7].Width = _width * 1;
                                                dgListView.Columns[8].Width = _width * 1;
                                                dgListView.Columns[9].Width = _width * 1;
                                                dgListView.Columns[10].Width = _width * 1;
                                                dgListView.Columns[11].Width = _width * 1;
                                                dgListView.Columns[12].Width = _width * 1;
                                                dgListView.Columns[13].Width = _width * 1;
                                                dgListView.Columns[14].Width = _width * 1;
                                                dgListView.Columns[15].Width = _width * 1;
                                                dgListView.Columns[16].Width = _width * 1;
                                                dgListView.Columns[17].Width = _width * 1;
                                                dgListView.Columns[18].Width = _width * 1;
                                                dgListView.Columns[19].Width = _width * 1;
                                                dgListView.Columns[20].Width = _width * 1;
                                            }
                                        }

                                        //Added by Mayuri:20100705-To show row highlighted
                                        // show highlited default first row

                                        string ID1 = Convert.ToString(ID);
                                        int RowIndex = -1;

                                        if (ID == 0 && dgListView.Rows.Count > 1)
                                        {
                                            dgListView.Rows[0].Selected = true;
                                        }
                                        else
                                        {
                                            for (int iRow = 0; iRow <= dgListView.Rows.Count - 1; iRow++)
                                            {
                                                if (_ismultiselect == true)
                                                {
                                                    if (Convert.ToString((dgListView[0, iRow].Value)) == ID1)
                                                    {
                                                        RowIndex = iRow;
                                                        dgListView.Rows[RowIndex].Selected = true;
                                                        break;
                                                    }
                                                }

                                                else
                                                {
                                                    if (Convert.ToString((dgListView[0, iRow].Value)) == ID1)
                                                    {
                                                        RowIndex = iRow;
                                                        dgListView.Rows[RowIndex].Selected = true;
                                                        break;
                                                    }
                                                }
                                            }

                                            //To check newly added row along with focus for multiselct option
                                            if (_ismultiselect == true)
                                            {
                                                if (RowIndex >= 0)
                                                {
                                                    DataGridViewCellEventArgs dverg = new DataGridViewCellEventArgs(0, RowIndex);
                                                    dgListView.Rows[RowIndex].Cells[0].Value = true;
                                                    dgListView_CellContentClick(null, dverg);
                                                }
                                            }
                                            else
                                                //To save selected row on save n close without clicking on cell
                                                if (_ismultiselect == false)
                                                {

                                                    if (RowIndex >= 0)
                                                    {
                                                        _id = Convert.ToInt64(dgListView[0, RowIndex].Value);
                                                        _code = "";
                                                        if (dgListView[1, RowIndex].Value.ToString().Trim() != "" && dgListView[5, RowIndex].Value.ToString().Trim() != "")
                                                        {
                                                            _name = dgListView[1, RowIndex].Value.ToString().Trim() + " " + dgListView[2, RowIndex].Value.ToString().Trim() + " " + dgListView[3, RowIndex].Value.ToString().Trim() + " " + dgListView[4, RowIndex].Value.ToString().Trim() + " " + dgListView[5, RowIndex].Value.ToString().Trim();
                                                        }
                                                        else if (dgListView[1, RowIndex].Value.ToString().Trim() == "" && dgListView[5, RowIndex].Value.ToString().Trim() != "")
                                                        {
                                                            _name = dgListView[2, RowIndex].Value.ToString().Trim() + " " + dgListView[3, RowIndex].Value.ToString().Trim() + " " + dgListView[4, RowIndex].Value.ToString().Trim() + " " + dgListView[5, RowIndex].Value.ToString().Trim() + " " + dgListView[5, RowIndex].Value.ToString().Trim();
                                                        }
                                                        else if (dgListView[1, RowIndex].Value.ToString().Trim() != "" && dgListView[5, RowIndex].Value.ToString().Trim() == "")
                                                        {
                                                            _name = dgListView[1, RowIndex].Value.ToString().Trim() + " " + dgListView[2, RowIndex].Value.ToString().Trim() + " " + dgListView[3, RowIndex].Value.ToString().Trim() + " " + dgListView[4, RowIndex].Value.ToString().Trim();

                                                        }
                                                        else
                                                        {
                                                            _name = dgListView[2, RowIndex].Value.ToString().Trim() + " " + dgListView[3, RowIndex].Value.ToString().Trim() + " " + dgListView[4, RowIndex].Value.ToString().Trim();
                                                        }
                                                    }
                                                }
                                        }
                                    }

                                    break;

                                case gloListControlType.Providers:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "First Name";
                                            dgListView.Columns[3].HeaderText = "Middle Name";
                                            dgListView.Columns[4].HeaderText = "Last Name";
                                            //Added By Pramod Nair

                                            dgListView.Columns[5].HeaderText = "Suffix";


                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[6].Visible = false;
                                            }

                                            //Added By Pramod Nair
                                            if (_MyCaller == "frmRpt_AgingReport")
                                                dgListView.Columns[5].Visible = false;
                                            else
                                                dgListView.Columns[5].Visible = true;


                                            int _width = (_thiswidth - 17) / 13;
                                            dgListView.Columns[0].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 4;
                                            dgListView.Columns[3].Width = _width * 3;
                                            dgListView.Columns[4].Width = _width * 4;
                                            //Added By Pramod Nair
                                            dgListView.Columns[5].Width = _width * 2;
                                        }
                                        else
                                        {

                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "First Name";
                                            dgListView.Columns[2].HeaderText = "Middle Name";
                                            dgListView.Columns[3].HeaderText = "Last Name";
                                            //Added By Pramod Nair
                                            dgListView.Columns[4].HeaderText = "Suffix";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            //Added By Pramod Nair
                                            dgListView.Columns[4].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[5].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 6;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 2;
                                            dgListView.Columns[3].Width = _width * 2;
                                            ////Added By Pramod Nair
                                            //dgListView.Columns[4].Width = _width * 2;

                                            dgListView.Columns[1].FillWeight = 10;
                                            dgListView.Columns[2].FillWeight = 10;
                                            dgListView.Columns[3].FillWeight = 10;
                                            dgListView.Columns[4].AutoSizeMode = DataGridViewAutoSizeColumnMode.Fill;
                                            dgListView.Columns[4].FillWeight = 20;

                                        }
                                    }
                                    break;

                                case gloListControlType.ReportProviders:
                                    {

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Name";
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.ScrollBars = ScrollBars.None;
                                            this.Width = 385;
                                            dgListView.Columns[0].Width = 50;

                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Name";
                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                        }
                                    }
                                    break;
                                case gloListControlType.ClinicalInstruction:
                                    {

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Instruction";
                                            dgListView.Columns[3].HeaderText = "Description";
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[3].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.ScrollBars = ScrollBars.None;
                                            this.Width = 668;
                                            dgListView.Columns[0].Width = 50;
                                            dgListView.Columns[2].Width = 120;
                                            //dgListView.Columns[3].Width = 500;

                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Instruction";
                                            dgListView.Columns[2].HeaderText = "Description";
                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                        }
                                    }
                                    break;
                                case gloListControlType.ReportAccountActionCode:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.ScrollBars = ScrollBars.None;

                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[3].SortMode = DataGridViewColumnSortMode.NotSortable;

                                            this.Width = 385;
                                            dgListView.Columns[0].Width = 50;

                                        }
                                        else
                                        {
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Action";
                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = true;
                                        }
                                    }
                                    break;

                                case gloListControlType.Resources:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[0].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 5;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    }
                                    break;

                                case gloListControlType.Procedures:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Problem Type";
                                            dgListView.Columns[3].HeaderText = "Duration";
                                            dgListView.Columns[4].HeaderText = "Color Code";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = false;
                                            dgListView.Columns[5].Visible = false;

                                            int _width = (_thiswidth - 17) / 8;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 4;
                                            dgListView.Columns[3].Width = _width * 2;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Problem Type";
                                            dgListView.Columns[2].HeaderText = "Duration";
                                            dgListView.Columns[3].HeaderText = "Color Code";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = false;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 3;
                                            dgListView.Columns[2].Width = _width * 2;
                                        }
                                    }
                                    break;

                                case gloListControlType.CPT:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 5;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    }
                                    break;
                                case gloListControlType.CPTProcedures:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 5;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    }
                                    break;
                                case gloListControlType.HistoryLOINC:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 5;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    
                                    }
                                    break;
                                case gloListControlType.CQMCVXCOdes:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 5;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }

                                    }
                                    break;
                             
                                case gloListControlType.Diagnosis:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 5;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    }
                                    break;

                                case gloListControlType.Modifier:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            DataGridViewComboBoxColumn dgcmb = new DataGridViewComboBoxColumn();
                                            string[] modarray = { "M1", "M2", "M3", "M4" };


                                            dgcmb.Items.AddRange(modarray);
                                            dgcmb.DataPropertyName = "Modifier";


                                            dgListView.Columns.Insert(6, dgcmb);
                                            Array.Clear(modarray, 0, modarray.Length);
                                            modarray = null;
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";
                                            dgListView.Columns[6].HeaderText = "Modifier";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = false;
                                            dgListView.Columns[5].Visible = false;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;

                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            int _widthCol = _thiswidth - (_width * 8);
                                            if (_widthCol <= 0)
                                                _widthCol = 100;
                                            int _widthcol = (_widthCol / 3);
                                            dgListView.Columns[0].Width = _widthcol;

                                            dgListView.Columns[2].Width = _widthcol * 2;
                                            dgListView.Columns[3].Width = _width * 8;
                                            dgListView.Columns[3].Width -= (_widthcol * 2);
                                            dgListView.Columns[5].Width = _widthcol;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";

                                            //   dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    }
                                    break;

                                //Code added by Sagar Ghodke March 05 2008.
                                case gloListControlType.Users:
                                    {
                                        if (_ismultiselect == true)
                                        {


                                            if (dgListView.Columns.Contains("CheckBox"))
                                            {
                                            }
                                            else
                                            {
                                                DataGridViewCheckBoxColumn dgcheckboxcolumn = new DataGridViewCheckBoxColumn(false);
                                                dgcheckboxcolumn.Name = "CheckBox";
                                                dgListView.Columns.Insert(0, dgcheckboxcolumn);
                                            }


                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "UserId";
                                            dgListView.Columns[2].HeaderText = "ProviderId";
                                            dgListView.Columns[3].HeaderText = "User Name";
                                            dgListView.Columns[4].HeaderText = "First Name";
                                            dgListView.Columns[5].HeaderText = "Middle Name";
                                            dgListView.Columns[6].HeaderText = "Last Name";
                                            dgListView.Columns[7].HeaderText = "Email";
                                            dgListView.Columns[8].HeaderText = "ExchangeLogin";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;
                                            dgListView.Columns[7].Visible = true;
                                            dgListView.Columns[8].Visible = false;
                                            if (dgListView.Columns.Contains("check1") == true && !IsgloCollectCustomer)
                                            {
                                                dgListView.Columns[9].Visible = false;

                                            }
                                            else if (dgListView.Columns.Contains("check1") == true && IsgloCollectCustomer)
                                            {

                                                dgListView.Columns[9].Visible = false;
                                                dgListView.Columns[10].Visible = false;

                                            }
                                            if (_IsReLoad)
                                            {
                                                int _width = (_thiswidth - 17) / 9;
                                                dgListView.Columns[0].Width = _width * 1;
                                                dgListView.Columns[2].Width = _width * 1;
                                                dgListView.Columns[3].Width = (int)(_width * 1.5);
                                                dgListView.Columns[4].Width = (int)(_width * 1.5);
                                                dgListView.Columns[5].Width = (int)(_width * 1.5);
                                                dgListView.Columns[6].Width = (int)(_width * 1.5);
                                                dgListView.Columns[7].Width = (int)(_width * 2.5);
                                                dgListView.Columns[8].Width = (int)(_width * 1);
                                            }

                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "UserId";
                                            dgListView.Columns[1].HeaderText = "ProviderId";
                                            dgListView.Columns[2].HeaderText = "User Name";
                                            dgListView.Columns[3].HeaderText = "First Name";
                                            dgListView.Columns[4].HeaderText = "Middle Name";
                                            dgListView.Columns[5].HeaderText = "Last Name";
                                            dgListView.Columns[6].HeaderText = "Email";
                                            dgListView.Columns[7].HeaderText = "ExchangeLogin";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;
                                            //Madan added on 20100424--- for fixing the extra column in users list
                                            dgListView.Columns[7].Visible = false;
                                            //End Madan

                                            int _width = (_thiswidth - 17) / 6;
                                            dgListView.Columns[2].Width = (int)(_width * 1.5);
                                            dgListView.Columns[3].Width = (int)(_width * 1.5);
                                            dgListView.Columns[4].Width = (int)(_width * 1.5);
                                            dgListView.Columns[5].Width = (int)(_width * 1.5);
                                            //dgListView.Columns[6].Width = _width * 1;
                                            dgListView.Columns[6].Width = (int)(_width * 1.5);
                                        }
                                    }
                                    break;

                                case gloListControlType.PatientInsurence:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Insurance ID";
                                            dgListView.Columns[2].HeaderText = "Insurance Name";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[3].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 8;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Insurance ID";
                                            dgListView.Columns[1].HeaderText = "Insurance Name";


                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;


                                            int _width = (_thiswidth - 17);
                                            dgListView.Columns[1].Width = _width;
                                        }
                                    }
                                    break;

                                case gloListControlType.EMRPatient: //20080804
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "First Name";
                                            dgListView.Columns[4].HeaderText = "Last Name";
                                            dgListView.Columns[5].HeaderText = "SSN";
                                            dgListView.Columns[6].HeaderText = "DOB";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[7].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 15;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 2;
                                            dgListView.Columns[3].Width = _width * 4;
                                            dgListView.Columns[4].Width = _width * 4;
                                            dgListView.Columns[5].Width = _width * 2;
                                            dgListView.Columns[6].Width = _width * 2;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "First Name";
                                            dgListView.Columns[3].HeaderText = "Last Name";
                                            dgListView.Columns[4].HeaderText = "SSN";
                                            dgListView.Columns[5].HeaderText = "DOB";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;


                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.Columns[1].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 2;
                                            dgListView.Columns[3].Width = _width * 2;
                                            dgListView.Columns[4].Width = _width * 1;
                                            dgListView.Columns[5].Width = _width * 1;
                                        }
                                    }
                                    break;

                                case gloListControlType.InsuranceServiceType: //20081007
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";
                                            dgListView.Columns[3].HeaderText = "Plan Type";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("Check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.Columns[1].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 2;
                                            dgListView.Columns[3].Width = _width * 2;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";
                                            dgListView.Columns[3].HeaderText = "Plan Type";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;

                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.Columns[1].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 2;
                                            dgListView.Columns[3].Width = _width * 2;

                                        }
                                    }
                                    break;
                                //added for cqm measure changes
                                case gloListControlType.CQMICD10:
                                case gloListControlType.CQMICD9:
                                case gloListControlType.CQMOrders:
                                case gloListControlType.CQMSnomed:
                                case gloListControlType.CQMRxNorm:
                                case gloListControlType.CQMHCPCS:
                                case gloListControlType.CQMCVX:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";
                                            dgListView.Columns[2].Width = 150;
                                            dgListView.Columns[3].Width = 350;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;

                                            }

                                            dgListView.Columns[1].Visible = false;


                                        }
                                    }
                                    break;


                                case gloListControlType.Taxonomy: //20081110
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Taxonomy Code";
                                            dgListView.Columns[3].HeaderText = "Taxonomy Description";
                                            dgListView.Columns[4].HeaderText = "Taxonomy Classification";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[5].Visible = false;

                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 2;
                                            dgListView.Columns[3].Width = _width * 5;
                                            dgListView.Columns[4].Width = _width * 2;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Taxonomy Code";
                                            dgListView.Columns[2].HeaderText = "Taxonomy Description";
                                            dgListView.Columns[3].HeaderText = "Taxonomy Classification";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 5;
                                            dgListView.Columns[3].Width = _width * 2;
                                        }
                                    }
                                    break;

                                case gloListControlType.AppointmentType: //20081110
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Appointment Type";
                                            dgListView.Columns[3].HeaderText = "Duration";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 8;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 4;
                                            dgListView.Columns[3].Width = _width * 3;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Appointment Type";
                                            dgListView.Columns[2].HeaderText = "Duration";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    }
                                    break;
                                case gloListControlType.AllPatientInsurances:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Insurance ID";
                                            dgListView.Columns[2].HeaderText = "Insurance Name";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            if (dgListView.Columns.Contains("Check1") == true)
                                            {
                                                dgListView.Columns[3].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 8;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Insurance ID";
                                            dgListView.Columns[1].HeaderText = "Insurance Name";


                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;


                                            int _width = (_thiswidth - 17);
                                            dgListView.Columns[1].Width = _width;

                                        }
                                    }
                                    break;

                                //Sandip Darade 20090730
                                //Added Preferred lab to use contol on Labs  in gloEMR50
                                case gloListControlType.PreferredLab:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "ID";
                                            dgListView.Columns[2].HeaderText = "Contact Name";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[3].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 8;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "ID";
                                            dgListView.Columns[1].HeaderText = "Contact Name";


                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;


                                            int _width = (_thiswidth - 17);
                                            dgListView.Columns[1].Width = _width;
                                        }
                                    }
                                    break;

                                case gloListControlType.Facility:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Facility Name";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            if (_MyCaller == "frmRpt_AgingReport")
                                                dgListView.Columns[2].Visible = false;
                                            else
                                                //Commented By Pramod Nair for Hiding the Facility Code
                                                dgListView.Columns[2].Visible = false;

                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            if (_MyCaller == "frmRpt_AgingReport")
                                            {
                                                int _width = (_thiswidth - 17) / 5;
                                                dgListView.Columns[0].Width = _width * 1;
                                                dgListView.Columns[3].Width = _width * 4;
                                            }
                                            else
                                            {
                                                // Added By Pramod Nair for setting the Width
                                                int _width = (_thiswidth - 17) / 5;
                                                dgListView.Columns[0].Width = _width * 1;
                                                dgListView.Columns[3].Width = _width * 4;
                                            }
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Facility Name";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[3].Visible = false;
                                            }

                                            // Added By Pramod Nair for setting the Width
                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[0].Width = _width * 1;
                                            //dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 4;
                                        }
                                    }
                                    break;

                                case gloListControlType.ChargeTray:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Tray";
                                            dgListView.Columns[4].HeaderText = "User";
                                            dgListView.Columns[5].HeaderText = "Active";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = false;

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[3].Width = _width * 6;
                                            dgListView.Columns[4].Width = _width * 2;
                                            dgListView.Columns[5].Width = _width * 2;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Charge Tray";
                                            dgListView.Columns[3].HeaderText = "User";
                                            dgListView.Columns[4].HeaderText = "Active";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 2;
                                            dgListView.Columns[4].Width = _width * 2;
                                        }
                                    }
                                    break;

                                case gloListControlType.PaymentTray:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Tray";
                                            dgListView.Columns[4].HeaderText = "User";
                                            dgListView.Columns[5].HeaderText = "Active";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[6].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[3].Width = _width * 6;
                                            dgListView.Columns[4].Width = _width * 2;
                                            dgListView.Columns[5].Width = _width * 2;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Tray";
                                            dgListView.Columns[3].HeaderText = "User";
                                            dgListView.Columns[4].HeaderText = "Active";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 3;
                                            dgListView.Columns[4].Width = _width * 2;
                                        }
                                    }
                                    break;

                                case gloListControlType.InsuranceCompany:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Insurance Company";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.Columns[0].Width = 50;
                                            dgListView.Columns[1].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _thiswidth - 50;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Insurance Company";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;

                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            dgListView.Columns[0].Width = 0;
                                            dgListView.Columns[1].Width = 350;
                                            //SHWETA
                                            dgListView.Columns[2].Width = _thiswidth - 50;
                                        }
                                    }
                                    break;

                                case gloListControlType.InsuranceReportingCategory:

                                case gloListControlType.BillingType:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            //SET THE HEADER FOR BILLING TYPE
                                            if (_ListControlType == gloListControlType.BillingType)
                                            {
                                                dgListView.Columns[3].HeaderText = "Plan Type";
                                            }
                                            //SET THE HEADER FOR REPORTING CATEGORY
                                            else
                                            {
                                                dgListView.Columns[3].HeaderText = "Reporting Category";
                                            }

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[3].Visible = true;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[1].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 3;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            //SET THE HEADER FOR BILLING YTPE
                                            if (_ListControlType == gloListControlType.BillingType)
                                            {
                                                dgListView.Columns[2].HeaderText = "Plan Type";
                                            }
                                            //SET THE HEADER FOR REPORTING CATEGORY
                                            else
                                            {
                                                dgListView.Columns[2].HeaderText = "Reporting Category";
                                            }
                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            dgListView.Columns[0].Width = 0;
                                            dgListView.Columns[1].Width = 350;
                                            dgListView.Columns[2].AutoSizeMode = DataGridViewAutoSizeColumnMode.Fill;
                                        }
                                    }
                                    break;

                                case gloListControlType.FeeShedule:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Fee Shedule";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[3].Visible = true;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[1].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 3;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Fee Shedule";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            dgListView.Columns[0].Width = 0;
                                            dgListView.Columns[1].Width = 350;
                                            dgListView.Columns[2].AutoSizeMode = DataGridViewAutoSizeColumnMode.Fill;
                                        }
                                    }
                                    break;

                                case gloListControlType.ERAPayer:
                                    {
                                        dgListView.Columns[1].HeaderText = "Payer ID";
                                        dgListView.Columns[2].HeaderText = "Activated";
                                        dgListView.Columns[3].HeaderText = "Use Claim Status";
                                        dgListView.Columns[4].HeaderText = "Post Secondary Adjustment";

                                        dgListView.Columns[0].Visible = false;

                                        int _Width = _thiswidth;
                                        dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                        dgListView.Columns[1].Width = (int)(_Width * 0.25);
                                        dgListView.Columns[2].Width = (int)(_Width * 0.15);
                                        dgListView.Columns[3].Width = (int)(_Width * 0.2);
                                        dgListView.Columns[4].AutoSizeMode = DataGridViewAutoSizeColumnMode.Fill;
                                    }
                                    break;

                                case gloListControlType.HistoryItem:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "ID";
                                            dgListView.Columns[2].HeaderText = "History Item";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[3].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 8;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "ID";
                                            dgListView.Columns[1].HeaderText = "History Item";


                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;

                                            int _width = (_thiswidth - 17);
                                            dgListView.Columns[1].Width = _width;
                                        }
                                    }
                                    break;

                                case gloListControlType.Location:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Location Name";
                                            dgListView.Columns[3].HeaderText = "Address Line1";
                                            dgListView.Columns[4].HeaderText = "Address Line2";
                                            dgListView.Columns[5].HeaderText = "City";
                                            dgListView.Columns[6].HeaderText = "County";
                                            dgListView.Columns[7].HeaderText = "State";
                                            dgListView.Columns[8].HeaderText = "Zip";
                                            dgListView.Columns[9].HeaderText = "Country";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;
                                            dgListView.Columns[7].Visible = true;
                                            dgListView.Columns[8].Visible = true;
                                            dgListView.Columns[9].Visible = false;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[10].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 11;
                                            dgListView.Columns[0].Width = (_width * 1);
                                            dgListView.Columns[2].Width = (_width * 2);
                                            dgListView.Columns[3].Width = (_width * 2);
                                            dgListView.Columns[4].Width = (_width * 2);
                                            dgListView.Columns[5].Width = (_width * 2);
                                            dgListView.Columns[6].Width = (_width * 1);
                                            dgListView.Columns[7].Width = (_width * 1);
                                            dgListView.Columns[8].Width = (_width * 1);
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "ID";
                                            dgListView.Columns[1].HeaderText = "Location Name";
                                            dgListView.Columns[2].HeaderText = "Address Line1";
                                            dgListView.Columns[3].HeaderText = "Address Line2";
                                            dgListView.Columns[4].HeaderText = "City";
                                            dgListView.Columns[5].HeaderText = "County";
                                            dgListView.Columns[6].HeaderText = "State";
                                            dgListView.Columns[7].HeaderText = "Zip";
                                            dgListView.Columns[8].HeaderText = "Country";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;
                                            dgListView.Columns[7].Visible = true;
                                            dgListView.Columns[8].Visible = true;

                                            int _width = (_thiswidth - 17) / 11;
                                            dgListView.Columns[1].Width = (_width * 1);
                                            dgListView.Columns[2].Width = (_width * 2);
                                            dgListView.Columns[3].Width = (_width * 2);
                                            dgListView.Columns[4].Width = (_width * 2);
                                            dgListView.Columns[5].Width = (_width * 2);
                                            dgListView.Columns[6].Width = (_width * 1);
                                            dgListView.Columns[7].Width = (_width * 1);
                                            dgListView.Columns[8].Width = (_width * 1);
                                        }
                                    }
                                    break;

                                case gloListControlType.AppointmentTypeType:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Appointment Type";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;


                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[3].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[0].Width = (int)(_width * 1);
                                            dgListView.Columns[2].Width = _width * 8;
                                        }
                                        else
                                        {
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Appointment Type";

                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 11;
                                            dgListView.Columns[1].Width = (_width * 1);
                                            dgListView.Columns[2].Width = (_width * 8);
                                        }
                                    }
                                    break;

                                //Added by madan for gloVault on 201001029
                                case gloListControlType.gloVaultEmail:
                                    this.DefaultPatientID = Convert.ToInt64(_dtList.Rows[0]["PatientID"]);
                                    dgListView.Columns[0].HeaderText = "Id";
                                    dgListView.Columns[1].HeaderText = "Code";
                                    dgListView.Columns[2].HeaderText = "First Name";
                                    dgListView.Columns[3].HeaderText = "MI";
                                    dgListView.Columns[4].HeaderText = "Last Name";
                                    dgListView.Columns[5].HeaderText = "SSN";
                                    dgListView.Columns[6].HeaderText = "Provider";
                                    dgListView.Columns[7].HeaderText = "DOB";
                                    dgListView.Columns[8].HeaderText = "Phone";
                                    dgListView.Columns[9].HeaderText = "Mobile";

                                    dgListView.Columns[0].Visible = false;
                                    dgListView.Columns[3].Visible = false;
                                    dgListView.Columns[5].Visible = false;
                                    dgListView.Columns[6].Visible = false;
                                    dgListView.Columns[7].Visible = false;
                                    dgListView.Columns[8].Visible = false;
                                    dgListView.Columns[9].Visible = false;

                                    if (dgListView.Columns.Contains("check1") == true)
                                    {
                                        dgListView.Columns[10].Visible = false;
                                    }

                                    #region "Show Columns as per User patient column Settings"

                                    //Get login user ID from appsettings   
                                    Int64 _nsUserID = 0;
                                    if (appSettings["UserID"] != null)
                                    {
                                        if (appSettings["UserID"] != "")
                                        { _nsUserID = Convert.ToInt64(appSettings["UserID"]); }
                                        else { _nsUserID = 0; }
                                    }
                                    else
                                    { _nsUserID = 0; }


                                    //Get Patient Columns settings for current user.
                                    gloSettings.GeneralSettings objgloSettings = new gloSettings.GeneralSettings(_DatabaseConnectionString);
                                    object objvalue = new object();
                                    objgloSettings.GetSetting("Patient Columns", _nsUserID, _ClinicID, out objvalue);


                                    _strPatientCol = Convert.ToString(objvalue).Trim(); //Sandip Darade 20100428
                                    if (objvalue != null && Convert.ToString(objvalue).Trim() != "")
                                    {
                                        string[] PatientColumns = Convert.ToString(objvalue).Trim().Split(',');
                                        for (int j = 0; j < PatientColumns.Length; j++)
                                        {

                                            for (int i = 1; i < dgListView.Columns.Count; i++)
                                            {
                                                if (dgListView.Columns[i].HeaderText.Trim() == PatientColumns[j].Trim())
                                                {
                                                    dgListView.Columns[i].Visible = true;
                                                    break;
                                                }
                                            }
                                        }
                                    }

                                    //Display Index settings
                                    objgloSettings.LoadGridColumnDisplayIndex(dgListView, gloSettings.ModuleOfGridColumn.DashBoardPatientList, _nsUserID);
                                    try
                                    {
                                        dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                        int _width = dgListView.Width / 18;
                                        dgListView.Columns[1].Width = _width * 4;
                                        dgListView.Columns[2].Width = _width * 4;
                                        dgListView.Columns[3].Width = _width * 1;
                                        dgListView.Columns[4].Width = _width * 4;
                                        dgListView.Columns[5].Width = _width * 2;
                                        dgListView.Columns[6].Width = _width * 3;
                                        dgListView.Columns[7].Width = _width * 2;
                                        dgListView.Columns[8].Width = _width * 2;
                                        dgListView.Columns[9].Width = _width * 2;
                                    }
                                    catch (Exception ex)
                                    {
                                        ex.ToString();
                                    }
                                    #endregion

                                    if (_ismultiselect == true)
                                    {
                                        dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                        dgListView.Columns[0].HeaderText = "Select";
                                        dgListView.Columns[0].Width = 30;
                                    }
                                    objgloSettings.Dispose();
                                    objgloSettings = null;
                                    break;

                                case gloListControlType.gloVaultData:
                                    this.DefaultPatientID = Convert.ToInt64(_dtList.Rows[0]["PatientID"]);
                                    dgListView.Columns[0].HeaderText = "Id";
                                    dgListView.Columns[1].HeaderText = "Code";
                                    dgListView.Columns[2].HeaderText = "First Name";
                                    dgListView.Columns[3].HeaderText = "MI";
                                    dgListView.Columns[4].HeaderText = "Last Name";
                                    dgListView.Columns[5].HeaderText = "SSN";
                                    dgListView.Columns[6].HeaderText = "Provider";
                                    dgListView.Columns[7].HeaderText = "DOB";
                                    dgListView.Columns[8].HeaderText = "Phone";
                                    dgListView.Columns[9].HeaderText = "Mobile";

                                    dgListView.Columns[0].Visible = false;
                                    dgListView.Columns[3].Visible = false;
                                    dgListView.Columns[5].Visible = false;
                                    dgListView.Columns[6].Visible = false;
                                    dgListView.Columns[7].Visible = false;
                                    dgListView.Columns[8].Visible = false;
                                    dgListView.Columns[9].Visible = false;

                                    if (dgListView.Columns.Contains("check1") == true)
                                    {
                                        dgListView.Columns[10].Visible = false;
                                    }


                                    #region "Show Columns as per User patient column Settings"

                                    //Get login user ID from appsettings   
                                    Int64 _nPUserID = 0;
                                    if (appSettings["UserID"] != null)
                                    {
                                        if (appSettings["UserID"] != "")
                                        { _nPUserID = Convert.ToInt64(appSettings["UserID"]); }
                                        else { _nPUserID = 0; }
                                    }
                                    else
                                    { _nPUserID = 0; }


                                    //Get Patient Columns settings for current user.
                                    gloSettings.GeneralSettings objpgloSettings = new gloSettings.GeneralSettings(_DatabaseConnectionString);
                                    object objpvalue = null;
                                    objpgloSettings.GetSetting("Patient Columns", _nPUserID, _ClinicID, out objpvalue);


                                    _strPatientCol = Convert.ToString(objpvalue).Trim(); //Sandip Darade 20100428
                                    if (objpvalue != null && Convert.ToString(objpvalue).Trim() != "")
                                    {
                                        string[] PatientColumns = Convert.ToString(objpvalue).Trim().Split(',');
                                        for (int j = 0; j < PatientColumns.Length; j++)
                                        {

                                            for (int i = 1; i < dgListView.Columns.Count; i++)
                                            {
                                                if (dgListView.Columns[i].HeaderText.Trim() == PatientColumns[j].Trim())
                                                {
                                                    dgListView.Columns[i].Visible = true;
                                                    break;
                                                }
                                            }
                                        }
                                    }

                                    //Display Index settings
                                    objpgloSettings.LoadGridColumnDisplayIndex(dgListView, gloSettings.ModuleOfGridColumn.DashBoardPatientList, _nPUserID);
                                    try
                                    {
                                        dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                        int _width = dgListView.Width / 18;
                                        dgListView.Columns[1].Width = _width * 4;
                                        dgListView.Columns[2].Width = _width * 4;
                                        dgListView.Columns[3].Width = _width * 1;
                                        dgListView.Columns[4].Width = _width * 4;
                                        dgListView.Columns[5].Width = _width * 2;
                                        dgListView.Columns[6].Width = _width * 3;
                                        dgListView.Columns[7].Width = _width * 2;
                                        dgListView.Columns[8].Width = _width * 2;
                                        dgListView.Columns[9].Width = _width * 2;
                                    }
                                    catch (Exception ex)
                                    {
                                        ex.ToString();
                                    }
                                    #endregion

                                    if (_ismultiselect == true)
                                    {
                                        dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                        dgListView.Columns[0].HeaderText = "Select";
                                        dgListView.Columns[0].Width = 30;
                                    }
                                    objpgloSettings.Dispose();
                                    objpgloSettings = null;
                                    break;
                                //Added by SaiKrishna:2011-06-27(yyyy-mm-dd) for Patient Account Feature
                                case gloListControlType.GuarantorsAccounts:
                                case gloListControlType.PatientAccounts: //Added By Mahesh S(Apollo) for MergeAccount
                                case gloListControlType.Accounts:   //Added by SaiKrishna:2011-06-27(yyyy-mm-dd) for getting Accounts
                                    dgListView.Columns[0].HeaderText = "PatientAccount Id";
                                    dgListView.Columns[1].HeaderText = "Account #";
                                    dgListView.Columns[2].HeaderText = "GuarantorId";
                                    dgListView.Columns[3].HeaderText = "GuarantorCode";
                                    dgListView.Columns[4].HeaderText = "Guarantor";
                                    dgListView.Columns[5].HeaderText = "BUS";
                                    dgListView.Columns[6].HeaderText = "Account Desc";
                                    dgListView.Columns[7].HeaderText = "ExcludeStatement";
                                    dgListView.Columns[8].HeaderText = "SentToCollection";
                                    dgListView.Columns[9].HeaderText = "Guar. Type";
                                    dgListView.Columns[10].HeaderText = "Address";


                                    dgListView.Columns[0].Visible = false;
                                    dgListView.Columns[2].Visible = false;
                                    dgListView.Columns[3].Visible = false;
                                    dgListView.Columns[7].Visible = false;
                                    dgListView.Columns[8].Visible = false;
                                    dgListView.Columns[9].Visible = false;

                                    dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                    int gridWidth = (_thiswidth - 17) / 10;
                                    dgListView.Columns[1].Width = (gridWidth * 2) - 20;
                                    dgListView.Columns[4].Width = gridWidth * 2;
                                    dgListView.Columns[6].Width = gridWidth * 2;
                                    //dgListView.Columns[8].Width = (gridWidth * 2) - 20;
                                    dgListView.Columns[9].Width = 0;
                                    dgListView.Columns[10].Width = gridWidth * 4;

                                    if (_isRequireBUSonPatientAccts)
                                    {
                                        dgListView.Columns[5].Visible = true;
                                        dgListView.Columns[5].Width = (gridWidth * 2) - 90;
                                        dgListView.Columns[6].Width = gridWidth * 2;
                                    }
                                    else
                                    {
                                        dgListView.Columns[5].Visible = false;
                                        dgListView.Columns[5].Width = 0;
                                        dgListView.Columns[6].Width = (gridWidth * 3) - 30;
                                    }

                                    break;

                                case gloListControlType.Template:
                                    {
                                        dgListView.Columns[0].HeaderText = "CategoryID";
                                        dgListView.Columns[1].HeaderText = "Category Name";
                                        dgListView.Columns[2].HeaderText = "TemplateID";
                                        dgListView.Columns[3].HeaderText = "Template Name";
                                        dgListView.Columns[4].HeaderText = "ProviderID";
                                        dgListView.Columns[5].HeaderText = "Provider Name";


                                        dgListView.Columns[0].Visible = false;
                                        dgListView.Columns[1].Visible = true;
                                        dgListView.Columns[2].Visible = false;
                                        dgListView.Columns[3].Visible = true;
                                        dgListView.Columns[4].Visible = false;
                                        dgListView.Columns[5].Visible = false;

                                        dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                        int template_gridWidth = (_thiswidth - 17) / 10;
                                        dgListView.Columns[1].Width = (template_gridWidth * 4) - 10;
                                        dgListView.Columns[3].Width = template_gridWidth * 5;
                                    }
                                    break;

                                case gloListControlType.StmtDisplaySettings:
                                    {
                                        dgListView.Columns[0].HeaderText = "StmtDisplaySettingsID";
                                        dgListView.Columns[1].HeaderText = "Statement Display Settings Name";
                                        dgListView.Columns[2].HeaderText = "Default";

                                        dgListView.Columns[0].Visible = false;
                                        dgListView.Columns[1].Visible = true;
                                        dgListView.Columns[2].Visible = true;

                                        dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                        int template_gridWidth = (_thiswidth - 17) / 10;
                                        dgListView.Columns[1].Width = (template_gridWidth * 6) - 10;
                                        dgListView.Columns[2].Width = (template_gridWidth * 3) - 10;
                                    }
                                    break;

                                //Added by SaiKrishna:2011-04-15(yyyy-mm-dd) for getting PatientOtherGuarantors
                                case gloListControlType.PatientOtherGuarantors:
                                    {
                                        dgListView.Columns[0].HeaderText = "Patient ID";
                                        dgListView.Columns[1].HeaderText = "PatientContact ID";
                                        dgListView.Columns[2].HeaderText = "First Name";
                                        dgListView.Columns[3].HeaderText = "MI";
                                        dgListView.Columns[4].HeaderText = "Last Name";
                                        dgListView.Columns[5].HeaderText = "Address1";
                                        dgListView.Columns[6].HeaderText = "Address2";
                                        dgListView.Columns[7].HeaderText = "City";
                                        dgListView.Columns[8].HeaderText = "State";
                                        dgListView.Columns[9].HeaderText = "Zip";
                                        dgListView.Columns[10].HeaderText = "Guar.Type";

                                        dgListView.Columns[0].Visible = false;
                                        dgListView.Columns[1].Visible = false;

                                        dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                        int _width = (_thiswidth - 17) / 10;
                                        dgListView.Columns[2].Width = _width * 2;
                                        dgListView.Columns[3].Width = _width * 1;
                                        dgListView.Columns[4].Width = _width * 2;
                                        dgListView.Columns[5].Width = _width * 1;
                                        dgListView.Columns[6].Width = _width * 1;
                                        dgListView.Columns[7].Width = _width * 1;
                                        dgListView.Columns[8].Width = _width * 1;
                                        dgListView.Columns[9].Width = _width * 1;
                                        dgListView.Columns[10].Width = _width * 1;
                                    }
                                    break;

                                case gloListControlType.Race:
                                case gloListControlType.Ethnicity:
                                    {
                                        if (dgListView.ColumnCount != 6)
                                        {
                                            DataGridViewCheckBoxColumn dgcheckboxcolumn = new DataGridViewCheckBoxColumn(false);
                                            dgListView.Columns.Insert(0, dgcheckboxcolumn);
                                        }
                                        if (_ListControlType == gloListControlType.Race)
                                        {
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "CDC Category ID";
                                            dgListView.Columns[2].HeaderText = "CDC Code";
                                            dgListView.Columns[3].HeaderText = "CDC Race";
                                            dgListView.Columns[4].HeaderText = "OMB Category ID";
                                            dgListView.Columns[5].HeaderText = "OMB Code";
                                            dgListView.Columns[6].HeaderText = "OMB Race";
                                            dgListView.Columns[7].HeaderText = "Favorite";
                                        }
                                        else if (_ListControlType == gloListControlType.Ethnicity)
                                        {
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "CDC Category ID";
                                            dgListView.Columns[2].HeaderText = "CDC Code";
                                            dgListView.Columns[3].HeaderText = "CDC Ethnicity";
                                            dgListView.Columns[4].HeaderText = "OMB Category ID";
                                            dgListView.Columns[5].HeaderText = "OMB Code";
                                            dgListView.Columns[6].HeaderText = "OMB Ethnicity";
                                            dgListView.Columns[7].HeaderText = "Favorite";
                                        }
                                        //dgListView.Columns[4].HeaderText = "Favorites";


                                        dgListView.Columns[0].Visible = true;
                                        dgListView.Columns[1].Visible = false;
                                        dgListView.Columns[2].Visible = true;
                                        dgListView.Columns[3].Visible = true;
                                        dgListView.Columns[4].Visible = false;
                                        dgListView.Columns[5].Visible = true;
                                        dgListView.Columns[6].Visible = true;
                                        dgListView.Columns[7].Visible = false;

                                        if (dgListView.Columns.Contains("Check1") == true)
                                        {
                                            dgListView.Columns[8].Visible = false;
                                        }

                                        dgListView.Columns[0].Width = 40;
                                        dgListView.Columns[1].Width = 0;
                                        dgListView.Columns[2].Width = 100;
                                        dgListView.Columns[3].Width = 190;
                                        dgListView.Columns[4].Width = 0;
                                        dgListView.Columns[5].Width = 100;
                                        dgListView.Columns[6].Width = 190;
                                        dgListView.Columns[7].Width = 0;

                                        dgListView.DataSource = _dvList;

                                        if (_dvList != null && _dvList.Table != null && _ismultiselect == true)
                                        {
                                            if (_dvList.Table.Rows.Count > 0)
                                            {

                                                for (int Count = 0; Count < dgListView.Rows.Count; Count++)
                                                {
                                                    dgListView.CommitEdit(DataGridViewDataErrorContexts.Display);
                                                    DataRow rw = _dvList.Table.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                                    if (rw != null)
                                                    {
                                                        if (Convert.ToInt32(rw["Check1"]) != 0)
                                                        {
                                                            dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check1"]);
                                                        }
                                                    }
                                                    if (_ListControlType == gloListControlType.Race|| _ListControlType == gloListControlType.Ethnicity)
                                                    {
                                                        DataRow dr = dtSelected.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                                        if (dr != null)
                                                        {

                                                            dgListView.Rows[Count].Cells[0].Value = 1;

                                                        }
                                                    }
                                                }
                                            }
                                        }


                                    }
                                    break;
                                case gloListControlType.MedicalCategory:
                                case gloListControlType.MedicalCategoryReport:
                                    {
                                        if (dgListView.ColumnCount != 4)
                                        {
                                            DataGridViewCheckBoxColumn dgcheckboxcolumn = new DataGridViewCheckBoxColumn(false);
                                            dgListView.Columns.Insert(0, dgcheckboxcolumn);
                                        }

                                        dgListView.Columns[0].HeaderText = "Select";
                                        dgListView.Columns[1].HeaderText = "nCategoryID";
                                        dgListView.Columns[2].HeaderText = "Medical Category";
                                        //dgListView.Columns[3].HeaderText = "Code";



                                        dgListView.Columns[0].Visible = true;
                                        dgListView.Columns[1].Visible = false;
                                        dgListView.Columns[2].Visible = true;
                                        //dgListView.Columns[3].Visible = true;
                                        //dgListView.Columns[4].Visible = false;

                                        if (dgListView.Columns.Contains("Check1") == true)
                                        {
                                            dgListView.Columns[3].Visible = false;
                                        }

                                        dgListView.Columns[0].Width = 20;
                                        dgListView.Columns[1].Width = 0;
                                        dgListView.Columns[2].Width = 600;
                                        //dgListView.Columns[4].Width = 0;

                                        dgListView.DataSource = _dvList;

                                        if (_dvList != null && _dvList.Table != null && _ismultiselect == true)
                                        {
                                            if (_dvList.Table.Rows.Count > 0)
                                            {

                                                try
                                                {
                                                    for (int Count = 0; Count < dgListView.Rows.Count; Count++)
                                                    {
                                                        dgListView.CommitEdit(DataGridViewDataErrorContexts.Display);
                                                        DataRow rw = _dvList.Table.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                                        if (rw != null)
                                                        {
                                                            if (Convert.ToInt32(rw["Check1"]) != 0)
                                                            {
                                                                dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check1"]);
                                                            }
                                                        }
                                                        if (_ListControlType == gloListControlType.MedicalCategory)
                                                        {
                                                            DataRow dr = dtSelected.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                                            if (dr != null)
                                                            {

                                                                dgListView.Rows[Count].Cells[0].Value = 1;

                                                            }
                                                        }
                                                    }

                                                }
                                                catch //(Exception ex)
                                                {
                                                }
                                            }
                                        }


                                    }
                                    break;
                                case gloListControlType.OBMedicalCategory:
                                    {
                                        if (dgListView.ColumnCount != 4)
                                        {
                                            DataGridViewCheckBoxColumn dgcheckboxcolumn = new DataGridViewCheckBoxColumn(false);
                                            dgListView.Columns.Insert(0, dgcheckboxcolumn);
                                        }

                                        dgListView.Columns[0].HeaderText = "Select";
                                        dgListView.Columns[1].HeaderText = "nCategoryID";
                                        dgListView.Columns[2].HeaderText = "Medical Category";
                                        //dgListView.Columns[3].HeaderText = "Code";



                                        dgListView.Columns[0].Visible = true;
                                        dgListView.Columns[1].Visible = false;
                                        dgListView.Columns[2].Visible = true;
                                        //dgListView.Columns[3].Visible = true;
                                        //dgListView.Columns[4].Visible = false;

                                        if (dgListView.Columns.Contains("Check1") == true)
                                        {
                                            dgListView.Columns[3].Visible = false;
                                        }

                                        dgListView.Columns[0].Width = 60;
                                        dgListView.Columns[1].Width = 0;
                                        dgListView.Columns[2].Width = 600;
                                        //dgListView.Columns[4].Width = 0;

                                        dgListView.DataSource = _dvList;

                                        if (_dvList != null && _dvList.Table != null && _ismultiselect == true)
                                        {
                                            if (_dvList.Table.Rows.Count > 0)
                                            {

                                                try
                                                {
                                                    for (int Count = 0; Count < dgListView.Rows.Count; Count++)
                                                    {
                                                        dgListView.CommitEdit(DataGridViewDataErrorContexts.Display);
                                                        DataRow rw = _dvList.Table.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                                        if (rw != null)
                                                        {
                                                            if (Convert.ToInt32(rw["Check1"]) != 0)
                                                            {
                                                                dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check1"]);
                                                            }
                                                        }
                                                        if (_ListControlType == gloListControlType.OBMedicalCategory)
                                                        {
                                                            DataRow dr = dtSelected.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                                            if (dr != null)
                                                            {

                                                                dgListView.Rows[Count].Cells[0].Value = 1;

                                                            }
                                                        }
                                                    }

                                                }
                                                catch //(Exception ex)
                                                {
                                                }
                                            }
                                        }


                                    }
                                    break;
                                case gloListControlType.PatientRepresentative:
                                    {
                                        if (_ismultiselect)
                                        {
                                            DataGridViewCheckBoxColumn dgcheckboxcolumn = new DataGridViewCheckBoxColumn(false);
                                            dgListView.Columns.Insert(0, dgcheckboxcolumn);

                                        }

                                        dgListView.Columns[1].Visible = false;
                                        dgListView.Columns[8].Visible = false;

                                        dgListView.Columns[0].HeaderText = "Select";
                                        dgListView.Columns[0].Width = 50;

                                    }
                                    break;
                                case gloListControlType.DMSCategory:
                                    {
                                        if (_ismultiselect)
                                        {
                                            DataGridViewCheckBoxColumn dgcheckboxcolumn = new DataGridViewCheckBoxColumn(false);
                                            dgListView.Columns.Insert(0, dgcheckboxcolumn);

                                        }

                                        dgListView.Columns[1].Visible = false;
                                        dgListView.Columns[3].Visible = false;

                                        dgListView.Columns[0].HeaderText = "Select";
                                        dgListView.Columns[2].HeaderText = "Category Name";
                                        dgListView.Columns[0].Width = 50;

                                    }
                                    break;
                                case gloListControlType.OrderQuickNotes:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Notes";

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;

                                            dgListView.ScrollBars = ScrollBars.None;
                                            this.Width = 550;
                                            dgListView.Columns[0].Width = 50;
                                            dgListView.Columns[2].Width = 500;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Notes";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;

                                        }

                                    }
                                    break;
                                case gloListControlType.OBVitalComments:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Comments";

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;

                                            dgListView.ScrollBars = ScrollBars.None;
                                            this.Width = 550;
                                            dgListView.Columns[0].Width = 50;
                                            dgListView.Columns[2].Width = 500;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Comments_ID";
                                            dgListView.Columns[1].HeaderText = "Comments";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;

                                        }

                                    }
                                    break;
                                case gloListControlType.CarePlan:
                                    {

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Problem";
                                            dgListView.Columns[3].HeaderText = "Goal";
                                            dgListView.Columns[4].HeaderText = "Note";
                                            dgListView.Columns[5].HeaderText = "Instruction";
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[3].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[4].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[5].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.ScrollBars = ScrollBars.None;
                                            this.Width = 668;
                                            dgListView.Columns[0].Width = 50;
                                            dgListView.Columns[2].Width = 120;
                                            //dgListView.Columns[3].Width = 500;

                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Problem";
                                            dgListView.Columns[2].HeaderText = "Goal";
                                            dgListView.Columns[3].HeaderText = "Note";
                                            dgListView.Columns[4].HeaderText = "Instruction";
                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                        }
                                    }
                                    break;
                                case gloListControlType.PatientProblemList :
                                    {

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Problem";
                                            dgListView.Columns[3].HeaderText = "DOS";
                                            dgListView.Columns[4].HeaderText = "Diagnosis";
                                            dgListView.Columns[5].HeaderText = "Snomed";
                                            dgListView.Columns[6].HeaderText = "Status";
                                            dgListView.Columns[7].HeaderText = "DischargeDate";
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;
                                            dgListView.Columns[7].Visible = true;
                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[3].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[4].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[5].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[6].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[7].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.ScrollBars = ScrollBars.None;
                                            this.Width = 668;
                                            dgListView.Columns[0].Width = 50;
                                            dgListView.Columns[2].Width = 120;
                                            //dgListView.Columns[3].Width = 500;

                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Problem";
                                            dgListView.Columns[2].HeaderText = "DOS";
                                            dgListView.Columns[3].HeaderText = "Diagnosis";
                                            dgListView.Columns[4].HeaderText = "Snomed";
                                            dgListView.Columns[5].HeaderText = "Status";
                                            dgListView.Columns[6].HeaderText = "DischargeDate";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;
                                        }
                                    }
                                    break;
                                case gloListControlType.HealthConcern:
                                    {

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Name";
                                            dgListView.Columns[3].HeaderText = "Concern From";
                                            dgListView.Columns[4].HeaderText = "Status";
                                            dgListView.Columns[5].HeaderText = "Start Date";
                                            dgListView.Columns[6].HeaderText = "End Date";
                                            dgListView.Columns[7].HeaderText = "Notes";
                                            dgListView.Columns[8].HeaderText = "Created Date";
                                            dgListView.Columns[9].HeaderText = "Last Modified";
                                            dgListView.Columns[10].HeaderText = "User";
                                            dgListView.Columns[11].HeaderText = "HealthConcernDate";

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;
                                            dgListView.Columns[7].Visible = true;
                                            dgListView.Columns[8].Visible = true;
                                            dgListView.Columns[9].Visible = false;
                                            dgListView.Columns[10].Visible = true;
                                            dgListView.Columns[11].Visible = false;

                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[1].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[3].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[4].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[5].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[6].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[7].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[8].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[9].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[10].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[11].SortMode = DataGridViewColumnSortMode.NotSortable;

                                            dgListView.ScrollBars = ScrollBars.None;
                                            this.Width = 668;
                                            dgListView.Columns[0].Width = 50;//select
                                            dgListView.Columns[1].Width = 0;//Id
                                            dgListView.Columns[2].Width = 120;//Name
                                            dgListView.Columns[3].Width = 100;//Concern From
                                            dgListView.Columns[4].Width = 50;//Status
                                            dgListView.Columns[5].Width = 80;//Start Date
                                            dgListView.Columns[6].Width = 80;//End Date
                                            dgListView.Columns[7].Width = 150;//Notes
                                            dgListView.Columns[8].Width = 120;//Created Date
                                            dgListView.Columns[9].Width = 0;//dtHealthConcernRecordedDate
                                            dgListView.Columns[10].Width = 80;//User
                                            dgListView.Columns[11].Width = 0;//dtHealthConcernDate
                                           
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Name";
                                            dgListView.Columns[2].HeaderText = "Concern From";
                                            dgListView.Columns[3].HeaderText = "Status";
                                            dgListView.Columns[4].HeaderText = "Start Date";
                                            dgListView.Columns[5].HeaderText = "End Date";
                                            dgListView.Columns[6].HeaderText = "Notes";
                                            dgListView.Columns[7].HeaderText = "Created Date";
                                            dgListView.Columns[8].HeaderText = "Last Modified";
                                            dgListView.Columns[9].HeaderText = "User";
                                            dgListView.Columns[10].HeaderText = "HealthConcernDate";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;
                                            dgListView.Columns[7].Visible = true;
                                            dgListView.Columns[8].Visible = false;
                                            dgListView.Columns[9].Visible = true;
                                            dgListView.Columns[10].Visible = false;

                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[1].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[3].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[4].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[5].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[6].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[7].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[8].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[9].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[10].SortMode = DataGridViewColumnSortMode.NotSortable;
                                        }
                                    }
                                    break;
                                case gloListControlType.Intervention:
                                    {

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";//ninterventionid
                                            dgListView.Columns[2].HeaderText = "Name";//interventionname
                                            dgListView.Columns[3].HeaderText = "Type";//interventiontype
                                            dgListView.Columns[4].HeaderText = "Notes";//notes
                                            dgListView.Columns[5].HeaderText = "Intervention Date";//dtInterventionDate
                                            dgListView.Columns[6].HeaderText = "Created Date";//dtcreateddate
                                            dgListView.Columns[7].HeaderText = "dtInterventionRecordedDate";//dtInterventionRecordedDate
                                            dgListView.Columns[8].HeaderText = "User";//Username
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            Visible = true;
                                            dgListView.Columns[1].Visible = false;//ninterventionid
                                            dgListView.Columns[2].Visible = true;//interventionname
                                            dgListView.Columns[3].Visible = true;//interventiontype
                                            dgListView.Columns[4].Visible = true;//notes
                                            dgListView.Columns[5].Visible = true;//dtInterventionDate
                                            dgListView.Columns[6].Visible = true;//Created Date
                                            dgListView.Columns[7].Visible = false;//dtInterventionRecordedDate
                                            dgListView.Columns[8].Visible = true;//Username

                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[3].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[4].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[5].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[6].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[7].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[8].SortMode = DataGridViewColumnSortMode.NotSortable;

                                            dgListView.ScrollBars = ScrollBars.None;
                                            this.Width = 668;
                                            dgListView.Columns[0].Width = 50;//Select
                                            dgListView.Columns[1].Width = 0;//ninterventionid
                                            dgListView.Columns[2].Width = 150;//interventionname
                                            dgListView.Columns[3].Width = 80;//interventiontype
                                            dgListView.Columns[4].Width = 200;//notes
                                            dgListView.Columns[5].Width = 150;//dtInterventionDate
                                            dgListView.Columns[6].Width = 150;//Created date
                                            dgListView.Columns[7].Width = 0;//dtInterventionRecordedDate
                                            dgListView.Columns[8].Width = 100;//Username
                                            

                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Name";
                                            dgListView.Columns[2].HeaderText = "Type";
                                            dgListView.Columns[3].HeaderText = "Notes";
                                            dgListView.Columns[4].HeaderText = "Intervention Date";
                                            dgListView.Columns[5].HeaderText = "Created Date";
                                            dgListView.Columns[6].HeaderText = "Recorded Date";
                                            dgListView.Columns[7].HeaderText = "User";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = false;
                                            dgListView.Columns[7].Visible = true;
                                        }
                                    }
                                    break;
                                case gloListControlType.CarePlanMedication:
                                    {

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";//Medicationid
                                            dgListView.Columns[2].HeaderText = "mpid";
                                            dgListView.Columns[3].HeaderText = "Medication";
                                            dgListView.Columns[4].HeaderText = "Dosage";
                                            dgListView.Columns[5].HeaderText = "Sequence";
                                            dgListView.Columns[6].HeaderText = "Drug Form";
                                            dgListView.Columns[7].HeaderText = "Amount";
                                            dgListView.Columns[8].HeaderText = "sNDCCode";
                                            dgListView.Columns[9].HeaderText = "Route";
                                            dgListView.Columns[10].HeaderText = "Frequency";
                                            dgListView.Columns[11].HeaderText = "Duration";
                                            dgListView.Columns[12].HeaderText = "Refills";
                                            dgListView.Columns[13].HeaderText = "Pharmacy";
                                            dgListView.Columns[14].HeaderText = "Medication Date";
                                            dgListView.Columns[15].HeaderText = "Status";
                                            dgListView.Columns[16].HeaderText = "Rx_sChiefComplaints";
                                            dgListView.Columns[17].HeaderText = "sDrugForm";
                                            dgListView.Columns[18].HeaderText = "NDCCode";
                                            dgListView.Columns[19].HeaderText = "IsAdministered";
                                            dgListView.Columns[20].HeaderText = "Start Date";
                                            dgListView.Columns[21].HeaderText = "End Date";
                                            
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            Visible = true;
                                            dgListView.Columns[1].Visible = false;//Sequence
                                            dgListView.Columns[2].Visible = false;//mpid
                                            dgListView.Columns[3].Visible = true;//Medication
                                            dgListView.Columns[4].Visible = true;//Dosage
                                            dgListView.Columns[5].Visible = false;//Medicationid
                                            dgListView.Columns[6].Visible = true;//DrugForm
                                            dgListView.Columns[7].Visible = true;//sAmount
                                            dgListView.Columns[8].Visible = false;//sNDCCode
                                            dgListView.Columns[9].Visible = true;//DrugRoute
                                            dgListView.Columns[10].Visible = true;//Frequency
                                            dgListView.Columns[11].Visible = true;//Duration
                                            dgListView.Columns[12].Visible = true;//Refills
                                            dgListView.Columns[13].Visible = true;//Pharmacy
                                            dgListView.Columns[14].Visible = true;//MedicationDate
                                            dgListView.Columns[15].Visible = true;//Status
                                            dgListView.Columns[16].Visible = false;//Rx_sChiefComplaints
                                            dgListView.Columns[17].Visible = false;//sDrugForm
                                            dgListView.Columns[18].Visible = false;//NDCCode
                                            dgListView.Columns[19].Visible = false;//IsAdministered
                                            dgListView.Columns[20].Visible = true;//StartDate
                                            dgListView.Columns[21].Visible = true;//EndDate

                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[1].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[3].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[4].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[5].SortMode = DataGridViewColumnSortMode.NotSortable;//Medicationid
                                            dgListView.Columns[6].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[7].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[8].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[9].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[10].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[11].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[12].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[13].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[14].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[15].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[16].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[17].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[18].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[19].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[20].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[21].SortMode = DataGridViewColumnSortMode.NotSortable;
                                   
                                            dgListView.ScrollBars = ScrollBars.None;
                                            this.Width = 668;
                                            dgListView.Columns[0].Width = 50;//select
                                            dgListView.Columns[1].Width = 0;//Sequence
                                            dgListView.Columns[2].Width = 0;//mpid
                                            dgListView.Columns[3].Width = 200;//Medication
                                            dgListView.Columns[4].Width = 60;//Dosage
                                            dgListView.Columns[5].Width = 0;//Medicationid
                                            dgListView.Columns[6].Width = 70;//DrugForm
                                            dgListView.Columns[7].Width = 55;//sAmount
                                            dgListView.Columns[8].Width = 0;//sNDCCode
                                            dgListView.Columns[9].Width = 80;//DrugRoute
                                            dgListView.Columns[10].Width = 200;//Frequency
                                            dgListView.Columns[11].Width = 60;//Duration
                                            dgListView.Columns[12].Width = 50;//Refill
                                            dgListView.Columns[13].Width = 150;//Pharmacy
                                            dgListView.Columns[14].Width = 100;//MedicationDate
                                            dgListView.Columns[15].Width = 50;//Status
                                            dgListView.Columns[16].Width = 0;//Rx_sChiefComplaints
                                            dgListView.Columns[17].Width = 0;//sDrugForm
                                            dgListView.Columns[18].Width = 0;//NDCCode
                                            dgListView.Columns[19].Width = 0;//IsAdministered
                                            dgListView.Columns[20].Width = 80;//StartDate
                                            dgListView.Columns[21].Width = 80;//EndDate
                                      

                                        }
                                        else
                                        {
                                           
                                           
                                        }
                                    }
                                    break;
                                case gloListControlType.CarePlanProblemList:
                                    {

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "SrNo";
                                            dgListView.Columns[3].HeaderText = "VisitID";
                                            dgListView.Columns[4].HeaderText = "DOS";//dtDOS
                                            dgListView.Columns[5].HeaderText = "dtDischargeDate";//
                                            dgListView.Columns[6].HeaderText = "Diagnosis";
                                            dgListView.Columns[7].HeaderText = "Problem";//Complaint
                                            dgListView.Columns[8].HeaderText = "Status";
                                            dgListView.Columns[9].HeaderText = "Prescription";
                                            dgListView.Columns[10].HeaderText = "User Name";
                                            dgListView.Columns[11].HeaderText = "ResolvedDt";
                                            dgListView.Columns[12].HeaderText = "Comment";
                                            dgListView.Columns[13].HeaderText = "nUserID";
                                            dgListView.Columns[14].HeaderText = "Immediacy";
                                            dgListView.Columns[15].HeaderText = "Comments";
                                            dgListView.Columns[16].HeaderText = "nStatus";
                                            dgListView.Columns[17].HeaderText = "Provider";
                                            dgListView.Columns[18].HeaderText = "Location";
                                            dgListView.Columns[19].HeaderText = "ModifiedDate";
                                            dgListView.Columns[20].HeaderText = "ExamID";
                                            dgListView.Columns[21].HeaderText = "SNOMED Code";//sConceptID
                                            dgListView.Columns[22].HeaderText = "sSnoMedID";
                                            dgListView.Columns[23].HeaderText = "sDescriptionID";
                                            dgListView.Columns[24].HeaderText = "sDescription";
                                            dgListView.Columns[25].HeaderText = "sTransactionID1";


                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            Visible = true;
                                            dgListView.Columns[1].Visible = false;//SrNo
                                            dgListView.Columns[2].Visible = false;//nProblemID
                                            dgListView.Columns[3].Visible = false;//VisitID
                                            dgListView.Columns[4].Visible = true;//dtDOS
                                            dgListView.Columns[5].Visible = false;//dtDischargeDate
                                            dgListView.Columns[6].Visible = true;//Diagnosis
                                            dgListView.Columns[7].Visible = true;//Complaint
                                            dgListView.Columns[8].Visible = true;//Status
                                            dgListView.Columns[9].Visible = false;//Prescription
                                            dgListView.Columns[10].Visible = true;//UserName
                                            dgListView.Columns[11].Visible = false;//ResolvedDt
                                            dgListView.Columns[12].Visible = false;//Comment
                                            dgListView.Columns[13].Visible = false;//nUserID
                                            dgListView.Columns[14].Visible = false;//Immediacy
                                            dgListView.Columns[15].Visible = false;//Comments
                                            dgListView.Columns[16].Visible = false;//nStatus
                                            dgListView.Columns[17].Visible = false;//Provider
                                            dgListView.Columns[18].Visible = false;//Location
                                            dgListView.Columns[19].Visible = false;//ModifiedDate
                                            dgListView.Columns[20].Visible = false;//ExamID
                                            dgListView.Columns[21].Visible = true;//sConceptID
                                            dgListView.Columns[22].Visible = false;//sSnoMedID
                                            dgListView.Columns[23].Visible = false;//sDescriptionID
                                            dgListView.Columns[24].Visible = false;//sDescription
                                            dgListView.Columns[25].Visible = false;//sTransactionID1

                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[1].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[3].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[4].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[5].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[6].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[7].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[8].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[9].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[10].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[11].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[12].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[13].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[14].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[15].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[16].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[17].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[18].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[19].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[20].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[21].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[22].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[23].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[24].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[25].SortMode = DataGridViewColumnSortMode.NotSortable;


                                            dgListView.ScrollBars = ScrollBars.None;
                                            this.Width = 668;
                                            dgListView.Columns[0].Width = 50;//select
                                            dgListView.Columns[1].Width = 0;//SrNo
                                            dgListView.Columns[2].Width = 0;//nProblemID
                                            dgListView.Columns[3].Width = 0;//VisitID
                                            dgListView.Columns[4].Width = 120;//dtDOS
                                            dgListView.Columns[5].Width = 0;//dtDischargeDate
                                            dgListView.Columns[6].Width = 200;//Diagnosis
                                            dgListView.Columns[7].Width = 300;//Complaint
                                            dgListView.Columns[8].Width = 50;//Status
                                            dgListView.Columns[9].Width = 0;//Prescription
                                            dgListView.Columns[10].Width = 80;//UserName
                                            dgListView.Columns[11].Width = 0;//ResolvedDt
                                            dgListView.Columns[12].Width = 0;//Comment
                                            dgListView.Columns[13].Width = 0;//nStatus
                                            dgListView.Columns[14].Width = 0;//Immediacy
                                            dgListView.Columns[15].Width = 0;//Comments
                                            dgListView.Columns[16].Width = 0;//nStatus
                                            dgListView.Columns[17].Width = 0;//Provider
                                            dgListView.Columns[18].Width = 0;//Location
                                            dgListView.Columns[19].Width = 0;//ModifiedDate
                                            dgListView.Columns[20].Width = 0;//ExamID
                                            dgListView.Columns[21].Width = 100;//sConceptID
                                            dgListView.Columns[22].Width = 0;//sSnoMedID
                                            dgListView.Columns[23].Width = 0;//sDescriptionID
                                            dgListView.Columns[24].Width = 0;//sDescription
                                            dgListView.Columns[25].Width = 0;//sTransactionID1


                                        }
                                        else
                                        {


                                        }
                                    }
                                    break;
                                case gloListControlType.CarePlanEncounter:
                                    {

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Row#";
                                            dgListView.Columns[2].HeaderText = "Visit Date";
                                            dgListView.Columns[3].HeaderText = "Exam Name";
                                            dgListView.Columns[4].HeaderText = "nProviderID";
                                            dgListView.Columns[5].HeaderText = "Provider";
                                            //dgListView.Columns[4].HeaderText = "ProvFirstName";
                                            //dgListView.Columns[5].HeaderText = "ProvMiddleName";
                                            //dgListView.Columns[6].HeaderText = "ProvLastName";
                                            dgListView.Columns[6].HeaderText = "Suffix";
                                            dgListView.Columns[7].HeaderText = "NPI";
                                            dgListView.Columns[8].HeaderText = "ProvAddress";
                                            dgListView.Columns[9].HeaderText = "ProvStreet";
                                            dgListView.Columns[10].HeaderText = "ProvCity";
                                            dgListView.Columns[11].HeaderText = "ProvState";
                                            dgListView.Columns[12].HeaderText = "ProvZIP";
                                            dgListView.Columns[13].HeaderText = "Phone No";
                                            dgListView.Columns[14].HeaderText = "nExamID";
                                            dgListView.Columns[15].HeaderText = "Location";
                                            dgListView.Columns[16].HeaderText = "ProvPrefix";


                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            Visible = true;
                                            dgListView.Columns[1].Visible = false;//Row#
                                            dgListView.Columns[2].Visible = true;//dtVisitDate
                                            dgListView.Columns[3].Visible = true;//sExamName
                                            dgListView.Columns[4].Visible = false;//nProviderID
                                            dgListView.Columns[5].Visible = true;//Provider
                                            dgListView.Columns[6].Visible = true;//ProvSuffix
                                            dgListView.Columns[7].Visible = true;//ProvNPI
                                            dgListView.Columns[8].Visible = false;//ProvAddress
                                            dgListView.Columns[9].Visible = false;//ProvStreet
                                            dgListView.Columns[10].Visible = false;//ProvCity
                                            dgListView.Columns[11].Visible = false;//ProvState
                                            dgListView.Columns[12].Visible = false;//ProvZIP
                                            dgListView.Columns[13].Visible = true;//ProvPhNo
                                            dgListView.Columns[14].Visible = false;//nExamID
                                            dgListView.Columns[15].Visible = true;//sLocation
                                            dgListView.Columns[16].Visible = false;//ProvPrefix


                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[1].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[3].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[4].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[5].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[6].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[7].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[8].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[9].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[10].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[11].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[12].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[13].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[14].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[15].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[16].SortMode = DataGridViewColumnSortMode.NotSortable;
                                          


                                            dgListView.ScrollBars = ScrollBars.None;
                                            this.Width = 668;
                                            dgListView.Columns[0].Width = 50;//Select
                                            dgListView.Columns[1].Width = 0;//Row#
                                            dgListView.Columns[2].Width = 120;//dtVisitDate
                                            dgListView.Columns[3].Width = 200;//sExamName
                                            dgListView.Columns[4].Width = 0;//nProviderID
                                            dgListView.Columns[5].Width = 100;//Provider
                                            dgListView.Columns[6].Width = 50;//ProvSuffix
                                            dgListView.Columns[7].Width = 80;//ProvNPI
                                            dgListView.Columns[8].Width = 0;//ProvAddress
                                            dgListView.Columns[9].Width =0;//ProvStreet
                                            dgListView.Columns[10].Width = 0;//ProvCity
                                            dgListView.Columns[11].Width = 0;//ProvState
                                            dgListView.Columns[12].Width = 0;//ProvZIP
                                            dgListView.Columns[13].Width = 80;//ProvPhNo
                                            dgListView.Columns[14].Width = 0;//nExamID
                                            dgListView.Columns[15].Width = 100;//sLocation
                                            dgListView.Columns[16].Width = 0;//ProvPrefix
                                      
                                            
                                           
                                        }
                                        else
                                        {
                                           

                                        }
                                    }
                                    break;
                                case gloListControlType.CarePlanImmunization:
                                    {

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";//im_trn_Trans_Id
                                            dgListView.Columns[2].HeaderText = "Vaccine Given";//VaccDateGiven
                                            dgListView.Columns[3].HeaderText = "Vaccine Name";
                                            dgListView.Columns[4].HeaderText = "Code";
                                            dgListView.Columns[5].HeaderText = "Route";
                                            dgListView.Columns[6].HeaderText = "im_trn_Dategiven";
                                            dgListView.Columns[7].HeaderText = "Status";//Imm_Status
                                            dgListView.Columns[8].HeaderText = "Lot Number";
                                            dgListView.Columns[9].HeaderText = "Manufacturer";
                                            dgListView.Columns[10].HeaderText = "RouteCode";


                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            Visible = true;
                                            dgListView.Columns[1].Visible = false;//Id
                                            dgListView.Columns[2].Visible = true;//VaccDateGiven
                                            dgListView.Columns[3].Visible = true;//VaccName
                                            dgListView.Columns[4].Visible = true;//VaccCode
                                            dgListView.Columns[5].Visible = true;//VacRoute
                                            dgListView.Columns[6].Visible = false;//im_trn_Dategiven
                                            dgListView.Columns[7].Visible = true;//Imm_Status
                                            dgListView.Columns[8].Visible = true;//LotNumber
                                            dgListView.Columns[9].Visible = true;//Manufacturer
                                            dgListView.Columns[10].Visible = false;//RouteCode


                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[1].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[3].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[4].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[5].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[6].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[7].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[8].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[9].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[10].SortMode = DataGridViewColumnSortMode.NotSortable;


                                            dgListView.ScrollBars = ScrollBars.None;
                                            this.Width = 668;
                                            dgListView.Columns[0].Width = 50;
                                            dgListView.Columns[1].Width = 100;
                                            dgListView.Columns[2].Width = 100;
                                            dgListView.Columns[3].Width = 150;
                                            dgListView.Columns[4].Width = 50;
                                            dgListView.Columns[5].Width = 80;
                                            dgListView.Columns[6].Width = 0;
                                            dgListView.Columns[7].Width = 80;
                                            dgListView.Columns[8].Width = 100;
                                            dgListView.Columns[9].Width = 200;
                                            dgListView.Columns[10].Width = 100;
                      


                                        }
                                        else
                                        {
                                          

                                        }
                                    }
                                    break;
                                case gloListControlType.CarePlanEducation:
                                    {

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";//nEducationID
                                            dgListView.Columns[2].HeaderText = "Visit Date";
                                            dgListView.Columns[3].HeaderText = "Education";//sTemplateName
                                     


                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            Visible = true;
                                            dgListView.Columns[1].Visible = false;//Id
                                            dgListView.Columns[2].Visible = true;//VisitDate
                                            dgListView.Columns[3].Visible = true;//sTemplateName
                 
                                           


                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[1].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[3].SortMode = DataGridViewColumnSortMode.NotSortable;
                         


                                            dgListView.ScrollBars = ScrollBars.None;
                                            this.Width = 668;
                                            dgListView.Columns[0].Width = 50;
                                            dgListView.Columns[1].Width = 0;
                                            dgListView.Columns[2].Width = 100;
                                            dgListView.Columns[3].Width = 300;
                           



                                        }
                                        else
                                        {


                                        }
                                    }
                                    break;
                                case gloListControlType.CarePlanNutrition:
                                    {

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";//nID
                                            dgListView.Columns[2].HeaderText = "Name";//sCodeSystemName
                                            dgListView.Columns[3].HeaderText = "sCodeSystem";
                                            dgListView.Columns[4].HeaderText = "sCode";
                                            dgListView.Columns[5].HeaderText = "sDisplayName";
                                            dgListView.Columns[6].HeaderText = "Name";
                                            dgListView.Columns[7].HeaderText = "Code";
                                            dgListView.Columns[8].HeaderText = "sUnit";
                                          



                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            Visible = true;
                                            dgListView.Columns[1].Visible = false;//Id
                                            dgListView.Columns[2].Visible = false;//sCodeSystemName
                                            dgListView.Columns[3].Visible = false;//sCodeSystem
                                            dgListView.Columns[4].Visible = false;//sCode
                                            dgListView.Columns[5].Visible = false;//sDisplayName
                                            dgListView.Columns[6].Visible = true;//sEMRDisplayName
                                            dgListView.Columns[7].Visible = true;//sEMRCode
                                            dgListView.Columns[8].Visible = false;//sUnit




                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[1].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[3].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[4].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[5].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[6].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[7].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[8].SortMode = DataGridViewColumnSortMode.NotSortable;



                                            dgListView.ScrollBars = ScrollBars.None;
                                            this.Width = 668;
                                            dgListView.Columns[0].Width = 50;//Select
                                            dgListView.Columns[1].Width = 0;//Id
                                            dgListView.Columns[2].Width = 0;//sCodeSystemName
                                            dgListView.Columns[3].Width = 0;//sCodeSystem
                                            dgListView.Columns[4].Width = 0;//sCode
                                            dgListView.Columns[5].Width = 0;//sDisplayName
                                            dgListView.Columns[6].Width = 300;//sEMRDisplayName
                                            dgListView.Columns[7].Width = 100;//sEMRCode
                                            dgListView.Columns[8].Width = 0;//sUnit

                                        }
                                        else
                                        {


                                        }
                                    }
                                    break;
                                case gloListControlType.CarePlanLabOrder:
                                    {

                                        if (_ismultiselect == true)
                                        {
                                            #region "Old Lab grid"
                                            //dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            //dgListView.Columns[0].HeaderText = "Select";
                                            //dgListView.Columns[1].HeaderText = "Id";//labom_OrderID
                                            //dgListView.Columns[2].HeaderText = "labotd_TestID";
                                            //dgListView.Columns[3].HeaderText = "labotd_TestName";
                                            //dgListView.Columns[4].HeaderText = "labom_ProviderName";
                                            //dgListView.Columns[5].HeaderText = "labom_OrderNoID";
                                            //dgListView.Columns[6].HeaderText = "labom_TransactionDate";





                                            //if (dgListView.Columns.Contains("check1") == true)
                                            //{
                                            //    dgListView.Columns["check1"].Visible = false;
                                            //}
                                            //Visible = true;
                                            //dgListView.Columns[1].Visible = false;//Id
                                            //dgListView.Columns[2].Visible = false;//labotd_TestID
                                            //dgListView.Columns[3].Visible = true;//labotd_TestName
                                            //dgListView.Columns[4].Visible = true;//labom_ProviderName
                                            //dgListView.Columns[5].Visible = true;//labom_OrderNoID
                                            //dgListView.Columns[6].Visible = true;//labom_TransactionDate

                                            //dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            //dgListView.Columns[1].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            //dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            //dgListView.Columns[3].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            //dgListView.Columns[4].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            //dgListView.Columns[5].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            //dgListView.Columns[6].SortMode = DataGridViewColumnSortMode.NotSortable;

                                            //dgListView.ScrollBars = ScrollBars.None;
                                            //this.Width = 668;
                                            //dgListView.Columns[0].Width = 50;
                                            //dgListView.Columns[1].Width = 100;
                                            //dgListView.Columns[2].Width = 100;
                                            //dgListView.Columns[3].Width = 100;
                                            //dgListView.Columns[4].Width = 100;
                                            //dgListView.Columns[5].Width = 100;
                                            //dgListView.Columns[6].Width = 100;
                                            #endregion

                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";//labotd_TestID
                                            dgListView.Columns[2].HeaderText = "labom_OrderID";//labom_OrderID
                                            dgListView.Columns[3].HeaderText = "Name";//labotd_TestName
                                            dgListView.Columns[4].HeaderText = "Order Date";//labom_OrderDate
                                            dgListView.Columns[5].HeaderText = "Order No";//labom_ordernoid
                                            dgListView.Columns[6].HeaderText = "OrderStatusNumber";//OrderStatusNumber
                                            dgListView.Columns[7].HeaderText = "labom_providerid";//labom_providerid
                                            dgListView.Columns[8].HeaderText = "LOINC Code";//labotd_LOINCCode





                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            Visible = true;
                                            dgListView.Columns[1].Visible = false;//Id
                                            dgListView.Columns[2].Visible = false;//labom_OrderID
                                            dgListView.Columns[3].Visible = true;//labotd_TestName
                                            dgListView.Columns[4].Visible = true;//labom_OrderDate
                                            dgListView.Columns[5].Visible = true;//labom_ordernoid
                                            dgListView.Columns[6].Visible = false;//OrderStatusNumber
                                            dgListView.Columns[7].Visible = false;//labom_providerid
                                            dgListView.Columns[8].Visible = true;//labotd_LOINCCode

                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[1].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[3].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[4].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[5].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[6].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[7].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[8].SortMode = DataGridViewColumnSortMode.NotSortable;

                                            dgListView.ScrollBars = ScrollBars.None;
                                            this.Width = 668;
                                            dgListView.Columns[0].Width = 50;//Select
                                            dgListView.Columns[1].Width = 0;//Id
                                            dgListView.Columns[2].Width = 0;//labom_OrderID
                                            dgListView.Columns[3].Width = 180;//labotd_TestName
                                            dgListView.Columns[4].Width = 120;//labom_OrderDate
                                            dgListView.Columns[5].Width = 80;//labom_ordernoid
                                            dgListView.Columns[6].Width = 0;//OrderStatusNumber
                                            dgListView.Columns[7].Width = 0;//labom_providerid
                                            dgListView.Columns[8].Width = 100;//labotd_LOINCCode
                                   

                                        }
                                        else
                                        {


                                        }
                                    }
                                    break;
                                case gloListControlType.CarePlanGoals:
                                    {

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";//nGoalID
                                            dgListView.Columns[2].HeaderText = "Name";
                                            dgListView.Columns[3].HeaderText = "Goal Notes";
                                            dgListView.Columns[4].HeaderText = "nPatientId";
                                            dgListView.Columns[5].HeaderText = "LoincCode";
                                            dgListView.Columns[6].HeaderText = "Description";
                                            dgListView.Columns[7].HeaderText = "Value";
                                            dgListView.Columns[8].HeaderText = "Unit";
                                            dgListView.Columns[9].HeaderText = "Date";
                                            dgListView.Columns[10].HeaderText = "Author";
                                            dgListView.Columns[11].HeaderText = "nProviderId";
                                            dgListView.Columns[12].HeaderText = "Username";
                                            dgListView.Columns[13].HeaderText = "nUserId";


                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns["check1"].Visible = false;
                                            }
                                            Visible = true;
                                            dgListView.Columns[1].Visible = false;//Id
                                            dgListView.Columns[2].Visible = true;//sGoalName
                                            dgListView.Columns[3].Visible = true;//sGoalNotes
                                            dgListView.Columns[4].Visible = false;//nPatientId
                                            dgListView.Columns[5].Visible = true;//sGoalLoincCode
                                            dgListView.Columns[6].Visible = true;//sGoalLoincDescription
                                            dgListView.Columns[7].Visible = true;//sGoalValue
                                            dgListView.Columns[8].Visible = true;//sGoalUnit
                                            dgListView.Columns[9].Visible = true;//dtGoalRecordedDate
                                            dgListView.Columns[10].Visible = true;//sGoalAuthor
                                            dgListView.Columns[11].Visible = false;//nProviderId
                                            dgListView.Columns[12].Visible = true;//sUsername
                                            dgListView.Columns[13].Visible = false;//nUserId

                                            dgListView.Columns[0].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[1].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[2].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[3].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[4].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[5].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[6].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[7].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[8].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[9].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[10].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[11].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[12].SortMode = DataGridViewColumnSortMode.NotSortable;
                                            dgListView.Columns[13].SortMode = DataGridViewColumnSortMode.NotSortable;

                                            dgListView.ScrollBars = ScrollBars.None;
                                            this.Width = 668;
                                            dgListView.Columns[0].Width = 50;//Select
                                            dgListView.Columns[1].Width = 0;//Id
                                            dgListView.Columns[2].Width = 70;//sGoalName
                                            dgListView.Columns[3].Width = 200;//sGoalNotes
                                            dgListView.Columns[4].Width = 0;//nPatientId
                                            dgListView.Columns[5].Width = 70;//sGoalLoincCode
                                            dgListView.Columns[6].Width = 200;//sGoalLoincDescription
                                            dgListView.Columns[7].Width = 50;//sGoalValue
                                            dgListView.Columns[8].Width = 80;//sGoalUnit
                                            dgListView.Columns[9].Width = 130;//dtGoalRecordedDate
                                            dgListView.Columns[10].Width = 60;//sGoalAuthor
                                            dgListView.Columns[11].Width = 0;//nProviderId
                                            dgListView.Columns[12].Width = 70;//sUsername
                                            dgListView.Columns[13].Width = 0;//nUserId
                                            
                                        }
                                        else
                                        {


                                        }
                                    }
                                    break;
                                case gloListControlType.BillingQuickNotes:
                                    {

                                        dgListView.Columns[0].HeaderText = "Id";
                                        dgListView.Columns[1].HeaderText = "Notes";
                                        dgListView.Columns[2].HeaderText = "Note Type";
                                        dgListView.Columns[0].Visible = false;
                                        dgListView.Columns[1].Visible = true;
                                        dgListView.Columns[2].Visible = false;
                                        dgListView.Columns[0].Width = 0;
                                        dgListView.Columns[2].Width = 0;
                                        dgListView.Columns[1].MinimumWidth = this.Width;
                                        dgListView.Columns[1].AutoSizeMode = DataGridViewAutoSizeColumnMode.Fill;
                                        dgListView.Columns[1].DefaultCellStyle.WrapMode = DataGridViewTriState.True;
                                        dgListView.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells;

                                    }
                                    break;

                                case gloListControlType.ReasonCode:
                                    {
                                        if (_ismultiselect)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "ReasonID";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";
                                            dgListView.Columns[4].HeaderText = "Type";

                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = false;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[5].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[1].Width = 0;
                                            dgListView.Columns[5].Width = 0;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 1;
                                            dgListView.Columns[3].Width = _width * 8;

                                            dgListView.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells;
                                        }
                                        else
                                        {
                                            
                                            dgListView.Columns[0].HeaderText = "ReasonID";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";
                                            dgListView.Columns[3].HeaderText = "Type";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = false;


                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[0].Width = 0;
                                            dgListView.Columns[1].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 8;
                                            dgListView.Columns[3].Width = 0;

                                            dgListView.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells;
                                        }
                                    }
                                    break;
                                case gloListControlType.RemarkCode:
                                    {

                                        dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                        dgListView.Columns[0].HeaderText = "Select";
                                        dgListView.Columns[1].HeaderText = "RemarkID";
                                        dgListView.Columns[2].HeaderText = "Code";
                                        dgListView.Columns[3].HeaderText = "Desription";
                                        dgListView.Columns[4].HeaderText = "Type";

                                        dgListView.Columns[1].Visible = false;
                                        dgListView.Columns[0].Visible = true;
                                        dgListView.Columns[2].Visible = true;
                                        dgListView.Columns[3].Visible = true;
                                        dgListView.Columns[4].Visible = true;
                                        if (dgListView.Columns.Contains("check1") == true)
                                        {
                                            dgListView.Columns[5].Visible = false;
                                        }
                                        int _width = (_thiswidth - 17) / 10;

                                        dgListView.Columns[1].Width = 0;
                                        dgListView.Columns[0].Width = _width * 1;
                                        dgListView.Columns[2].Width = _width * 1;
                                        dgListView.Columns[3].Width = _width * 8;
                                        if (dgListView.Columns.Contains("check1") == true)
                                        {
                                            dgListView.Columns[4].Visible = false;
                                        }

                                        //dgListView.Columns[1].MinimumWidth = this.Width;
                                        //dgListView.Columns[1].AutoSizeMode = DataGridViewAutoSizeColumnMode.Fill;
                                        //dgListView.Columns[1].DefaultCellStyle.WrapMode = DataGridViewTriState.True;
                                        dgListView.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells;

                                    }
                                    break;
                                case gloListControlType.ApptSelectedCols:
                                    {
                                        if (dgListView.ColumnCount != 4)
                                        {
                                            DataGridViewCheckBoxColumn dgcheckboxcolumn = new DataGridViewCheckBoxColumn(false);
                                            dgListView.Columns.Insert(0, dgcheckboxcolumn);
                                        }

                                        dgListView.Columns[0].HeaderText = "Select";
                                        dgListView.Columns[1].HeaderText = "ID";
                                        dgListView.Columns[2].HeaderText = "Column";
                                        //dgListView.Columns[3].HeaderText = "Code";



                                        dgListView.Columns[0].Visible = true;
                                        dgListView.Columns[1].Visible = false;
                                        dgListView.Columns[2].Visible = true;
                                        //dgListView.Columns[3].Visible = true;
                                        //dgListView.Columns[4].Visible = false;

                                        if (dgListView.Columns.Contains("Check1") == true)
                                        {
                                            dgListView.Columns[3].Visible = false;
                                        }

                                        dgListView.Columns[0].Width = 20;
                                        dgListView.Columns[1].Width = 0;
                                        dgListView.Columns[2].Width = 600;
                                        //dgListView.Columns[4].Width = 0;

                                        dgListView.DataSource = _dvList;

                                        if (_dvList != null && _dvList.Table != null && _ismultiselect == true)
                                        {
                                            if (_dvList.Table.Rows.Count > 0)
                                            {

                                                try
                                                {
                                                    for (int Count = 0; Count < dgListView.Rows.Count; Count++)
                                                    {
                                                        dgListView.CommitEdit(DataGridViewDataErrorContexts.Display);
                                                        DataRow rw = _dvList.Table.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                                        if (rw != null)
                                                        {
                                                            if (Convert.ToInt32(rw["Check1"]) != 0)
                                                            {
                                                                dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check1"]);
                                                            }
                                                        }
                                                        if (_ListControlType == gloListControlType.ApptSelectedCols)
                                                        {
                                                            DataRow dr = dtSelected.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                                            if (dr != null)
                                                            {

                                                                dgListView.Rows[Count].Cells[0].Value = 1;

                                                            }
                                                        }
                                                    }

                                                }
                                                catch //(Exception ex)
                                                {
                                                }
                                            }
                                        }


                                    }
                                    break;
                                case gloListControlType.MUCQMRefusedCode:
                                    {
                                        dgListView.Columns[0].HeaderText = "ID";
                                        dgListView.Columns[1].HeaderText = "Code";
                                        dgListView.Columns[2].HeaderText = "Description";

                                        dgListView.Columns[0].Visible = false;
                                        dgListView.Columns[1].Visible = true;
                                        dgListView.Columns[2].Visible = true;

                                        int _width = (_thiswidth - 17) / 5;
                                        dgListView.Columns[1].Width = _width * 2;
                                        dgListView.Columns[2].Width = _width * 3;
                                    }
                                    break;
                                case gloListControlType.TagSnomed:
                                    {

                                        dgListView.Columns[0].HeaderText = "ID";
                                        dgListView.Columns[1].HeaderText = "Code";
                                        dgListView.Columns[2].HeaderText = "Description";

                                        dgListView.Columns[0].Visible = false;
                                        dgListView.Columns[1].Visible = true;
                                        dgListView.Columns[2].Visible = true;

                                        int _width = (_thiswidth - 17) / 5;
                                        dgListView.Columns[1].Width = _width * 2;
                                        dgListView.Columns[2].Width = _width * 3;
                                    }
                                    break;

                                case gloListControlType.CQMCategoriesValueSet:
                                    {

                                        dgListView.Columns[0].HeaderText = "ID";
                                        dgListView.Columns[2].HeaderText = "Code";
                                        dgListView.Columns[1].HeaderText = "Description";


                                        dgListView.Columns[0].Visible = false;
                                        dgListView.Columns[1].Visible = true;
                                        dgListView.Columns[2].Visible = true;

                                        int _width = (_thiswidth - 17) / 5;
                                        dgListView.Columns[1].Width = _width * 2;
                                        dgListView.Columns[2].Width = _width * 3;
                                    }
                                    break;


                                case gloListControlType.ConceptID:
                                    {

                                        dgListView.Columns[0].HeaderText = "ID";

                                        dgListView.Columns[1].HeaderText = "Code";
                                        dgListView.Columns[2].HeaderText = "Description";


                                        dgListView.Columns[0].Visible = false;
                                        dgListView.Columns[1].Visible = true;
                                        dgListView.Columns[2].Visible = true;

                                        int _width = (_thiswidth - 17) / 5;
                                        dgListView.Columns[1].Width = _width * 2;
                                        dgListView.Columns[2].Width = _width * 3;
                                    }
                                    break;

                                case gloListControlType.CarePlanLoincs:
                                    {

                                        //dgListView.Columns[0].HeaderText = "ID";

                                        //dgListView.Columns[1].HeaderText = "Code";
                                        //dgListView.Columns[2].HeaderText = "Description";


                                        //dgListView.Columns[0].Visible = false;
                                        //dgListView.Columns[1].Visible = true;
                                        //dgListView.Columns[2].Visible = true;

                                        //int _width = (_thiswidth - 17) / 5;
                                        //dgListView.Columns[1].Width = _width * 2;
                                        //dgListView.Columns[2].Width = _width * 3;


                                        dgListView.Columns[0].HeaderText = "Code";
                                        dgListView.Columns[1].HeaderText = "Description";
                                        dgListView.Columns[2].HeaderText = "ShortDesc";
                                        dgListView.Columns[3].HeaderText = "Description";//LongDesc coloumn of table
                                        dgListView.Columns[4].HeaderText = "ExampleUnits";
                                        dgListView.Columns[5].HeaderText = "ExampleUCUMUnits";
                                        dgListView.Columns[6].HeaderText = "ExapmleSIUCUMUnits";
                                        dgListView.Columns[7].HeaderText = "UnitsAndRange";

                                        dgListView.Columns[0].Visible = true;
                                        dgListView.Columns[1].Visible = false;
                                        dgListView.Columns[2].Visible = false;
                                        dgListView.Columns[3].Visible = true;
                                        dgListView.Columns[4].Visible = false;
                                        dgListView.Columns[5].Visible = false;
                                        dgListView.Columns[6].Visible = false;
                                        dgListView.Columns[7].Visible = false;

                                        int _width = (_thiswidth - 17) / 10;

                                        dgListView.Columns[0].Width = _width * 1; 
                                        dgListView.Columns[1].Width = 0;
                                        dgListView.Columns[2].Width = 0;
                                        dgListView.Columns[3].Width = _width * 10; 
                                        dgListView.Columns[4].Width = 0;
                                        dgListView.Columns[5].Width = 0;
                                        dgListView.Columns[6].Width = 0;
                                        dgListView.Columns[7].Width = 0;
                                    }
                                    break;



                                default:
                                    {
                                    }
                                    break;
                            }
                        }

                        else if (_dtInputTable != null && _dtInputTable.Rows.Count > 0)
                        {// IF INPUT TABLE HAS SOME ROCORDS IN IT THEN BIND IT TO GRID AND DESIGN //
                            switch (_ListControlType)
                            {
                                case gloListControlType.Insurance:
                                    {
                                        lblSearch.Text = "Search :";

                                        _dvList = _dtInputTable.DefaultView;
                                        _dvList.Sort = "sName";
                                        dgListView.DataSource = _dvList;

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "PhysicianName";
                                            dgListView.Columns[3].HeaderText = "LastName";
                                            dgListView.Columns[4].HeaderText = "Insurance Plan";
                                            dgListView.Columns[5].HeaderText = "Insurance Company";
                                            dgListView.Columns[6].HeaderText = "Reporting Category";
                                            dgListView.Columns[7].HeaderText = "Plan Type";
                                            dgListView.Columns[8].HeaderText = "Gender";
                                            dgListView.Columns[9].HeaderText = "Address 1";
                                            dgListView.Columns[10].HeaderText = "Address 2";
                                            dgListView.Columns[11].HeaderText = "City";
                                            dgListView.Columns[12].HeaderText = "State";
                                            dgListView.Columns[13].HeaderText = "Zip";
                                            dgListView.Columns[14].HeaderText = "Contact";
                                            dgListView.Columns[15].HeaderText = "Phone";
                                            dgListView.Columns[16].HeaderText = "Fax";
                                            dgListView.Columns[17].HeaderText = "Mobile";
                                            dgListView.Columns[18].HeaderText = "Email";
                                            dgListView.Columns[19].HeaderText = "InsuranceTypeCode";

                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[3].Visible = false;
                                            dgListView.Columns[8].Visible = false;
                                            dgListView.Columns[17].Visible = false;
                                            dgListView.Columns[19].Visible = false;

                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[0].Width = (_width * 1) - 10;
                                            dgListView.Columns[4].Width = _width * 4;
                                            dgListView.Columns[5].Width = (_width * 3) - 30;
                                            dgListView.Columns[6].Width = (_width * 3) - 30;
                                            dgListView.Columns[7].Width = (_width * 3) - 30;
                                            dgListView.Columns[9].Width = _width * 3;
                                            dgListView.Columns[10].Width = _width * 3;
                                            dgListView.Columns[11].Width = (_width * 2) - 20;
                                            dgListView.Columns[12].Width = (_width * 1) - 10;
                                            dgListView.Columns[13].Width = (_width * 2) - 30;
                                            dgListView.Columns[14].Width = _width * 2;
                                            dgListView.Columns[15].Width = (_width * 2) - 30;
                                            dgListView.Columns[16].Width = (_width * 2) - 30;
                                            dgListView.Columns[18].Width = (_width * 2);
                                        }
                                        break;
                                    }
                            }
                        }
                        else if (_ListControlType == gloListControlType.PaymentType)
                        {

                            dgListView.Refresh();
                        }
                        else if (_ListControlType == gloListControlType.Referrals)
                        {
                            if (_ismultiselect == true)
                            {
                                dgListView.DataSource = _dtList;

                                DataGridViewCheckBoxColumn dgcheckboxcolumn = new DataGridViewCheckBoxColumn(false);
                                dgListView.Columns.Insert(0, dgcheckboxcolumn);
                                dgListView.Columns[0].HeaderText = "Select";
                                dgListView.Columns[1].HeaderText = "Id";
                                dgListView.Columns[2].HeaderText = "Prefix";
                                dgListView.Columns[3].HeaderText = "First Name";
                                dgListView.Columns[4].HeaderText = "Middle Name";
                                dgListView.Columns[5].HeaderText = "Last Name";
                                dgListView.Columns[6].HeaderText = "Suffix";
                                dgListView.Columns[7].HeaderText = "Addr 1";
                                dgListView.Columns[8].HeaderText = "Addr 2";
                                dgListView.Columns[9].HeaderText = "City";
                                dgListView.Columns[10].HeaderText = "State";
                                dgListView.Columns[11].HeaderText = "Zip";
                                dgListView.Columns[12].HeaderText = "NPI";


                                dgListView.Columns[0].Visible = true;
                                dgListView.Columns[1].Visible = false;
                                dgListView.Columns[2].Visible = true;
                                dgListView.Columns[3].Visible = true;
                                dgListView.Columns[4].Visible = true;
                                dgListView.Columns[5].Visible = true;
                                dgListView.Columns[6].Visible = true;
                                dgListView.Columns[7].Visible = true;
                                dgListView.Columns[8].Visible = true;
                                dgListView.Columns[9].Visible = true;
                                dgListView.Columns[10].Visible = true;
                                dgListView.Columns[11].Visible = true;
                                dgListView.Columns[12].Visible = true;

                                int _width;
                                if (_IsTextchanged == true)
                                {
                                    _width = (_thiswidth - 17) / 9;
                                }
                                else
                                {
                                    _width = (_thiswidth - 17) / 11;
                                }
                                dgListView.Columns[0].Width = _width * 1;
                                dgListView.Columns[2].Width = _width * 1;
                                dgListView.Columns[3].Width = _width * 1;
                                dgListView.Columns[4].Width = _width * 1;
                                dgListView.Columns[5].Width = _width * 1;
                                dgListView.Columns[6].Width = _width * 1;
                                dgListView.Columns[7].Width = _width * 1;
                                dgListView.Columns[8].Width = _width * 1;
                                dgListView.Columns[9].Width = _width * 1;
                                dgListView.Columns[10].Width = _width * 1;
                                dgListView.Columns[11].Width = _width * 1;
                                dgListView.Columns[12].Width = _width * 1;
                            }
                            else
                            {
                                if (dgListView.Rows.Count >= 1)
                                {
                                    dgListView.ColumnCount = 11;
                                    dgListView.Columns[0].HeaderText = "Id";
                                    dgListView.Columns[1].HeaderText = "Prefix";
                                    dgListView.Columns[2].HeaderText = "First Name";
                                    dgListView.Columns[3].HeaderText = "Middle Name";
                                    dgListView.Columns[4].HeaderText = "Last Name";
                                    dgListView.Columns[5].HeaderText = "Addr 1";
                                    dgListView.Columns[6].HeaderText = "Addr 2";
                                    dgListView.Columns[7].HeaderText = "City";
                                    dgListView.Columns[8].HeaderText = "State";
                                    dgListView.Columns[9].HeaderText = "Zip";
                                    dgListView.Columns[10].HeaderText = "NPI";

                                    dgListView.Columns[0].Visible = false;
                                    dgListView.Columns[1].Visible = true;
                                    dgListView.Columns[2].Visible = true;
                                    dgListView.Columns[3].Visible = true;
                                    dgListView.Columns[4].Visible = true;
                                    dgListView.Columns[5].Visible = true;
                                    dgListView.Columns[6].Visible = true;
                                    dgListView.Columns[7].Visible = true;
                                    dgListView.Columns[8].Visible = true;
                                    dgListView.Columns[9].Visible = true;
                                    dgListView.Columns[10].Visible = true;

                                    int _width = (_thiswidth - 17) / 9;
                                    dgListView.Columns[0].Width = 0;
                                    dgListView.Columns[2].Width = _width * 1;
                                    dgListView.Columns[3].Width = _width * 1;
                                    dgListView.Columns[4].Width = _width * 1;
                                    dgListView.Columns[5].Width = _width * 1;
                                    dgListView.Columns[6].Width = _width * 1;
                                    dgListView.Columns[7].Width = _width * 1;
                                    dgListView.Columns[8].Width = _width * 1;
                                    dgListView.Columns[9].Width = _width * 1;
                                    dgListView.Columns[10].Width = _width * 1;
                                }
                            }
                        }
                        else if (_ListControlType == gloListControlType.Physicians)
                        {
                            dgListView.DataSource = _dtList;
                            if (_dtList != null)
                            {
                                if (_ismultiselect == true)
                                {
                                    dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                    dgListView.Columns[0].HeaderText = "Select";
                                    dgListView.Columns[1].HeaderText = "Id";
                                    dgListView.Columns[2].HeaderText = "First Name";
                                    dgListView.Columns[3].HeaderText = "Middle Name";
                                    dgListView.Columns[4].HeaderText = "Last Name";
                                    dgListView.Columns[5].HeaderText = "Addr 1";
                                    dgListView.Columns[6].HeaderText = "Addr 2";
                                    dgListView.Columns[7].HeaderText = "City";
                                    dgListView.Columns[8].HeaderText = "State";
                                    dgListView.Columns[9].HeaderText = "Zip";
                                    dgListView.Columns[10].HeaderText = "NPI";

                                    dgListView.Columns[0].Visible = true;
                                    dgListView.Columns[1].Visible = false;
                                    dgListView.Columns[2].Visible = true;
                                    dgListView.Columns[3].Visible = true;
                                    dgListView.Columns[4].Visible = true;
                                    dgListView.Columns[5].Visible = true;
                                    dgListView.Columns[6].Visible = true;
                                    dgListView.Columns[7].Visible = true;
                                    dgListView.Columns[8].Visible = true;
                                    dgListView.Columns[9].Visible = true;
                                    dgListView.Columns[10].Visible = true;

                                    if (dgListView.Columns.Contains("check1") == true)
                                    {
                                        dgListView.Columns[11].Visible = false;
                                    }

                                    dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;      //Dhruv 20100215 ''To set the datagridviewassutosizecolune to none
                                    int _width = (_thiswidth - 17) / 11;

                                    dgListView.Columns[0].Width = _width * 1;
                                    dgListView.Columns[2].Width = _width * 1;
                                    dgListView.Columns[3].Width = _width * 1;
                                    dgListView.Columns[4].Width = _width * 1;
                                    dgListView.Columns[5].Width = _width * 1;
                                    dgListView.Columns[6].Width = _width * 1;
                                    dgListView.Columns[7].Width = _width * 1;
                                    dgListView.Columns[8].Width = _width * 1;
                                    dgListView.Columns[9].Width = _width * 1;
                                    dgListView.Columns[10].Width = _width * 1;
                                }
                                else
                                {
                                    dgListView.Columns[0].HeaderText = "Id";
                                    dgListView.Columns[1].HeaderText = "Prefix";
                                    dgListView.Columns[2].HeaderText = "First Name";
                                    dgListView.Columns[3].HeaderText = "Middle Name";
                                    dgListView.Columns[4].HeaderText = "Last Name";
                                    dgListView.Columns[5].HeaderText = "Suffix";
                                    dgListView.Columns[6].HeaderText = "Addr 1";
                                    dgListView.Columns[7].HeaderText = "Addr 2";
                                    dgListView.Columns[8].HeaderText = "City";
                                    dgListView.Columns[9].HeaderText = "State";
                                    dgListView.Columns[10].HeaderText = "Zip";
                                    dgListView.Columns[11].HeaderText = "NPI";

                                    dgListView.Columns[0].Visible = false;
                                    dgListView.Columns[1].Visible = true;
                                    dgListView.Columns[2].Visible = true;
                                    dgListView.Columns[3].Visible = true;
                                    dgListView.Columns[4].Visible = true;
                                    dgListView.Columns[5].Visible = true;
                                    dgListView.Columns[6].Visible = true;
                                    dgListView.Columns[7].Visible = true;
                                    dgListView.Columns[8].Visible = true;
                                    dgListView.Columns[9].Visible = true;

                                    int _width = (_thiswidth - 17) / 8;
                                    dgListView.Columns[0].Width = 0;
                                    dgListView.Columns[2].Width = _width * 1;
                                    dgListView.Columns[3].Width = _width * 1;
                                    dgListView.Columns[4].Width = _width * 1;
                                    dgListView.Columns[5].Width = _width * 1;
                                    dgListView.Columns[6].Width = _width * 1;
                                    dgListView.Columns[7].Width = _width * 1;
                                    dgListView.Columns[8].Width = _width * 1;
                                    dgListView.Columns[9].Width = _width * 1;
                                }
                            }
                        }
                        else if (_ListControlType == gloListControlType.Patient)
                        {
                            dgListView.ColumnCount = 11;
                            dgListView.Columns[0].HeaderText = "Id";
                            dgListView.Columns[1].HeaderText = "Code";
                            dgListView.Columns[2].HeaderText = "First Name";
                            dgListView.Columns[3].HeaderText = "MI";
                            dgListView.Columns[4].HeaderText = "Last Name";
                            dgListView.Columns[5].HeaderText = "SSN";
                            dgListView.Columns[6].HeaderText = "Provider";
                            dgListView.Columns[7].HeaderText = "DOB";
                            dgListView.Columns[8].HeaderText = "Phone";
                            dgListView.Columns[9].HeaderText = "Mobile";
                            dgListView.Columns[10].HeaderText = "PatientStatus";

                            dgListView.Columns[0].Visible = false;
                            dgListView.Columns[3].Visible = false;
                            dgListView.Columns[5].Visible = false;
                            dgListView.Columns[6].Visible = false;
                            dgListView.Columns[7].Visible = false;
                            dgListView.Columns[8].Visible = false;
                            dgListView.Columns[9].Visible = false;
                            dgListView.Columns[10].Visible = false;

                            if (dgListView.Columns.Contains("check1") == true)
                            {
                                dgListView.Columns[11].Visible = false;
                            }

                            #region "Show Columns as per User patient column Settings"

                            //Get login user ID from appsettings   
                            Int64 _nUserID = 0;
                            if (appSettings["UserID"] != null)
                            {
                                if (appSettings["UserID"] != "")
                                { _nUserID = Convert.ToInt64(appSettings["UserID"]); }
                                else { _nUserID = 0; }
                            }
                            else
                            { _nUserID = 0; }


                            //Get Patient Columns settings for current user.
                            gloSettings.GeneralSettings ogloSettings = new gloSettings.GeneralSettings(_DatabaseConnectionString);
                            object value = null;
                            ogloSettings.GetSetting("Patient Columns", _nUserID, _ClinicID, out value);

                            _strPatientCol = Convert.ToString(value).Trim(); //Sandip Darade 20100428
                            if (value != null && Convert.ToString(value).Trim() != "")
                            {
                                string[] PatientColumns = Convert.ToString(value).Trim().Split(',');
                                for (int j = 0; j < PatientColumns.Length; j++)
                                {

                                    for (int i = 1; i < dgListView.Columns.Count; i++)
                                    {
                                        if (dgListView.Columns[i].HeaderText.Trim() == PatientColumns[j].Trim())
                                        {
                                            dgListView.Columns[i].Visible = true;
                                            break;
                                        }
                                    }
                                }
                            }


                            //Display Index settings
                            ogloSettings.LoadGridColumnDisplayIndex(dgListView, gloSettings.ModuleOfGridColumn.DashBoardPatientList, _nUserID);

                            //Column width settings settings
                            //if (ogloSettings.LoadGridColumnWidth(dgListView, gloSettings.ModuleOfGridColumn.DashBoardPatientList, _nUserID) == false)
                            {
                                try
                                {
                                    dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;

                                    int _width = _thiswidth / 18;
                                    dgListView.Columns[1].Width = _width * 4;
                                    dgListView.Columns[2].Width = _width * 4;
                                    dgListView.Columns[3].Width = _width * 1;
                                    dgListView.Columns[4].Width = _width * 4;
                                    dgListView.Columns[5].Width = _width * 2;
                                    dgListView.Columns[6].Width = _width * 3;
                                    dgListView.Columns[7].Width = _width * 2;
                                    dgListView.Columns[8].Width = _width * 2;
                                    dgListView.Columns[9].Width = _width * 2;
                                }
                                catch (Exception ex)
                                {
                                    ex.ToString();
                                }
                            }
                            #endregion

                            if (_ismultiselect == true)
                            {
                                dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                dgListView.Columns[0].HeaderText = "Select";
                                dgListView.Columns[0].Width = 30;
                            }
                            ogloSettings.Dispose();
                            ogloSettings = null;
                        }


                        else if (_ListControlType == gloListControlType.HistoryOBPhysicalExam)
                        {
                            dgListView.ColumnCount = 3;
                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                            dgListView.Columns[0].HeaderText = "Select";
                            dgListView.Columns[1].HeaderText = "Description";
                            dgListView.Columns[2].HeaderText = "nHistoryDetailsID";
                            dgListView.Columns[0].Visible = true;
                            dgListView.Columns[1].Visible = true;
                            dgListView.Columns[2].Visible = false;
                        }


                        else
                        {
                            dgListView.Refresh();
                        }

                    }
                    catch (gloDatabaseLayer.DBException ex)
                    {
                        ex.ERROR_Log(ex.ToString());
                    }
                    catch (Exception ex)
                    {
                        gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
                    }
                    finally
                    {
                        oDB.Disconnect();
                        oDB.Dispose();
                        oDB = null;
                        oParameters.Dispose();
                        oParameters = null;
                        _sqlQuery = null;
                    }
                }
            }
            else
            {
                DataTable _dtList = new DataTable();

                if ((_dtList != null))
                {
                    _dvList = _dtList.DefaultView;
                    dgListView.DataSource = _dvList;
                }
            }

            _FillInProcess = false;
        }

 
        //public void FillCareplanLoincs()
        //{

        //    if (_DatabaseConnectionString.Trim() != "")
        //    {
                
        //        gloDatabaseLayer.DBLayer oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
        //        gloDatabaseLayer.DBParameters oParameters = new gloDatabaseLayer.DBParameters();
        //        System.Collections.Specialized.NameValueCollection appSettings = System.Configuration.ConfigurationManager.AppSettings;
        //        oDB.Connect(false);
           
        
        //        oDB.Retrive("FillLoincs", out _dtList);

        //        dgListView.ColumnCount = 8;
        //        dgListView.Columns[0].HeaderText = "Code";
        //        dgListView.Columns[1].HeaderText = "Description";
        //        dgListView.Columns[2].HeaderText = "ShortDesc";
        //        dgListView.Columns[3].HeaderText = "LongDesc";
        //        dgListView.Columns[4].HeaderText = "ExampleUnits";
        //        dgListView.Columns[5].HeaderText = "ExampleUCUMUnits";
        //        dgListView.Columns[6].HeaderText = "ExapmleSIUCUMUnits";
        //        dgListView.Columns[7].HeaderText = "UnitsAndRange";


        //        int _width = (_thiswidth - 17) / 5;
        //        dgListView.Columns[0].Width = _width * 2;
        //        dgListView.Columns[1].Width = _width * 3;
            

        //        //_dvList.Sort = "sName";
        //        _dvList = _dtList.DefaultView;
        //        dgListView.DataSource = _dvList;
        //    }
            

        //}
    
        public void FillListAsCriteria1(Int64 ID, Boolean _ismodify)
        {

            _FillInProcess = true;
            DataTable _dtList = null;

            if (_ListControlType != gloListControlType.Other)
            {
                if (_DatabaseConnectionString.Trim() != "")
                {
                    string _sqlQuery = "";
                    gloDatabaseLayer.DBLayer oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
                    gloDatabaseLayer.DBParameters oParameters = new gloDatabaseLayer.DBParameters();
                    System.Collections.Specialized.NameValueCollection appSettings = System.Configuration.ConfigurationManager.AppSettings;
                    oDB.Connect(false);

                    try
                    {
                        switch (_ListControlType)
                        {
                            case gloListControlType.Patient:
                                {
                                    Int64 tempProviderID;
                                    if (appSettings["ProviderID"] != null)
                                    {
                                        if (appSettings["ProviderID"] != "")
                                        { tempProviderID = Convert.ToInt64(appSettings["ProviderID"]); }
                                        else { tempProviderID = 0; }
                                    }
                                    else
                                    { tempProviderID = 0; }

                                    //ADD THE CONDITION FOR MIDDLE NAME WHEHTER IT IS BLANK 20100619
                                    _sqlQuery = " SELECT DISTINCT TOP 1000 Patient.nPatientID AS PatientID,Patient.sPatientCode AS PatientCode,  "
                                    + " Patient.sFirstName as PatientFirstName,ISNULL(Patient.sMiddleName,'') AS PatientMiddleName,Patient.sLastName AS PatientLastName,   "
                                    + " Convert(Varchar(10),Patient.nSSN) AS SSNNo,     "
                                    + " isnull(Provider_MST.sFirstName,'')+space(1)+CASE ISNULL(Provider_MST.sMiddleName,'') WHEN  '' THEN '' When Provider_MST.sMiddleName then "
                                    + "Provider_MST.sMiddleName + SPACE(1) END+isnull(Provider_MST.sLastName,'') AS Provider,    "
                                    + " convert(varchar,Patient.dtDOB,101) as PatientDOB, sPhone as Phone,ISNULL(sMobile,'') AS Mobile,ISNULL(sPatientStatus,'') AS PatientStatus   "
                                    + " FROM Patient LEFT OUTER JOIN Provider_MST ON Patient.nProviderID = Provider_MST.nProviderID ";

                                    String _Condition = "";

                                    //Added by Mukesh 20090829
                                    if (_isExcludeFromStatement == true)
                                    {
                                        if (_Condition == "")
                                        {
                                            _Condition = " WHERE Patient.nPatientID not in (select nPatientID from PatientSettings where svalue='1' and sName='Exclude from Statement') ";
                                        }
                                        else
                                        {
                                            _Condition += " and Patient.nPatientID not in (select nPatientID from PatientSettings where svalue='1' and sName='Exclude from Statement')";
                                        }
                                    }
                                    //

                                    if (ClinicID > 0)
                                    {
                                        if (_Condition == "")
                                        {
                                            _Condition = " WHERE Patient.nClinicID = " + ClinicID + " ";
                                        }
                                        else
                                        {
                                            _Condition += " and Patient.nClinicID = " + ClinicID + " ";
                                        }
                                    }
                                    _sqlQuery = _sqlQuery + _Condition;


                                    // code below added to pull 1000 records only while loading 20100728
                                    #region Gurantor changes
                                    _sqlQuery = _sqlQuery + strfilterForReferral;
                                    #endregion Gurantor changes

                                    _sqlQuery = _sqlQuery + " ORDER BY PatientFirstName,PatientLastName  ";
                                }
                                break;

                            case gloListControlType.AllPatient:
                                {
                                    //ADD THE CONDITION FOR MIDDLE NAME WHEHTER IT IS BLANK 20100619
                                    _sqlQuery = " SELECT DISTINCT Patient.nPatientID AS PatientID,Patient.sPatientCode AS PatientCode,  "
                                    + " Patient.sFirstName as PatientFirstName,ISNULL(Patient.sMiddleName,'') AS PatientMiddleName,Patient.sLastName AS PatientLastName,   "
                                    + " Convert(Varchar(10),Patient.nSSN) AS SSNNo,     "
                                    + " isnull(Provider_MST.sFirstName,'')+space(1)+CASE ISNULL(Provider_MST.sMiddleName,'') WHEN  '' THEN '' When ISNULL(Provider_MST.sMiddleName,'') then "
                                    + "ISNULL(Provider_MST.sMiddleName,'') + SPACE(1) END +isnull(Provider_MST.sLastName,'') AS Provider,    "
                                    + " convert(varchar,Patient.dtDOB,101) as PatientDOB, sPhone as Phone,ISNULL(sMobile,'') AS Mobile,ISNULL(sPatientStatus,'') AS PatientStatus   "
                                    + " FROM Patient LEFT OUTER JOIN Provider_MST ON Patient.nProviderID = Provider_MST.nProviderID ";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " WHERE Patient.nClinicID = " + ClinicID + "  ORDER BY PatientFirstName,PatientLastName ";
                                    }
                                    else
                                    {
                                        _sqlQuery = _sqlQuery + "  ORDER BY PatientFirstName,PatientLastName ";
                                    }

                                }
                                break;

                            //Added By MaheshB For Merge Patient
                            case gloListControlType.ConflictingPatient:
                                {
                                    //ADD THE CONDITION FOR MIDDLE NAME WHEHTER IT IS BLANK 20100619
                                    //modified by Mayuri:20100630-Changed middlename case -To fix bug:2431,2411
                                    _sqlQuery = " SELECT DISTINCT Patient.nPatientID AS PatientID,Patient.sPatientCode AS PatientCode,  "
                                    + " Patient.sFirstName as PatientFirstName,ISNULL(Patient.sMiddleName,'') AS PatientMiddleName,Patient.sLastName AS PatientLastName,   "
                                    + " Convert(Varchar(10),Patient.nSSN) AS SSNNo,     "
                                    + " isnull(Provider_MST.sFirstName,'')+space(1)+CASE ISNULL(Provider_MST.sMiddleName,'') WHEN  '' THEN '' WHEN Provider_MST.sMiddleName THEN "
                                    + "Provider_MST.sMiddleName + SPACE(1) END+isnull(Provider_MST.sLastName,'') AS Provider,    "
                                    + " convert(varchar,Patient.dtDOB,101) as PatientDOB, sPhone as Phone,ISNULL(sMobile,'') AS Mobile,ISNULL(sPatientStatus,'') AS PatientStatus   "
                                    + " FROM Patient LEFT OUTER JOIN Provider_MST ON Patient.nProviderID = Provider_MST.nProviderID "
                                    + " WHERE Patient.nPatientID IN ( "
                                    + " Select nPatientID as PatientID from Patient "
                                    + " where isnull(sFirstName,'')+space(2)+isnull(sMiddleName,'')+space(2)+isnull(sLastName,'') in  "
                                    + " (select isnull(sFirstName,'')+space(2)+isnull(sMiddleName,'')+space(2)+isnull(sLastName,'') "
                                    + " from Patient group by sFirstName,sMiddleName,sLastName   "
                                    + " having count(isnull(sFirstName,'')+space(2)+isnull(sMiddleName,'')+space(2)+isnull(sLastName,'') )>1)  "
                                    + " )";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " and Patient.nClinicID = " + ClinicID + " ";
                                    }
                                    _sqlQuery = _sqlQuery + " Order By PatientLastName ";
                                }
                                break;

                            case gloListControlType.PendingLabPatients:
                                {

                                    //Code added on 13/02/2009 -by Sagar Ghodke to load Pending Lab patients (Ref  Table : HL7_PendingLabOrders);

                                    _sqlQuery = " SELECT DISTINCT Patient.nPatientID AS PatientID, Patient.sPatientCode AS PatientCode, " +
                                    " Patient.sFirstName AS PatientFirstName,  " +
                                    " Patient.sLastName AS PatientLastName, CONVERT(Varchar(10), Patient.nSSN) AS SSNNo, Patient.dtDOB AS PatientDOB " +
                                    " FROM  Patient INNER JOIN " +
                                    " HL7_PendingLabOrders ON Patient.nPatientID = HL7_PendingLabOrders.nPatientID ";
                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " WHERE Patient.nClinicID = " + ClinicID + " ORDER BY Patient.sFirstName";
                                    }
                                    else
                                    {
                                        _sqlQuery = _sqlQuery + " ORDER BY Patient.sFirstName";
                                    }

                                }
                                break;

                            case gloListControlType.Pharmacy:
                                {
                                    _sqlQuery = "SELECT nContactID,ISNULL(sName,'') AS  sName,ISNULL(sPhone,'') AS sPhone , ISNULL(sFax,'') AS sFax ,ISNULL(sAddressLine1,'') AS  sAddressLine1,ISNULL(sAddressLine2,'') AS  sAddressLine2, "
                                    + " ISNULL(sCity,'') AS  sCity, ISNULL(sState,'') AS  sState, ISNULL(sZIP,'') AS   sZIP, sNCPDPID ,CONVERT(bit, case   WHEN  sNCPDPID <> '' then 1 else 0 end )as IsePharmacy  "//sNCPDPID,IsePharmacy field added by Sandip Darade 20100106 for differntiating e-Pharmacys  further 
                                    + " FROM Contacts_MST WHERE (bIsBlocked = 0 OR bIsBlocked Is Null) AND sContactType = 'Pharmacy' ";
                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " AND nClinicID = " + ClinicID + "";
                                    }
                                    _sqlQuery = _sqlQuery + "ORDER BY sName";// 20100527
                                }
                                break;

                            case gloListControlType.Insurance:
                                {
                                    _sqlQuery = " SELECT DISTINCT Contacts_MST.nContactID AS ContactID, ISNULL(Contacts_MST.sFirstName, '') + SPACE(1) +  " +
                                        " ISNULL(Contacts_MST.sMiddleName, '') + SPACE(1) + ISNULL(Contacts_MST.sLastName, '') AS PhysicianName, ISNULL(Contacts_MST.sLastName, '') AS LastName,  " +
                                        " ISNULL(Contacts_MST.sName, '') AS sName,ISNULL(Contacts_InsuranceCompany_MST.sDescription, '') AS Company, " +
                                        " ISNULL(Contacts_InsuranceReportingCategory_MST.sDescription, '') AS ReportingCategory,  " +
                                        " ISNULL(Contacts_Insurance_DTL.sInsuranceTypeDesc, '') AS InsuranceTypeDesc, " +
                                        " ISNULL(Contacts_MST.sGender, '') AS Gender, ISNULL(Contacts_MST.sAddressLine1,'') AS AddressLine1,  " +
                                        " ISNULL(Contacts_MST.sAddressLine2, '') AS AddressLine2, ISNULL(Contacts_MST.sCity, '') AS City, ISNULL(Contacts_MST.sState, '') AS State,  " +
                                        " ISNULL(Contacts_MST.sZIP, '') AS ZIP, ISNULL(Contacts_MST.sContact, '') AS ContactName,  ISNULL(Contacts_MST.sPhone, '') AS Phone,  " +
                                        " ISNULL(Contacts_MST.sFax, '') AS FAX, ISNULL(Contacts_MST.sMobile, '') AS Mobile, ISNULL(Contacts_MST.sEmail, '') AS Email,  " +
                                        " ISNULL(Contacts_Insurance_DTL.sInsuranceTypeCode, '') AS InsuranceTypeCode FROM Contact_InsurancePlanReportingCat_Association  " +
                                        " INNER JOIN Contacts_InsuranceReportingCategory_MST ON Contact_InsurancePlanReportingCat_Association.nReportingCategoryId = Contacts_InsuranceReportingCategory_MST.nID  " +
                                        " RIGHT OUTER JOIN Contacts_MST ON Contact_InsurancePlanReportingCat_Association.nContactId = Contacts_MST.nContactID  " +
                                        " LEFT OUTER JOIN Contacts_InsuranceCompany_MST INNER JOIN Contact_InsurancePlan_Association ON  " +
                                        " Contacts_InsuranceCompany_MST.nID = Contact_InsurancePlan_Association.nCompanyId  " +
                                        " ON Contacts_MST.nContactID = Contact_InsurancePlan_Association.nContactId LEFT OUTER JOIN  " +
                                        " Contacts_Insurance_DTL ON Contacts_MST.nContactID = Contacts_Insurance_DTL.nContactID  " +
                                        " WHERE (ISNULL(Contacts_MST.bIsBlocked, 0) = 0) AND (Contacts_MST.sContactType = 'Insurance')  ";

                                    if (_ShowInsPlansWithoutCompany == true)
                                        _sqlQuery = _sqlQuery + " AND ISNULL(Contacts_InsuranceCompany_MST.sDescription, '') = '' ";

                                    if (_ShowInsPlansWithoutCategories == true)
                                        _sqlQuery = _sqlQuery + " AND ISNULL(Contacts_InsuranceReportingCategory_MST.sDescription, '') = '' ";

                                    if (ClinicID > 0)
                                        _sqlQuery = _sqlQuery + " AND (ISNULL(Contacts_MST.nClinicID, 1) = " + _ClinicID + ")";

                                    _sqlQuery = _sqlQuery + " ORDER BY sName";
                                }
                                break;

                            case gloListControlType.Hospital:
                                {
                                    _sqlQuery = "SELECT nContactID, sName, sContact " +
                                    " FROM Contacts_MST WHERE (bIsBlocked = 0 AND sContactType = 'Hospital')"; // AND nClinicID = " + ClinicID + "";
                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " AND nClinicID = " + ClinicID + "";
                                    }
                                    _sqlQuery = _sqlQuery + "ORDER BY sName"; //20100527
                                }
                                break;

                            case gloListControlType.Physicians:
                                {
                                    //ADDED PREFIX & SUFFIX BY SHUBHANGI 20100609
                                    _sqlQuery = "SELECT TOP 1000  Contacts_MST.nContactID, ISNULL(Contacts_Physician_DTL.sPrefix,'') AS Prefix,ISNULL(Contacts_MST.sFirstName,'') AS sFirstName, ISNULL(Contacts_MST.sMiddleName,'') AS sMiddleName, ISNULL(Contacts_MST.sLastName,'') AS sLastName,ISNULL(Contacts_Physician_DTL.sDegree,'') AS Suffix ,  "
                                                + " ISNULL(Contacts_MST.sGender,'') AS  sGender,ISNULL(Contacts_MST.sAddressLine1,'') AS  sAddressLine1,ISNULL(Contacts_MST.sAddressLine2,'') AS  sAddressLine2,ISNULL(Contacts_MST.sCity,'') AS sCity, ISNULL(Contacts_MST.sState,'') AS sState,  ISNULL(Contacts_MST.sZIP,'') AS sZIP,ISNULL(Contacts_MST.sPhone,'') AS sPhone,ISNULL(Contacts_MST.sFax,'') AS sFax,ISNULL(Contacts_MST.sMobile,'') AS sMobile,ISNULL(Contacts_MST.sEmail,'') AS sEmail,"
                                                + " ISNULL(Contacts_Physician_DTL.sNPI,'') AS sNPI "
                                                + " FROM Contacts_MST LEFT OUTER JOIN Contacts_Physician_DTL ON Contacts_MST.nContactID = Contacts_Physician_DTL.nContactID "
                                                + " WHERE(Contacts_MST.bIsBlocked = 0 OR Contacts_MST.bIsBlocked IS NULL) AND (Contacts_MST.sContactType = 'Physician') ";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " AND Contacts_MST.nClinicID = " + ClinicID + "";
                                    }

                                    if (strfilterForReferral != "")
                                    {

                                        _sqlQuery = _sqlQuery.Replace("SELECT TOP 1000", "SELECT ");
                                        _sqlQuery = _sqlQuery + strfilterForReferral;
                                    }
                                    _sqlQuery = _sqlQuery + "ORDER BY sFirstName,sLastName";

                                }
                                break;

                            case gloListControlType.Referrals:
                                {

                                    //Sandip Darade 20100422
                                    //initially only 1000 records will be pulled from database 
                                    //records will be now pulled as per user search query
                                    //PREFIX & SUFFIX ADDED BY SHUBHANGI 20100609

                                    _sqlQuery = "SELECT TOP 1000 Contacts_MST.nContactID, ISNULL(Contacts_Physician_DTL.sPrefix,'') AS Prefix, ISNULL(Contacts_MST.sFirstName,'') AS sFirstName, ISNULL(Contacts_MST.sMiddleName,'') AS sMiddleName, ISNULL(Contacts_MST.sLastName,'') AS sLastName,ISNULL(Contacts_Physician_DTL.sDegree,'') AS Suffix ,  "
                                   + " ISNULL(Contacts_MST.sAddressLine1,'') AS  sAddressLine1,ISNULL(Contacts_MST.sAddressLine2,'') AS  sAddressLine2,ISNULL(Contacts_MST.sCity,'') AS sCity, ISNULL(Contacts_MST.sState,'') AS sState,  ISNULL(Contacts_MST.sZIP,'') AS sZIP,"
                                   + " ISNULL(Contacts_Physician_DTL.sNPI,'') AS sNPI ,ISNULL(Contacts_MST.sDirectAddress,'') as sDirectAddress,ISNULL(Contacts_MST.sSPI,'') as sSPI,ISNULL(Contacts_MST.sSpecialtytype1,'') AS [Specialty Type1],ISNULL(Contacts_Physician_DTL.sClinicName,'') AS [Clinic Name]"
                                   + " FROM Contacts_MST LEFT OUTER JOIN Contacts_Physician_DTL ON Contacts_MST.nContactID = Contacts_Physician_DTL.nContactID "
                                   + " WHERE(Contacts_MST.bIsBlocked = 0 OR Contacts_MST.bIsBlocked IS NULL) AND (Contacts_MST.sContactType = 'Physician') ";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " AND Contacts_MST.nClinicID = " + ClinicID + "";
                                    }

                                    if (strfilterForReferral != "")
                                    {
                                        _sqlQuery = _sqlQuery.Replace("SELECT TOP 1000", "SELECT ");
                                        _sqlQuery = _sqlQuery + strfilterForReferral;
                                    }

                                    _sqlQuery = _sqlQuery + " ORDER BY sFirstName,sLastName";
                                }
                                break;

                            case gloListControlType.Providers:
                                {
                                    //ADD THE CONDITION FOR MIDDLE NAME WHEHTER IT IS BLANK 20100619
                                    _sqlQuery = " SELECT nProviderID, " +
                                                " ISNULL(sFirstName,''),CASE ISNULL(Provider_MST.sMiddleName,'') WHEN  '' THEN '' When ISNULL(Provider_MST.sMiddleName,'') then " +
                                                "ISNULL(Provider_MST.sMiddleName,'')  END,ISNULL(sLastName,'')," +
                                                " ISNULL(sSuffix,'') From Provider_MST WHERE  bIsblocked='FALSE'";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " AND Provider_MST.nClinicID = " + ClinicID + " ";
                                    }
                                    _sqlQuery = _sqlQuery + "ORDER BY sLastName";
                                }
                                break;

                            case gloListControlType.Resources:
                                {
                                    _sqlQuery = " SELECT AB_Resource_MST.nResourceID, AB_Resource_MST.sCode, AB_Resource_MST.sDescription  " +
                                   " FROM AB_Resource_MST INNER JOIN AB_ResourceType_MST ON AB_Resource_MST.nResourceTypeID = AB_ResourceType_MST.nResourceTypeID " +
                                   " WHERE ((AB_Resource_MST.bitIsBlocked = 0) AND AB_ResourceType_MST.nResourceType <>  1) " +
                                   " AND AB_Resource_MST.nClinicID = " + this.ClinicID + " ";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " AND AB_Resource_MST.nClinicID = " + ClinicID + " ";
                                    }
                                    _sqlQuery = _sqlQuery + "ORDER BY sDescription"; //20100527
                                }
                                break;

                            case gloListControlType.Procedures:
                                {
                                    _sqlQuery = "SELECT nAppointmentTypeID, sAppointmentType,nDuration, sColorCode " +
                                    " FROM AB_AppointmentType WHERE ((bIsBlocked = 0) AND (nAppProcType = 2))"; // AND nClinicID=" + ClinicID + " ";
                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " AND nClinicID=" + ClinicID + " ";
                                    }
                                }
                                break;

                            case gloListControlType.CPT:
                                {
                                    if (_TOSID == 0)
                                    {
                                        _sqlQuery = "SELECT DISTINCT nCPTID,sCPTCode,sDescription FROM CPT_MST WHERE nClinicID = " + _ClinicID + "";
                                    }
                                    else
                                    {
                                        _sqlQuery = "SELECT DISTINCT nCPTID,sCPTCode,sDescription FROM CPT_MST WHERE nClinicID = " + _ClinicID + "";
                                    }
                                    _sqlQuery = _sqlQuery + "ORDER BY sCPTCode"; //20100527
                                }
                                break;
                            case gloListControlType.CPTProcedures:
                                {
                                    gloDatabaseLayer.DBParameters oDBParameters = new gloDatabaseLayer.DBParameters();
                                    oDBParameters.Add("@nPatientId", _PatientID, ParameterDirection.Input, SqlDbType.BigInt);
                                    oDB.Retrive("gsp_getProcedures",oDBParameters, out _dtList);

                                    oDBParameters.Dispose();
                                    oDBParameters = null;
                                }
                                break;
                            case gloListControlType.HistoryLOINC:
                                {
                                   
                                        //_sqlQuery = "SELECT  Min(MUCQMCodesID), [Code],[Description] FROM [dbo].[MUCQMCodes]" +
                                        //      "where QDMCategory='Risk Category/Assessment' or QDMCAtegory='Functional Status' group by [Code],[Description]";

                                    oDB.Retrive("gsp_getcqmhistoryloinccodes", out _dtList);
                                }
                                break;

                            case gloListControlType.CQMCVXCOdes:
                                {

                                    gloDatabaseLayer.DBParameters oDBParameters = new gloDatabaseLayer.DBParameters();
                                    oDBParameters.Add("@CodeSystem", "CVX", ParameterDirection.Input, SqlDbType.NVarChar);
                                    oDB.Retrive("gsp_getCVXCodes", out _dtList);
                                }
                                break;
                            case gloListControlType.Diagnosis:
                                {
                                    _sqlQuery = "SELECT nICD9ID, sICD9Code, sDescription FROM ICD9 where (bIsBlocked IS NULL OR bIsBlocked = '" + false + "')"; //
                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " AND nClinicID = " + ClinicID + "";
                                    }
                                }
                                break;

                            case gloListControlType.Modifier:
                                {
                                    _sqlQuery = "SELECT nModifierID,sModifierCode,sDescription FROM Modifier_MST where (bIsBlocked IS NULL OR bIsBlocked = '" + false + "') ";
                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " AND nClinicID = " + ClinicID + "";
                                    }

                                    _sqlQuery = _sqlQuery + "ORDER BY sModifierCode"; //20100527
                                }
                                break;

                            //Code Added by Sagar Ghodke Date : 05 March 2008
                            case gloListControlType.Users:
                                {
                                    _sqlQuery = "Select nUserID,nProviderID,sLoginName,sFirstName,sMiddleName,sLastName,sEmail,sExchangeLogin from User_MST ";
                                    if (ClinicID > 0)
                                    {
                                        //**.Changes made on 20090325 By - Sagar Ghodke
                                        //**.Changes made to resolve Blocked User Issue for CCHIT 
                                        //Below commented code is previous one
                                        _sqlQuery = _sqlQuery + " where nClinicID =  " + ClinicID + " AND ISNULL(nBlockStatus,'false') <> '" + true + "'";
                                    }
                                    else
                                    {
                                        _sqlQuery = _sqlQuery + " where ISNULL(nBlockStatus,'false') <> '" + true + "'";
                                    }
                                    _sqlQuery = _sqlQuery + "ORDER BY sLoginName";//20100527
                                }
                                break;

                            case gloListControlType.PatientInsurence:
                                {
                                    _sqlQuery = "SELECT DISTINCT nInsuranceID, ISNULL(sInsuranceName,'') AS sInsuranceName FROM  PatientInsurance_DTL "
                                     + " WHERE (nPatientID = " + _PatientID + ") AND (nInsuranceFlag IS NOT NULL AND nInsuranceFlag <> 0 ) "
                                    + " OREDER BY sInsuranceName "; //20100527
                                }
                                break;

                            //20080804
                            case gloListControlType.EMRPatient:
                                {
                                    _sqlQuery = "SELECT ISNULL(Patient.nPatientID,0) AS PatientID, " +
                                                "ISNULL(Patient.sPatientCode,'') AS PatientCode, " +
                                                "ISNULL(Patient.sFirstName,'') AS PatientFirstName, " +
                                                "ISNULL(Patient.sLastName,'') AS PatientLastName, " +
                                                "ISNULL(Patient.nSSN,'') AS SSNNo, " +
                                                "ISNULL(Patient.dtDOB,'') AS PatientDOB " +
                                                "FROM Patient ORDER BY PatientFirstName";
                                }
                                break;

                            case gloListControlType.InsuranceServiceType:
                                {
                                    _sqlQuery = "SELECT  nServiceTypeID, sServiceTypeCode, sServiceTypeDesc, sInsuranceType FROM BL_InsuranceServiceType";
                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " where nClinicID =  " + ClinicID + "";
                                    }
                                }
                                break;

                            //20081110
                            case gloListControlType.Taxonomy:
                                {
                                    _sqlQuery = "SELECT DISTINCT nSpecialtyID,sTaxonomyCode,sTaxonomyDesc,sTaxonomyClassification  FROM Specialty_MST where ISNULL(sTaxonomyCode,'') <>'' AND ISNULL(sTaxonomyDesc,'') <>''";
                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " and nClinicID =  " + ClinicID + " ";
                                    }
                                }
                                break;

                            case gloListControlType.AppointmentType:
                                {
                                    _sqlQuery = "SELECT nAppointmentTypeID, sAppointmentType, nDuration FROM  AB_AppointmentType WHERE nAppProcType = 1 AND (bIsBlocked IS NULL OR bIsBlocked <> 1 ) ";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " AND nClinicID =  " + ClinicID + "";
                                    }
                                }
                                break;

                            case gloListControlType.AllPatientInsurances:
                                {
                                    _sqlQuery = "SELECT distinct Contacts_MST.nContactID, Contacts_MST.sName FROM Contacts_MST INNER JOIN PatientInsurance_DTL ON Contacts_MST.nContactID = PatientInsurance_DTL.nContactID ORDER BY Contacts_MST.sName";
                                }
                                break;

                            case gloListControlType.PreferredLab:
                                {
                                    //1 is valur for gloEMRActors.LabActor.enumContactType.PreferredLab
                                    _sqlQuery = "select labci_Id AS ContactID, labci_ContactName AS ContactName from Lab_ContactInfo where labci_Type = 1  AND labci_Id IS NOT NULL";
                                }
                                break;

                            case gloListControlType.Facility:
                                {
                                    _sqlQuery = " SELECT nFacilityID,sFacilityCode,sFacilityName "
                                              + " FROM   BL_Facility_MST WHERE bIsBlocked = '" + false + "' AND nClinicID = " + this.ClinicID + " order by sFacilityName";
                                }
                                break;

                            case gloListControlType.ChargeTray:
                                {
                                    Int64 nUserID = 0;
                                    if (appSettings["UserID"] != null)
                                    {
                                        if (appSettings["UserID"] != "")
                                        {
                                            nUserID = Convert.ToInt64(appSettings["UserID"]);
                                        }
                                    }
                                    if (_isFilterPaymentTray)
                                    {
                                        _sqlQuery = " SELECT nChargeTrayID,sCode,sDescription,User_MST.sLoginName,Case when isnull(bIsActive,1) = 0 Then 'InActive' else ''  end as bIsActive  FROM  BL_ChargesTray left outer JOIN User_MST ON BL_ChargesTray.nUserID = User_MST.nUserID Where BL_ChargesTray.nClinicID = " + _ClinicID + "  And BL_ChargesTray.nUserID = " + nUserID + "";
                                    }
                                    else
                                    {
                                        _sqlQuery = " SELECT nChargeTrayID,sCode,sDescription,User_MST.sLoginName,Case when isnull(bIsActive,1) = 0 Then 'InActive' else ''  end as bIsActive FROM  BL_ChargesTray left outer JOIN User_MST ON BL_ChargesTray.nUserID = User_MST.nUserID Where BL_ChargesTray.nClinicID = " + _ClinicID + " "; //And nUserID = " + nUserID +"";
                                    }
                                    _sqlQuery = _sqlQuery + "ORDER BY sDescription"; //20100527

                                }
                                break;

                            case gloListControlType.PaymentTray:
                                {
                                    Int64 nUserID = 0;
                                    if (appSettings["UserID"] != null)
                                    {
                                        if (appSettings["UserID"] != "")
                                        {
                                            nUserID = Convert.ToInt64(appSettings["UserID"]);
                                        }
                                    }
                                    if (_isFilterPaymentTray)
                                    {
                                        _sqlQuery = " SELECT nCloseDayTrayID,sCode,sDescription,User_MST.sLoginName,Case when isnull(bIsActive,1) = 0 Then 'InActive' else ''  end as bIsActive from BL_CloseDayTray left outer JOIN User_MST ON BL_CloseDayTray.nUserID = User_MST.nUserID Where BL_CloseDayTray.nClinicID = " + _ClinicID + "  And BL_CloseDayTray.nUserID = " + nUserID + "";
                                    }
                                    else
                                    {
                                        _sqlQuery = " SELECT nCloseDayTrayID,sCode,sDescription,User_MST.sLoginName,Case when isnull(bIsActive,1) = 0 Then 'InActive' else ''  end as bIsActive from BL_CloseDayTray left outer JOIN User_MST ON BL_CloseDayTray.nUserID = User_MST.nUserID Where BL_CloseDayTray.nClinicID = " + _ClinicID + " "; // And nUserID = " + nUserID + "";
                                    }

                                }
                                break;

                            //Added for Payment Type.
                            case gloListControlType.PaymentType:
                                {
                                    try
                                    {
                                        DataTable dtPaymentType = new DataTable();
                                        dtPaymentType.Columns.Add("Id");
                                        dtPaymentType.Columns.Add("PaymentType");
                                        DataRow dr = dtPaymentType.NewRow();

                                        dr[0] = 1;
                                        dr[1] = "Cash";
                                        dtPaymentType.Rows.Add(dr);
                                        dtPaymentType.AcceptChanges();

                                        dr = null;
                                        dr = dtPaymentType.NewRow();
                                        dr[0] = 2;
                                        dr[1] = "Check";
                                        dtPaymentType.Rows.Add(dr);
                                        dtPaymentType.AcceptChanges();


                                        dr = null;
                                        dr = dtPaymentType.NewRow();
                                        dr[0] = 3;
                                        dr[1] = "MoneyOrder";
                                        dtPaymentType.Rows.Add(dr);
                                        dtPaymentType.AcceptChanges();


                                        dr = null;
                                        dr = dtPaymentType.NewRow();
                                        dr[0] = 4;
                                        dr[1] = "CreditCard";
                                        dtPaymentType.Rows.Add(dr);
                                        dtPaymentType.AcceptChanges();


                                        dr = null;
                                        dr = dtPaymentType.NewRow();
                                        dr[0] = 5;
                                        dr[1] = "EFT";
                                        dtPaymentType.Rows.Add(dr);
                                        dtPaymentType.AcceptChanges();


                                        if (dtPaymentType != null)
                                        {
                                            dgListView.DataSource = dtPaymentType.DefaultView;
                                        }

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "PaymentType";


                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;


                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Refresh();
                                            dgListView.EndEdit();
                                            dgListView.Columns[0].Width = _width * 2;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 4;

                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "PaymentType";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                        }
                                    }
                                    catch (Exception ex)
                                    {
                                        ex.ToString();
                                    }
                                    finally
                                    {
                                    }
                                }
                                break;
                            case gloListControlType.InsuranceCompany:
                                {
                                    _sqlQuery = "";
                                    _sqlQuery = "select nID, sCode, sDescription from Contacts_InsuranceCompany_MST";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " where Contacts_InsuranceCompany_MST.nClinicID = " + ClinicID + " order by sDescription";
                                    }
                                }
                                break;

                            case gloListControlType.InsuranceReportingCategory:
                                {
                                    _sqlQuery = "";
                                    _sqlQuery = "SELECT nID,sCode,sDescription FROM Contacts_InsuranceReportingCategory_MST ";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " WHERE nClinicID = " + ClinicID + "";
                                    }

                                    _sqlQuery = _sqlQuery + " ORDER BY sDescription ";
                                }
                                break;

                            case gloListControlType.BillingType:
                                {
                                    _sqlQuery = "";
                                    _sqlQuery = "SELECT ninsuranceTypeID,sInsuranceTypeCode,sInsuranceTypeDesc FROM InsuranceType_MST";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " WHERE nClinicID = " + ClinicID + "";
                                    }
                                    _sqlQuery = _sqlQuery + " ORDER BY sInsuranceTypeDesc ";
                                }
                                break;

                            case gloListControlType.FeeShedule:
                                {
                                    _sqlQuery = "";
                                    _sqlQuery = "SELECT ISNULL(nFeeScheduleID,0) AS nFeeScheduleID, ISNULL(nFeeScheduleType,0) As nFeeScheduleType,  ISNULL(sFeeScheduleName,'') AS sFeeScheduleName FROM BL_FeeSchedule_MST ";

                                    if (ClinicID > 0)
                                    {
                                        _sqlQuery = _sqlQuery + " WHERE nClinicID = " + ClinicID + "";
                                    }
                                    _sqlQuery = _sqlQuery + " ORDER BY sFeeScheduleName ";
                                }
                                break;
                            case gloListControlType.HistoryOBPhysicalExam:
                                {
                                    _sqlQuery = "SELECT    Distinct(ISNULL(Category_MST.sDescription,'')  )as Description,MIN(HistoryDetails.nHistoryDetailsID) as nHistoryDetailsID FROM History_MST INNER JOIN " +
                                                " HistoryDetails INNER JOIN " +
                                                " Category_MST ON HistoryDetails.nCategoryID = Category_MST.nCategoryID ON History_MST.nHistoryID = HistoryDetails.nHistoryID " +
                                                " Group by Category_MST.sDescription " +
                                                  "Order By Description";
                                }
                                break;
                            default:
                                {
                                }
                                break;


                        }

                        if (_sqlQuery.Trim() != "")
                        {
                            oDB.Retrive_Query(_sqlQuery, out _dtList);
                        }
                        else
                        {
                            _dtList = new DataTable();
                        }

                        if (_dtList != null && _dtList.Rows.Count > 0)
                        {


                            // MERGE ORIGINAL LIST WITH INPUT DATATABLE LIST //
                            if (_dtInputTable != null && _dtInputTable.Rows.Count > 0)
                            { _dtList.Merge(_dtInputTable); } // CURRENTLY USED FOR INSURANCE PLAN //


                            _dvList = _dtList.DefaultView;
                            if (_ismultiselect == true)
                            {
                                DataColumn dcID1 = new DataColumn("Check1", typeof(int));

                                dcID1.DefaultValue = 0;
                                _dvList.Table.Columns.Add(dcID1);
                                DataColumn[] pk5 = new DataColumn[] { _dvList.Table.Columns[0] };
                                _dvList.Table.PrimaryKey = pk5;
                                if (dtSelected.Columns.Count == 0)
                                {
                                    DataColumn col1 = new DataColumn("ID");
                                    DataColumn col2 = new DataColumn("Name");
                                    dtSelected.Columns.Add(col1);
                                    dtSelected.Columns.Add(col2);
                                }
                                DataColumn[] pkey = new DataColumn[] { dtSelected.Columns[0] };
                                dtSelected.PrimaryKey = pkey;
                                //End code Added on 20100707
                            }

                            if (tsb_UserGroups.Text == "Groups")
                            {
                                _dtGroupList = GetGroups();
                                DataColumn dcID1 = new DataColumn("Check1", typeof(int));

                                dcID1.DefaultValue = 0;
                                _dtGroupList.Columns.Add(dcID1);
                                DataColumn[] pk2 = new DataColumn[] { _dtGroupList.Columns[0] };
                                _dtGroupList.PrimaryKey = pk2;
                            }
                            //End code Added by Mayuri:20100706
                            if (_ListControlType == gloListControlType.Insurance)
                                _dvList.Sort = "sName";
                            dgListView.DataSource = _dvList;

                            switch (_ListControlType)
                            {
                                case gloListControlType.Patient:
                                case gloListControlType.AllPatient:
                                case gloListControlType.ConflictingPatient:
                                    {
                                        this.DefaultPatientID = Convert.ToInt64(_dtList.Rows[0]["PatientID"]);
                                        dgListView.Columns[0].HeaderText = "Id";
                                        dgListView.Columns[1].HeaderText = "Code";
                                        dgListView.Columns[2].HeaderText = "First Name";
                                        dgListView.Columns[3].HeaderText = "MI";
                                        dgListView.Columns[4].HeaderText = "Last Name";
                                        dgListView.Columns[5].HeaderText = "SSN";
                                        dgListView.Columns[6].HeaderText = "Provider";
                                        dgListView.Columns[7].HeaderText = "DOB";
                                        dgListView.Columns[8].HeaderText = "Phone";
                                        dgListView.Columns[9].HeaderText = "Mobile";
                                        dgListView.Columns[10].HeaderText = "PatientStatus";

                                        dgListView.Columns[0].Visible = false;
                                        dgListView.Columns[3].Visible = false;
                                        dgListView.Columns[5].Visible = false;
                                        dgListView.Columns[6].Visible = false;
                                        dgListView.Columns[7].Visible = false;
                                        dgListView.Columns[8].Visible = false;
                                        dgListView.Columns[9].Visible = false;
                                        dgListView.Columns[10].Visible = false;

                                        if (dgListView.Columns.Contains("check1") == true)
                                        {
                                            dgListView.Columns[11].Visible = false;
                                        }

                                        #region "Show Columns as per User patient column Settings"

                                        //Get login user ID from appsettings   
                                        Int64 _nUserID = 0;
                                        if (appSettings["UserID"] != null)
                                        {
                                            if (appSettings["UserID"] != "")
                                            { _nUserID = Convert.ToInt64(appSettings["UserID"]); }
                                            else { _nUserID = 0; }
                                        }
                                        else
                                        { _nUserID = 0; }


                                        //Get Patient Columns settings for current user.
                                        gloSettings.GeneralSettings ogloSettings = new gloSettings.GeneralSettings(_DatabaseConnectionString);
                                        object value = null;
                                        ogloSettings.GetSetting("Patient Columns", _nUserID, _ClinicID, out value);


                                        _strPatientCol = Convert.ToString(value).Trim(); //Sandip Darade 20100428
                                        if (value != null && Convert.ToString(value).Trim() != "")
                                        {
                                            string[] PatientColumns = Convert.ToString(value).Trim().Split(',');
                                            for (int j = 0; j < PatientColumns.Length; j++)
                                            {

                                                for (int i = 1; i < dgListView.Columns.Count; i++)
                                                {
                                                    if (dgListView.Columns[i].HeaderText.Trim() == PatientColumns[j].Trim())
                                                    {
                                                        dgListView.Columns[i].Visible = true;
                                                        break;
                                                    }
                                                }
                                            }
                                        }


                                        //Display Index settings
                                        ogloSettings.LoadGridColumnDisplayIndex(dgListView, gloSettings.ModuleOfGridColumn.DashBoardPatientList, _nUserID);

                                        //Column width settings settings
                                        //if (ogloSettings.LoadGridColumnWidth(dgListView, gloSettings.ModuleOfGridColumn.DashBoardPatientList, _nUserID) == false)
                                        {
                                            try
                                            {
                                                dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                                int _width = dgListView.Width / 18;
                                                dgListView.Columns[1].Width = _width * 4;
                                                dgListView.Columns[2].Width = _width * 4;
                                                dgListView.Columns[3].Width = _width * 1;
                                                dgListView.Columns[4].Width = _width * 4;
                                                dgListView.Columns[5].Width = _width * 2;
                                                dgListView.Columns[6].Width = _width * 3;
                                                dgListView.Columns[7].Width = _width * 2;
                                                dgListView.Columns[8].Width = _width * 2;
                                                dgListView.Columns[9].Width = _width * 2;
                                            }
                                            catch (Exception ex)
                                            {
                                                ex.ToString();
                                            }
                                        }
                                        #endregion

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[0].Width = 30;
                                        }
                                        ogloSettings.Dispose();
                                        ogloSettings = null;
                                    }
                                    break;

                                case gloListControlType.PendingLabPatients:
                                    {
                                        this.DefaultPatientID = Convert.ToInt64(_dtList.Rows[0]["PatientID"]);
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "First Name";
                                            dgListView.Columns[4].HeaderText = "Last Name";
                                            dgListView.Columns[5].HeaderText = "SSN";
                                            dgListView.Columns[6].HeaderText = "DOB";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[7].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 15;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 2;
                                            dgListView.Columns[3].Width = _width * 4;
                                            dgListView.Columns[4].Width = _width * 4;
                                            dgListView.Columns[5].Width = _width * 2;
                                            dgListView.Columns[6].Width = _width * 2;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "First Name";
                                            dgListView.Columns[3].HeaderText = "Last Name";
                                            dgListView.Columns[4].HeaderText = "SSN";
                                            dgListView.Columns[5].HeaderText = "DOB";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[6].Visible = false;
                                            }


                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.Columns[1].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 2;
                                            dgListView.Columns[3].Width = _width * 2;
                                            dgListView.Columns[4].Width = _width * 1;
                                            dgListView.Columns[5].Width = _width * 1;
                                        }
                                    }
                                    break;
                                case gloListControlType.Pharmacy:
                                    {

                                        _dvList = _dtList.DefaultView;

                                        dgListView.DataSource = _dvList;

                                        if (_ismultiselect == true)
                                        {
                                            //ID is used if user adds record from listcontrol itself
                                            if (ID == 0)
                                            {
                                                dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                                dgListView.Columns[0].HeaderText = "Select";
                                                dgListView.Columns[1].HeaderText = "Id";
                                                dgListView.Columns[2].HeaderText = "Name";
                                                dgListView.Columns[3].HeaderText = "Ph No";
                                                dgListView.Columns[4].HeaderText = "Fax";
                                                dgListView.Columns[5].HeaderText = "Addr 1";
                                                dgListView.Columns[6].HeaderText = "Addr 2";
                                                dgListView.Columns[7].HeaderText = "City";
                                                dgListView.Columns[8].HeaderText = "State";
                                                dgListView.Columns[9].HeaderText = "Zip";
                                                dgListView.Columns[10].HeaderText = "NCPDID";
                                                //Sandip Darade 20100106
                                                //e-Pharmacy column to distinguish among displayed Pharmacies as e-Pharmacy or normal Pharmacy
                                                dgListView.Columns[11].HeaderText = "e-Pharmacy";
                                                dgListView.Columns[11].Name = "e-Pharmacy";
                                                dgListView.Columns[11].ValueType = typeof(System.Boolean);


                                                dgListView.Columns[0].Visible = true;
                                                dgListView.Columns[1].Visible = false;
                                                dgListView.Columns[2].Visible = true;
                                                dgListView.Columns[3].Visible = true;
                                                dgListView.Columns[4].Visible = true;
                                                dgListView.Columns[5].Visible = true;
                                                dgListView.Columns[6].Visible = true;
                                                dgListView.Columns[7].Visible = true;
                                                dgListView.Columns[8].Visible = true;
                                                dgListView.Columns[9].Visible = true;
                                                dgListView.Columns[10].Visible = true;
                                                dgListView.Columns[11].Visible = true;


                                                int _width = (_thiswidth - 17) / 9;
                                                dgListView.Columns[0].Width = _width * 2;
                                                dgListView.Columns[2].Width = _width * 1;
                                                dgListView.Columns[3].Width = _width * 1;
                                                dgListView.Columns[4].Width = _width * 1;
                                                dgListView.Columns[5].Width = _width * 1;
                                                dgListView.Columns[6].Width = _width * 1;
                                                dgListView.Columns[7].Width = _width * 1;
                                                dgListView.Columns[8].Width = _width * 1;
                                                dgListView.Columns[9].Width = _width * 1 / 2;
                                                dgListView.Columns[11].Width = _width * 1 / 2;


                                            }
                                        }
                                        else
                                        {
                                            //if (ID == 0)
                                            //{
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Name";
                                            dgListView.Columns[2].HeaderText = "Ph No";
                                            dgListView.Columns[3].HeaderText = "Fax";
                                            dgListView.Columns[4].HeaderText = "Addr 1";
                                            dgListView.Columns[5].HeaderText = "Addr 2";
                                            dgListView.Columns[6].HeaderText = "City";
                                            dgListView.Columns[7].HeaderText = "State";
                                            dgListView.Columns[8].HeaderText = "Zip";
                                            dgListView.Columns[9].HeaderText = "NCPDID";

                                            //Sandip Darade 20100106
                                            //e-Pharmacy column to distinguish among displayed Pharmacies as e-Pharmacy or normal Pharmacy 
                                            dgListView.Columns[10].HeaderText = "e-Pharmacy";
                                            dgListView.Columns[10].Name = "e-Pharmacy";
                                            dgListView.Columns[10].ValueType = typeof(System.Boolean);

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;
                                            dgListView.Columns[7].Visible = true;
                                            dgListView.Columns[8].Visible = true;
                                            dgListView.Columns[9].Visible = false;
                                            dgListView.Columns[10].Visible = true;

                                            int _width = (_thiswidth - 16) / 9;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 1;
                                            dgListView.Columns[3].Width = _width * 1;
                                            dgListView.Columns[4].Width = _width * 1;
                                            dgListView.Columns[5].Width = _width * 1;
                                            dgListView.Columns[6].Width = _width * 1;
                                            dgListView.Columns[7].Width = _width * 1;
                                            dgListView.Columns[8].Width = _width * 1;
                                            dgListView.Columns[10].Width = _width * 1;



                                            //}
                                        }
                                        //
                                        //Added by Mayuri:20100705-To show row highlighted
                                        // show highlited default first row
                                        string ID1 = Convert.ToString(ID);
                                        int RowIndex = -1;
                                        if (ID == 0 && dgListView.Rows.Count > 1)
                                        {
                                            dgListView.Rows[0].Selected = true;
                                        }
                                        else
                                        {
                                            for (int iRow = 0; iRow <= dgListView.Rows.Count - 1; iRow++)
                                            {
                                                if (Convert.ToString((dgListView[0, iRow].Value)) == ID1)
                                                {
                                                    RowIndex = iRow;
                                                    dgListView.Rows[RowIndex].Selected = true;
                                                    break;
                                                }
                                            }
                                            if (RowIndex >= 0) // to save records without selecting particular cell specially used for newly added record
                                            {
                                                {
                                                    _id = Convert.ToInt64(dgListView[0, RowIndex].Value);
                                                    _code = dgListView[2, RowIndex].Value.ToString().Trim();
                                                    _name = dgListView[1, RowIndex].Value.ToString().Trim();
                                                }
                                            }

                                        }
                                    }
                                    break;

                                case gloListControlType.Insurance:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "PhysicianName";
                                            dgListView.Columns[3].HeaderText = "LastName";
                                            dgListView.Columns[4].HeaderText = "Insurance Plan";
                                            dgListView.Columns[5].HeaderText = "Insurance Company";
                                            dgListView.Columns[6].HeaderText = "Reporting Category";
                                            dgListView.Columns[7].HeaderText = "Plan Type";
                                            dgListView.Columns[8].HeaderText = "Gender";
                                            dgListView.Columns[9].HeaderText = "Address 1";
                                            dgListView.Columns[10].HeaderText = "Address 2";
                                            dgListView.Columns[11].HeaderText = "City";
                                            dgListView.Columns[12].HeaderText = "State";
                                            dgListView.Columns[13].HeaderText = "Zip";
                                            dgListView.Columns[14].HeaderText = "Contact";
                                            dgListView.Columns[15].HeaderText = "Phone";
                                            dgListView.Columns[16].HeaderText = "Fax";
                                            dgListView.Columns[17].HeaderText = "Mobile";
                                            dgListView.Columns[18].HeaderText = "Email";
                                            dgListView.Columns[19].HeaderText = "InsuranceTypeCode";

                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[3].Visible = false;
                                            dgListView.Columns[8].Visible = false;
                                            dgListView.Columns[17].Visible = false;
                                            dgListView.Columns[19].Visible = false;
                                            if (dgListView.Columns.Contains("Check1") == true)
                                            {
                                                dgListView.Columns[20].Visible = false;
                                            }

                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[0].Width = (_width * 1) - 10;
                                            dgListView.Columns[4].Width = _width * 4;
                                            dgListView.Columns[5].Width = (_width * 3) - 30;
                                            dgListView.Columns[6].Width = (_width * 3) - 30;
                                            dgListView.Columns[7].Width = (_width * 3) - 30;
                                            dgListView.Columns[9].Width = _width * 3;
                                            dgListView.Columns[10].Width = _width * 3;
                                            dgListView.Columns[11].Width = (_width * 2) - 20;
                                            dgListView.Columns[12].Width = (_width * 1) - 10;
                                            dgListView.Columns[13].Width = (_width * 2) - 30;
                                            dgListView.Columns[14].Width = _width * 2;
                                            dgListView.Columns[15].Width = (_width * 2) - 30;
                                            dgListView.Columns[16].Width = (_width * 2) - 30;
                                            dgListView.Columns[18].Width = (_width * 2);
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "PhysicianName";
                                            dgListView.Columns[2].HeaderText = "LastName";
                                            dgListView.Columns[3].HeaderText = "Insurance Plan";
                                            dgListView.Columns[4].HeaderText = "Insurance Company";
                                            dgListView.Columns[5].HeaderText = "Reporting Category";
                                            dgListView.Columns[6].HeaderText = "Plan Type";
                                            dgListView.Columns[7].HeaderText = "Gender";
                                            dgListView.Columns[8].HeaderText = "Address 1";
                                            dgListView.Columns[9].HeaderText = "Address 2";
                                            dgListView.Columns[10].HeaderText = "City";
                                            dgListView.Columns[11].HeaderText = "State";
                                            dgListView.Columns[12].HeaderText = "Zip";
                                            dgListView.Columns[13].HeaderText = "Contact";
                                            dgListView.Columns[14].HeaderText = "Phone";
                                            dgListView.Columns[15].HeaderText = "Fax";
                                            dgListView.Columns[16].HeaderText = "Mobile";
                                            dgListView.Columns[17].HeaderText = "Email";
                                            dgListView.Columns[18].HeaderText = "InsuranceTypeCode";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[7].Visible = false;
                                            dgListView.Columns[16].Visible = false;
                                            dgListView.Columns[18].Visible = false;

                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[3].Width = _width * 4;
                                            dgListView.Columns[4].Width = (_width * 3) - 30;
                                            dgListView.Columns[5].Width = (_width * 3) - 30;
                                            dgListView.Columns[6].Width = (_width * 3) - 30;
                                            dgListView.Columns[8].Width = _width * 3;
                                            dgListView.Columns[9].Width = _width * 3;
                                            dgListView.Columns[10].Width = (_width * 2) - 20;
                                            dgListView.Columns[11].Width = (_width * 1) - 10;
                                            dgListView.Columns[12].Width = (_width * 2) - 30;
                                            dgListView.Columns[13].Width = _width * 2;
                                            dgListView.Columns[14].Width = (_width * 2) - 30;
                                            dgListView.Columns[15].Width = (_width * 2) - 30;
                                            dgListView.Columns[17].Width = (_width * 2);

                                        }
                                    }
                                    break;

                                case gloListControlType.Hospital:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Name";
                                            dgListView.Columns[3].HeaderText = "Contact";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("Check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 5;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Name";
                                            dgListView.Columns[2].HeaderText = "Contact";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    }
                                    break;

                                case gloListControlType.Physicians:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            if (ID == 0)
                                            {
                                                dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                                dgListView.Columns[0].HeaderText = "Select";
                                                dgListView.Columns[1].HeaderText = "Id";
                                                dgListView.Columns[2].HeaderText = "Prefix";
                                                dgListView.Columns[3].HeaderText = "First Name";
                                                dgListView.Columns[4].HeaderText = "Middle Name";
                                                dgListView.Columns[5].HeaderText = "Last Name";
                                                dgListView.Columns[6].HeaderText = "Suffix";
                                                dgListView.Columns[7].HeaderText = "Addr 1";
                                                dgListView.Columns[8].HeaderText = "Addr 2";
                                                dgListView.Columns[9].HeaderText = "City";
                                                dgListView.Columns[10].HeaderText = "State";
                                                dgListView.Columns[11].HeaderText = "Zip";
                                                dgListView.Columns[12].HeaderText = "NPI";

                                                dgListView.Columns[0].Visible = true;
                                                dgListView.Columns[1].Visible = false;
                                                dgListView.Columns[2].Visible = true;
                                                dgListView.Columns[3].Visible = true;
                                                dgListView.Columns[4].Visible = true;
                                                dgListView.Columns[5].Visible = true;
                                                dgListView.Columns[6].Visible = true;
                                                dgListView.Columns[7].Visible = true;
                                                dgListView.Columns[8].Visible = true;
                                                dgListView.Columns[9].Visible = true;
                                                dgListView.Columns[10].Visible = true;
                                                dgListView.Columns[11].Visible = true;
                                                dgListView.Columns[12].Visible = true;
                                                if (dgListView.Columns.Contains("check1") == true)
                                                {
                                                    dgListView.Columns[13].Visible = false;
                                                }

                                                dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;      //Dhruv 20100215 ''To set the datagridviewassutosizecolune to none
                                                int _width = (_thiswidth - 17) / 11;

                                                dgListView.Columns[0].Width = _width * 1;
                                                dgListView.Columns[2].Width = _width * 1;
                                                dgListView.Columns[3].Width = _width * 1;
                                                dgListView.Columns[4].Width = _width * 1;
                                                dgListView.Columns[5].Width = _width * 1;
                                                dgListView.Columns[6].Width = _width * 1;
                                                dgListView.Columns[7].Width = _width * 1;
                                                dgListView.Columns[8].Width = _width * 1;
                                                dgListView.Columns[9].Width = _width * 1;
                                                dgListView.Columns[10].Width = _width * 1;
                                                dgListView.Columns[11].Width = _width * 1;
                                                dgListView.Columns[12].Width = _width * 1;
                                            }
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Prefix";
                                            dgListView.Columns[2].HeaderText = "First Name";
                                            dgListView.Columns[3].HeaderText = "Middle Name";
                                            dgListView.Columns[4].HeaderText = "Last Name";
                                            dgListView.Columns[5].HeaderText = "Suffix";
                                            dgListView.Columns[6].HeaderText = "Addr 1";
                                            dgListView.Columns[7].HeaderText = "Addr 2";
                                            dgListView.Columns[8].HeaderText = "City";
                                            dgListView.Columns[9].HeaderText = "State";
                                            dgListView.Columns[10].HeaderText = "Zip";
                                            dgListView.Columns[11].HeaderText = "NPI";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;
                                            dgListView.Columns[7].Visible = true;
                                            dgListView.Columns[8].Visible = true;
                                            dgListView.Columns[9].Visible = true;
                                            dgListView.Columns[10].Visible = true;
                                            dgListView.Columns[11].Visible = true;

                                            int _width;

                                            if (_IsTextchanged == true)
                                            {
                                                _width = (_thiswidth - 17) / (int)8.95;
                                            }
                                            else
                                            {
                                                _width = (_thiswidth - 17) / 9;
                                            }

                                            dgListView.Columns[0].Width = 0;
                                            dgListView.Columns[2].Width = _width * 1;
                                            dgListView.Columns[3].Width = _width * 1;
                                            dgListView.Columns[4].Width = _width * 1;
                                            dgListView.Columns[5].Width = _width * 1;
                                            dgListView.Columns[6].Width = _width * 1;
                                            dgListView.Columns[7].Width = _width * 1;
                                            dgListView.Columns[8].Width = _width * 1;
                                            dgListView.Columns[9].Width = _width * 1;
                                            dgListView.Columns[10].Width = 71;
                                            dgListView.Columns[11].Width = _width * 1;
                                        }

                                        //Added by Mayuri:20100705-To show row highlighted
                                        // show highlited default first row

                                        string ID1 = Convert.ToString(ID);
                                        int RowIndex = -1;

                                        if (ID == 0 && dgListView.Rows.Count > 1)
                                        {
                                            dgListView.Rows[0].Selected = true;
                                        }
                                        else
                                        {
                                            for (int iRow = 0; iRow <= dgListView.Rows.Count - 1; iRow++)
                                            {
                                                if (Convert.ToString((dgListView[0, iRow].Value)) == ID1)
                                                {
                                                    RowIndex = iRow;
                                                    dgListView.Rows[RowIndex].Selected = true;
                                                    break;
                                                }
                                            }

                                            //Added by Mayuri:20100706-To save selected physician without selecting cell
                                            if (RowIndex >= 0)
                                            {
                                                _id = Convert.ToInt64(dgListView[0, RowIndex].Value);
                                                _code = "";
                                                if (dgListView[1, RowIndex].Value.ToString() != "" && dgListView[5, RowIndex].Value.ToString() != "")
                                                {
                                                    _name = dgListView[1, RowIndex].Value.ToString().Trim() + " " + dgListView[2, RowIndex].Value.ToString().Trim() + " " + dgListView[3, RowIndex].Value.ToString().Trim() + " " + dgListView[4, RowIndex].Value.ToString().Trim() + " " + dgListView[5, RowIndex].Value.ToString().Trim();
                                                }
                                                else if (dgListView[1, RowIndex].Value.ToString() == "" && dgListView[5, RowIndex].Value.ToString() != "")
                                                {
                                                    _name = dgListView[2, RowIndex].Value.ToString().Trim() + " " + dgListView[3, RowIndex].Value.ToString().Trim() + " " + dgListView[4, RowIndex].Value.ToString().Trim() + " " + dgListView[5, RowIndex].Value.ToString().Trim();
                                                }
                                                else if (dgListView[1, RowIndex].Value.ToString() != "" && dgListView[5, RowIndex].Value.ToString() == "")
                                                {
                                                    _name = dgListView[1, RowIndex].Value.ToString().Trim() + " " + dgListView[2, RowIndex].Value.ToString().Trim() + " " + dgListView[3, RowIndex].Value.ToString().Trim() + " " + dgListView[4, RowIndex].Value.ToString().Trim();
                                                }
                                                else
                                                {
                                                    _name = dgListView[2, RowIndex].Value.ToString().Trim() + " " + dgListView[3, RowIndex].Value.ToString().Trim() + " " + dgListView[4, RowIndex].Value.ToString().Trim();
                                                }
                                            }
                                        }
                                    }
                                    break;

                                case gloListControlType.Referrals:
                                    {

                                        if (_ismultiselect == true)
                                        {
                                            if (_ismodify == false)
                                            {
                                                //ID used only if user adds Referrals from listcontrol
                                                if (ID == 0 || dgListView.Rows.Count == 1)
                                                {
                                                    dgListView.DataSource = null;
                                                    dgListView.DataSource = _dvList;
                                                    DataGridViewCheckBoxColumn dgcheckboxcolumn = new DataGridViewCheckBoxColumn(false);
                                                    dgListView.Columns.Insert(0, dgcheckboxcolumn);
                                                    dgListView.Columns[0].HeaderText = "Select";
                                                    dgListView.Columns[1].HeaderText = "Id";
                                                    dgListView.Columns[2].HeaderText = "Prefix";
                                                    dgListView.Columns[3].HeaderText = "First Name";
                                                    dgListView.Columns[4].HeaderText = "Middle Name";
                                                    dgListView.Columns[5].HeaderText = "Last Name";
                                                    dgListView.Columns[6].HeaderText = "Suffix";
                                                    dgListView.Columns[7].HeaderText = "Gender";
                                                    dgListView.Columns[8].HeaderText = "Addr 1";
                                                    dgListView.Columns[9].HeaderText = "Addr 2";
                                                    dgListView.Columns[10].HeaderText = "City";
                                                    dgListView.Columns[11].HeaderText = "State";
                                                    dgListView.Columns[12].HeaderText = "Zip";
                                                    dgListView.Columns[13].HeaderText = "Phone";
                                                    dgListView.Columns[14].HeaderText = "Fax";
                                                    dgListView.Columns[15].HeaderText = "Mobile";
                                                    dgListView.Columns[16].HeaderText = "Email";
                                                    dgListView.Columns[17].HeaderText = "NPI";
                                                    dgListView.Columns[18].HeaderText = "Direct Address";
                                                    dgListView.Columns[19].HeaderText = "SPI";
                                                    dgListView.Columns[20].HeaderText = "Specialty Type1";
                                                    dgListView.Columns[21].HeaderText = "Clinic Name";




                                                    dgListView.Columns[0].Visible = true;
                                                    dgListView.Columns[1].Visible = false;
                                                    dgListView.Columns[2].Visible = true;
                                                    dgListView.Columns[3].Visible = true;
                                                    dgListView.Columns[4].Visible = true;
                                                    dgListView.Columns[5].Visible = true;
                                                    dgListView.Columns[6].Visible = true;
                                                    dgListView.Columns[7].Visible = true;
                                                    dgListView.Columns[8].Visible = true;
                                                    dgListView.Columns[9].Visible = true;
                                                    dgListView.Columns[10].Visible = true;
                                                    dgListView.Columns[11].Visible = true;
                                                    dgListView.Columns[12].Visible = true;
                                                    dgListView.Columns[13].Visible = true;
                                                    dgListView.Columns[14].Visible = true;
                                                    dgListView.Columns[15].Visible = true;
                                                    dgListView.Columns[16].Visible = true;
                                                    dgListView.Columns[17].Visible = true;
                                                    dgListView.Columns[18].Visible = true;
                                                    dgListView.Columns[19].Visible = true;
                                                    dgListView.Columns[20].Visible = true;
                                                    dgListView.Columns[21].Visible = true;



                                                    if (dgListView.Columns.Contains("Check1") == true)
                                                    {
                                                        dgListView.Columns[22].Visible = false;
                                                    }


                                                    int _width;
                                                    if (_IsTextchanged == true)
                                                    {
                                                        _width = (_thiswidth - 22) / 9;
                                                    }
                                                    else
                                                    {
                                                        _width = (_thiswidth - 22) / 15;
                                                    }

                                                    dgListView.Columns[0].Width = _width * 1;
                                                    dgListView.Columns[2].Width = _width * 1;
                                                    dgListView.Columns[3].Width = _width * 1;
                                                    dgListView.Columns[4].Width = _width * 1;
                                                    dgListView.Columns[5].Width = _width * 1;
                                                    dgListView.Columns[6].Width = _width * 1;
                                                    dgListView.Columns[7].Width = _width * 1;
                                                    dgListView.Columns[8].Width = _width * 1;
                                                    dgListView.Columns[9].Width = _width * 1;
                                                    dgListView.Columns[10].Width = _width * 1;
                                                    dgListView.Columns[11].Width = _width * 1;
                                                    dgListView.Columns[12].Width = _width * 1;
                                                    dgListView.Columns[13].Width = _width * 1;
                                                    dgListView.Columns[14].Width = _width * 1;
                                                    dgListView.Columns[15].Width = _width * 1;
                                                    dgListView.Columns[16].Width = _width * 1;
                                                    dgListView.Columns[17].Width = _width * 1;
                                                    dgListView.Columns[18].Width = _width * 1;
                                                    dgListView.Columns[19].Width = _width * 1;
                                                    dgListView.Columns[20].Width = _width * 1;
                                                    dgListView.Columns[21].Width = _width * 1;
                                                }
                                            }

                                            if (dgListView.Rows.Count > 1)
                                            {
                                                if (_dvList != null && _dvList.Table != null && _ismultiselect == true)
                                                {
                                                    if (_dvList.Table.Rows.Count > 0)
                                                    {

                                                        for (int Count = 0; Count < dgListView.Rows.Count; Count++)
                                                        {
                                                            dgListView.CommitEdit(DataGridViewDataErrorContexts.Display);
                                                            DataRow rw = _dvList.Table.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                                            if (rw != null)
                                                            {
                                                                if (Convert.ToInt32(rw["Check1"]) != 0)
                                                                {
                                                                    dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check1"]);
                                                                }
                                                            }
                                                            if (_ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians)
                                                            {
                                                                DataRow dr = dtSelected.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                                                if (dr != null)
                                                                {

                                                                    dgListView.Rows[Count].Cells[0].Value = 1;

                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else   //If multiselect=false
                                        {
                                            //ID used only if user adds Referrals from listcontrol
                                            if (ID == 0 || dgListView.Rows.Count == 1)
                                            {
                                                dgListView.Columns[0].HeaderText = "Id";
                                                dgListView.Columns[1].HeaderText = "Prefix";
                                                dgListView.Columns[2].HeaderText = "First Name";
                                                dgListView.Columns[3].HeaderText = "Middle Name";
                                                dgListView.Columns[4].HeaderText = "Last Name";
                                                dgListView.Columns[5].HeaderText = "Suffix";
                                                dgListView.Columns[6].HeaderText = "Addr 1";
                                                dgListView.Columns[7].HeaderText = "Addr 2";
                                                dgListView.Columns[8].HeaderText = "City";
                                                dgListView.Columns[9].HeaderText = "State";
                                                dgListView.Columns[10].HeaderText = "Zip";
                                                dgListView.Columns[11].HeaderText = "NPI";

                                                dgListView.Columns[0].Visible = false;
                                                dgListView.Columns[1].Visible = true;
                                                dgListView.Columns[2].Visible = true;
                                                dgListView.Columns[3].Visible = true;
                                                dgListView.Columns[4].Visible = true;
                                                dgListView.Columns[5].Visible = true;
                                                dgListView.Columns[6].Visible = true;
                                                dgListView.Columns[7].Visible = true;
                                                dgListView.Columns[8].Visible = true;
                                                dgListView.Columns[9].Visible = true;
                                                dgListView.Columns[10].Visible = true;
                                                dgListView.Columns[11].Visible = true;

                                                int _width = (_thiswidth - 17) / 9;
                                                dgListView.Columns[0].Width = 0;
                                                dgListView.Columns[2].Width = _width * 1;
                                                dgListView.Columns[3].Width = _width * 1;
                                                dgListView.Columns[4].Width = _width * 1;
                                                dgListView.Columns[5].Width = _width * 1;
                                                dgListView.Columns[6].Width = _width * 1;
                                                dgListView.Columns[7].Width = _width * 1;
                                                dgListView.Columns[8].Width = _width * 1;
                                                dgListView.Columns[9].Width = _width * 1;
                                                dgListView.Columns[10].Width = _width * 1;
                                                dgListView.Columns[11].Width = _width * 1;
                                            }
                                        }

                                        //Added by Mayuri:20100705-To show row highlighted
                                        // show highlited default first row

                                        string ID1 = Convert.ToString(ID);
                                        int RowIndex = -1;
                                        if (ID == 0 && dgListView.Rows.Count > 1)
                                        {
                                            dgListView.Rows[0].Selected = true;
                                        }
                                        else
                                        {
                                            for (int iRow = 0; iRow <= dgListView.Rows.Count - 1; iRow++)
                                            {
                                                if (_ismultiselect == true)
                                                {
                                                    if (Convert.ToString((dgListView[1, iRow].Value)) == ID1)
                                                    {
                                                        RowIndex = iRow;
                                                        dgListView.Rows[RowIndex].Selected = true;
                                                        break;
                                                    }
                                                }
                                                else
                                                {
                                                    if (Convert.ToString((dgListView[0, iRow].Value)) == ID1)
                                                    {
                                                        RowIndex = iRow;
                                                        dgListView.Rows[RowIndex].Selected = true;
                                                        break;
                                                    }
                                                }
                                            }

                                            //To check newly added row along with focus for multiselct option
                                            if (_ismultiselect == true)
                                            {
                                                if (RowIndex >= 0)
                                                {
                                                    DataGridViewCellEventArgs dverg = new DataGridViewCellEventArgs(0, RowIndex);
                                                    dgListView.Rows[RowIndex].Cells[0].Value = true;
                                                    dgListView_CellContentClick(null, dverg);
                                                }
                                            }
                                            else
                                                //To save selected row on save n close without clicking on cell
                                                if (_ismultiselect == false)
                                                {
                                                    if (RowIndex >= 0)
                                                    {
                                                        _id = Convert.ToInt64(dgListView[0, RowIndex].Value);
                                                        _code = "";
                                                        if (dgListView[1, RowIndex].Value.ToString().Trim() != "" && dgListView[5, RowIndex].Value.ToString().Trim() != "")
                                                        {
                                                            _name = dgListView[1, RowIndex].Value.ToString().Trim() + " " + dgListView[2, RowIndex].Value.ToString().Trim() + " " + dgListView[3, RowIndex].Value.ToString().Trim() + " " + dgListView[4, RowIndex].Value.ToString().Trim() + " " + dgListView[5, RowIndex].Value.ToString().Trim();
                                                        }
                                                        else if (dgListView[1, RowIndex].Value.ToString().Trim() == "" && dgListView[5, RowIndex].Value.ToString().Trim() != "")
                                                        {
                                                            _name = dgListView[2, RowIndex].Value.ToString().Trim() + " " + dgListView[3, RowIndex].Value.ToString().Trim() + " " + dgListView[4, RowIndex].Value.ToString().Trim() + " " + dgListView[5, RowIndex].Value.ToString().Trim() + " " + dgListView[5, RowIndex].Value.ToString().Trim();
                                                        }
                                                        else if (dgListView[1, RowIndex].Value.ToString().Trim() != "" && dgListView[5, RowIndex].Value.ToString().Trim() == "")
                                                        {
                                                            _name = dgListView[1, RowIndex].Value.ToString().Trim() + " " + dgListView[2, RowIndex].Value.ToString().Trim() + " " + dgListView[3, RowIndex].Value.ToString().Trim() + " " + dgListView[4, RowIndex].Value.ToString().Trim();
                                                        }
                                                        else
                                                        {
                                                            _name = dgListView[2, RowIndex].Value.ToString().Trim() + " " + dgListView[3, RowIndex].Value.ToString().Trim() + " " + dgListView[4, RowIndex].Value.ToString().Trim();
                                                        }
                                                    }
                                                }
                                        }
                                    }
                                    break;

                                case gloListControlType.Providers:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "First Name";
                                            dgListView.Columns[3].HeaderText = "Middle Name";
                                            dgListView.Columns[4].HeaderText = "Last Name";
                                            //Added By Pramod Nair

                                            dgListView.Columns[5].HeaderText = "Suffix";


                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[6].Visible = false;
                                            }

                                            //Added By Pramod Nair
                                            if (_MyCaller == "frmRpt_AgingReport")
                                                dgListView.Columns[5].Visible = false;
                                            else
                                                dgListView.Columns[5].Visible = true;

                                            int _width = (_thiswidth - 17) / 13;
                                            dgListView.Columns[0].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 4;
                                            dgListView.Columns[3].Width = _width * 3;
                                            dgListView.Columns[4].Width = _width * 4;
                                            //Added By Pramod Nair
                                            dgListView.Columns[5].Width = _width * 2;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "First Name";
                                            dgListView.Columns[2].HeaderText = "Middle Name";
                                            dgListView.Columns[3].HeaderText = "Last Name";
                                            //Added By Pramod Nair
                                            dgListView.Columns[4].HeaderText = "Suffix";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;

                                            //Added By Pramod Nair
                                            dgListView.Columns[4].Visible = true;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[5].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 6;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 2;
                                            dgListView.Columns[3].Width = _width * 2;
                                            //Added By Pramod Nair

                                            dgListView.Columns[4].Width = _width * 2;
                                        }
                                    }
                                    break;

                                case gloListControlType.Resources:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[0].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 5;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    }
                                    break;

                                case gloListControlType.Procedures:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Problem Type";
                                            dgListView.Columns[3].HeaderText = "Duration";
                                            dgListView.Columns[4].HeaderText = "Color Code";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = false;
                                            dgListView.Columns[5].Visible = false;

                                            int _width = (_thiswidth - 17) / 8;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 4;
                                            dgListView.Columns[3].Width = _width * 2;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Problem Type";
                                            dgListView.Columns[2].HeaderText = "Duration";
                                            dgListView.Columns[3].HeaderText = "Color Code";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = false;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 3;
                                            dgListView.Columns[2].Width = _width * 2;
                                        }
                                    }
                                    break;

                                case gloListControlType.CPT:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 5;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    }
                                    break;
                                case gloListControlType.CPTProcedures:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 5;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    }
                                    break;
                                case gloListControlType.HistoryLOINC:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 5;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    }
                                    break;
                                case gloListControlType.CQMCVXCOdes:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 5;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    }
                                    break;

                                case gloListControlType.OBVitalComments:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Comments_ID";
                                            dgListView.Columns[2].HeaderText = "Comments";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = true;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[2].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[1].Width = _width * 3;
                                        }
                                        else
                                        {
                                            dgListView.Columns[1].HeaderText = "Comments_ID";
                                            dgListView.Columns[2].HeaderText = "Comments";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 3;

                                        }
                                    }
                                    break;

                                case gloListControlType.Diagnosis:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 5;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    }
                                    break;

                                case gloListControlType.Modifier:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;

                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 5;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    }
                                    break;

                                //Code added by Sagar Ghodke March 05 2008.
                                case gloListControlType.Users:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            DataGridViewCheckBoxColumn dgcheckboxcolumn = new DataGridViewCheckBoxColumn(false);
                                            dgListView.Columns.Insert(0, dgcheckboxcolumn);

                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "UserId";
                                            dgListView.Columns[2].HeaderText = "ProviderId";
                                            dgListView.Columns[3].HeaderText = "User Name";
                                            dgListView.Columns[4].HeaderText = "First Name";
                                            dgListView.Columns[5].HeaderText = "Middle Name";
                                            dgListView.Columns[6].HeaderText = "Last Name";
                                            dgListView.Columns[7].HeaderText = "Email";
                                            dgListView.Columns[8].HeaderText = "ExchangeLogin";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;
                                            dgListView.Columns[7].Visible = true;
                                            dgListView.Columns[8].Visible = false;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[9].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 1;
                                            dgListView.Columns[3].Width = (int)(_width * 1.5);
                                            dgListView.Columns[4].Width = (int)(_width * 1.5);
                                            dgListView.Columns[5].Width = (int)(_width * 1.5);
                                            dgListView.Columns[6].Width = (int)(_width * 1.5);
                                            dgListView.Columns[7].Width = (int)(_width * 2.5);
                                            dgListView.Columns[8].Width = _width * 1;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "UserId";
                                            dgListView.Columns[1].HeaderText = "ProviderId";
                                            dgListView.Columns[2].HeaderText = "User Name";
                                            dgListView.Columns[3].HeaderText = "First Name";
                                            dgListView.Columns[4].HeaderText = "Middle Name";
                                            dgListView.Columns[5].HeaderText = "Last Name";
                                            dgListView.Columns[6].HeaderText = "Email";
                                            dgListView.Columns[7].HeaderText = "ExchangeLogin";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;

                                            //Madan added on 20100424--- for fixing the extra column in users list
                                            dgListView.Columns[7].Visible = false;
                                            //End Madan

                                            int _width = (_thiswidth - 17) / 6;
                                            dgListView.Columns[2].Width = (int)(_width * 1.5);
                                            dgListView.Columns[3].Width = (int)(_width * 1.5);
                                            dgListView.Columns[4].Width = (int)(_width * 1.5);
                                            dgListView.Columns[5].Width = (int)(_width * 1.5);
                                            dgListView.Columns[6].Width = (int)(_width * 1.5);
                                        }
                                    }
                                    break;

                                case gloListControlType.PatientInsurence:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Insurance ID";
                                            dgListView.Columns[2].HeaderText = "Insurance Name";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[3].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 8;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Insurance ID";
                                            dgListView.Columns[1].HeaderText = "Insurance Name";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;

                                            int _width = (_thiswidth - 17);
                                            dgListView.Columns[1].Width = _width;
                                        }
                                    }
                                    break;

                                case gloListControlType.EMRPatient: //20080804
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "First Name";
                                            dgListView.Columns[4].HeaderText = "Last Name";
                                            dgListView.Columns[5].HeaderText = "SSN";
                                            dgListView.Columns[6].HeaderText = "DOB";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = true;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[7].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 15;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 2;
                                            dgListView.Columns[3].Width = _width * 4;
                                            dgListView.Columns[4].Width = _width * 4;
                                            dgListView.Columns[5].Width = _width * 2;
                                            dgListView.Columns[6].Width = _width * 2;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "First Name";
                                            dgListView.Columns[3].HeaderText = "Last Name";
                                            dgListView.Columns[4].HeaderText = "SSN";
                                            dgListView.Columns[5].HeaderText = "DOB";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;

                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.Columns[1].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 2;
                                            dgListView.Columns[3].Width = _width * 2;
                                            dgListView.Columns[4].Width = _width * 1;
                                            dgListView.Columns[5].Width = _width * 1;
                                        }
                                    }
                                    break;

                                case gloListControlType.InsuranceServiceType: //20081007
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";
                                            dgListView.Columns[3].HeaderText = "Plan Type";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;

                                            if (dgListView.Columns.Contains("Check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.Columns[1].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 2;
                                            dgListView.Columns[3].Width = _width * 2;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Description";
                                            dgListView.Columns[3].HeaderText = "Plan Type";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;

                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.Columns[1].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 2;
                                            dgListView.Columns[3].Width = _width * 2;
                                        }
                                    }
                                    break;

                                case gloListControlType.Taxonomy: //20081110
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Taxonomy Code";
                                            dgListView.Columns[3].HeaderText = "Taxonomy Description";
                                            dgListView.Columns[4].HeaderText = "Taxonomy Classification";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[5].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 2;
                                            dgListView.Columns[3].Width = _width * 5;
                                            dgListView.Columns[4].Width = _width * 2;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Taxonomy Code";
                                            dgListView.Columns[2].HeaderText = "Taxonomy Description";
                                            dgListView.Columns[3].HeaderText = "Taxonomy Classification";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 5;
                                            dgListView.Columns[3].Width = _width * 2;
                                        }
                                    }
                                    break;

                                case gloListControlType.AppointmentType: //20081110
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Appointment Type";
                                            dgListView.Columns[3].HeaderText = "Duration";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 8;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 4;
                                            dgListView.Columns[3].Width = _width * 3;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Appointment Type";
                                            dgListView.Columns[2].HeaderText = "Duration";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;
                                            dgListView.Columns[2].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                        }
                                    }
                                    break;

                                case gloListControlType.AllPatientInsurances:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Insurance ID";
                                            dgListView.Columns[2].HeaderText = "Insurance Name";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;

                                            if (dgListView.Columns.Contains("Check1") == true)
                                            {
                                                dgListView.Columns[3].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 8;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Insurance ID";
                                            dgListView.Columns[1].HeaderText = "Insurance Name";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;

                                            int _width = (_thiswidth - 17);
                                            dgListView.Columns[1].Width = _width;
                                        }
                                    }
                                    break;

                                //Sandip Darade 20090730 Added Preferred lab to use contol on Labs  in gloEMR50
                                case gloListControlType.PreferredLab:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "ID";
                                            dgListView.Columns[2].HeaderText = "Contact Name";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[3].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 8;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "ID";
                                            dgListView.Columns[1].HeaderText = "Contact Name";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = true;

                                            int _width = (_thiswidth - 17);
                                            dgListView.Columns[1].Width = _width;
                                        }
                                    }
                                    break;

                                case gloListControlType.Facility:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Facility Name";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            if (_MyCaller == "frmRpt_AgingReport")
                                                dgListView.Columns[2].Visible = false;
                                            else
                                                //Commented By Pramod Nair for Hiding the Facility Code
                                                //dgListView.Columns[2].Visible = true;
                                                dgListView.Columns[2].Visible = false;

                                            dgListView.Columns[3].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }
                                            //dgListView.Columns[4].Visible = false;

                                            if (_MyCaller == "frmRpt_AgingReport")
                                            {
                                                int _width = (_thiswidth - 17) / 5;
                                                dgListView.Columns[0].Width = _width * 1;
                                                dgListView.Columns[3].Width = _width * 4;
                                            }
                                            else
                                            {
                                                // Added By Pramod Nair for setting the Width
                                                int _width = (_thiswidth - 17) / 5;
                                                dgListView.Columns[0].Width = _width * 1;
                                                dgListView.Columns[3].Width = _width * 4;
                                            }
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Facility Name";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[3].Visible = false;
                                            }

                                            // Added By Pramod Nair for setting the Width
                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[3].Width = _width * 4;
                                        }
                                    }
                                    break;

                                case gloListControlType.ChargeTray:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Tray";
                                            dgListView.Columns[4].HeaderText = "User";
                                            dgListView.Columns[5].HeaderText = "Active";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;
                                            dgListView.Columns[6].Visible = false;

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[3].Width = _width * 6;
                                            dgListView.Columns[4].Width = _width * 2;
                                            dgListView.Columns[5].Width = _width * 2;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Charge Tray";
                                            dgListView.Columns[3].HeaderText = "User";
                                            dgListView.Columns[4].HeaderText = "Active";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 2;
                                            dgListView.Columns[4].Width = _width * 2;
                                        }
                                    }
                                    break;

                                case gloListControlType.PaymentTray:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Tray";
                                            dgListView.Columns[4].HeaderText = "User";
                                            dgListView.Columns[5].HeaderText = "Active";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;
                                            dgListView.Columns[5].Visible = true;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[6].Visible = false;
                                            }

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[3].Width = _width * 6;
                                            dgListView.Columns[4].Width = _width * 2;
                                            dgListView.Columns[5].Width = _width * 2;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Tray";
                                            dgListView.Columns[3].HeaderText = "User";
                                            dgListView.Columns[4].HeaderText = "Active";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            dgListView.Columns[3].Visible = true;
                                            dgListView.Columns[4].Visible = true;

                                            int _width = (_thiswidth - 17) / 5;
                                            dgListView.Columns[1].Width = _width * 2;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 3;
                                            dgListView.Columns[4].Width = _width * 2;
                                        }
                                    }
                                    break;

                                case gloListControlType.InsuranceCompany:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Insurance Company";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[3].Visible = true;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.Columns[0].Width = 50;
                                            dgListView.Columns[1].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _thiswidth - 50;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Insurance Company";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;

                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            dgListView.Columns[0].Width = 0;
                                            dgListView.Columns[1].Width = 350;
                                            dgListView.Columns[2].Width = 260;
                                        }
                                    }
                                    break;

                                case gloListControlType.InsuranceReportingCategory:

                                case gloListControlType.BillingType:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            //SET THE HEADER FOR BILLING TYPE
                                            if (_ListControlType == gloListControlType.BillingType)
                                            {
                                                dgListView.Columns[3].HeaderText = "Plan Type";
                                            }
                                            //SET THE HEADER FOR REPORTING CATEGORY
                                            else
                                            {
                                                dgListView.Columns[3].HeaderText = "Reporting Category";
                                            }
                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[3].Visible = true;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[1].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 3;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            //SET THE HEADER FOR BILLING YTPE
                                            if (_ListControlType == gloListControlType.BillingType)
                                            {
                                                dgListView.Columns[2].HeaderText = "Plan Type";
                                            }
                                            //SET THE HEADER FOR REPORTING CATEGORY
                                            else
                                            {
                                                dgListView.Columns[2].HeaderText = "Reporting Category";
                                            }
                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            dgListView.Columns[0].Width = 0;
                                            dgListView.Columns[1].Width = 350;
                                            dgListView.Columns[2].AutoSizeMode = DataGridViewAutoSizeColumnMode.Fill;
                                        }
                                    }
                                    break;

                                case gloListControlType.FeeShedule:
                                    {
                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "Code";
                                            dgListView.Columns[3].HeaderText = "Fee Shedule";

                                            dgListView.Columns[0].Visible = true;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[3].Visible = true;

                                            if (dgListView.Columns.Contains("check1") == true)
                                            {
                                                dgListView.Columns[4].Visible = false;
                                            }

                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.Columns[0].Width = _width * 1;
                                            dgListView.Columns[1].Width = _width * 1;
                                            dgListView.Columns[2].Width = _width * 3;
                                            dgListView.Columns[3].Width = _width * 3;
                                        }
                                        else
                                        {
                                            dgListView.Columns[0].HeaderText = "Id";
                                            dgListView.Columns[1].HeaderText = "Code";
                                            dgListView.Columns[2].HeaderText = "Fee Shedule";

                                            dgListView.Columns[0].Visible = false;
                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = true;
                                            int _width = (_thiswidth - 17) / 7;
                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            dgListView.Columns[0].Width = 0;
                                            dgListView.Columns[1].Width = 350;
                                            dgListView.Columns[2].AutoSizeMode = DataGridViewAutoSizeColumnMode.Fill;
                                        }
                                    }
                                    break;
                                default:
                                    {
                                    }
                                    break;
                            }

                        }
                        else if (_dtInputTable != null && _dtInputTable.Rows.Count > 0)
                        {// IF INPUT TABLE HAS SOME ROCORDS IN IT THEN BIND IT TO GRID AND DESIGN //
                            switch (_ListControlType)
                            {
                                case gloListControlType.Insurance:
                                    {
                                        lblSearch.Text = "Search :";

                                        _dvList = _dtInputTable.DefaultView;
                                        _dvList.Sort = "sName";
                                        dgListView.DataSource = _dvList;

                                        if (_ismultiselect == true)
                                        {
                                            dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListView.Columns[0].HeaderText = "Select :";
                                            dgListView.Columns[1].HeaderText = "Id";
                                            dgListView.Columns[2].HeaderText = "PhysicianName";
                                            dgListView.Columns[3].HeaderText = "LastName";
                                            dgListView.Columns[4].HeaderText = "Insurance Plan";
                                            dgListView.Columns[5].HeaderText = "Insurance Company";
                                            dgListView.Columns[6].HeaderText = "Reporting Category";
                                            dgListView.Columns[7].HeaderText = "Plan Type";
                                            dgListView.Columns[8].HeaderText = "Gender";
                                            dgListView.Columns[9].HeaderText = "Address 1";
                                            dgListView.Columns[10].HeaderText = "Address 2";
                                            dgListView.Columns[11].HeaderText = "City";
                                            dgListView.Columns[12].HeaderText = "State";
                                            dgListView.Columns[13].HeaderText = "Zip";
                                            dgListView.Columns[14].HeaderText = "Contact";
                                            dgListView.Columns[15].HeaderText = "Phone";
                                            dgListView.Columns[16].HeaderText = "Fax";
                                            dgListView.Columns[17].HeaderText = "Mobile";
                                            dgListView.Columns[18].HeaderText = "Email";
                                            dgListView.Columns[19].HeaderText = "InsuranceTypeCode";

                                            dgListView.Columns[1].Visible = false;
                                            dgListView.Columns[2].Visible = false;
                                            dgListView.Columns[3].Visible = false;
                                            dgListView.Columns[8].Visible = false;
                                            dgListView.Columns[17].Visible = false;
                                            dgListView.Columns[19].Visible = false;

                                            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                            int _width = (_thiswidth - 17) / 10;
                                            dgListView.Columns[0].Width = (_width * 1) - 10;
                                            dgListView.Columns[4].Width = _width * 4;
                                            dgListView.Columns[5].Width = (_width * 3) - 30;
                                            dgListView.Columns[6].Width = (_width * 3) - 30;
                                            dgListView.Columns[7].Width = (_width * 3) - 30;
                                            dgListView.Columns[9].Width = _width * 3;
                                            dgListView.Columns[10].Width = _width * 3;
                                            dgListView.Columns[11].Width = (_width * 2) - 20;
                                            dgListView.Columns[12].Width = (_width * 1) - 10;
                                            dgListView.Columns[13].Width = (_width * 2) - 30;
                                            dgListView.Columns[14].Width = _width * 2;
                                            dgListView.Columns[15].Width = (_width * 2) - 30;
                                            dgListView.Columns[16].Width = (_width * 2) - 30;
                                            dgListView.Columns[18].Width = (_width * 2);
                                        }
                                        break;
                                    }
                            }
                        }
                        else if (_ListControlType == gloListControlType.PaymentType)
                        {

                            dgListView.Refresh();
                        }
                        else if (_ListControlType == gloListControlType.Referrals)
                        {
                            if (_ismultiselect == true)
                            {
                                if (dgListView.Rows.Count >= 1)
                                {
                                    dgListView.ColumnCount = 13;
                                    DataGridViewCheckBoxColumn dgcheckboxcolumn = new DataGridViewCheckBoxColumn(false);
                                    dgListView.Columns.Insert(0, dgcheckboxcolumn);
                                    dgListView.Columns[0].HeaderText = "Select";
                                    dgListView.Columns[1].HeaderText = "Id";
                                    dgListView.Columns[2].HeaderText = "Prefix";
                                    dgListView.Columns[3].HeaderText = "First Name";
                                    dgListView.Columns[4].HeaderText = "Middle Name";
                                    dgListView.Columns[5].HeaderText = "Last Name";
                                    dgListView.Columns[6].HeaderText = "Suffix";
                                    dgListView.Columns[7].HeaderText = "Addr 1";
                                    dgListView.Columns[8].HeaderText = "Addr 2";
                                    dgListView.Columns[9].HeaderText = "City";
                                    dgListView.Columns[10].HeaderText = "State";
                                    dgListView.Columns[11].HeaderText = "Zip";
                                    dgListView.Columns[12].HeaderText = "NPI";

                                    dgListView.Columns[0].Visible = true;
                                    dgListView.Columns[1].Visible = false;
                                    dgListView.Columns[2].Visible = true;
                                    dgListView.Columns[3].Visible = true;
                                    dgListView.Columns[4].Visible = true;
                                    dgListView.Columns[5].Visible = true;
                                    dgListView.Columns[6].Visible = true;
                                    dgListView.Columns[7].Visible = true;
                                    dgListView.Columns[8].Visible = true;
                                    dgListView.Columns[9].Visible = true;
                                    dgListView.Columns[10].Visible = true;
                                    dgListView.Columns[11].Visible = true;
                                    dgListView.Columns[12].Visible = true;

                                    if (dgListView.Columns.Contains("check1") == true)
                                    {
                                        dgListView.Columns[13].Visible = false;
                                    }

                                    int _width;
                                    if (_IsTextchanged == true)
                                    {
                                        _width = (_thiswidth - 17) / 9;
                                    }
                                    else
                                    {
                                        _width = (_thiswidth - 17) / 11;
                                    }
                                    dgListView.Columns[0].Width = _width * 1;
                                    dgListView.Columns[2].Width = _width * 1;
                                    dgListView.Columns[3].Width = _width * 1;
                                    dgListView.Columns[4].Width = _width * 1;
                                    dgListView.Columns[5].Width = _width * 1;
                                    dgListView.Columns[6].Width = _width * 1;
                                    dgListView.Columns[7].Width = _width * 1;
                                    dgListView.Columns[8].Width = _width * 1;
                                    dgListView.Columns[9].Width = _width * 1;
                                    dgListView.Columns[10].Width = _width * 1;
                                    dgListView.Columns[11].Width = _width * 1;
                                    dgListView.Columns[12].Width = _width * 1;
                                }
                            }
                            else
                            {
                                if (dgListView.Rows.Count >= 1)
                                {
                                    dgListView.ColumnCount = 11;
                                    dgListView.Columns[0].HeaderText = "Id";
                                    dgListView.Columns[1].HeaderText = "Prefix";
                                    dgListView.Columns[2].HeaderText = "First Name";
                                    dgListView.Columns[3].HeaderText = "Middle Name";
                                    dgListView.Columns[4].HeaderText = "Last Name";
                                    dgListView.Columns[5].HeaderText = "Addr 1";
                                    dgListView.Columns[6].HeaderText = "Addr 2";
                                    dgListView.Columns[7].HeaderText = "City";
                                    dgListView.Columns[8].HeaderText = "State";
                                    dgListView.Columns[9].HeaderText = "Zip";
                                    dgListView.Columns[10].HeaderText = "NPI";

                                    dgListView.Columns[0].Visible = false;
                                    dgListView.Columns[1].Visible = true;
                                    dgListView.Columns[2].Visible = true;
                                    dgListView.Columns[3].Visible = true;
                                    dgListView.Columns[4].Visible = true;
                                    dgListView.Columns[5].Visible = true;
                                    dgListView.Columns[6].Visible = true;
                                    dgListView.Columns[7].Visible = true;
                                    dgListView.Columns[8].Visible = true;
                                    dgListView.Columns[9].Visible = true;
                                    dgListView.Columns[10].Visible = true;

                                    int _width = (_thiswidth - 17) / 9;
                                    dgListView.Columns[0].Width = 0;
                                    dgListView.Columns[2].Width = _width * 1;
                                    dgListView.Columns[3].Width = _width * 1;
                                    dgListView.Columns[4].Width = _width * 1;
                                    dgListView.Columns[5].Width = _width * 1;
                                    dgListView.Columns[6].Width = _width * 1;
                                    dgListView.Columns[7].Width = _width * 1;
                                    dgListView.Columns[8].Width = _width * 1;
                                    dgListView.Columns[9].Width = _width * 1;
                                    dgListView.Columns[10].Width = _width * 1;
                                }
                            }
                        }
                        else if (_ListControlType == gloListControlType.Physicians)
                        {
                            if (_dtList != null && _dtList.Rows.Count > 0)
                            {
                                if (_ismultiselect == true)
                                {
                                    dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                    dgListView.Columns[0].HeaderText = "Select";
                                    dgListView.Columns[1].HeaderText = "Id";
                                    dgListView.Columns[2].HeaderText = "First Name";
                                    dgListView.Columns[3].HeaderText = "Middle Name";
                                    dgListView.Columns[4].HeaderText = "Last Name";
                                    dgListView.Columns[5].HeaderText = "Addr 1";
                                    dgListView.Columns[6].HeaderText = "Addr 2";
                                    dgListView.Columns[7].HeaderText = "City";
                                    dgListView.Columns[8].HeaderText = "State";
                                    dgListView.Columns[9].HeaderText = "Zip";
                                    dgListView.Columns[10].HeaderText = "NPI";

                                    dgListView.Columns[0].Visible = true;
                                    dgListView.Columns[1].Visible = false;
                                    dgListView.Columns[2].Visible = true;
                                    dgListView.Columns[3].Visible = true;
                                    dgListView.Columns[4].Visible = true;
                                    dgListView.Columns[5].Visible = true;
                                    dgListView.Columns[6].Visible = true;
                                    dgListView.Columns[7].Visible = true;
                                    dgListView.Columns[8].Visible = true;
                                    dgListView.Columns[9].Visible = true;
                                    dgListView.Columns[10].Visible = true;
                                    if (dgListView.Columns.Contains("check1") == true)
                                    {
                                        dgListView.Columns[11].Visible = false;
                                    }

                                    dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;      //Dhruv 20100215 ''To set the datagridviewassutosizecolune to none
                                    int _width = (_thiswidth - 17) / 11;

                                    dgListView.Columns[0].Width = _width * 1;
                                    dgListView.Columns[2].Width = _width * 1;
                                    dgListView.Columns[3].Width = _width * 1;
                                    dgListView.Columns[4].Width = _width * 1;
                                    dgListView.Columns[5].Width = _width * 1;
                                    dgListView.Columns[6].Width = _width * 1;
                                    dgListView.Columns[7].Width = _width * 1;
                                    dgListView.Columns[8].Width = _width * 1;
                                    dgListView.Columns[9].Width = _width * 1;
                                    dgListView.Columns[10].Width = _width * 1;
                                }
                                else
                                {
                                    dgListView.ColumnCount = 10;
                                    dgListView.Columns[0].HeaderText = "Id";
                                    dgListView.Columns[1].HeaderText = "First Name";
                                    dgListView.Columns[2].HeaderText = "Middle Name";
                                    dgListView.Columns[3].HeaderText = "Last Name";
                                    dgListView.Columns[4].HeaderText = "Addr 1";
                                    dgListView.Columns[5].HeaderText = "Addr 2";
                                    dgListView.Columns[6].HeaderText = "City";
                                    dgListView.Columns[7].HeaderText = "State";
                                    dgListView.Columns[8].HeaderText = "Zip";
                                    dgListView.Columns[9].HeaderText = "NPI";

                                    dgListView.Columns[0].Visible = false;
                                    dgListView.Columns[1].Visible = true;
                                    dgListView.Columns[2].Visible = true;
                                    dgListView.Columns[3].Visible = true;
                                    dgListView.Columns[4].Visible = true;
                                    dgListView.Columns[5].Visible = true;
                                    dgListView.Columns[6].Visible = true;
                                    dgListView.Columns[7].Visible = true;
                                    dgListView.Columns[8].Visible = true;
                                    dgListView.Columns[9].Visible = true;

                                    int _width = (_thiswidth - 17) / 8;
                                    dgListView.Columns[0].Width = 0;
                                    dgListView.Columns[2].Width = _width * 1;
                                    dgListView.Columns[3].Width = _width * 1;
                                    dgListView.Columns[4].Width = _width * 1;
                                    dgListView.Columns[5].Width = _width * 1;
                                    dgListView.Columns[6].Width = _width * 1;
                                    dgListView.Columns[7].Width = _width * 1;
                                    dgListView.Columns[8].Width = _width * 1;
                                    dgListView.Columns[9].Width = _width * 1;
                                }
                            }
                        }
                        else if (_ListControlType == gloListControlType.Patient)
                        {
                            dgListView.ColumnCount = 11;
                            dgListView.Columns[0].HeaderText = "Id";
                            dgListView.Columns[1].HeaderText = "Code";
                            dgListView.Columns[2].HeaderText = "First Name";
                            dgListView.Columns[3].HeaderText = "MI";
                            dgListView.Columns[4].HeaderText = "Last Name";
                            dgListView.Columns[5].HeaderText = "SSN";
                            dgListView.Columns[6].HeaderText = "Provider";
                            dgListView.Columns[7].HeaderText = "DOB";
                            dgListView.Columns[8].HeaderText = "Phone";
                            dgListView.Columns[9].HeaderText = "Mobile";
                            dgListView.Columns[10].HeaderText = "PatientStatus";

                            dgListView.Columns[0].Visible = false;
                            dgListView.Columns[3].Visible = false;
                            dgListView.Columns[5].Visible = false;
                            dgListView.Columns[6].Visible = false;
                            dgListView.Columns[7].Visible = false;
                            dgListView.Columns[8].Visible = false;
                            dgListView.Columns[9].Visible = false;
                            dgListView.Columns[10].Visible = false;

                            if (dgListView.Columns.Contains("check1") == true)
                            {
                                dgListView.Columns[11].Visible = false;
                            }

                            #region "Show Columns as per User patient column Settings"

                            //Get login user ID from appsettings   
                            Int64 _nUserID = 0;
                            if (appSettings["UserID"] != null)
                            {
                                if (appSettings["UserID"] != "")
                                { _nUserID = Convert.ToInt64(appSettings["UserID"]); }
                                else { _nUserID = 0; }
                            }
                            else
                            { _nUserID = 0; }


                            //Get Patient Columns settings for current user.
                            gloSettings.GeneralSettings ogloSettings = new gloSettings.GeneralSettings(_DatabaseConnectionString);
                            object value = null;
                            ogloSettings.GetSetting("Patient Columns", _nUserID, _ClinicID, out value);


                            _strPatientCol = Convert.ToString(value).Trim(); //Sandip Darade 20100428
                            if (value != null && Convert.ToString(value).Trim() != "")
                            {
                                string[] PatientColumns = Convert.ToString(value).Trim().Split(',');
                                for (int j = 0; j < PatientColumns.Length; j++)
                                {

                                    for (int i = 1; i < dgListView.Columns.Count; i++)
                                    {
                                        if (dgListView.Columns[i].HeaderText.Trim() == PatientColumns[j].Trim())
                                        {
                                            dgListView.Columns[i].Visible = true;
                                            break;
                                        }
                                    }
                                }
                            }


                            //Display Index settings
                            ogloSettings.LoadGridColumnDisplayIndex(dgListView, gloSettings.ModuleOfGridColumn.DashBoardPatientList, _nUserID);

                            //Column width settings settings
                            //if (ogloSettings.LoadGridColumnWidth(dgListView, gloSettings.ModuleOfGridColumn.DashBoardPatientList, _nUserID) == false)
                            {
                                try
                                {
                                    dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;
                                    int _width = dgListView.Width / 18;
                                    dgListView.Columns[1].Width = _width * 4;
                                    dgListView.Columns[2].Width = _width * 4;
                                    dgListView.Columns[3].Width = _width * 1;
                                    dgListView.Columns[4].Width = _width * 4;
                                    dgListView.Columns[5].Width = _width * 2;
                                    dgListView.Columns[6].Width = _width * 3;
                                    dgListView.Columns[7].Width = _width * 2;
                                    dgListView.Columns[8].Width = _width * 2;
                                    dgListView.Columns[9].Width = _width * 2;
                                }
                                catch (Exception ex)
                                {
                                    ex.ToString();
                                }
                            }
                            #endregion

                            if (_ismultiselect == true)
                            {
                                dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                dgListView.Columns[0].HeaderText = "Select";
                                dgListView.Columns[0].Width = 30;
                            }
                            ogloSettings.Dispose();
                            ogloSettings = null;
                        }
                        else
                        {
                            dgListView.DataSource = null;
                            dgListView.Refresh();
                        }

                    }
                    catch (gloDatabaseLayer.DBException ex)
                    {
                        ex.ERROR_Log(ex.ToString());
                    }
                    catch (Exception ex)
                    {
                        gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
                    }
                    finally
                    {
                        oDB.Disconnect();
                        oDB.Dispose();
                        oDB = null;
                        oParameters.Dispose();
                        oParameters = null;
                        _sqlQuery = null;
                        appSettings = null;
                    }
                }
            }
            else
            {
                _dtList = new DataTable();
                if ((_dtList != null))
                {
                    _dvList = _dtList.DefaultView;
                    dgListView.DataSource = _dvList;
                }
            }
            _FillInProcess = false;
        }

        private void DesignGrid(Int64 ID)
        {
        }

        private void FillSubListAsCriteria(Int64 ListCriteriaID)
        {
            DataTable _dtList = null;
            dgListSubView.DataSource = null;
            dgListSubView.Columns.Clear();

            if (_ListControlType != gloListControlType.Other)
            {
                if (_DatabaseConnectionString.Trim() != "")
                {
                    string _sqlQuery = "";
                    gloDatabaseLayer.DBLayer oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
                    gloDatabaseLayer.DBParameters oParameters = new gloDatabaseLayer.DBParameters();

                    oDB.Connect(false);

                    try
                    {
                        switch (_ListControlType)
                        {
                            case gloListControlType.Procedures:
                                {
                                    _sqlQuery = "SELECT  AB_Resource_MST.nResourceID, AB_Resource_MST.sCode, AB_Resource_MST.sDescription " +
                                    " FROM AB_AppointmentType_Details INNER JOIN AB_Resource_MST ON AB_AppointmentType_Details.nResourceID = AB_Resource_MST.nResourceID " +
                                    " WHERE (AB_AppointmentType_Details.nAppointmentTypeID = " + ListCriteriaID + ") AND (AB_Resource_MST.nClinicID = " + _ClinicID + ") AND (AB_Resource_MST.bitIsBlocked = 0)";
                                }
                                break;
                            default:
                                {
                                }
                                break;
                        }

                        oDB.Retrive_Query(_sqlQuery, out _dtList);

                        if (_dtList != null)
                        {
                            if (_dtList.Rows.Count > 0)
                            {
                                _dvSubList = _dtList.DefaultView;
                                dgListSubView.DataSource = _dvSubList;

                                switch (_ListControlType)
                                {
                                    case gloListControlType.Procedures:
                                        {
                                            dgListSubView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                            dgListSubView.Columns[0].HeaderText = "Select";
                                            dgListSubView.Columns[1].HeaderText = "Id";
                                            dgListSubView.Columns[2].HeaderText = "Code";
                                            dgListSubView.Columns[3].HeaderText = "Description";

                                            dgListSubView.Columns[0].Visible = true;
                                            dgListSubView.Columns[1].Visible = false;
                                            dgListSubView.Columns[2].Visible = true;
                                            dgListSubView.Columns[3].Visible = true;

                                            //20100111  Mahesh Nawal Code add for non editable the resource data grid
                                            dgListSubView.Columns[1].ReadOnly = true;
                                            dgListSubView.Columns[2].ReadOnly = true;
                                            dgListSubView.Columns[3].ReadOnly = true;

                                            int _width = (_thiswidth - 17) / 9;
                                            dgListSubView.Columns[0].Width = _width * 1;
                                            dgListSubView.Columns[2].Width = _width * 3;
                                            dgListSubView.Columns[3].Width = _width * 5;

                                        }
                                        break;
                                    default:
                                        {
                                        }
                                        break;
                                }

                            }
                        }
                    }
                    catch (gloDatabaseLayer.DBException ex)
                    {
                        ex.ERROR_Log(ex.ToString());
                    }
                    catch (Exception ex)
                    {
                        gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
                    }
                    finally
                    {
                        _sqlQuery = null;
                        oDB.Disconnect();
                        oDB.Dispose();
                        oDB = null;
                        oParameters.Dispose();
                        oParameters = null;
                    }
                }
            }
        }

        private void FillSubListAsCriteria(bool typeflag)
        {
            if (typeflag == true)
            {
                DataTable _dtList = null;
                dgListSubView.DataSource = null;
                dgListSubView.Columns.Clear();

                if (_ListControlType != gloListControlType.Other)
                {
                    if (_DatabaseConnectionString.Trim() != "")
                    {
                        string _sqlQuery = "";
                        gloDatabaseLayer.DBLayer oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
                        gloDatabaseLayer.DBParameters oParameters = new gloDatabaseLayer.DBParameters();

                        oDB.Connect(false);

                        try
                        {
                            switch (_ListControlType)
                            {
                                case gloListControlType.Procedures:
                                    {
                                        _sqlQuery = "SELECT  distinct AB_Resource_MST.nResourceID, AB_Resource_MST.sCode, AB_Resource_MST.sDescription " +
                                        " FROM AB_AppointmentType_Details INNER JOIN AB_Resource_MST ON AB_AppointmentType_Details.nResourceID = AB_Resource_MST.nResourceID " +
                                        "And (AB_Resource_MST.nClinicID = " + _ClinicID + ") AND (AB_Resource_MST.bitIsBlocked = 0)";
                                    }
                                    break;
                                default:
                                    {
                                    }
                                    break;
                            }
                            if (_sqlQuery != "")
                            {
                                oDB.Retrive_Query(_sqlQuery, out _dtList);
                            }

                            if (_dtList != null)
                            {
                                if (_dtList.Rows.Count > 0)
                                {
                                    _dvSubList = _dtList.DefaultView;
                                    dgListSubView.DataSource = _dvSubList;

                                    switch (_ListControlType)
                                    {
                                        case gloListControlType.Procedures:
                                            {
                                                dgListSubView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                                dgListSubView.Columns[0].HeaderText = "Select";
                                                dgListSubView.Columns[1].HeaderText = "Id";
                                                dgListSubView.Columns[2].HeaderText = "Code";
                                                dgListSubView.Columns[3].HeaderText = "Description";

                                                dgListSubView.Columns[0].Visible = true;
                                                dgListSubView.Columns[1].Visible = false;
                                                dgListSubView.Columns[2].Visible = true;
                                                dgListSubView.Columns[3].Visible = true;

                                                int _width = (_thiswidth - 17) / 9;
                                                dgListSubView.Columns[0].Width = _width * 1;
                                                dgListSubView.Columns[2].Width = _width * 3;
                                                dgListSubView.Columns[3].Width = _width * 5;

                                                for (int i = 0; i < dgListSubView.Rows.Count; i++)
                                                {
                                                    dgListSubView[0, i].Value = true;
                                                }
                                            }
                                            break;
                                        default:
                                            {
                                            }
                                            break;
                                    }

                                }
                            }

                        }
                        catch (gloDatabaseLayer.DBException ex)
                        {
                            ex.ERROR_Log(ex.ToString());
                        }
                        catch (Exception ex)
                        {
                            gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
                        }
                        finally
                        {
                            oDB.Disconnect();
                            oDB.Dispose();
                            oDB = null;
                            oParameters.Dispose();
                            oParameters = null;
                            _sqlQuery = null;
                        }
                    }
                }
            }
            else
            {
                for (int i = 0; i < dgListSubView.Rows.Count; i++)
                {
                    dgListSubView[0, i].Value = false;
                }
            }
            AddRemoveResources();
        } //For All selected Resource Types.

        public void OpenControl()
        {

            dgListView.ScrollBars = ScrollBars.Both;                                //Dhruv 20100215 scroll bar added to the physician datagridview.
            dgListView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.None;

            int nCount;
            int nSelCount;

            pnl_Base.Visible = false;
            pnl_ProcedureResourceHeader.Visible = false;
            dgListSubView.Visible = false;
            string[] strmod = new string[] { "M1", "M2", "M3", "M4" };
            List<string> lststrmod = new List<string>(strmod);
            if (_ListControlType == gloListControlType.Procedures)
            {
                pnl_Base.Visible = true;
                pnl_ProcedureResourceHeader.Visible = true;
                dgListSubView.Visible = true;
            }
            lblHeader.Text = _ControlHeader;

            try
            {
                if (dgListView.DataSource == null)
                {
                    //----Saket  [if no records present then do not open control]
                    //MessageBox.Show(" No records found ", _MessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Information);
                    //btnClose_Click(null, null);
                    //this.Dispose();                       
                    //------
                    lblSearch.Text = "Search :";
                    return;
                }

                if (_SelectedItems.Count > 0)
                {
                    if (_ismultiselect == false)
                    {
                        if ((_ListControlType == gloListControlType.Patient || _ListControlType == gloListControlType.AllPatient || _ListControlType == gloListControlType.ConflictingPatient) && !IsFromStatement)
                        {
                            if (dgListView != null && dgListView.Rows.Count > 0)
                            {
                                for (int i = 0; i < dgListView.Rows.Count; i++)
                                {
                                    if (Convert.ToString(dgListView.Rows[i].Cells[10].Value).ToUpper() == "LOCK CHARTS")
                                    {

                                        dgListView.Rows[i].DefaultCellStyle.ForeColor = System.Drawing.Color.Red;
                                        dgListView.Rows[i].DefaultCellStyle.SelectionForeColor = System.Drawing.Color.Red;
                                    }
                                }
                            }
                        }
                        if (dgListView.DataSource != null)
                        {
                            if (((DataView)dgListView.DataSource).Table.Rows.Count > 0)
                            {
                                for (nCount = 0; nCount <= ((DataView)dgListView.DataSource).Table.Rows.Count - 1; nCount++)
                                {
                                    if (dgListView.Rows[nCount].Cells[0].Value.ToString().Trim() != "")
                                    {
                                        if (Convert.ToInt64(dgListView.Rows[nCount].Cells[0].Value) == _id)
                                        {
                                            dgListView.Rows[nCount].Selected = true;
                                            dgListView.Select();

                                            return; // TODO: might not be correct. Was : Exit Sub 
                                        }
                                    }
                                }
                            }

                        }
                    }
                    else if (dgListView.RowCount > 0)
                    {
                        if (dgListView.DataSource != null)
                        {
                            if (((DataView)dgListView.DataSource).Table.Rows.Count > 0)
                            {
                                for (nSelCount = 0; nSelCount <= _SelectedItems.Count - 1; nSelCount++)
                                {
                                    for (nCount = 0; nCount <= ((DataView)dgListView.DataSource).Table.Rows.Count - 1; nCount++)
                                    {
                                        //For selecting record by Code 
                                        if (_ListControlType == gloListControlType.HistoryLOINC || _ListControlType == gloListControlType.CPT || _ListControlType == gloListControlType.CPTProcedures || _ListControlType == gloListControlType.Diagnosis || _ListControlType == gloListControlType.ReportAccountActionCode || _ListControlType == gloListControlType.ClinicalInstruction || _ListControlType == gloListControlType.CarePlan || _ListControlType == gloListControlType.BillingQuickNotes  || _ListControlType == gloListControlType.CQMCVXCOdes)
                                        {
                                            if (dgListView.Rows[nCount].Cells[2].Value.ToString().Trim() != "")
                                            {
                                                if (Convert.ToString(dgListView.Rows[nCount].Cells[2].Value).Trim() == _SelectedItems[nSelCount].Code)
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                            }
                                        }
                                        else if (_ListControlType == gloListControlType.PatientProblemList)
                                        {
                                            if (dgListView.Rows[nCount].Cells[1].Value.ToString().Trim() != "")
                                            {
                                                if (Convert.ToInt64 (dgListView.Rows[nCount].Cells[1].Value) == _SelectedItems[nSelCount].ID )
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                            }
                                        }

                                        else if (_ListControlType == gloListControlType.HealthConcern)
                                        {
                                            if (dgListView.Rows[nCount].Cells[1].Value.ToString().Trim() != "")
                                            {
                                                if (Convert.ToInt64(dgListView.Rows[nCount].Cells[1].Value) == _SelectedItems[nSelCount].ID)
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                            }
                                        }

                                        else if (_ListControlType == gloListControlType.Intervention)
                                        {
                                            if (dgListView.Rows[nCount].Cells[1].Value.ToString().Trim() != "")
                                            {
                                                if (Convert.ToInt64(dgListView.Rows[nCount].Cells[1].Value) == _SelectedItems[nSelCount].ID)
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                            }
                                        }

                                        else if (_ListControlType == gloListControlType.CarePlanLoincs)
                                        {
                                            if (dgListView.Rows[nCount].Cells[0].Value.ToString().Trim() != "")
                                            {
                                                if (Convert.ToString(dgListView.Rows[nCount].Cells[0].Value) == _SelectedItems[nSelCount].Code)
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                            }
                                        }
                                        else if (_ListControlType == gloListControlType.CarePlanMedication)
                                        {
                                            if (dgListView.Rows[nCount].Cells[1].Value.ToString().Trim() != "")
                                            {
                                                if (Convert.ToInt64(dgListView.Rows[nCount].Cells[1].Value) == _SelectedItems[nSelCount].ID)//medicationid
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                            }
                                        }
                                        else if (_ListControlType == gloListControlType.CarePlanProblemList)
                                        {
                                            if (dgListView.Rows[nCount].Cells[1].Value.ToString().Trim() != "")
                                            {
                                                if (Convert.ToInt64(dgListView.Rows[nCount].Cells[1].Value) == _SelectedItems[nSelCount].ID)//nProblemID
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                            }
                                        }
                                        else if (_ListControlType == gloListControlType.CarePlanEncounter)
                                        {
                                            if (dgListView.Rows[nCount].Cells[1].Value.ToString().Trim() != "")
                                            {
                                                if (Convert.ToInt64(dgListView.Rows[nCount].Cells[14].Value) == _SelectedItems[nSelCount].ID)//Row#
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                            }
                                        }
                                        else if (_ListControlType == gloListControlType.CarePlanImmunization)
                                        {
                                            if (dgListView.Rows[nCount].Cells[3].Value.ToString().Trim() != "")
                                            {
                                                if (Convert.ToInt64(dgListView.Rows[nCount].Cells[1].Value) == _SelectedItems[nSelCount].ID)//medicationid
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                            }
                                        }
                                        else if (_ListControlType == gloListControlType.CarePlanEducation)
                                        {
                                            if (dgListView.Rows[nCount].Cells[1].Value.ToString().Trim() != "")
                                            {
                                                if (Convert.ToInt64(dgListView.Rows[nCount].Cells[1].Value) == _SelectedItems[nSelCount].ID)//nEducationID
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                            }
                                        }
                                        else if (_ListControlType == gloListControlType.CarePlanNutrition)
                                        {
                                            if (dgListView.Rows[nCount].Cells[1].Value.ToString().Trim() != "")
                                            {
                                                if (Convert.ToInt64(dgListView.Rows[nCount].Cells[1].Value) == _SelectedItems[nSelCount].ID)//nID
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                            }
                                        }
                                        else if (_ListControlType == gloListControlType.CarePlanLabOrder)
                                        {
                                            if (dgListView.Rows[nCount].Cells[1].Value.ToString().Trim() != "")
                                            {
                                                if ((Convert.ToInt64(dgListView.Rows[nCount].Cells[1].Value) == _SelectedItems[nSelCount].ID) && dgListView.Rows[nCount].Cells[2].Value.ToString() == _SelectedItems[nSelCount].Code)//labotd_TestID & labom_OrderID
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                                
                                            }
                                        }
                                        else if (_ListControlType == gloListControlType.CarePlanGoals)
                                        {
                                            if (dgListView.Rows[nCount].Cells[1].Value.ToString().Trim() != "")
                                            {
                                                if (Convert.ToInt64(dgListView.Rows[nCount].Cells[1].Value) == _SelectedItems[nSelCount].ID)//nGoalID
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                            }
                                        }
                                        else if (_ListControlType == gloListControlType.PatientConsent)
                                        {
                                            if (dgListView.Rows[nCount].Cells[2].Value.ToString().Trim() != "")
                                            {
                                                if (Convert.ToString(dgListView.Rows[nCount].Cells[2].Value).Trim() == _SelectedItems[nSelCount].Description)
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();

                                                    break;
                                                }
                                            }
                                        }
                                        else if (_ListControlType == gloListControlType.Modifier)
                                        {
                                            if (dgListView.Rows[nCount].Cells[3].Value.ToString().Trim() != "")
                                            {
                                                if (Convert.ToString(dgListView.Rows[nCount].Cells[3].Value).Trim() == _SelectedItems[nSelCount].Code)
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    if (lststrmod.Contains("M1"))
                                                    {
                                                        dgListView.Rows[nCount].Cells[1].Value = "M1";
                                                        dgListView.Rows[nCount].Cells[6].Value = "M1";
                                                        lststrmod.Remove("M1");
                                                    }
                                                    else if (lststrmod.Contains("M2"))
                                                    {
                                                        dgListView.Rows[nCount].Cells[1].Value = "M2";
                                                        dgListView.Rows[nCount].Cells[6].Value = "M2";
                                                        lststrmod.Remove("M2");
                                                    }
                                                    else if (lststrmod.Contains("M3"))
                                                    {
                                                        dgListView.Rows[nCount].Cells[1].Value = "M3";
                                                        dgListView.Rows[nCount].Cells[6].Value = "M3";
                                                        lststrmod.Remove("M3");
                                                    }
                                                    else
                                                    {
                                                        dgListView.Rows[nCount].Cells[1].Value = "M4";
                                                        dgListView.Rows[nCount].Cells[6].Value = "M4";

                                                    }
                                                    dgListView.Select();
                                                    //DataRow drnew;
                                                    //drnew = dtSelected.Rows.Find(_SelectedItems[nSelCount].ID);

                                                    //if (drnew == null)
                                                    //{
                                                    //    DataRow dr = dtSelected.NewRow();

                                                    //    dr[0] = Convert.ToInt64(_SelectedItems[nSelCount].ID);
                                                    //    dr[1] = _SelectedItems[nSelCount].Code;
                                                    //    dtSelected.Rows.Add(dr);
                                                    //}

                                                    break;
                                                }
                                            }
                                        }
                                        //    //added for cqm measure changes
                                        else if ((_ListControlType == gloListControlType.CQMHCPCS) || (_ListControlType == gloListControlType.CQMICD10) || (_ListControlType == gloListControlType.CQMICD9) || (_ListControlType == gloListControlType.CQMOrders) || (_ListControlType == gloListControlType.CQMRxNorm) || (_ListControlType == gloListControlType.CQMSnomed) || (_ListControlType == gloListControlType.CQMCVX))
                                        {
                                            if (Convert.ToString(dgListView.Rows[nCount].Cells[2].Value).Trim() == Convert.ToString(_SelectedItems[nSelCount].Code).Trim())
                                            {
                                                dgListView.Rows[nCount].Cells[0].Value = true;
                                                dgListView.Select();
                                                break;
                                            }

                                        }

                                        else if (_ListControlType == gloListControlType.HistoryOBPhysicalExam)
                                        {
                                            if (Convert.ToString(dgListView.Rows[nCount].Cells[1].Value).Trim() != "")
                                            {
                                                if (Convert.ToString(dgListView.Rows[nCount].Cells[2].Value).Trim() == Convert.ToString(_SelectedItems[nSelCount].Description).Trim())
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                            }
                                        }//End

                                            //Fixed Bug Id 64777 on 20140227
                                        else if (_ListControlType == gloListControlType.OrderQuickNotes)
                                        {
                                            if (Convert.ToString(dgListView.Rows[nCount].Cells[1].Value).Trim() != "")
                                            {
                                                if (Convert.ToInt64(dgListView.Rows[nCount].Cells[1].Value) == _SelectedItems[nSelCount].ID)
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                            }
                                        }//End Bug Id 64777
                                        else if (_ListControlType == gloListControlType.OBVitalComments)
                                        {
                                            if (Convert.ToString(dgListView.Rows[nCount].Cells[1].Value).Trim() != "")
                                            {
                                                if (Convert.ToInt64(dgListView.Rows[nCount].Cells[1].Value) == _SelectedItems[nSelCount].ID)
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                            }
                                        }
                                        else if (_ListControlType == gloListControlType.AllPatientInsurances)
                                        {
                                            if (dgListView.Rows[nCount].Cells[1].Value.ToString().Trim() != "")
                                            {
                                                if (Convert.ToString(dgListView.Rows[nCount].Cells[2].Value).Trim() == _SelectedItems[nSelCount].Description.Trim())
                                                {
                                                    dgListView.Rows[nCount].Cells[0].Value = true;
                                                    dgListView.Select();
                                                    break;
                                                }
                                            }
                                        }
                                        else  //For selecting record by ID
                                        {
                                            //if ( (dgListView.Rows[nCount].Cells[1].Value) != "")
                                            {
                                                if (_ListControlType == gloListControlType.Pharmacy)
                                                {
                                                    _isdefault = _SelectedItems[nSelCount].Default;
                                                    if (Convert.ToInt64(dgListView.Rows[nCount].Cells[2].Value) == _SelectedItems[nSelCount].Default)
                                                    {
                                                        dgListView.Rows[nCount].Cells[1].Value = true;

                                                        //20110111 TO SET ISDEFAULT CHECK AFTER MODIFY

                                                        _isdefault = Convert.ToInt64(dgListView.Rows[nCount].Cells[2].Value);
                                                    }
                                                }

                                                if (_ListControlType == gloListControlType.Pharmacy)
                                                {
                                                    if (Convert.ToInt64(dgListView.Rows[nCount].Cells[2].Value) == _SelectedItems[nSelCount].ID)
                                                    {
                                                        dgListView.Rows[nCount].Cells[0].Value = true;
                                                        // dgListView.Select();//line commneted by Sandip Darade 20100529 the fix the first record selection issue for referral

                                                        break;
                                                    }
                                                }
                                                else if (_ListControlType == gloListControlType.Procedures)
                                                {
                                                    if (Convert.ToInt64(dgListView.Rows[nCount].Cells[1].Value) == _SelectedItems[nSelCount].ID)
                                                    {
                                                        dgListView.Rows[nCount].Cells[0].Value = true;
                                                        dgListView.Rows[nCount].Selected = true;
                                                        FillSubListAsCriteria(Convert.ToInt64(_SelectedItems[nSelCount].ID.ToString()));
                                                        break;
                                                    }
                                                    else if (dgListSubView.Rows.Count > nCount)
                                                    {
                                                        if (dgListView.Rows.Count > nCount)
                                                        {
                                                            if (Convert.ToInt64(dgListView[0, nCount].Value) == 1)
                                                            {

                                                                for (int subCount = 0; subCount <= ((DataView)dgListSubView.DataSource).Table.Rows.Count - 1; subCount++)
                                                                {
                                                                    if (Convert.ToInt64(dgListSubView.Rows[subCount].Cells[1].Value) == _SelectedItems[nSelCount].ID)
                                                                    {
                                                                        dgListSubView.Rows[subCount].Cells[0].Value = true;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                else if (_ListControlType==gloListControlType.Taxonomy)
                                                {
                                                    if (_SelectedItems[nSelCount].ID == 0)
                                                    {
                                                        for (int i = 0; i < dgListView.Rows.Count - 1; i++)
                                                        {
                                                            dgListView.Rows[nCount].Cells[0].Value = true;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (Convert.ToInt64(dgListView.Rows[nCount].Cells[1].Value) == _SelectedItems[nSelCount].ID)
                                                        {
                                                            dgListView.Rows[nCount].Cells[0].Value = true;
                                                            break;
                                                        }
                                                    }
                                                }

                                                else
                                                {

                                                    if (Convert.ToInt64(dgListView.Rows[nCount].Cells[1].Value) == _SelectedItems[nSelCount].ID)
                                                    {
                                                        dgListView.Rows[nCount].Cells[0].Value = true;
                                                        break;
                                                    }

                                                }

                                            }

                                        }
                                    }

                                    if (_ListControlType == gloListControlType.OBVitalComments)
                                    {
                                        if (dgListView.Rows[nCount].Cells[1].Value.ToString().Trim() != "")
                                        {
                                            if (Convert.ToString(dgListView.Rows[nCount].Cells[2].Value).Trim() == _SelectedItems[nSelCount].Description.Trim())
                                            {
                                                dgListView.Rows[nCount].Cells[0].Value = true;
                                                dgListView.Select();
                                                break;
                                            }
                                        }

                                    }

                                    if (_ListControlType == gloListControlType.Diagnosis)
                                    {

                                        if ((loadfirsttime == true) && (_ismultiselect == true))
                                        {
                                            DataTable dtselectdiag = FillICDSelectedDiagnosis();
                                            DataColumn dcID1 = new DataColumn("Check1", typeof(int));

                                            dcID1.DefaultValue = 0;
                                            if (dtselectdiag != null)
                                            {
                                                dtselectdiag.Columns.Add(dcID1);
                                                int cntrec = 0;
                                                foreach (DataRow dr in dtselectdiag.Rows)
                                                {
                                                    DataRow[] drr = _dvList.ToTable().Select("nICD9ID=" + dr[0].ToString());

                                                    if (drr.Length == 0)
                                                    {
                                                        DataRow drnew = dtSelected.NewRow();

                                                        drnew[0] = Convert.ToInt64(dr["nICD9ID"]);
                                                        drnew[1] = dr["sICD9Code"];


                                                        dtSelected.Rows.Add(drnew);
                                                        dr["Check1"] = true;
                                                        _dvList.Table.ImportRow(dr);
                                                        cntrec += 1;

                                                    }
                                                    else
                                                    {
                                                        DataRow[] dtr = dtSelected.Select("ID='" + dr[0].ToString() + "'");

                                                        if (dtr.Length == 0)
                                                        {
                                                            DataRow drnew = dtSelected.NewRow();

                                                            drnew[0] = Convert.ToInt64(dr["nICD9ID"]);
                                                            drnew[1] = dr["sICD9Code"];


                                                            dtSelected.Rows.Add(drnew);
                                                        }
                                                    }
                                                    if (drr.Length > 0) //use to maintain all select ICD list
                                                    {
                                                        DataRow[] drstorediag = _dtStoreDiagnosis.Select("nICD9ID=" + drr[0]["nICD9ID"].ToString());
                                                        if (drstorediag.Length == 0)
                                                        {
                                                            drr[0]["Check1"] = true;
                                                            _dtStoreDiagnosis.ImportRow(drr[0]);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        DataRow[] drstorediag = _dtStoreDiagnosis.Select("nICD9ID=" + dr["nICD9ID"].ToString());
                                                        if (drstorediag.Length == 0)
                                                        {
                                                            dr["Check1"] = true;
                                                            _dtStoreDiagnosis.ImportRow(dr);
                                                        }
                                                    }

                                                }

                                                dgListView.DataSource = _dvList;
                                                if (cntrec == 1)
                                                {
                                                    dgListView.Rows[_dvList.Table.Rows.Count - 1].Cells[0].Value = 1;
                                                }
                                            }
                                        }
                                        loadfirsttime = false;




                                    }

                                    //if (_ListControlType==gloListControlType.PatientConsent)
                                    //{
                                    //    if ((loadfirsttime==true) && (_ismultiselect==true))
                                    //    {

                                    //        DataRow drnew = dtSelected.NewRow();

                                    //        drnew[0] = Convert.ToInt64(_));
                                    //        drnew[1] = dr["sICD9Code"];


                                    //        dtSelected.Rows.Add(drnew);
                                    //        //dr["Check1"] = true;
                                    //        _dvList.Table.ImportRow(dr);
                                    //        cntrec += 1;
                                    //    }
                                    //}





                                }
                            }
                        }
                    }

                    if (_ListControlType == gloListControlType.Procedures)
                    {
                        TreeNode oNode;
                        TreeNode oSubNode;
                        trvItems.Nodes.Clear();

                        for (nCount = 0; nCount <= _SelectedItems.Count - 1; nCount++)
                        {
                            oNode = new TreeNode();
                            oNode.Text = _SelectedItems[nCount].Description;
                            oNode.Tag = _SelectedItems[nCount].ID;

                            for (int i = 0; i <= _SelectedItems[nCount].SubItems.Count - 1; i++)
                            {
                                oSubNode = new TreeNode();
                                oSubNode.Text = _SelectedItems[nCount].SubItems[i].Description;
                                oSubNode.Tag = _SelectedItems[nCount].SubItems[i].ID;
                                oSubNode.ToolTipText = _SelectedItems[nCount].SubItems[i].Code;
                                oNode.Nodes.Add(oSubNode);
                                oSubNode = null;
                            }

                            trvItems.Nodes.Add(oNode);
                            oNode = null;
                        }
                    }
                }


                if (_ismultiselect == true)
                {
                    //if (_SelectedItems != null)
                    {
                        // code below added to pull 1000 records only while loading 20100728
                        //HistoryOBPhysicalExam added for bugid 83745 while searching not saving initialphysicalexam 
                        if (_ListControlType == gloListControlType.Providers || _ListControlType == gloListControlType.Resources || _ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians || _ListControlType == gloListControlType.Patient || _ListControlType == gloListControlType.HistoryItem || _ListControlType == gloListControlType.Pharmacy || _ListControlType == gloListControlType.Race || _ListControlType == gloListControlType.Ethnicity || _ListControlType == gloListControlType.MedicalCategory || _ListControlType == gloListControlType.OBMedicalCategory || (_ListControlType == gloListControlType.Users && tsb_UserGroups.Text == "Groups") || _ListControlType == gloListControlType.PatientRepresentative || _ListControlType == gloListControlType.DMSCategory || _ListControlType == gloListControlType.HistoryOBPhysicalExam || _ListControlType == gloListControlType.ApptSelectedCols)
                        {
                            foreach (gloGeneralItem.gloItem n in _SelectedItems)
                            {
                                {
                                    DataRow dr = dtSelected.NewRow();
                                    dr[0] = n.ID;
                                    dr[1] = n.Description;
                                    if (IsgloCollectCustomer)
                                    {
                                        dr[2] = n.bGloCollect;
                                    }
                                    //20100810: To handle duplicate records which might come after merging or through any interface
                                    DataRow r;
                                    r = dtSelected.Rows.Find(n.ID);
                                    // check for same row does not find in Table 
                                    //if not found then add else skip
                                    if (r == null)
                                    {
                                        dtSelected.Rows.Add(dr);
                                    }
                                    //  
                                }
                            }
                        }


                        if (_ListControlType == gloListControlType.CQMICD9
                             || _ListControlType == gloListControlType.CQMOrders
                               || _ListControlType == gloListControlType.CQMSnomed
                              || _ListControlType == gloListControlType.CQMRxNorm
                              || _ListControlType == gloListControlType.CQMHCPCS
                              || _ListControlType == gloListControlType.CQMCVX)
                        {

                            foreach (gloGeneralItem.gloItem n in _SelectedItems)
                            {
                                DataRow dr = dtSelected.NewRow();
                                dr[0] = n.Code ;
                                dr[1] = n.Description;

                                DataRow r;
                                r = dtSelected.Rows.Find(n.Code);
                                // check for same row does not find in Table 
                                //if not found then add else skip
                                if (r == null)
                                {
                                    dtSelected.Rows.Add(dr);
                                }
                            }
                        }
                        //End code commentded on 20100707


                        dgListView.EndEdit();
                        int Count = 0;
                        int listcount = 0;
                        Int16 nIDColumn = 0;
                        for (listcount = 0; listcount < dgListView.Rows.Count; listcount++)
                        {
                            if (Convert.ToBoolean(dgListView.Rows[listcount].Cells[0].Value) == true)
                            {
                                //commenetd by Mayuri:20100706-
                                if (dgListView.Columns[1].HeaderText == "Id" || dgListView.Columns[1].HeaderText == "UserId" || dgListView.Columns[1].HeaderText == "Insurance ID" || dgListView.Columns[1].HeaderText == "nHistoryDetailsID" || dgListView.Columns[1].HeaderText == "nCategoryID") //condition "Insurance ID" added by nilesh on 20110329 for case GLO2010-0010142
                                {
                                    nIDColumn = 1;
                                }

                                else if (dgListView.Columns[2].HeaderText == "Id" || dgListView.Columns[2].HeaderText == "UserId")
                                {
                                    nIDColumn = 2;
                                }

                                DataRow to_be_edited = _dvList.Table.Rows.Find(dgListView.Rows[listcount].Cells[nIDColumn].Value);
                                if (to_be_edited != null)
                                {
                                    to_be_edited["Check1"] = 1;
                                    Count++;
                                }
                            }
                        }

                        if (listcount > 0)
                        {
                            if (Count == listcount)
                            {
                                chkSelectAll.Checked = true;
                            }
                            else
                            {
                                chkSelectAll.Checked = false;
                            }
                            if (dtSelected != null)
                            {
                                if (_ListControlType == gloListControlType.MedicalCategory)
                                {
                                    if (listcount == dtSelected.Rows.Count)
                                    {
                                        chkSelectAll.Checked = true;
                                    }
                                }
                            }
                        }

                        if (listcount > 0)
                        {
                            if (Count == listcount)
                            {
                                chkSelectAll.Checked = true;
                            }
                            else
                            {
                                chkSelectAll.Checked = false;
                            }
                            if (dtSelected != null)
                            {
                                if (_ListControlType == gloListControlType.ApptSelectedCols)
                                {
                                    if (listcount == dtSelected.Rows.Count)
                                    {
                                        chkSelectAll.Checked = true;
                                    }
                                }
                            }
                        }
                    }

                    ////Added by Mayuri:on 20100508-To fill users of selected group
                    if (_ListControlType == gloListControlType.Users)
                    {
                        _dtGroupList = GetGroups();
                        //Modified by Mayuri:20100706

                        DataColumn dcgroupID = new DataColumn("Check1", typeof(int));

                        dcgroupID.DefaultValue = 0;
                        _dtGroupList.Columns.Add(dcgroupID);
                        DataColumn[] pk2 = new DataColumn[] { _dtGroupList.Columns[0] };
                        _dtGroupList.PrimaryKey = pk2;

                        //To handle already selected items which comes while opening the form.
                    }
                }

                if ((_ListControlType == gloListControlType.Patient || _ListControlType == gloListControlType.AllPatient || _ListControlType == gloListControlType.ConflictingPatient || _ListControlType == gloListControlType.ImplantableDevices) && !IsFromStatement)
                {
                    for (int i = 0; i < dgListView.Rows.Count; i++)
                    {
                        if (Convert.ToString(dgListView.Rows[i].Cells[10].Value).ToUpper() == "LOCK CHARTS")
                        {

                            dgListView.Rows[i].DefaultCellStyle.ForeColor = System.Drawing.Color.Red;
                            dgListView.Rows[i].DefaultCellStyle.SelectionForeColor = System.Drawing.Color.Red;
                        }
                    }
                }
                if (CallingForm=="Claim Rule")
                {
                    if (sPredicateType == "And")
                    {
                        rd_ANDPredicate.Checked = true;
                        rd_ORPredicate.Checked = false;
                    }
                    else
                    {
                        rd_ANDPredicate.Checked = false;
                        rd_ORPredicate.Checked = true;
                    }
                }
            }

            catch (Exception ex)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
            }
            finally
            {
                //_isControlLoading = false;
                Array.Clear(strmod, 0, strmod.Length);
                strmod = null;

                if (lststrmod != null)
                {
                    lststrmod.Clear();
                    lststrmod = null;
                }

            }
            this.Visible = true;
            this.BringToFront();
        }



        #endregion

        #region "Data Grid View Events"

        private void dgListView_SelectionChanged(object sender, EventArgs e)
        {
            if (_ismultiselect == true)
            {
                if (_ListControlType == gloListControlType.Modifier)
                {
                    if (dgListView.CurrentCell != null)
                    {
                        int index = dgListView.CurrentCell.RowIndex;


                        if (index >= 0)
                        {
                            if (dgListView.Columns.Count >= 7)
                            {


                                if (dgListView[1, index].Value != null)
                                {
                                    dgListView[6, index].Value = dgListView[1, index].Value;
                                }



                                if ((index - 1) >= 0)
                                {
                                    if (dgListView[1, (index - 1)].Value != null)
                                    {
                                        dgListView[6, (index - 1)].Value = dgListView[1, (index - 1)].Value;
                                    }

                                }
                                if ((index + 1) < dgListView.Rows.Count)
                                {
                                    if (dgListView[1, (index + 1)].Value != null)
                                    {
                                        dgListView[6, (index + 1)].Value = dgListView[1, (index + 1)].Value;
                                    }
                                }
                            }

                        }
                    }
                }
            }
        }

        private void dgListView_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            if ((_ListControlType == gloListControlType.Patient || _ListControlType == gloListControlType.AllPatient || _ListControlType == gloListControlType.ConflictingPatient) && !IsFromStatement)
            {
                if (dgListView != null && dgListView.Rows.Count > 0)
                {
                    for (int i = 0; i < dgListView.Rows.Count; i++)
                    {
                        if (e.RowIndex >= 0)
                        {
                            if (Convert.ToString(dgListView.Rows[e.RowIndex].Cells[10].Value).ToUpper() == "LOCK CHARTS")
                            {
                                MessageBox.Show("The status of the patient is 'Lock Charts'. " + Environment.NewLine + "You can not perform any activity on this patient", _MessageBoxCaption, System.Windows.Forms.MessageBoxButtons.OK, System.Windows.Forms.MessageBoxIcon.Warning);
                                return;
                            }
                        }
                    }
                }
            }
            if (e.RowIndex != -1)
            {
                if (_ismultiselect == false)
                {
                    btnSelect_Click(null, null);
                }
            }
        }

        public void dgListView_RowEnter(object sender, DataGridViewCellEventArgs e)
        {
            try
            {
                if (_ismultiselect == false)
                {
                    if (e.RowIndex >= 0)
                    {
                        switch (_ListControlType)
                        {
                            case gloListControlType.Other:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = "";
                                    if (dgListView.Columns.Count >= 2)
                                    {
                                        _name = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    }
                                    else
                                    {
                                        _name = "";
                                    }
                                }
                                break;

                            case gloListControlType.Patient:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.PendingLabPatients:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.AllPatient:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.Pharmacy:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[9, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _phoneNumber = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                    _faxNumber = dgListView[3, e.RowIndex].Value.ToString().Trim();

                                    _address1 = dgListView[4, e.RowIndex].Value.ToString().Trim();
                                    _address2 = dgListView[5, e.RowIndex].Value.ToString().Trim();
                                    _city = dgListView[6, e.RowIndex].Value.ToString().Trim();
                                    _state = dgListView[7, e.RowIndex].Value.ToString().Trim();
                                    _zip = dgListView[8, e.RowIndex].Value.ToString().Trim();

                                    if (_ismultiselect == true)
                                    {
                                        if (Convert.ToBoolean(dgListView[12, e.RowIndex].Value) == true)
                                            _isdefault = Convert.ToInt64(dgListView[12, e.RowIndex].Value);
                                    }
                                }
                                break;

                            case gloListControlType.Insurance:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[3, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.Hospital:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.Physicians:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = "";

                                    //ADDED BY SHUBHANGI 20100609 ADD PREFIX & SUFFIX INTO PHYSICIANS IF THEY PRESENT 

                                    if (dgListView[1, e.RowIndex].Value.ToString() != "" && dgListView[5, e.RowIndex].Value.ToString() != "")
                                    {
                                        _name = dgListView[1, e.RowIndex].Value.ToString().Trim() + " " + dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim() + " " + dgListView[5, e.RowIndex].Value.ToString().Trim();
                                    }
                                    else if (dgListView[1, e.RowIndex].Value.ToString() == "" && dgListView[5, e.RowIndex].Value.ToString() != "")
                                    {
                                        _name = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim() + " " + dgListView[5, e.RowIndex].Value.ToString().Trim();
                                    }
                                    else if (dgListView[1, e.RowIndex].Value.ToString() != "" && dgListView[5, e.RowIndex].Value.ToString() == "")
                                    {
                                        _name = dgListView[1, e.RowIndex].Value.ToString().Trim() + " " + dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim();
                                    }
                                    else
                                    {
                                        _name = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim();
                                    }
                                    if (_ShowPhysiciansWithProvider == true)
                                    {
                                        if (dgListView[13, e.RowIndex].Value.ToString().Trim() != "")
                                            _code = dgListView[13, e.RowIndex].Value.ToString().Trim();
                                    }

                                }
                                break;

                            case gloListControlType.Referrals:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = "";

                                    //ADDED BY SHUBHANGI 20100609 ADD PREFIX & SUFFIX INTO PHYSICIANS IF THEY PRESENT

                                    if (dgListView[1, e.RowIndex].Value.ToString().Trim() != "" && dgListView[5, e.RowIndex].Value.ToString().Trim() != "")
                                    {
                                        _name = dgListView[1, e.RowIndex].Value.ToString().Trim() + " " + dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim() + " " + dgListView[5, e.RowIndex].Value.ToString().Trim();
                                    }
                                    else if (dgListView[1, e.RowIndex].Value.ToString().Trim() == "" && dgListView[5, e.RowIndex].Value.ToString().Trim() != "")
                                    {
                                        _name = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim() + " " + dgListView[5, e.RowIndex].Value.ToString().Trim();
                                    }
                                    else if (dgListView[1, e.RowIndex].Value.ToString().Trim() != "" && dgListView[5, e.RowIndex].Value.ToString().Trim() == "")
                                    {
                                        _name = dgListView[1, e.RowIndex].Value.ToString().Trim() + " " + dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim();
                                    }
                                    else
                                    {
                                        _name = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim();
                                    }
                                }
                                break;

                            case gloListControlType.Providers:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = "";
                                    //ADDED IF CONDIFITION FOR THE CASE   GLO2010-0004942
                                    if (dgListView[2, e.RowIndex].Value.ToString().Trim() == "")
                                    {
                                        _name = dgListView[1, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim();
                                    }
                                    else
                                    {
                                        _name = dgListView[1, e.RowIndex].Value.ToString().Trim() + " " + dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim();
                                    }
                                }
                                break;

                            case gloListControlType.ReportProviders:
                                {
                                    _id = Convert.ToInt64(dgListView[1, e.RowIndex].Value);
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.ClinicalInstruction:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.ReportAccountActionCode:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.Resources:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.Procedures:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.Modifier:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.CPT:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.CPTProcedures:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.HistoryLOINC:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.CQMCVXCOdes:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.CarePlanLoincs:
                                {
                                    _id = 0;
                                    _code = dgListView[0, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[3, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.Diagnosis:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.PatientConsent:
                                _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                break;
                            case gloListControlType.ImplantableDevices:
                                _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                _code = dgListView[3, e.RowIndex].Value.ToString().Trim();
                                _name = dgListView[5, e.RowIndex].Value.ToString().Trim();
                                break;
                            case gloListControlType.Users:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);//UserID
                                    _code = dgListView[5, e.RowIndex].Value.ToString().Trim();//Email
                                    // _name = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim();
                                    //commented Sandip Darade 
                                    //If single user to be selected 
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.PatientInsurence:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.EMRPatient: //20080804
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.InsuranceServiceType: //20081007
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.Taxonomy: //20081110
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.AppointmentType:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _name = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _code = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.AllPatientInsurances:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            //Sandip Darade 20090630
                            case gloListControlType.PreferredLab:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.Facility: //20081110
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.ChargeTray: //20081110
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.PaymentTray: //20081110
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.ConflictingPatient:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    //_name = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.PaymentType:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    //_name = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim();
                                    //_name = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.InsuranceCompany:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.InsuranceReportingCategory:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.BillingType:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.FeeShedule:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.ERAPayer:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.HistoryItem:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.Location:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.AppointmentTypeType:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            //Added by SaiKrishna:2011-06-27(yyyy-mm-dd) for Patient Account Feature
                            case gloListControlType.GuarantorsAccounts:
                            case gloListControlType.PatientAccounts: //Added By Mahesh S(Apollo) for MergeAccount on 2011-06-27(yyyy-mm-dd)
                            case gloListControlType.Accounts:  //Added by SaiKrishna:2011-06-27(yyyy-mm-dd)
                                {
                                    // represents nPAccountId
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    // represents Acct.#
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    //represents AccountDesc
                                    _name = dgListView[6, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.PatientOtherGuarantors://Added by SaiKrishna:2011-04-15(yyyy-mm-dd)
                                {
                                    // represents PatientId
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    // represents nPatientContactID(guarantorId)
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();

                                }
                                break;
                            case gloListControlType.Template:  //Added by SaiKrishna:2011-06-27(yyyy-mm-dd)
                                {
                                    // represents Template ID
                                    _id = Convert.ToInt64(dgListView[2, e.RowIndex].Value);
                                    //represents Template Name
                                    _name = dgListView[3, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.StmtDisplaySettings:
                                {
                                    // represents StmtDisplaySettings ID
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    //represents StmtDisplaySettings Name
                                    _name = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.OrderQuickNotes:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.OBVitalComments:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.CarePlan:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _name = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.PatientProblemList :
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _name = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.HealthConcern:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _name = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.Intervention:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _name = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.CarePlanMedication:
                                {
                                    _id = Convert.ToInt64(dgListView[1, e.RowIndex].Value);//medicationid
                                    _name = dgListView[3, e.RowIndex].Value.ToString().Trim();//medicationname
                                }
                                break;
                            case gloListControlType.CarePlanProblemList:
                                {
                                    _id = Convert.ToInt64(dgListView[1, e.RowIndex].Value);//nProblemId
                                    _name = dgListView[7, e.RowIndex].Value.ToString().Trim();//Problem
                                }
                                break;
                            case gloListControlType.CarePlanEncounter:
                                {
                                    _id = Convert.ToInt64(dgListView[14, e.RowIndex].Value);//examid
                                    _name = dgListView[3, e.RowIndex].Value.ToString().Trim();//examname
                                }
                                break;
                            case gloListControlType.CarePlanImmunization:
                                {
                                    _id = Convert.ToInt64(dgListView[1, e.RowIndex].Value);//immunization transaction id 
                                    _name = dgListView[3, e.RowIndex].Value.ToString().Trim();//vaccine name
                                }
                                break;
                            case gloListControlType.CarePlanEducation:
                                {
                                    _id = Convert.ToInt64(dgListView[1, e.RowIndex].Value);//nEducationID
                                    _name = dgListView[3, e.RowIndex].Value.ToString().Trim();//sTemplateName
                                }
                                break;
                            case gloListControlType.CarePlanNutrition:
                                {
                                    _id = Convert.ToInt64(dgListView[1, e.RowIndex].Value);//nID
                                    _name = dgListView[6, e.RowIndex].Value.ToString().Trim();//sEMRDisplayName
                                }
                                break;
                            case gloListControlType.CarePlanLabOrder:
                                {
                                    _id = Convert.ToInt64(dgListView[1, e.RowIndex].Value);//labotd_TestID
                                    _code = dgListView[2, e.RowIndex].Value.ToString().Trim();//labom_OrderID
                                    _name = dgListView[3, e.RowIndex].Value.ToString().Trim();//labotd_TestName
                                }
                                break;
                            case gloListControlType.CarePlanGoals:
                                {
                                    _id = Convert.ToInt64(dgListView[1, e.RowIndex].Value);//nGoalID
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();//sGoalName
                                }
                                break;
                            case gloListControlType.BillingQuickNotes:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.ReasonCode:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();// +" " + dgListView[2, e.RowIndex].Value.ToString().Trim();
                                    if (chkIncludeDescription.Checked)
                                    {
                                        _name = dgListView[3, e.RowIndex].Value.ToString().Trim();
                                    }
                                    else
                                    {
                                        _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                    }
                                }
                                break;
                            case gloListControlType.RemarkCode:
                                {
                                    _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    if (chkIncludeDescription.Checked)
                                    {
                                        _name = dgListView[3, e.RowIndex].Value.ToString().Trim();
                                    }
                                    else
                                    {
                                        _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                    }
                                }
                                break;
                            case gloListControlType.MedicalCategory:
                                {
                                    _id = Convert.ToInt64(dgListView[1, e.RowIndex].Value);
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.OBMedicalCategory:
                                {
                                    _id = Convert.ToInt64(dgListView[1, e.RowIndex].Value);
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.ApptSelectedCols:
                                {
                                    _id = Convert.ToInt64(dgListView[1, e.RowIndex].Value);
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.MUCQMRefusedCode:
                                {
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;
                            case gloListControlType.TagSnomed:
                                {
                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                }
                                break;

                            case gloListControlType.CQMCategoriesValueSet:
                                {
                                   
                                    _code = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                
                                   
                                }
                                break;

                            case gloListControlType.ConceptID:
                                {

                                    _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                    _name = dgListView[2, e.RowIndex].Value.ToString().Trim();

                                }
                                break;

                            default:
                                {
                                }
                                break;
                        }
                    }

                } //  if (_ismultiselect == false)
                else
                {
                    // if multiselect=true

                    if (_ListControlType == gloListControlType.Modifier)
                    {
                        if (e.RowIndex >= 0)
                        {
                            if (dgListView.Columns.Count >= 7)
                            {
                                if (dgListView[1, e.RowIndex].Value != null)
                                {
                                    dgListView[6, e.RowIndex].Value = dgListView[1, e.RowIndex].Value;

                                }
                                if ((_previndex != e.RowIndex) && (_previndex >= 0) && (_previndex < dgListView.Rows.Count))
                                {
                                    if (dgListView[1, _previndex].Value != null)
                                    {
                                        dgListView[6, _previndex].Value = dgListView[1, _previndex].Value;
                                    }

                                }
                            }
                            _previndex = e.RowIndex;
                        }

                    }
                }

                if (_ListControlType == gloListControlType.Procedures)
                {
                    if (_FillInProcess == false)
                    {
                        if (_ismultiselect == false)
                        {
                            FillSubListAsCriteria(Convert.ToInt64(dgListView[0, e.RowIndex].Value.ToString()));
                            trvItems.Nodes.Clear();
                        }
                        else
                        {
                            FillSubListAsCriteria(Convert.ToInt64(dgListView[1, e.RowIndex].Value.ToString()));

                            //select existing nodes
                            for (int i = 0; i <= trvItems.GetNodeCount(false) - 1; i++)
                            {
                                if (Convert.ToInt64(trvItems.Nodes[i].Tag.ToString()) == Convert.ToInt64(Convert.ToInt64(dgListView[1, e.RowIndex].Value.ToString())))
                                {
                                    for (int j = 0; j <= trvItems.Nodes[i].GetNodeCount(false) - 1; j++)
                                    {
                                        for (int k = 0; k <= dgListSubView.Rows.Count - 1; k++)
                                        {
                                            if (Convert.ToInt64(trvItems.Nodes[i].Nodes[j].Tag.ToString()) == Convert.ToInt64(Convert.ToInt64(dgListSubView[1, k].Value.ToString())))
                                            {
                                                if (Convert.ToInt64(dgListView[0, e.RowIndex].Value) == 1)
                                                {
                                                    dgListSubView[0, k].Value = true;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    break;
                                }
                            }

                            if (Convert.ToInt64(dgListView[0, e.RowIndex].Value) == 1)
                            {
                                for (int nSelCount = 0; nSelCount <= _SelectedItems.Count - 1; nSelCount++)
                                {
                                    if (dgListSubView.DataSource != null)
                                    {
                                        for (int subCount = 0; subCount <= ((DataView)dgListSubView.DataSource).Table.Rows.Count - 1; subCount++)
                                        {
                                            if (Convert.ToInt64(dgListSubView.Rows[subCount].Cells[1].Value) == _SelectedItems[nSelCount].ID)
                                            {
                                                dgListSubView.Rows[subCount].Cells[0].Value = true;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                else if (_ListControlType == gloListControlType.PendingLabPatients)
                {
                    if (_ismultiselect == false)
                    {
                        _id = Convert.ToInt64(dgListView[0, e.RowIndex].Value);
                        _code = dgListView[1, e.RowIndex].Value.ToString().Trim();
                        _name = dgListView[2, e.RowIndex].Value.ToString().Trim();
                        _SelectedItems.Clear();
                        if (_id > 0) { _SelectedItems.Add(_id, _code, _name); }
                        if (ItemSelection_Change != null) { ItemSelection_Change(null, null); }

                    }
                }
                if (_ListControlType == gloListControlType.Pharmacy && _FillInProcess == false)
                {

                    if (e.RowIndex >= 0)
                    {
                        //
                        Int16 nePharmacy = 0;
                        if (_ismultiselect == true)
                        {
                            if (dgListView.Columns[11].HeaderText == "e-Pharmacy")
                            {
                                nePharmacy = 11;
                            }
                            else // TODO : Need to check, seems to be unreachable codebase
                                if (dgListView.Columns[12].HeaderText == "e-Pharmacy")
                                {
                                    nePharmacy = 12;
                                }
                        }
                        else
                        {
                            if (dgListView.Columns[10].HeaderText == "e-Pharmacy")
                            {
                                nePharmacy = 10;
                            }
                            else  // TODO : Need to check, seems to be unreachable codebase
                                if (dgListView.Columns[11].HeaderText == "e-Pharmacy")
                                {
                                    nePharmacy = 11;
                                }
                        }
                        //
                        string IsePharmacy = string.Empty;
                        ////
                        if (_ismultiselect == true)
                        {
                            if (dgListView.Columns.Count >= 16)
                            {
                                if (dgListView.Columns[nePharmacy].HeaderText == "e-Pharmacy")
                                {
                                    IsePharmacy = dgListView[nePharmacy, e.RowIndex].Value.ToString();
                                }
                            }
                            else if (dgListView.Columns[nePharmacy].HeaderText == "e-Pharmacy")
                            {
                                IsePharmacy = dgListView[nePharmacy, e.RowIndex].Value.ToString();
                            }
                        }
                        else
                        {
                            IsePharmacy = dgListView[10, e.RowIndex].Value.ToString();
                        }

                        if (IsePharmacy != "")
                        {
                            bool v = Convert.ToBoolean(IsePharmacy);
                            if (v)
                            {
                                tsb_Modify.Enabled = false;

                            }
                            else
                            {
                                tsb_Modify.Enabled = true;
                            }
                        }
                    }
                }

                //if (e.ColumnIndex == 0)
                //{
                //  DataRow to_be_edited;

                if (dtSelected != null)
                {
                    if (dtSelected.Rows.Count > 0)
                    {
                        if (dtSelected.Columns.Contains("ID") && dtSelected.Columns.Contains("GloCollect"))
                        {
                            dtSelected.PrimaryKey = new DataColumn[] { dtSelected.Columns["ID"] };
                        }

                        for (int i = 0; i <= dgListView.Rows.Count - 1; i++)
                        {
                            DataRow drnew;
                            if (_ListControlType == gloListControlType.Pharmacy)
                            {
                                drnew = dtSelected.Rows.Find(dgListView.Rows[i].Cells[2].Value);
                            }
                            else
                            {
                                drnew = dtSelected.Rows.Find(dgListView.Rows[i].Cells[1].Value);
                            }
                            if (drnew != null)
                            {
                                dgListView.Rows[i].Cells[0].Value = true;
                            }
                        }
                    }
                }
                //}
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString(), _MessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
        }

        private void dgListView_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            try
            {
                dgListView.EndEdit();
                bool DisSelect = false;

                for (int i = 0; i < dgListView.Rows.Count; i++)
                {
                    if (_ListControlType != gloListControlType.CarePlanLoincs)
                    {
                        if (Convert.ToBoolean(dgListView.Rows[i].Cells[0].Value) == false)
                        {
                            DisSelect = true;
                            break;
                        }
                    }
                    
                }
                this.chkSelectAll.CheckedChanged -= new EventHandler(this.chkSelectAll_CheckedChanged);
                chkSelectAll.Checked = !DisSelect;
                this.chkSelectAll.CheckedChanged += new EventHandler(this.chkSelectAll_CheckedChanged);

                if (e.RowIndex >= 0)
                {
                    dgListView.EndEdit();

                    if (_ListControlType == gloListControlType.Procedures)
                    {
                        if (_ismultiselect == true)
                        {
                            if (e.ColumnIndex == 0)
                            {
                                dgListView.EndEdit();

                                if (dgListView.Rows.Count > e.RowIndex)
                                {
                                    if (Convert.ToBoolean(dgListView.Rows[e.RowIndex].Cells[0].Value) == false)
                                    {
                                        for (int i = 0; i <= dgListSubView.Rows.Count - 1; i++)
                                        {
                                            dgListSubView.Rows[i].Cells[0].Value = false;

                                            if (dgListView.Rows.Count > i)
                                            {
                                                if (dgListView.Rows[i].Cells[1].Value.ToString() == "True")
                                                {
                                                    dgListView.Rows[i].Cells[1].Value = false;
                                                }
                                            }
                                            _isdefault = 0;
                                        }
                                    }
                                    else if (Convert.ToBoolean(dgListView.Rows[e.RowIndex].Cells[0].Value) == true)
                                    {
                                        for (int i = 0; i <= dgListSubView.Rows.Count - 1; i++)
                                        {
                                            dgListSubView.Rows[i].Cells[0].Value = true;
                                        }
                                    }
                                }
                                AddRemoveResources();
                            }
                        }
                    }
                    else
                        if (_ListControlType == gloListControlType.Users)
                        {
                            dgListView.EndEdit();
                        }

                    Int16 nIDColumn = 0;
                    Int16 nDefault = 0;

                    //Sanjog - Added on 2011 March 30 to solve the bug no.10532 - After click on test its show error
                    if (_ListControlType == gloListControlType.PreferredLab)
                    {
                        if (dgListView.Columns[0].HeaderText.ToUpper() == "ID" || dgListView.Columns[0].HeaderText.ToUpper() == "USERID")
                            nIDColumn = 0;
                    }
                    //Sanjog - Added on 2011 March 30 to solve the bug no.10532 - After click on test its show error
                    else
                    {
                        if (dgListView.Columns[1].HeaderText == "nHistoryDetailsID" || dgListView.Columns[1].HeaderText == "Id" || dgListView.Columns[1].HeaderText == "UserId" || dgListView.Columns[1].HeaderText == "Insurance ID" || dgListView.Columns[1].HeaderText == "nCategoryID") //condition "Insurance ID" added by nilesh on 20110329 for case GLO2010-0010142
                            nIDColumn = 1;
                        else if (dgListView.Columns[2].HeaderText == "Id" || dgListView.Columns[2].HeaderText == "UserId")
                            nIDColumn = 2;
                    }
                    if (_ListControlType == gloListControlType.PatientRepresentative)
                    {
                        nIDColumn = 1;

                    }
                    if (_ListControlType == gloListControlType.DMSCategory)
                    {
                        nIDColumn = 1;

                    }
                    if (_ListControlType == gloListControlType.ReasonCode || _ListControlType == gloListControlType.RemarkCode)
                    {
                        nIDColumn = 1;

                    }
                    if (_ismultiselect == true)
                    {
                        if (_ListControlType == gloListControlType.Pharmacy)
                        {
                            if (dgListView.Columns[1].HeaderText == "IsDefault")
                            {
                                nDefault = 1;
                            }
                            else
                                if (dgListView.Columns[12].HeaderText == "IsDefault")
                                {
                                    nDefault = 12;
                                }
                        }
                    }

                    if (_ismultiselect == true)


                        if (dgListView.Rows.Count > e.RowIndex)
                        {

                            if (_ListControlType == gloListControlType.Modifier)
                            {
                                if (e.RowIndex >= 0)
                                {
                                    if (dgListView.Columns[dgListView.Columns.Count - 1].SortMode != DataGridViewColumnSortMode.NotSortable)
                                    {
                                        for (int colcnt = 0; colcnt < dgListView.Columns.Count; colcnt++)
                                        {
                                            dgListView.Columns[colcnt].SortMode = DataGridViewColumnSortMode.NotSortable;
                                        }
                                    }
                                    if (dgListView.Columns.Count >= 7)
                                        if (dgListView[1, e.RowIndex].Value != null)
                                        {
                                            if (dgListView.CurrentCell.ColumnIndex == 0)
                                            {
                                                if (Convert.ToBoolean(dgListView.CurrentCell.Value) == true)
                                                {
                                                    int mod1 = 0;
                                                    int mod2 = 0;
                                                    int mod3 = 0;
                                                    DataView dv = (DataView)dgListView.DataSource;
                                                    DataRow[] drmod1 = dv.Table.Select("Modifier2='M1'");
                                                    mod1 = drmod1.Length;
                                                    drmod1 = null;
                                                    if (mod1 == 0)
                                                    {
                                                        dgListView[1, e.RowIndex].Value = "M1";
                                                    }
                                                    else
                                                    {
                                                        DataRow[] drmod2 = dv.Table.Select("Modifier2='M2'");
                                                        mod2 = drmod2.Length;
                                                        drmod2 = null;
                                                        if (mod2 == 0)
                                                        {
                                                            if (Convert.ToString(dgListView[1, e.RowIndex].Value) != "M1")
                                                                dgListView[1, e.RowIndex].Value = "M2";
                                                        }
                                                        else
                                                        {
                                                            DataRow[] drmod3 = dv.Table.Select("Modifier2='M3'");
                                                            mod3 = drmod3.Length;
                                                            drmod3 = null;
                                                            if (mod3 == 0)
                                                            {
                                                                if ((Convert.ToString(dgListView[1, e.RowIndex].Value) != "M1") && (Convert.ToString(dgListView[1, e.RowIndex].Value) != "M2"))
                                                                    dgListView[1, e.RowIndex].Value = "M3";
                                                            }
                                                            else
                                                            {
                                                                if ((Convert.ToString(dgListView[1, e.RowIndex].Value) != "M1") && (Convert.ToString(dgListView[1, e.RowIndex].Value) != "M2") && (Convert.ToString(dgListView[1, e.RowIndex].Value) != "M3"))

                                                                    dgListView[1, e.RowIndex].Value = "M4";
                                                            }
                                                        }
                                                    }

                                                    //if (_mod1 == false)
                                                    //{
                                                    //    dgListView[1, e.RowIndex].Value = "M1";
                                                    //    _mod1 = true;
                                                    //}
                                                    //else if (_mod2 == false)
                                                    //{
                                                    //    dgListView[1, e.RowIndex].Value = "M2";
                                                    //    _mod2 = true;
                                                    //}
                                                    //else if (_mod3 == false)
                                                    //{
                                                    //    dgListView[1, e.RowIndex].Value = "M3";
                                                    //    _mod3 = true;
                                                    //}
                                                    //else
                                                    //{
                                                    //    dgListView[1, e.RowIndex].Value = "M4";
                                                    //}
                                                    //DataRow drnew;
                                                    //drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[2].Value);

                                                    //if (drnew == null)
                                                    //{
                                                    //    DataRow dr = dtSelected.NewRow();

                                                    //    dr[0] = Convert.ToInt64(dgListView[2, e.RowIndex].Value);
                                                    //    dr[1] = Convert.ToInt64(dgListView[3, e.RowIndex].Value);
                                                    //    dtSelected.Rows.Add(dr);
                                                    //}
                                                }

                                            }

                                            dgListView[6, e.RowIndex].Value = dgListView[1, e.RowIndex].Value;
                                        }


                                        else
                                        {
                                            if (dgListView.CurrentCell.ColumnIndex == 0)
                                            {
                                                if (Convert.ToBoolean(dgListView.CurrentCell.Value) == true)
                                                {
                                                    int mod1 = 0;
                                                    int mod2 = 0;
                                                    int mod3 = 0;
                                                    DataView dv = (DataView)dgListView.DataSource;
                                                    DataRow[] drmod1 = dv.Table.Select("Modifier2='M1'");
                                                    mod1 = drmod1.Length;
                                                    drmod1 = null;
                                                    if (mod1 == 0)
                                                    {
                                                        dgListView[1, e.RowIndex].Value = "M1";
                                                    }
                                                    else
                                                    {
                                                        DataRow[] drmod2 = dv.Table.Select("Modifier2='M2'");
                                                        mod2 = drmod2.Length;
                                                        drmod2 = null;
                                                        if (mod2 == 0)
                                                        {
                                                            if (Convert.ToString(dgListView[1, e.RowIndex].Value) != "M1")
                                                                dgListView[1, e.RowIndex].Value = "M2";
                                                        }
                                                        else
                                                        {
                                                            DataRow[] drmod3 = dv.Table.Select("Modifier2='M3'");
                                                            mod3 = drmod3.Length;
                                                            drmod3 = null;
                                                            if (mod3 == 0)
                                                            {
                                                                if ((Convert.ToString(dgListView[1, e.RowIndex].Value) != "M1") && (Convert.ToString(dgListView[1, e.RowIndex].Value) != "M2"))
                                                                    dgListView[1, e.RowIndex].Value = "M3";
                                                            }
                                                            else
                                                            {
                                                                if ((Convert.ToString(dgListView[1, e.RowIndex].Value) != "M1") && (Convert.ToString(dgListView[1, e.RowIndex].Value) != "M2") && (Convert.ToString(dgListView[1, e.RowIndex].Value) != "M3"))
                                                                    dgListView[1, e.RowIndex].Value = "M4";
                                                            }
                                                        }
                                                    }
                                                    //DataRow drnew;
                                                    //drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[2].Value);

                                                    //if (drnew == null)
                                                    //{
                                                    //    DataRow dr = dtSelected.NewRow();

                                                    //    dr[0] = Convert.ToInt64(dgListView[2, e.RowIndex].Value);
                                                    //    dr[1] = Convert.ToInt64(dgListView[3, e.RowIndex].Value);
                                                    //    dtSelected.Rows.Add(dr);
                                                    //}

                                                    dgListView[6, e.RowIndex].Value = dgListView[1, e.RowIndex].Value;
                                                }
                                            }

                                        }
                                }

                            }

                            if (Convert.ToBoolean(dgListView.Rows[e.RowIndex].Cells[0].Value) == true)
                            {
                                //Added by Mayuri:on 20100508-To fill users of selected group
                                DataRow to_be_edited;
                                if (tsb_UserGroups.Text == "Users")
                                {
                                    to_be_edited = _dtGroupList.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);
                                }
                                else
                                {
                                    if (_ListControlType == gloListControlType.CarePlanLabOrder)
                                    {
                                        Object[] keys=new object[] {dgListView.Rows[e.RowIndex].Cells[nIDColumn].Value, dgListView.Rows[e.RowIndex].Cells[nIDColumn+1].Value};
                                        to_be_edited = _dvList.Table.Rows.Find(keys);
                                    }
                                    else
                                    {
                                        to_be_edited = _dvList.Table.Rows.Find(dgListView.Rows[e.RowIndex].Cells[nIDColumn].Value);
                                    }
                                }
                                if (to_be_edited != null)
                                {
                                    to_be_edited["Check1"] = 1;


                                    glItem = new gloGeneralItem.gloItem();
                                    glItem.ID = Convert.ToInt64(to_be_edited[0]);//ID 
                                    glItems.Add(glItem);
                                    glItem.Dispose();
                                    glItem = null;
                                }

                                // code below added for guarantor changes  20100728
                                DataRow drnew;

                                if (_ListControlType == gloListControlType.ReasonCode || _ListControlType == gloListControlType.RemarkCode || _ListControlType == gloListControlType.Resources || _ListControlType == gloListControlType.Providers || _ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians || _ListControlType == gloListControlType.Patient || _ListControlType == gloListControlType.Race || _ListControlType == gloListControlType.Ethnicity || _ListControlType == gloListControlType.MedicalCategory || _ListControlType == gloListControlType.ApptSelectedCols || _ListControlType == gloListControlType.OBMedicalCategory || _ListControlType == gloListControlType.MedicalCategoryReport || (_ListControlType == gloListControlType.Users && tsb_UserGroups.Text == "Groups")) // || _ListControlType == gloListControlType.Users 
                                {
                                    drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);

                                    if (drnew == null)
                                    {
                                        DataRow dr = dtSelected.NewRow();

                                        dr[0] = Convert.ToInt64(dgListView[1, e.RowIndex].Value);
                                        // code below added for guarantor changes  20100728

                                        if (_ListControlType == gloListControlType.Patient)
                                        {
                                            dr[1] = dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim() + " " + dgListView[5, e.RowIndex].Value.ToString().Trim();

                                        }
                                        else if (_ListControlType == gloListControlType.HistoryItem)
                                        {
                                            dr[1] = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                        }

                                        else if (_ListControlType == gloListControlType.Pharmacy)
                                        {
                                            dr[0] = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                            dr[1] = dgListView[3, e.RowIndex].Value.ToString().Trim();
                                        }
                                        else if (_ListControlType == gloListControlType.Race || _ListControlType == gloListControlType.Ethnicity)
                                        {
                                            dr[0] = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                            dr[1] = dgListView[3, e.RowIndex].Value.ToString().Trim();
                                        }
                                        else if ((_ListControlType == gloListControlType.MedicalCategory) || (_ListControlType == gloListControlType.MedicalCategoryReport) || (_ListControlType == gloListControlType.OBMedicalCategory))
                                        {
                                            dr[0] = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                            dr[1] = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                        }
                                        else if (_ListControlType == gloListControlType.ApptSelectedCols)
                                        {
                                            dr[0] = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                            dr[1] = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                        }
                                        else if (_ListControlType == gloListControlType.Users)
                                        {
                                            dr[0] = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                            dr[1] = dgListView[3, e.RowIndex].Value.ToString().Trim();

                                            if (IsgloCollectCustomer)
                                            {
                                                dr[2] = dgListView[9, e.RowIndex].Value.ToString().Trim();
                                            }
                                        }
                                        else if (_ListControlType == gloListControlType.Resources)
                                        {
                                            dr[0] = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                            dr[1] = dgListView[3, e.RowIndex].Value.ToString().Trim();

                                        }
                                        else if (_ListControlType == gloListControlType.ReasonCode)
                                        {
                                            dr[0] = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                            dr[1] = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                            // if (chkIncludeDescription.Checked)
                                            {
                                                dr[2] = dgListView[3, e.RowIndex].Value.ToString().Trim();
                                            }

                                        }
                                        else if (_ListControlType == gloListControlType.RemarkCode)
                                        {
                                            dr[0] = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                            dr[1] = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                            //  if (chkIncludeDescription.Checked)
                                            {
                                                dr[2] = dgListView[3, e.RowIndex].Value.ToString().Trim();
                                            }

                                        }
                                        else if (_ListControlType == gloListControlType.Providers)
                                        {
                                            dr[0] = dgListView[1, e.RowIndex].Value.ToString().Trim();

                                            if (dgListView[3, e.RowIndex].Value.ToString().Trim() == "")
                                            {
                                                dr[1] = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim();
                                            }
                                            else
                                            {
                                                dr[1] = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim();
                                            }


                                        }


                                        else
                                        {
                                            //ADDED BY SHUBHANGI 20100609 ADD PREFIX & SUFFIX INTO PHYSICIANS IF THEY PRESENT

                                            if (dgListView[2, e.RowIndex].Value.ToString() != "" && dgListView[6, e.RowIndex].Value.ToString() != "")
                                            {
                                                dr[1] = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim() + " " + dgListView[5, e.RowIndex].Value.ToString().Trim() + " " + dgListView[6, e.RowIndex].Value.ToString().Trim();
                                            }
                                            else if (dgListView[2, e.RowIndex].Value.ToString() == "" && dgListView[6, e.RowIndex].Value.ToString() != "")
                                            {
                                                dr[1] = dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim() + " " + dgListView[5, e.RowIndex].Value.ToString().Trim() + " " + dgListView[6, e.RowIndex].Value.ToString().Trim();
                                            }
                                            else if (dgListView[2, e.RowIndex].Value.ToString() != "" && dgListView[6, e.RowIndex].Value.ToString() == "")
                                            {
                                                dr[1] = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim() + " " + dgListView[5, e.RowIndex].Value.ToString().Trim();
                                            }

                                            else
                                            {
                                                dr[1] = dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim() + " " + dgListView[5, e.RowIndex].Value.ToString().Trim();
                                            }
                                        }
                                        dtSelected.Rows.Add(dr);

                                    }
                                    else              //Added on 20100812-After modifiying record,id becomes same and description is differnet
                                    {                   //for same descrption if id is updated

                                        if (_ListControlType == gloListControlType.Resources)
                                        {
                                            drnew[1] = dgListView[3, e.RowIndex].Value.ToString().Trim();
                                        }
                                        else if (_ListControlType == gloListControlType.Providers)
                                        {

                                            if (dgListView[3, e.RowIndex].Value.ToString().Trim() == "")
                                            {
                                                drnew[1] = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim();
                                            }
                                            else
                                            {
                                                drnew[1] = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim();
                                            }

                                        }
                                        else if (_ListControlType == gloListControlType.ReasonCode)
                                        {
                                            drnew[0] = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                            drnew[1] = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                            if (chkIncludeDescription.Checked)
                                            {
                                                drnew[2] = dgListView[3, e.RowIndex].Value.ToString().Trim();
                                            }

                                        }
                                        else if (_ListControlType == gloListControlType.RemarkCode)
                                        {
                                            drnew[0] = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                            drnew[1] = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                            if (chkIncludeDescription.Checked)
                                            {
                                                drnew[2] = dgListView[3, e.RowIndex].Value.ToString().Trim();
                                            }

                                        }
                                        else if (_ListControlType != gloListControlType.Race && _ListControlType != gloListControlType.Ethnicity && _ListControlType != gloListControlType.MedicalCategory && _ListControlType != gloListControlType.OBMedicalCategory && _ListControlType != gloListControlType.ApptSelectedCols)
                                        {
                                            //Resolved Bug ID 78237
                                            if (_ListControlType == gloListControlType.Users)
                                            {
                                                drnew[0] = dgListView[1, e.RowIndex].Value.ToString().Trim();
                                                drnew[1] = dgListView[3, e.RowIndex].Value.ToString().Trim();

                                                if (IsgloCollectCustomer)
                                                {
                                                    drnew[2] = dgListView[9, e.RowIndex].Value.ToString().Trim();
                                                }
                                            }
                                            //

                                            else if (dgListView[2, e.RowIndex].Value.ToString() != "" && dgListView[6, e.RowIndex].Value.ToString() != "")
                                            {
                                                drnew[1] = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim() + " " + dgListView[5, e.RowIndex].Value.ToString().Trim() + " " + dgListView[6, e.RowIndex].Value.ToString().Trim();
                                            }
                                            else if (dgListView[2, e.RowIndex].Value.ToString() == "" && dgListView[6, e.RowIndex].Value.ToString() != "")
                                            {
                                                drnew[1] = dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim() + " " + dgListView[5, e.RowIndex].Value.ToString().Trim() + " " + dgListView[6, e.RowIndex].Value.ToString().Trim();
                                            }
                                            else if (dgListView[2, e.RowIndex].Value.ToString() != "" && dgListView[6, e.RowIndex].Value.ToString() == "")
                                            {
                                                drnew[1] = dgListView[2, e.RowIndex].Value.ToString().Trim() + " " + dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim() + " " + dgListView[5, e.RowIndex].Value.ToString().Trim();
                                            }
                                            else
                                            {
                                                drnew[1] = dgListView[3, e.RowIndex].Value.ToString().Trim() + " " + dgListView[4, e.RowIndex].Value.ToString().Trim() + " " + dgListView[5, e.RowIndex].Value.ToString().Trim();
                                            }
                                        }
                                    }
                                }
                                else if (_ListControlType == gloListControlType.Pharmacy)
                                {
                                    drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[nIDColumn].Value);

                                    if (drnew == null)
                                    {
                                        DataRow dr = dtSelected.NewRow();
                                        if (dgListView.Columns[1].HeaderText == "Id")
                                            dr[0] = Convert.ToInt64(dgListView[1, e.RowIndex].Value);
                                        else if (dgListView.Columns[2].HeaderText == "Id")
                                            dr[0] = Convert.ToInt64(dgListView[2, e.RowIndex].Value); //**

                                        if (dgListView.Columns[2].HeaderText == "Name")
                                        {
                                            if (dgListView[2, e.RowIndex].Value.ToString() != "")
                                            {
                                                dr[1] = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                            }
                                        }
                                        else if (dgListView.Columns[3].HeaderText == "Name")
                                            if (dgListView[3, e.RowIndex].Value.ToString() != "")
                                            {
                                                dr[1] = dgListView[3, e.RowIndex].Value.ToString().Trim();
                                            }
                                        dtSelected.Rows.Add(dr);
                                    }
                                }

                                else if (_ListControlType == gloListControlType.HistoryOBPhysicalExam)
                                {
                                    drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);

                                    if (drnew == null)
                                    {
                                        DataRow dr = dtSelected.NewRow();

                                        dr[0] = Convert.ToInt64(dgListView[1, e.RowIndex].Value);

                                        if (dgListView[2, e.RowIndex].Value.ToString() != "")
                                        {
                                            dr[1] = Convert.ToString(dgListView[2, e.RowIndex].Value);
                                        }

                                        dtSelected.Rows.Add(dr);
                                    }

                                    //coe add
                                    //  DataRow to_be_edit=null;


                                    to_be_edited = _dvList.Table.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);

                                    if (to_be_edited != null)
                                    {
                                        to_be_edited["Check1"] = 1;
                                    }






                                    //code to add

                                }

                                else if (_ListControlType == gloListControlType.PatientRepresentative)
                                {
                                    drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[nIDColumn].Value);

                                    if (drnew == null)
                                    {
                                        DataRow dr = dtSelected.NewRow();
                                        if (dgListView.Columns[1].HeaderText == "Id")
                                            dr[0] = Convert.ToInt64(dgListView[1, e.RowIndex].Value);

                                        if (dgListView.Columns[3].HeaderText == "LastName")
                                        {
                                            if (dgListView[3, e.RowIndex].Value.ToString() != "")
                                            {
                                                dr[1] = dgListView[3, e.RowIndex].Value.ToString().Trim();
                                            }
                                            if (dgListView.Columns[2].HeaderText == "FirstName")
                                            {
                                                if (dgListView[2, e.RowIndex].Value.ToString() != "")
                                                {
                                                    dr[1] += " " + dgListView[2, e.RowIndex].Value.ToString().Trim();
                                                }


                                            }
                                        }
                                        dtSelected.Rows.Add(dr);
                                    }
                                }
                                else if (_ListControlType == gloListControlType.DMSCategory)
                                {
                                    drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[nIDColumn].Value);

                                    if (drnew == null)
                                    {
                                        DataRow dr = dtSelected.NewRow();
                                        if (dgListView.Columns[1].HeaderText == "Id")
                                            dr[0] = Convert.ToInt64(dgListView[1, e.RowIndex].Value);

                                        if (dgListView.Columns[2].HeaderText == "CategoryName" || dgListView.Columns[2].HeaderText == "Category Name")
                                        {
                                            dr[1] = dgListView[2, e.RowIndex].Value.ToString().Trim();
                                        }
                                        dtSelected.Rows.Add(dr);
                                    }
                                }

                                else if (_ListControlType == gloListControlType.Diagnosis)
                                {
                                    drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[nIDColumn].Value);

                                    if (drnew == null)
                                    {
                                        DataRow dr = dtSelected.NewRow();

                                        dr[0] = Convert.ToInt64(dgListView[1, e.RowIndex].Value);
                                        dr[1] = dgListView[2, e.RowIndex].Value.ToString().Trim();


                                        dtSelected.Rows.Add(dr);
                                    }


                                    DataRow[] drr = _dtStoreDiagnosis.Select("nICD9ID=" + dgListView.Rows[e.RowIndex].Cells[nIDColumn].Value.ToString());
                                    if (drr.Length == 0)
                                    {

                                        DataRow drdg = _dvList.Table.Rows[e.RowIndex];
                                        drdg["Check1"] = true;
                                        _dtStoreDiagnosis.ImportRow(drdg);
                                    }

                                }
                                //else if (_ListControlType == gloListControlType.PatientConsent)
                                //{
                                //    drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[nIDColumn].Value);

                                //    if (drnew == null)
                                //    {
                                //        DataRow dr = dtSelected.NewRow();

                                //        dr[0] = Convert.ToInt64(dgListView[1, e.RowIndex].Value);
                                //        dr[1] = dgListView[2, e.RowIndex].Value.ToString().Trim();


                                //        dtSelected.Rows.Add(dr);
                                //    }
                                //}




                            }
                            else
                            {
                                DataRow to_be_edited;
                                if (_ListControlType == gloListControlType.Modifier)
                                {
                                    to_be_edited = _dvList.Table.Rows.Find(dgListView.Rows[e.RowIndex].Cells[2].Value);
                                    // DataRow drnew;
                                    // drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[2].Value);
                                    // if (drnew != null)
                                    //{
                                    //  dtSelected.Rows.Remove(drnew);

                                    //}
                                }
                                else
                                {
                                    if (tsb_UserGroups.Text == "Users")
                                    {
                                        to_be_edited = _dtGroupList.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);
                                    }
                                    else
                                    {
                                        if (_ListControlType == gloListControlType.CarePlanLabOrder)
                                        {
                                            Object[] keys = new object[] { dgListView.Rows[e.RowIndex].Cells[1].Value, dgListView.Rows[e.RowIndex].Cells[2].Value };
                                            to_be_edited = _dvList.Table.Rows.Find(keys);
                                        }
                                        else
                                        {
                                            //Commenetd by Mayuri:20100706-Replace dtForSearch by _dvList
                                            to_be_edited = _dvList.Table.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);
                                        }
                                    }
                                }
                                if (to_be_edited != null)
                                {
                                    to_be_edited["Check1"] = 0;
                                }


                                // code below added for guarantor changes  20100728

                                if (_ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians || _ListControlType == gloListControlType.Patient || _ListControlType == gloListControlType.HistoryItem)
                                {
                                    DataRow drnew;
                                    drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);
                                    if (drnew != null)
                                    {
                                        dtSelected.Rows.Remove(drnew);
                                        if (dgListView.Columns[12].HeaderText == "IsDefault")
                                        {
                                            dgListView.Rows[e.RowIndex].Cells[12].Value = false;
                                        }
                                        _isdefault = 0;
                                    }
                                }
                                else if (_ListControlType == gloListControlType.Providers || _ListControlType == gloListControlType.Resources || _ListControlType == gloListControlType.ReasonCode || _ListControlType == gloListControlType.RemarkCode)
                                {
                                    DataRow drnew;
                                    drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);
                                    if (drnew != null)
                                    {
                                        dtSelected.Rows.Remove(drnew);
                                        dgListView.Rows[e.RowIndex].Cells[0].Value = false;
                                        _isdefault = 0;
                                    }
                                }
                                else if (_ListControlType == gloListControlType.ApptSelectedCols)
                                {
                                    DataRow drnew;
                                    drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);
                                    if (drnew != null)
                                    {
                                        dtSelected.Rows.Remove(drnew);
                                        dgListView.Rows[e.RowIndex].Cells[0].Value = false;
                                        _isdefault = 0;
                                    }
                                }
                                else if (_ListControlType == gloListControlType.Race ||_ListControlType == gloListControlType.Ethnicity)
                                {
                                    DataRow drnew;
                                    drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);
                                    if (drnew != null)
                                    {
                                        dtSelected.Rows.Remove(drnew);
                                        if (dgListView.Columns[4].HeaderText == "Check1")
                                        {
                                            dgListView.Rows[e.RowIndex].Cells[4].Value = false;
                                        }
                                        _isdefault = 0;
                                    }
                                }
                                else if ((_ListControlType == gloListControlType.MedicalCategory) || (_ListControlType == gloListControlType.MedicalCategoryReport) || (_ListControlType == gloListControlType.OBMedicalCategory))
                                {
                                    DataRow drnew;
                                    drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);
                                    if (drnew != null)
                                    {
                                        dtSelected.Rows.Remove(drnew);
                                        if (dgListView.Columns[3].HeaderText == "Check1")
                                        {
                                            dgListView.Rows[e.RowIndex].Cells[3].Value = false;
                                        }
                                        _isdefault = 0;
                                    }
                                }
                                else if (_ListControlType == gloListControlType.Users && tsb_UserGroups.Text == "Groups")
                                {
                                    DataRow drnew;
                                    drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);
                                    if (drnew != null)
                                    {
                                        dtSelected.Rows.Remove(drnew);
                                        if (dgListView.Columns[9].HeaderText == "Check1")
                                        {
                                            dgListView.Rows[e.RowIndex].Cells[9].Value = false;
                                        }
                                        _isdefault = 0;
                                    }
                                }
                                else if (_ListControlType == gloListControlType.Pharmacy)
                                {
                                    DataRow drnew = null;
                                    if (dgListView.Columns[1].HeaderText == "Id")
                                    {
                                        drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);
                                    }
                                    else if (dgListView.Columns[2].HeaderText == "Id")
                                    {
                                        drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[2].Value);
                                    }
                                    if (drnew != null)
                                    {
                                        dtSelected.Rows.Remove(drnew);
                                        dgListView.Rows[e.RowIndex].Cells[0].Value = false;
                                        if (dgListView.Rows[e.RowIndex].Cells[nDefault].Value != null)
                                        {
                                            if (dgListView.Rows[e.RowIndex].Cells[nDefault].Value.ToString() == "True")
                                            {
                                                dgListView.Rows[e.RowIndex].Cells[nDefault].Value = false;
                                            }
                                            _isdefault = 0;
                                        }
                                    }
                                }
                                else if (_ListControlType == gloListControlType.PatientRepresentative)
                                {
                                    DataRow drnew = null;
                                    if (dgListView.Columns[1].HeaderText == "Id")
                                    {
                                        drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);
                                    }
                                    else if (dgListView.Columns[2].HeaderText == "Id")
                                    {
                                        drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[2].Value);
                                    }
                                    if (drnew != null)
                                    {
                                        dtSelected.Rows.Remove(drnew);
                                        dgListView.Rows[e.RowIndex].Cells[0].Value = false;
                                        if (dgListView.Rows[e.RowIndex].Cells[nDefault].Value != null)
                                        {
                                            if (dgListView.Rows[e.RowIndex].Cells[nDefault].Value.ToString() == "True")
                                            {
                                                dgListView.Rows[e.RowIndex].Cells[nDefault].Value = false;
                                            }
                                            _isdefault = 0;
                                        }
                                    }
                                }
                                else if (_ListControlType == gloListControlType.DMSCategory)
                                {
                                    DataRow drnew = null;
                                    if (dgListView.Columns[1].HeaderText == "Id")
                                    {
                                        drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);
                                    }
                                    if (drnew != null)
                                    {
                                        dtSelected.Rows.Remove(drnew);
                                        dgListView.Rows[e.RowIndex].Cells[0].Value = false;
                                        if (dgListView.Rows[e.RowIndex].Cells[nDefault].Value != null)
                                        {
                                            if (dgListView.Rows[e.RowIndex].Cells[nDefault].Value.ToString() == "True")
                                            {
                                                dgListView.Rows[e.RowIndex].Cells[nDefault].Value = false;
                                            }
                                            _isdefault = 0;
                                        }
                                    }
                                }

                                else if (_ListControlType == gloListControlType.HistoryOBPhysicalExam)
                                {
                                    DataRow drnew = null;

                                    drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);


                                    if (drnew != null)
                                    {
                                        dtSelected.Rows.Remove(drnew);
                                        dgListView.Rows[e.RowIndex].Cells[0].Value = false;
                                        //  DataRow to_be_edit = null;


                                        to_be_edited = _dvList.Table.Rows.Find(dgListView.Rows[e.RowIndex].Cells[1].Value);

                                        if (to_be_edited != null)
                                        {
                                            to_be_edited["Check1"] = 0;
                                        }

                                    }


                                    //code to add

                                }

                                else if (_ListControlType == gloListControlType.Diagnosis)
                                {
                                    DataRow drnew = null;
                                    drnew = dtSelected.Rows.Find(dgListView.Rows[e.RowIndex].Cells[nIDColumn].Value);

                                    if (drnew != null)
                                    {

                                        dtSelected.Rows.Remove(drnew);
                                        dgListView.Rows[e.RowIndex].Cells[0].Value = false;


                                    }

                                    DataRow[] dr = _dtStoreDiagnosis.Select("nICD9ID=" + dgListView.Rows[e.RowIndex].Cells[nIDColumn].Value.ToString());
                                    if (dr.Length > 0)
                                    {
                                        dr[0]["Check1"] = true;

                                        _dtStoreDiagnosis.Rows.Remove(dr[0]);
                                    }

                                }




                                if (to_be_edited != null)
                                {
                                    glItem = new gloGeneralItem.gloItem();
                                    glItem.ID = Convert.ToInt64(to_be_edited[0]);
                                    glItems.Remove(glItem);
                                    glItem.Dispose();
                                    glItem = null;
                                }

                            }
                        }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString(), _MessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

        }


        private void dgListView_ColumnHeaderMouseDoubleClick(object sender, DataGridViewCellMouseEventArgs e)
        {
        }

        private void dgListSubView_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            dgListSubView.EndEdit();
            if (_FillInProcess == false)
            {
                if (_ismultiselect == true)
                {
                    bool _FoundSelected = false;
                    for (int i = 0; i <= dgListSubView.Rows.Count - 1; i++)
                    {
                        if (Convert.ToBoolean(dgListSubView.Rows[i].Cells[0].Value) == true)
                        {
                            _FoundSelected = true;
                            break;
                        }
                    }

                    if (_FoundSelected == true)
                    {
                        if (dgListView.CurrentRow != null)
                        {
                            if (Convert.ToBoolean(dgListView.Rows[dgListView.CurrentRow.Index].Cells[0].Value) == false)
                            {
                                dgListView[0, dgListView.CurrentRow.Index].Value = true;
                            }
                        }
                    }
                    else
                    {
                        if (dgListView.CurrentRow != null)
                        {
                            if (Convert.ToBoolean(dgListView.Rows[dgListView.CurrentRow.Index].Cells[0].Value) == true)
                            {
                                dgListView[0, dgListView.CurrentRow.Index].Value = false;
                            }
                        }
                    }
                }
            }

            dgListView.EndEdit();

            if (_ListControlType == gloListControlType.Procedures)
            {
                Int16 nIDColumn = 0;

                if (dgListView.Columns[1].HeaderText == "Id")
                {
                    nIDColumn = 1;
                }

                if (dgListView.Rows.Count > dgListView.CurrentRow.Index)
                {
                    if (Convert.ToBoolean(dgListView.Rows[dgListView.CurrentRow.Index].Cells[0].Value) == true)
                    {
                        DataRow to_be_edited;
                        to_be_edited = _dvList.Table.Rows.Find(dgListView.Rows[dgListView.CurrentRow.Index].Cells[nIDColumn].Value);
                        if (to_be_edited != null)
                        {
                            to_be_edited["Check1"] = 1;
                        }

                    }
                }
            }
            AddRemoveResources();
        }

        private void dgListView_KeyDown(object sender, KeyEventArgs e)
        {
            try
            {
                if (e.KeyCode == Keys.Enter)
                {
                    btnSelect_Click(null, null);
                }
                if (e.KeyCode == Keys.Escape)
                {
                    btnClose_Click(null, null);
                }

                if (e.KeyCode == Keys.Space && _ismultiselect == true)
                {
                    if (dgListView.SelectedRows.Count > 0)
                    {
                        int index = dgListView.SelectedRows[0].Index;
                        if (Convert.ToBoolean(dgListView.Rows[index].Cells[0].Value) == true)
                        {
                            dgListView.Rows[index].Cells[0].Value = false;
                            if (dgListView.Rows[index].Cells[1].Value.ToString() == "True")
                            {
                                dgListView.Rows[index].Cells[1].Value = false;
                            }
                            _isdefault = 0;
                        }
                        else
                        {
                            dgListView.Rows[index].Cells[0].Value = true;
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                ex.ToString();
            }
        }

        #endregion "Data Grid View Events"

        #region "List Control Button Methods"

        private void btnSelect_Click(object sender, EventArgs e)
        {

            dgListView.EndEdit();

            DataRow _TempRow;

            if (_ListControlType == gloListControlType.Procedures)
            {
                if (trvItems.GetNodeCount(false) <= 0)
                {
                    //MessageBox.Show("Please select procedure and resources to continue", _MessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Information);
                    //return;
                }
            }

            _SelectedItems.Clear();
            int i;
            bool _FoundSelected = false;

            if (_ismultiselect == true)
            {
                if (_IsFormClosing == true)
                {
                    //HistoryOBPhysicalExam added for bugid 83745 while searching not saving initialphysicalexam 
                    if (_ListControlType == gloListControlType.HistoryOBPhysicalExam || _ListControlType == gloListControlType.HistoryLOINC || _ListControlType == gloListControlType.CPT || _ListControlType == gloListControlType.CPTProcedures || _ListControlType == gloListControlType.Diagnosis || _ListControlType == gloListControlType.PatientConsent || _ListControlType == gloListControlType.CQMCVXCOdes)
                    {
                        if (txtSearch.Text != "")
                        {
                            txtSearch.Text = "";
                            SearchFired();
                        }
                    }
                }
                //Added by Mayuri:on 20100508-To fill users of selected group
                if (tsb_UserGroups.Text == "Users")
                {
                    if (_dtGroupList != null)
                    {
                        if (_dtGroupList.Rows.Count > 0)
                        {
                            for (i = 0; i < _dtGroupList.Rows.Count; i++)
                            {
                                if (Convert.ToString(_dtGroupList.Rows[i]["Check1"]) == "1")
                                {
                                    _FoundSelected = true;
                                    break;
                                }
                            }
                        }
                    }
                }
                else
                {
                    if (_dvList != null)
                    {
                        if (_dvList.Table.Rows.Count > 0)
                        {
                            for (i = 0; i < _dvList.Table.Rows.Count; i++)
                            {
                                if (Convert.ToString(_dvList.Table.Rows[i]["Check1"]) == "1")
                                {
                                    _FoundSelected = true;
                                    break;
                                }
                            }
                        }
                    }
                }

                if (tsb_UserGroups.Text == "Users")
                {
                    dgListView.DataSource = null;
                    dgListView.DataSource = _dtGroupList;
                    if (_dtGroupList != null)
                    {
                        for (i = 0; i < _dtGroupList.Rows.Count; i++)
                        {
                            if (Convert.ToString(_dtGroupList.Rows[i]["Check1"]) == "1")
                            {
                                (dgListView.Rows[i].Cells[0].Value) = Convert.ToBoolean(1);
                            }
                        }
                    }
                }
                else
                {
                    //code below added for guarantor changes  20100728
                    //SHGUBHANGI 20110113 NOT ADDED PHARMACY COZ FOR SETING DEFAULT VALUE WE CANT ASSIGN VALUE LIKE ELSE CONDITION

                    if (_ListControlType != gloListControlType.Resources && _ListControlType != gloListControlType.Providers && _ListControlType != gloListControlType.ClinicalInstruction && _ListControlType != gloListControlType.ReportAccountActionCode && _ListControlType != gloListControlType.Referrals && _ListControlType != gloListControlType.Physicians && _ListControlType != gloListControlType.Patient && _ListControlType != gloListControlType.HistoryItem && _ListControlType != gloListControlType.Pharmacy && _ListControlType != gloListControlType.CPT && _ListControlType != gloListControlType.CPTProcedures && _ListControlType != gloListControlType.HistoryLOINC && _ListControlType != gloListControlType.Diagnosis && _ListControlType != gloListControlType.Race && _ListControlType != gloListControlType.Ethnicity && _ListControlType != gloListControlType.Users && _ListControlType != gloListControlType.PatientRepresentative && _ListControlType != gloListControlType.DMSCategory && _ListControlType != gloListControlType.OrderQuickNotes && _ListControlType != gloListControlType.OBVitalComments && _ListControlType != gloListControlType.CarePlan && _ListControlType != gloListControlType.MedicalCategory && _ListControlType != gloListControlType.OBMedicalCategory && _ListControlType != gloListControlType.BillingQuickNotes && _ListControlType != gloListControlType.RemarkCode && _ListControlType != gloListControlType.ReasonCode && _ListControlType != gloListControlType.PatientConsent && _ListControlType != gloListControlType.ApptSelectedCols && _ListControlType != gloListControlType.PatientProblemList && _ListControlType != gloListControlType.CarePlanLoincs && _ListControlType != gloListControlType.CarePlanMedication && _ListControlType != gloListControlType.CarePlanEncounter && _ListControlType != gloListControlType.CarePlanImmunization && _ListControlType != gloListControlType.CarePlanEducation && _ListControlType != gloListControlType.CarePlanNutrition && _ListControlType != gloListControlType.CarePlanLabOrder && _ListControlType != gloListControlType.CarePlanGoals && _ListControlType != gloListControlType.HealthConcern && _ListControlType != gloListControlType.Intervention && _ListControlType != gloListControlType.CarePlanProblemList && _ListControlType != gloListControlType.Location )
                                  
                    {


                        if (_ListControlType == gloListControlType.CQMHCPCS || _ListControlType == gloListControlType.CQMICD10 || _ListControlType == gloListControlType.CQMICD9 || _ListControlType == gloListControlType.CQMOrders || _ListControlType == gloListControlType.CQMRxNorm || _ListControlType == gloListControlType.CQMSnomed || _ListControlType == gloListControlType.CQMCVX)
                        {
                            dgListView.DataSource = null;
                            dgListView.DataSource = _dvList.Table.Copy()  ;
                        }
                        else
                        {
                            dgListView.DataSource = null;
                            dgListView.DataSource = _dvList;
                        }
                            if (_dvList != null && dgListView.Rows.Count > 0)
                        {
                            // code  added by pradeep 20100925 -bug 4503
                            for (i = 0; i < dgListView.Rows.Count; i++)
                            {
                                if (Convert.ToString(dgListView.Rows[i].Cells["Check1"].Value) == "1")
                                {
                                    (dgListView.Rows[i].Cells[0].Value) = Convert.ToBoolean(1);
                                }
                            }
                        }
                    }
                    else
                    {   // Commented On 09-01-2014 To Revert More Users Changes
                        //if (IsgloCollectCustomer)
                        //{
                        //    if (dtSelected.Columns.Contains("GloCollect"))
                        //    {
                        //        dtSelected.DefaultView.Sort = "GloCollect,Name";
                        //        dtSelected = dtSelected.DefaultView.ToTable();
                        //    }
                        //}
                        for (int j = 0; j <= dtSelected.Rows.Count - 1; j++)
                        {
                            gloGeneralItem.gloItem oListItem = new gloGeneralItem.gloItem();
                            oListItem.ID = Convert.ToInt64(dtSelected.Rows[j]["ID"]);
                            oListItem.Code = Convert.ToString(dtSelected.Rows[j]["Name"]);
                            if ((_ListControlType == gloListControlType.ReasonCode || _ListControlType == gloListControlType.RemarkCode))
                            {
                                if (chkIncludeDescription.Checked == true)
                                {
                                    oListItem.Description = Convert.ToString(dtSelected.Rows[j]["Description"]);
                                }
                                else
                                {
                                    oListItem.Description = "";
                                }

                            }
                            else
                            {
                                oListItem.Description = Convert.ToString(dtSelected.Rows[j]["Name"]);
                            }
                            if (IsgloCollectCustomer)
                            {
                                if (dtSelected.Columns.Contains("GloCollect"))
                                {
                                    if (_ListControlType != gloListControlType.PatientConsent)
                                    {
                                        oListItem.bGloCollect = Convert.ToBoolean(dtSelected.Rows[j]["GloCollect"]);
                                    }

                                }
                            }

                            if (_ListControlType == gloListControlType.Pharmacy)
                            {
                                if (Convert.ToInt64(dtSelected.Rows[j]["ID"]) == _isdefault)
                                {
                                    _isdefault = Convert.ToInt64(dtSelected.Rows[j]["ID"]);
                                    if (_isdefault >= 0)
                                        oListItem.Default = _isdefault;
                                    else
                                        oListItem.Default = -1;
                                }
                            }
                            _SelectedItems.Add(oListItem);
                            oListItem.Dispose();
                            oListItem = null;
                        }
                    }
                }

                if (_FoundSelected == true)
                {
                    if (_ListControlType == gloListControlType.Insurance)
                        if (_dtSelectedRecords == null)
                        {
                            //        _dtSelectedRecords = new DataTable();
                            if (dgListView.DataSource != null)
                            {
                                _dtSelectedRecords = ((DataView)dgListView.DataSource).ToTable().Clone();
                                _dtSelectedRecords.Columns.RemoveAt(_dtSelectedRecords.Columns.Count - 1);
                            }
                        }

                    if (_ListControlType == gloListControlType.Modifier)
                    {

                        if (_IsUsergroup == false)
                        {


                            DataRow[] drr = _dvList.Table.Select("check1=1 And Modifier2<>''", "Modifier2");
                            for (Int64 len = 0; len < drr.Length; len++)
                            {
                                gloGeneralItem.gloItem oListItem = new gloGeneralItem.gloItem();
                                oListItem.ID = Convert.ToInt64(drr[len]["nModifierID"].ToString());
                                oListItem.Code = Convert.ToString(drr[len]["sModifierCode"]).Trim();
                                oListItem.Description = Convert.ToString(drr[len]["sDescription"]).Trim();

                                _SelectedItems.Add(oListItem);
                                oListItem.Dispose();
                            }

                            drr = _dvList.Table.Select("check1=1 And Modifier2 is null", "Modifier2");
                            for (Int64 len = 0; len < drr.Length; len++)
                            {
                                gloGeneralItem.gloItem oListItem = new gloGeneralItem.gloItem();
                                oListItem.ID = Convert.ToInt64(drr[len]["nModifierID"].ToString());
                                oListItem.Code = Convert.ToString(drr[len]["sModifierCode"]).Trim();
                                oListItem.Description = Convert.ToString(drr[len]["sDescription"]).Trim();

                                _SelectedItems.Add(oListItem);
                                oListItem.Dispose();
                            }
                        }
                    }
                    else
                    {
                        for (i = 0; i <= dgListView.Rows.Count - 1; i++)
                        {
                            // code below added for guarantor changes  20100728
                            //SHUBHANGI 20110113 THOUGHT PHARMACY IS MULTISELECT WE HAVE TO ASSIGN DEFAULT VALUE SO WE ARE NOT USING THIS METHOD
                            if (_ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians || _ListControlType == gloListControlType.Patient || _ListControlType == gloListControlType.Race || _ListControlType == gloListControlType.Ethnicity || (_ListControlType == gloListControlType.Users && tsb_UserGroups.Text == "Groups"))
                            {
                                break;
                            }
                            if (Convert.ToBoolean(dgListView.Rows[i].Cells[0].Value) == true)
                            {
                                switch (_ListControlType)
                                {
                                    case gloListControlType.Other:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = "";
                                            if (dgListView.Columns.Count >= 2)
                                            {
                                                _name = dgListView[2, i].Value.ToString().Trim();
                                            }
                                            else
                                            {
                                                _name = "";
                                            }
                                        }
                                        break;

                                    case gloListControlType.Race:
                                    case gloListControlType.Ethnicity:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                            _code = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.PatientConsent:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _name = dgListView[2, i].Value.ToString().Trim();

                                        }
                                        break;
                                    case gloListControlType.Patient:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim() + " " + dgListView[5, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.AllPatient:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim() + " " + dgListView[5, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.PendingLabPatients:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.Insurance:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[3, i].Value.ToString().Trim();
                                            _name = dgListView[4, i].Value.ToString().Trim();

                                            // CREATE OUTPUT DATATABLE  20100217//
                                            _TempRow = _dtSelectedRecords.NewRow();
                                            for (int iCol = 0; iCol < _dtSelectedRecords.Columns.Count; iCol++)
                                            { _TempRow[iCol] = dgListView[iCol + 1, i].Value.ToString().Trim(); }
                                            _dtSelectedRecords.Rows.Add(_TempRow);
                                            // CREATE DT END //
                                        }
                                        break;

                                    case gloListControlType.Hospital:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[3, i].Value.ToString().Trim();
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.Physicians:
                                        {
                                            ////_id = Convert.ToInt64(dgListView[1, i].Value);
                                            ////_code = "";
                                            ////_name = dgListView[2, i].Value.ToString().Trim() + " " + dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.Referrals:
                                        {
                                            //_id = Convert.ToInt64(dgListView[1, i].Value);
                                            //_code = "";
                                            //_name = dgListView[2, i].Value.ToString().Trim() + " " + dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.Providers:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = "";
                                            //if condition ADDED BY SHUBHANGI 20100619 to resolve middlename space case
                                            if (dgListView[3, i].Value.ToString().Trim() != "")
                                            {
                                                _name = dgListView[2, i].Value.ToString().Trim() + " " + dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                            }
                                            else
                                            {
                                                _name = dgListView[2, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                            }
                                        }
                                        break;

                                    case gloListControlType.ReportProviders:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.ClinicalInstruction:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.ReportAccountActionCode:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.Resources:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.Procedures:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[3, i].Value.ToString().Trim();
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.CPT:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.CPTProcedures:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;
                                   //added loinc code on history screen 
                                    case gloListControlType.HistoryLOINC :
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.CQMCVXCOdes:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;


                                    case gloListControlType.Diagnosis:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.Modifier:
                                        {
                                            _id = Convert.ToInt64(dgListView[2, i].Value);
                                            _code = dgListView[3, i].Value.ToString().Trim();
                                            _name = dgListView[4, i].Value.ToString().Trim();
                                        }
                                        break;

                                    //Code Added by Sagar Ghodke : 05 March 2008
                                    case gloListControlType.Users:
                                        {
                                            //Sandip Darade 20090203 to add user groups 
                                            //If individual Users to add 
                                            if (tsb_UserGroups.Text == "Groups")//Add users
                                            {
                                                _IsUsergroup = false;
                                                _id = Convert.ToInt64(dgListView[1, i].Value);//UserID
                                                _code = dgListView[6, i].Value.ToString();//Email
                                                _name = dgListView[3, i].Value.ToString().Trim(); //+ " " + dgListView[4, i].Value.ToString().Trim() + " " + dgListView[5, i].Value.ToString().Trim();
                                            }
                                            //If user groups to add 
                                            if (tsb_UserGroups.Text == "Users")//Add user groups
                                            {
                                                _IsUsergroup = true;
                                                _id = Convert.ToInt64(dgListView[1, i].Value);//GroupID
                                                _name = dgListView[2, i].Value.ToString();//GroupName
                                                _code = Convert.ToString(dgListView[3, i].Value);//Type


                                                DataTable dtusers = null;
                                                //get users for against selected group
                                                dtusers = GetGroupUsers(_id);

                                                //Add user from a group to the collection 
                                                for (int k = 0; k < dtusers.Rows.Count; k++)
                                                {
                                                    bool _Isuserpresent = false;
                                                    gloGeneralItem.gloItem _oListItem = new gloGeneralItem.gloItem();

                                                    _oListItem.ID = Convert.ToInt64(dtusers.Rows[k]["nUserID"]);
                                                    _oListItem.Description = Convert.ToString(dtusers.Rows[k]["LoginName"]);
                                                    if (IsgloCollectCustomer)
                                                    {
                                                        _oListItem.bGloCollect = Convert.ToBoolean(dtusers.Rows[k]["bisglocollect"]);
                                                    }

                                                    // check if user is a member of multiple  groups
                                                    for (int n = 0; n <= _SelectedItems.Count - 1; n++)
                                                    {
                                                        if (_SelectedItems.Count == 0)
                                                        {
                                                            _SelectedItems.Add(_oListItem);//first user in the list
                                                            //_oListItem.Dispose();
                                                            //_oListItem = null;
                                                            break;
                                                        }
                                                        if (_SelectedItems[n].ID == _oListItem.ID)
                                                        {
                                                            _Isuserpresent = true;
                                                            _oListItem.Dispose();
                                                            _oListItem = null;
                                                            break;
                                                        }

                                                    }
                                                    // add if user is not a member of multiple  groups
                                                    if (_Isuserpresent == false)
                                                    {
                                                        _SelectedItems.Add(_oListItem);
                                                        _oListItem.Dispose();
                                                        _oListItem = null;
                                                    }
                                                    else
                                                    {
                                                        //_oListItem.Dispose();
                                                        //_oListItem = null;
                                                    }
                                                }
                                                if (dtusers != null) { dtusers.Dispose(); dtusers = null; }
                                            }
                                        }
                                        break;

                                    case gloListControlType.PatientInsurence:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.EMRPatient: //20080804
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.InsuranceServiceType:  //20081007
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.Taxonomy:  //20081110
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.AppointmentType:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                            _code = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.AllPatientInsurances:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;
                                    //Sandip Darade 20090730
                                    case gloListControlType.PreferredLab:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.Facility:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.ChargeTray:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.PaymentTray:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.ConflictingPatient:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            //_name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim() + " " + dgListView[5, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.PaymentType:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            //_name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                            //_name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim() + " " + dgListView[5, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.InsuranceCompany:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.InsuranceReportingCategory:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            // _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.HistoryItem:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.Location:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            //_code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.AppointmentTypeType:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            //_code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.gloVaultData:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim() + " " + dgListView[5, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.gloVaultEmail:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim() + " " + dgListView[5, i].Value.ToString().Trim();
                                        }
                                        break;

                                    case gloListControlType.PatientRepresentative:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim() + " " + dgListView[5, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.DMSCategory:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.OrderQuickNotes:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.OBVitalComments:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.CarePlan:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.PatientProblemList :
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.CarePlanLoincs:
                                        {
                                            _id = 0;
                                            _code = dgListView[0, i].Value.ToString().Trim();
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.HealthConcern:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.Intervention:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.CarePlanMedication:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);//medicationid
                                            _name = dgListView[3, i].Value.ToString().Trim();//medicationname
                                        }
                                        break;
                                    case gloListControlType.CarePlanProblemList:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);//nProblemId
                                            _name = dgListView[7, i].Value.ToString().Trim();//Problem
                                        }
                                        break;
                                    case gloListControlType.CarePlanEncounter:
                                        {
                                            _id = Convert.ToInt64(dgListView[14, i].Value);//ExamId
                                            _name = dgListView[3, i].Value.ToString().Trim();//ExamName
                                        }
                                        break;
                                    case gloListControlType.CarePlanImmunization:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);//Immunization transaction id 
                                            _name = dgListView[3, i].Value.ToString().Trim();//vaccine name
                                        }
                                        break;
                                    case gloListControlType.CarePlanEducation:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);//nEducationID
                                            _name = dgListView[3, i].Value.ToString().Trim();//sTemplateName
                                        }
                                        break;
                                    case gloListControlType.CarePlanNutrition:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);//nID
                                            _name = dgListView[6, i].Value.ToString().Trim();//sEMRDisplayName
                                        }
                                        break;
                                    case gloListControlType.CarePlanLabOrder:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);//labotd_TestID
                                            _code = dgListView[2, i].Value.ToString().Trim();//labom_OrderID
                                            _name = dgListView[3, i].Value.ToString().Trim();//labotd_TestName
                                        }
                                        break;
                                    case gloListControlType.CarePlanGoals:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);//nGoalID
                                            _name = dgListView[2, i].Value.ToString().Trim();//sGoalName
                                        }
                                        break;
                                    case gloListControlType.MedicalCategory:
                                    case gloListControlType.OBMedicalCategory:
                                    case gloListControlType.MedicalCategoryReport:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.BillingQuickNotes:
                                        {
                                            _id = Convert.ToInt64(dgListView[0, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[1, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.ReasonCode:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();// +" " + dgListView[2, i].Value.ToString().Trim();                                          
                                            if (chkIncludeDescription.Checked)
                                            {
                                                _name = dgListView[3, i].Value.ToString().Trim();
                                            }
                                            else
                                            {
                                                _name = dgListView[2, i].Value.ToString().Trim();
                                            }
                                        }
                                        break;
                                    case gloListControlType.RemarkCode:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = dgListView[2, i].Value.ToString().Trim();
                                            if (chkIncludeDescription.Checked)
                                            {
                                                _name = dgListView[3, i].Value.ToString().Trim();
                                            }
                                            else
                                            {
                                                _name = dgListView[2, i].Value.ToString().Trim();
                                            }
                                        }
                                        break;
                                    case gloListControlType.HistoryOBPhysicalExam:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            // _code = dgListView[2, i].Value.ToString().Trim();
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.ApptSelectedCols:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        break;
                                    case gloListControlType.CQMICD10:
                                    case gloListControlType.CQMICD9:
                                    case gloListControlType.CQMOrders:
                                    case gloListControlType.CQMSnomed:
                                    case gloListControlType.CQMRxNorm:
                                    case gloListControlType.CQMHCPCS:
                                    case gloListControlType.CQMCVX:
                                        {
                                            _id = Convert.ToInt64(dgListView[1, i].Value);
                                            _code = Convert.ToString(dgListView[2, i].Value);
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }

                                        break;

                                    default:
                                        {
                                        }
                                        break;
                                }
                                if (_IsUsergroup == false)
                                {
                                    gloGeneralItem.gloItem oListItem = new gloGeneralItem.gloItem();
                                    if (_id != 0)
                                    {

                                        oListItem.ID = _id;
                                        oListItem.Code = _code;
                                        oListItem.Description = _name;
                                        if (_isdefault != 0)
                                        {
                                            oListItem.Default = _isdefault;
                                        }
                                    }

                                    if (_ListControlType == gloListControlType.Procedures)
                                    {
                                        for (int p = 0; p <= trvItems.GetNodeCount(false) - 1; p++)
                                        {
                                            if (Convert.ToInt64(trvItems.Nodes[p].Tag.ToString()) == _id)
                                            {
                                                for (int q = 0; q <= trvItems.Nodes[p].GetNodeCount(false) - 1; q++)
                                                {
                                                    oListItem.SubItems.Add(Convert.ToInt64(trvItems.Nodes[p].Nodes[q].Tag.ToString()), trvItems.Nodes[p].Nodes[q].ToolTipText, trvItems.Nodes[p].Nodes[q].Text);
                                                }
                                                break;
                                            }
                                        }
                                    }

                                    if (oListItem.ID != 0)
                                    {
                                        //if ((_ismultiselect == true) && (_ListControlType == gloListControlType.Diagnosis))
                                        //{
                                        //}
                                        //else
                                        //{

                                        bool found = false;
                                        foreach (gloGeneralItem.gloItem item in _SelectedItems)
                                        {
                                            if (_ListControlType == gloListControlType.CarePlanLabOrder)
                                            {
                                                if (item.ID == oListItem.ID && item.Code  == oListItem.Code)
                                                {
                                                    found = true;
                                                    break;
                                                }
                                            }
                                            else
                                            {
                                                if (item.ID == oListItem.ID)
                                                {
                                                    found = true;
                                                    break;
                                                }
                                            }
                                        }
                                        if (found == false)
                                        {
                                            _SelectedItems.Add(oListItem);
                                        }
                                    }

                                    //if (oListItem != null)
                                    //{
                                    //    oListItem.Dispose();
                                    //    oListItem = null;
                                    //}
                                }
                            }
                        } //end 
                    }

                } // if (_FoundSelected == true)
            }
            else
            {
                gloGeneralItem.gloItem oListItem = new gloGeneralItem.gloItem();
                oListItem.ID = _id;
                oListItem.Code = _code;
                oListItem.Description = _name;

                if (_ListControlType == gloListControlType.Procedures)
                {
                    //select existing nodes
                    for (int p = 0; p <= trvItems.GetNodeCount(false) - 1; p++)
                    {
                        if (Convert.ToInt64(trvItems.Nodes[p].Tag.ToString()) == _id)
                        {
                            for (int q = 0; q <= trvItems.Nodes[p].GetNodeCount(false) - 1; q++)
                            {
                                oListItem.SubItems.Add(Convert.ToInt64(trvItems.Nodes[p].Nodes[q].Tag.ToString()), trvItems.Nodes[p].Nodes[q].ToolTipText, trvItems.Nodes[p].Nodes[q].Text);
                            }
                            break;
                        }
                    }
                }

                _SelectedItems.Add(oListItem);

                //if (oListItem != null)
                //{
                //    oListItem.Dispose();
                //    oListItem = null;
                //}
            }
            if (CallingForm=="Claim Rule")
            {
                if (rd_ANDPredicate.Checked)
                {
                    sPredicateType = "And";
                }
                else if (rd_ORPredicate.Checked)
                {
                    sPredicateType = "Or";
                }
            }
            ItemSelectedClick(sender, e);
            if (CloseOnDoubleClick)

            { this.Visible = false; }
        }


        private void btnSelect1_Click(object sender, EventArgs e)
        {
            dgListView.EndEdit();

            DataRow _TempRow;

            if (_ListControlType == gloListControlType.Procedures)
            {
                if (trvItems.GetNodeCount(false) <= 0)
                {
                    //MessageBox.Show("Please select procedure and resources to continue", _MessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Information);
                    //return;
                }
            }

            _SelectedItems.Clear();
            int i;
            bool _FoundSelected = false;

            if (_ismultiselect == true)
            {
                //Added by Mayuri:on 20100508-To fill users of selected group
                if (tsb_UserGroups.Text == "Users")
                {
                    if (_dtGroupList != null)
                    {
                        if (_dtGroupList.Rows.Count > 0)
                        {
                            for (i = 0; i < _dtGroupList.Rows.Count; i++)
                            {
                                if (Convert.ToString(_dtGroupList.Rows[i]["Check1"]) == "1")
                                {
                                    _FoundSelected = true;
                                    break;
                                }
                            }
                        }
                    }

                }
                else
                {
                    if (_dvList != null)
                    {
                        if (_dvList.Table.Rows.Count > 0)
                        {
                            for (i = 0; i < _dvList.Table.Rows.Count; i++)
                            {
                                if (Convert.ToString(_dvList.Table.Rows[i]["Check1"]) == "1")
                                {
                                    _FoundSelected = true;
                                    break;
                                }
                            }
                        }
                    }
                }

                if (tsb_UserGroups.Text == "Users")
                {

                    dgListView.DataSource = null;
                    dgListView.DataSource = _dtGroupList;
                    if (_dtGroupList != null)
                    {
                        for (i = 0; i < _dtGroupList.Rows.Count; i++)
                        {
                            if (Convert.ToString(_dtGroupList.Rows[i]["Check1"]) == "1")
                            {
                                (dgListView.Rows[i].Cells[0].Value) = Convert.ToBoolean(1);
                            }
                        }
                    }
                }
                else
                {
                    if (_ListControlType != gloListControlType.Referrals && _ListControlType != gloListControlType.Physicians)
                    {
                        dgListView.DataSource = null;

                        dgListView.DataSource = _dvList;
                        if (_dvList != null)
                        {
                            for (i = 0; i < _dvList.Table.Rows.Count; i++)
                            {
                                if (Convert.ToString(_dvList.Table.Rows[i]["Check1"]) == "1")
                                {
                                    (dgListView.Rows[i].Cells[0].Value) = Convert.ToBoolean(1);
                                }
                            }
                        }
                    }
                    else
                    {

                        for (int j = 0; j <= dtSelected.Rows.Count - 1; j++)
                        {
                            gloGeneralItem.gloItem oListItem = new gloGeneralItem.gloItem();
                            oListItem.ID = Convert.ToInt64(dtSelected.Rows[j]["ID"]);
                            oListItem.Code = Convert.ToString(dtSelected.Rows[j]["Name"]);
                            oListItem.Description = Convert.ToString(dtSelected.Rows[j]["Name"]);
                            _SelectedItems.Add(oListItem);
                            oListItem.Dispose();
                            oListItem = null;
                        }
                    }

                }
                //Up to Here
                if (_FoundSelected == true)
                {
                    if (_ListControlType == gloListControlType.Insurance)
                        if (_dtSelectedRecords == null)
                        {
                            //  _dtSelectedRecords = new DataTable();
                            if (dgListView.DataSource != null)
                            {
                                _dtSelectedRecords = ((DataView)dgListView.DataSource).ToTable().Clone();
                                _dtSelectedRecords.Columns.RemoveAt(_dtSelectedRecords.Columns.Count - 1);
                            }
                        }

                    for (i = 0; i <= dgListView.Rows.Count - 1; i++)
                    {
                        if (_ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians)
                        {
                            break;
                        }
                        if (Convert.ToBoolean(dgListView.Rows[i].Cells[0].Value) == true)
                        {
                            switch (_ListControlType)
                            {
                                case gloListControlType.Other:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = "";
                                        if (dgListView.Columns.Count >= 2)
                                        {
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                        else
                                        {
                                            _name = "";
                                        }
                                    }
                                    break;
                                case gloListControlType.Patient:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        //_name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim() + " " + dgListView[5, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.AllPatient:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        //_name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim() + " " + dgListView[5, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.PendingLabPatients:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.Pharmacy:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[3, i].Value.ToString().Trim();
                                        _name = dgListView[2, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.Insurance:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[3, i].Value.ToString().Trim();
                                        _name = dgListView[4, i].Value.ToString().Trim();

                                        // CREATE OUTPUT DATATABLE  20100217//
                                        _TempRow = _dtSelectedRecords.NewRow();
                                        for (int iCol = 0; iCol < _dtSelectedRecords.Columns.Count; iCol++)
                                        { _TempRow[iCol] = dgListView[iCol + 1, i].Value.ToString().Trim(); }
                                        _dtSelectedRecords.Rows.Add(_TempRow);
                                        // CREATE DT END //
                                    }
                                    break;
                                case gloListControlType.Hospital:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[3, i].Value.ToString().Trim();
                                        _name = dgListView[2, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.Physicians:
                                    {
                                        ////_id = Convert.ToInt64(dgListView[1, i].Value);
                                        ////_code = "";
                                        ////_name = dgListView[2, i].Value.ToString().Trim() + " " + dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.Referrals:
                                    {

                                        //_id = Convert.ToInt64(dgListView[1, i].Value);
                                        //_code = "";
                                        //_name = dgListView[2, i].Value.ToString().Trim() + " " + dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();

                                    }
                                    break;
                                case gloListControlType.Providers:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = "";
                                        //if condition ADDED BY SHUBHANGI 20100619 to resolve middlename space case
                                        if (dgListView[3, i].Value.ToString().Trim() != "")
                                        {
                                            _name = dgListView[2, i].Value.ToString().Trim() + " " + dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                        }
                                        else
                                        {
                                            _name = dgListView[2, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                        }
                                    }
                                    break;
                                case gloListControlType.ReportProviders:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _name = dgListView[2, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.ReportAccountActionCode:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.ClinicalInstruction:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.Resources:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.Procedures:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[3, i].Value.ToString().Trim();
                                        _name = dgListView[2, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.CPT:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.CPTProcedures:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.HistoryLOINC :
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;

                                case gloListControlType.CQMCVXCOdes:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;


                                case gloListControlType.OBVitalComments:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.Diagnosis:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.PatientConsent:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.Modifier:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                //Code Added by Sagar Ghodke : 05 March 2008
                                case gloListControlType.Users:
                                    {
                                        //Sandip Darade 20090203 to add user groups 
                                        //If individual Users to add 
                                        if (tsb_UserGroups.Text == "Groups")//Add users
                                        {
                                            _IsUsergroup = false;
                                            _id = Convert.ToInt64(dgListView[1, i].Value);//UserID
                                            _code = dgListView[6, i].Value.ToString();//Email
                                            _name = dgListView[3, i].Value.ToString().Trim(); //+ " " + dgListView[4, i].Value.ToString().Trim() + " " + dgListView[5, i].Value.ToString().Trim();
                                        }
                                        //If user groups to add 
                                        if (tsb_UserGroups.Text == "Users")//Add user groups
                                        {
                                            _IsUsergroup = true;
                                            _id = Convert.ToInt64(dgListView[1, i].Value);//GroupID
                                            _name = dgListView[2, i].Value.ToString();//GroupName
                                            _code = Convert.ToString(dgListView[3, i].Value);//Type


                                            DataTable dtusers = null;
                                            //get users for against selected group
                                            dtusers = GetGroupUsers(_id);
                                            //Add user from a group to the collection 
                                            for (int k = 0; k < dtusers.Rows.Count; k++)
                                            {
                                                bool _Isuserpresent = false;
                                                gloGeneralItem.gloItem _oListItem = new gloGeneralItem.gloItem();

                                                _oListItem.ID = Convert.ToInt64(dtusers.Rows[k]["nUserID"]);
                                                _oListItem.Description = Convert.ToString(dtusers.Rows[k]["LoginName"]);
                                                // check if user is a member of multiple  groups
                                                for (int n = 0; n <= _SelectedItems.Count - 1; n++)
                                                {
                                                    if (_SelectedItems.Count == 0)
                                                    {
                                                        _SelectedItems.Add(_oListItem);//first user in the list
                                                        //_oListItem.Dispose();
                                                        //_oListItem = null;
                                                        break;
                                                    }
                                                    if (_SelectedItems[n].ID == _oListItem.ID)
                                                    {
                                                        _Isuserpresent = true;
                                                        _oListItem.Dispose();
                                                        _oListItem = null;
                                                        break;
                                                    }

                                                }
                                                // add if user is not a member of multiple  groups
                                                if (_Isuserpresent == false)
                                                {
                                                    _SelectedItems.Add(_oListItem);
                                                    _oListItem.Dispose();
                                                    _oListItem = null;
                                                }
                                                else
                                                {
                                                }
                                            }


                                        }
                                    }
                                    break;
                                case gloListControlType.PatientInsurence:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[2, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.EMRPatient: //20080804
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.InsuranceServiceType:  //20081007
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.Taxonomy:  //20081110
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.AppointmentType:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _name = dgListView[2, i].Value.ToString().Trim();
                                        _code = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.AllPatientInsurances:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[2, i].Value.ToString().Trim();
                                    }
                                    break;
                                //Sandip Darade 20090730
                                case gloListControlType.PreferredLab:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[2, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.Facility:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.ChargeTray:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.PaymentTray:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.ConflictingPatient:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        //_name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim() + " " + dgListView[5, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.PaymentType:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        //_name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim();
                                        //_name = dgListView[3, i].Value.ToString().Trim() + " " + dgListView[4, i].Value.ToString().Trim() + " " + dgListView[5, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.InsuranceCompany:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.InsuranceReportingCategory:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.Location:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.AppointmentTypeType:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[3, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.OrderQuickNotes:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.CarePlan:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _name = dgListView[2, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.PatientProblemList :
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _name = dgListView[2, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.HealthConcern:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _name = dgListView[2, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.Intervention:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _name = dgListView[2, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.CarePlanMedication:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);//medication id 
                                        _name = dgListView[3, i].Value.ToString().Trim();//medication name
                                    }
                                    break;
                                case gloListControlType.CarePlanProblemList:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);//nProblemid
                                        _name = dgListView[7, i].Value.ToString().Trim();//Problem
                                    }
                                    break;
                                case gloListControlType.CarePlanEncounter:
                                    {
                                        _id = Convert.ToInt64(dgListView[14, i].Value);//ExamID
                                        _name = dgListView[3, i].Value.ToString().Trim();//ExamName
                                    }
                                    break;
                                case gloListControlType.CarePlanImmunization:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);//Immunization transaction id
                                        _name = dgListView[3, i].Value.ToString().Trim();//Vaccine Name
                                    }
                                    break;
                                case gloListControlType.CarePlanEducation:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);//nEducationID
                                        _name = dgListView[3, i].Value.ToString().Trim();//sTemplateName
                                    }
                                    break;
                                case gloListControlType.CarePlanNutrition:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);//nID
                                        _name = dgListView[6, i].Value.ToString().Trim();//sEMRDisplayName
                                    }
                                    break;
                                case gloListControlType.CarePlanLabOrder:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);//labotd_TestID
                                        _code = dgListView[2, i].Value.ToString().Trim();//labom_OrderID
                                        _name = dgListView[3, i].Value.ToString().Trim();//labotd_TestName
                                    }
                                    break;
                                case gloListControlType.CarePlanGoals:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);//nGoalID
                                        _name = dgListView[2, i].Value.ToString().Trim();//sGoalName
                                    }
                                    break;
                                case gloListControlType.BillingQuickNotes:
                                    {
                                        _id = Convert.ToInt64(dgListView[0, i].Value);
                                        _code = dgListView[2, i].Value.ToString().Trim();
                                        _name = dgListView[1, i].Value.ToString().Trim();
                                    }
                                    break;
                                case gloListControlType.ReasonCode:
                                    {
                                        _id = Convert.ToInt64(dgListView[0, i].Value);
                                        _code = dgListView[1, i].Value.ToString().Trim() + " " + dgListView[2, i].Value.ToString().Trim();
                                        if (chkIncludeDescription.Checked)
                                        {
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        else
                                        {
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                    }
                                    break;
                                case gloListControlType.RemarkCode:
                                    {
                                        _id = Convert.ToInt64(dgListView[0, i].Value);
                                        _code = dgListView[1, i].Value.ToString().Trim();
                                        if (chkIncludeDescription.Checked)
                                        {
                                            _name = dgListView[3, i].Value.ToString().Trim();
                                        }
                                        else
                                        {
                                            _name = dgListView[2, i].Value.ToString().Trim();
                                        }
                                    }
                                    break;
                                case gloListControlType.MedicalCategory:
                                case gloListControlType.OBMedicalCategory:
                                    {
                                        _id = Convert.ToInt64(dgListView[1, i].Value);
                                        _name = dgListView[2, i].Value.ToString().Trim();
                                    }
                                    break;
                                default:
                                    {
                                    }
                                    break;
                            }
                            if (_IsUsergroup == false)
                            {
                                gloGeneralItem.gloItem oListItem = new gloGeneralItem.gloItem();
                                if (_id != 0)
                                {

                                    oListItem.ID = _id;
                                    oListItem.Code = _code;
                                    oListItem.Description = _name;
                                }

                                if (_ListControlType == gloListControlType.Procedures)
                                {
                                    for (int p = 0; p <= trvItems.GetNodeCount(false) - 1; p++)
                                    {
                                        if (Convert.ToInt64(trvItems.Nodes[p].Tag.ToString()) == _id)
                                        {
                                            for (int q = 0; q <= trvItems.Nodes[p].GetNodeCount(false) - 1; q++)
                                            {
                                                oListItem.SubItems.Add(Convert.ToInt64(trvItems.Nodes[p].Nodes[q].Tag.ToString()), trvItems.Nodes[p].Nodes[q].ToolTipText, trvItems.Nodes[p].Nodes[q].Text);
                                            }
                                            break;
                                        }
                                    }

                                }

                                if (oListItem.ID != 0)
                                {
                                    _SelectedItems.Add(oListItem);
                                }
                                //oListItem.Dispose();
                                //oListItem = null;
                            }
                        }
                    }


                } // if (_FoundSelected == true)
            }
            else
            {
                gloGeneralItem.gloItem oListItem = new gloGeneralItem.gloItem();
                oListItem.ID = _id;
                oListItem.Code = _code;
                oListItem.Description = _name;

                if (_ListControlType == gloListControlType.Procedures)
                {
                    //select existing nodes
                    for (int p = 0; p <= trvItems.GetNodeCount(false) - 1; p++)
                    {
                        if (Convert.ToInt64(trvItems.Nodes[p].Tag.ToString()) == _id)
                        {
                            for (int q = 0; q <= trvItems.Nodes[p].GetNodeCount(false) - 1; q++)
                            {
                                oListItem.SubItems.Add(Convert.ToInt64(trvItems.Nodes[p].Nodes[q].Tag.ToString()), trvItems.Nodes[p].Nodes[q].ToolTipText, trvItems.Nodes[p].Nodes[q].Text);
                            }
                            break;
                        }
                    }
                }

                _SelectedItems.Add(oListItem);
                //oListItem.Dispose();
                //oListItem = null;
            }
            _TempRow = null;
        }

        private void btnClose_Click(object sender, EventArgs e)
        {
            _id = 0;
            _code = "";
            _name = "";
            _SelectedItems.Clear();
            ItemClosedClick(sender, e);
            this.Visible = false;

            if (_SelectedItems != null)
            {
                _SelectedItems.Dispose();
                _SelectedItems = null;
            }

            if (dtSelected != null)
            {
                dtSelected.Dispose();
                dtSelected = null;
            }

            if (glItems != null)
            {
                glItems.Dispose();
                glItems = null;
            }

            this.chkSelectAll.CheckedChanged -= new EventHandler(this.chkSelectAll_CheckedChanged);
            cmbTypeOfservice.SelectedIndexChanged -= new EventHandler(cmbTypeOfservice_SelectedIndexChanged);

        }


        //Added by Mayuri:20100705-To give facility of adding physician,pharmacy from list control
        private void tsb_New_Click(object sender, EventArgs e)
        {
            AddFormHandlerClick(sender, e);
            if (CallingForm == "gloLabUC_Transaction")
            {
                FillListAsCriteria(0);
            }
        }

        private void btnRefresh_Click(object sender, EventArgs e)
        {
            try
            {
                //fill the patients
                FillListAsCriteria(0);
                int nCount;
                try
                {
                    if (dgListView.DataSource != null)
                    {
                        if (((DataView)dgListView.DataSource).Table.Rows.Count > 0)
                        {
                            for (nCount = 0; nCount <= ((DataView)dgListView.DataSource).Table.Rows.Count - 1; nCount++)
                            {
                                if (_ismultiselect == false)
                                {
                                    if (dgListView.Rows[nCount].Cells[0].Value.ToString().Trim() != "")
                                    {
                                        if (Convert.ToInt64(dgListView.Rows[nCount].Cells[0].Value) == _id)
                                        {
                                            dgListView.Rows[nCount].Selected = true;
                                            dgListView.Select();

                                            return; // TODO: might not be correct. Was : Exit Sub 
                                        }
                                    }
                                }
                                else
                                {
                                    if (dgListView.Rows[nCount].Cells[1].Value.ToString().Trim() != "")
                                    {
                                        if (Convert.ToInt64(dgListView.Rows[nCount].Cells[1].Value) == _id)
                                        {
                                            dgListView.Rows[nCount].Selected = true;
                                            dgListView.Select();

                                            return; // TODO: might not be correct. Was : Exit Sub 
                                        }
                                    }
                                }
                            }
                        }
                    }
                }

                catch (Exception ex)
                {
                    gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
                }
            }

            catch (Exception objErr)
            {
                MessageBox.Show(objErr.ToString(), _MessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
            }
        }
        #endregion

        #region "Internal Functions & Procedures"

        private bool IsNum(object Expression)
        {
            //function to check whether the string entered is numeric or not
            //char ch;

            try
            {

                // Variable to collect the Return value of the TryParse method.
                bool isNum;

                // Define variable to collect out parameter of the TryParse method. If the conversion fails, the out parameter is zero.
                double retNum;

                // The TryParse method converts a string in a specified style and culture-specific format to its double-precision floating point number equivalent.
                // The TryParse method does not generate an exception if the conversion fails. If the conversion passes, True is returned. If it does not, False is returned.
                isNum = Double.TryParse(Convert.ToString(Expression), System.Globalization.NumberStyles.Any, System.Globalization.NumberFormatInfo.InvariantInfo, out retNum);
                return isNum;


            }

            catch (Exception objErr)
            {
                MessageBox.Show(objErr.ToString(), _MessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Error);
                return false;
            }
            finally
            {
            }

        }

        private bool IsDate(object inValue)
        {
            //function to check whether the value passed is a valid datetime value or not
            bool bValid;
            try
            {
                DateTime myDT = DateTime.Parse(inValue.ToString());
                bValid = true;

                return bValid;
            }
            catch (FormatException e)
            {
                e.ToString();
                bValid = false;
                return bValid;
            }
            catch (Exception ex)
            {
                ex.ToString();
                bValid = false;
                return bValid;
            }
            finally
            {

            }


        }

        private string GetRowFilter(string RowFilter)
        {
            try
            {
                if (RowFilter == "")
                {
                    return RowFilter;
                }
                else
                {
                    return RowFilter + " AND ";
                }
            }

            catch (Exception gex)
            {
                gex.ToString();
                return "";
            }
        }

        #endregion

        #region Search
        public void GetDefaultSearchColumn()
        {
            DataTable dtSetting = null;
            gloDatabaseLayer.DBLayer oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
            //string Result = "";
            try
            {
                oDB.Connect(false);
                String strQuery = "SELECT sSettingsName,sSettingsValue FROM Settings WHERE  sSettingsName = 'Patient Search Column' AND nClinicID= " + _ClinicID + "";
                oDB.Retrive_Query(strQuery, out dtSetting);
                if (dtSetting.Rows.Count > 0)
                {
                    lblSearch.Text = Convert.ToString(dtSetting.Rows[0]["sSettingsValue"]) + " :";
                    if (lblSearch.Text.Trim() == "")
                        lblSearch.Text = "Code :";
                }
                strQuery = null;
            }
            catch (gloDatabaseLayer.DBException DBErr)
            {
                DBErr.ERROR_Log(DBErr.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString(), _MessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                oDB.Disconnect();
                oDB.Dispose();
                oDB = null;
                if (dtSetting != null)
                {
                    dtSetting.Dispose();
                    dtSetting = null;
                }
            }
        }

        private void txtSearch_TextChanged_Old(object sender, EventArgs e)
        {
            try
            {
                //int index = 1;
                //try
                //{
                //    index = dgListView.SortedColumn.Index;
                //    if (_ismultiselect == true)
                //        index--;
                //}
                //catch
                //{
                //    index = 1;
                //

                //if (_ListControlType == gloListControlType.Patient || _ListControlType == gloListControlType.AllPatient || _ListControlType == gloListControlType.PendingLabPatients) 
                //{
                //    switch (lblSearch.Text.Trim())
                //    {
                //        case "Code":
                //            index = 1;
                //            break;
                //        case "First Name":
                //            index = 2;
                //            break;
                //        case "Last Name":
                //            index = 4;
                //            break;
                //        default:
                //            lblSearch.Text = "Code :";
                //            index = 1;
                //            break;
                //    }//switch 

                //    //if (_ismultiselect == true)
                //    //    index = index + 1;
                //}

                DataView dv = (DataView)dgListView.DataSource;
                if (dv == null) return;
                //dgListView.DataSource = dv;

                //string strSearch = txtSearch.Text.Trim();
                //strSearch.Replace("'", "''");

                //string strFilter = "";
                //for (int i = 1; i < dv.Table.Columns.Count; i++)
                //{
                //    if (dv.Table.Columns[i].DataType == typeof(System.String))
                //    {
                //        if (strFilter != "")
                //        {
                //            strFilter += " OR ";
                //        }
                //        strFilter += dv.Table.Columns[i].ColumnName + " Like '" + strSearch + "%'";
                //    }
                //}
                //dv.RowFilter = strFilter;

                //dgListView.DataSource = dv;
                //Added By MaheshB on 20090306
                VisibleColumns = 0;
                DataGridViewColumnCollection columns = dgListView.Columns;
                for (int Counter = 0; Counter < dv.Table.Columns.Count; Counter++)//Loop for Column Names.
                {
                    if (_ismultiselect == false)
                    {
                        if ((dgListView.Columns[Counter].Visible == true) && (dv.Table.Columns[Counter].DataType == typeof(System.String)))
                        {
                            VisibleColumns++;
                        }
                    }
                    else
                    {
                        if ((dgListView.Columns[Counter + 1].Visible == true) && (dv.Table.Columns[Counter].DataType == typeof(System.String)))
                        {
                            VisibleColumns++;
                        }
                    }
                }

                string strSearch = txtSearch.Text.Trim();
                sFilter = "";
                //strSearch = strSearch.Replace("'", "''").Replace("[", "").Replace("]", "").Replace("%", "").Replace("*", "");

                //Added By Mukesh for instring search 2009-08-29
                strSearch = strSearch.Replace("'", "''").Replace("[", "").Replace("]", "").Replace("*", "%");
                //if (strSearch.Length > 1)
                //{
                //    string str = strSearch.Substring(1).Replace("%", "");
                //    strSearch = strSearch.Substring(0, 1) + str;
                //}

                if (strSearch.Trim() != "")
                {
                    strSearchArray = strSearch.Split(',');
                }
                if (strSearch.Trim() != "")
                {

                    if (strSearchArray.Length == 1)
                    {
                        //sFilter += " ( ";
                        strSearch = strSearchArray[0].Trim();

                        if (strSearch.Length > 1)
                        {
                            string str = strSearch.Substring(1).Replace("%", "");
                            strSearch = strSearch.Substring(0, 1) + str;
                        }

                        for (int i = 0; i < dv.Table.Columns.Count; i++) //This loop is for Column Names.
                        {
                            if (_ismultiselect == false)
                            {
                                if (dv.Table.Columns[i].DataType == typeof(System.String))
                                {
                                    if (dgListView.Columns[i].Visible == true)
                                    {
                                        if (sFilter != "")
                                        {
                                            sFilter += " OR ";
                                        }
                                        sFilter += dv.Table.Columns[i].ColumnName + " Like '" + strSearch + "%'";
                                    }
                                }
                            }
                            else
                            {
                                if (dv.Table.Columns[i].DataType == typeof(System.String))
                                {
                                    if (dgListView.Columns[i + 1].Visible == true)
                                    {
                                        if (sFilter != "")
                                        {
                                            sFilter += " OR ";
                                        }
                                        sFilter += dv.Table.Columns[i].ColumnName + " Like '" + strSearch + "%'";
                                    }
                                }
                            }
                        }
                        //sFilter += " )";
                    }
                    else
                    {
                        //For Comma separated  value search
                        for (int i = 0; i < strSearchArray.Length; i++) //Loop is for Search Text.
                        {
                            strSearch = strSearchArray[i].Trim();

                            if (strSearch.Length > 1)
                            {
                                string str = strSearch.Substring(1).Replace("%", "");
                                strSearch = strSearch.Substring(0, 1) + str;
                            }


                            if (strSearch.Trim() != "")//To check for first Condition,to handle "AND" Keyword.
                            {
                                if (sFilter == "")//(i == 0)
                                {
                                    sFilter += "(";
                                    for (int j = 0, flag = 0; j < dv.Table.Columns.Count; j++)//Loop for Column Names.
                                    {
                                        if (dv.Table.Columns[j].DataType == typeof(System.String))
                                        {
                                            //if (sFilter != "(" && (j<=dv.Table.Columns.Count-1))

                                            if (_ismultiselect == false)
                                            {
                                                if (dgListView.Columns[j].Visible == true)
                                                {
                                                    flag++;

                                                    sFilter += dv.Table.Columns[j].ColumnName + " Like '" + strSearch + "%'";
                                                    if (flag != 0 && (j <= VisibleColumns))
                                                    {
                                                        sFilter += " OR ";
                                                    }


                                                }
                                            }
                                            else
                                            {
                                                int Tempj = j + 1;
                                                if (dgListView.Columns[Tempj].Visible == true)
                                                {
                                                    flag++;

                                                    sFilter += dv.Table.Columns[j].ColumnName + " Like '" + strSearch + "%'";
                                                    if (flag != 0 && (j < VisibleColumns))
                                                    {
                                                        sFilter += " OR ";
                                                    }


                                                }
                                            }
                                        }
                                    }
                                    sFilter += ")";
                                }
                                else
                                {
                                    sFilter = sFilter + " AND (";
                                    for (int k = 0, flag = 0; k < dv.Table.Columns.Count; k++)//Loop for Column Names.
                                    {
                                        if (dv.Table.Columns[k].DataType == typeof(System.String))
                                        {

                                            //if (k != 0)
                                            //{
                                            //    if (flag != 0 && (k <= VisibleColumns))
                                            //    {
                                            //        sFilter += " OR ";

                                            //    }
                                            //}
                                            DataGridViewColumnCollection cml = dgListView.Columns;
                                            if (_ismultiselect == false)
                                            {
                                                if (dgListView.Columns[k].Visible == true)
                                                {
                                                    flag++;
                                                    sFilter += dv.Table.Columns[k].ColumnName + " Like '" + strSearch + "%'";
                                                    if (flag != 0 && (k <= VisibleColumns))
                                                    {
                                                        sFilter += " OR ";

                                                    }
                                                }

                                            }
                                            else
                                            {
                                                int Tempk = k + 1;
                                                if (dgListView.Columns[Tempk].Visible == true)
                                                {
                                                    flag++;
                                                    sFilter += dv.Table.Columns[k].ColumnName + " Like '" + strSearch + "%'";
                                                    if (flag != 0 && (k <= VisibleColumns))
                                                    {

                                                        sFilter += " OR ";


                                                    }
                                                }

                                            }

                                        }

                                    }
                                    sFilter = sFilter + ")";
                                }

                            }
                        }

                    }
                    dv.RowFilter = sFilter;
                }
                else
                {
                    dv.RowFilter = "";
                }
                dgListView.DataSource = dv;
                strSearch = null;
            }
            catch (Exception Ex)
            {
                MessageBox.Show(Ex.ToString(), _MessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            finally
            {
                //oDB.Disconnect();
                //oDB.Dispose();
            }
        }

        //code start by nilesh on 20110328

        DateTime _CurrentTime;

        private void oTimerSearch_Tick(object sender, EventArgs e)
        {
            if (txtSearch.Text.Trim() != "")
            {
                if (System.DateTime.Now.Subtract(_CurrentTime).Milliseconds > 100)
                {
                    oTimerSearch.Stop();
                    this.Cursor = Cursors.WaitCursor;
                    if (this.Visible == true)
                    {
                        //if condition added for ICD10 implementation
                        if (_ListControlType == gloListControlType.Diagnosis)
                        {
                            FillICD9ICD10();

                        }
                        else
                        {
                            SearchFired();
                        }
                    }
                    this.Cursor = Cursors.Default;
                }
            }
            else
            {
                oTimerSearch.Stop();
                this.Cursor = Cursors.WaitCursor;
                if (this.Visible == true)
                {
                    //if condition added for ICD10 implementation
                    if (_ListControlType == gloListControlType.Diagnosis)
                    {
                        FillICD9ICD10();

                    }
                    else
                    {
                        SearchFired();
                    }
                }
                this.Cursor = Cursors.Default;
            }
        }

        private void SearchFired()
        {

            try
            {

                // if (_ListControlType != gloListControlType.Referrals)//For Blank DataBase
                // code below added for guarantor changes  20100728

                dgListView.KeyDown -= dgListView_KeyDown;

                if (_ListControlType != gloListControlType.Referrals && _ListControlType != gloListControlType.Physicians && _ListControlType != gloListControlType.Patient && _ListControlType != gloListControlType.Pharmacy)//For Blank DataBase

                // if (_ListControlType != gloListControlType.Referrals && _ListControlType != gloListControlType.Physicians )//For Blank DataBase
                {

                    if (dgListView.DataSource != null)//For Blank DataBase
                    {

                        DataView dv = (DataView)dgListView.DataSource;

                        string strSearch = txtSearch.Text.Trim();
                        sFilter = "";

                        //strSearch = strSearch.Replace("'", "''").Replace("[", "").Replace("]", "").Replace("%", "").Replace("*", "");

                        //Added By Mukesh for instring search 2009-08-29
                        strSearch = strSearch.Replace("'", "''").Replace("[", "").Replace("]", "").Replace("*", "%");
                        //if (strSearch.Length > 1)
                        //{
                        //    string str = strSearch.Substring(1).Replace("%", "");
                        //    strSearch = strSearch.Substring(0, 1) + str;
                        //}

                        if (strSearch.Trim() != "")
                        {
                            strSearchArray = strSearch.Split(',');
                        }
                        if (strSearch.Trim() != "")
                        {

                            if (strSearchArray.Length == 1)
                            {
                                sFilter += " ( ";
                                strSearch = strSearchArray[0].Trim();

                                if (strSearch.Length > 1)
                                {
                                    string str = strSearch.Substring(1).Replace("%", "");
                                    strSearch = strSearch.Substring(0, 1) + str;
                                }

                                for (int i = 0; i < dv.Table.Columns.Count; i++) //This loop is for Column Names.
                                {
                                    if (_ismultiselect == false)
                                    {
                                        //If column is string & visible
                                        if (dv.Table.Columns[i].DataType == typeof(System.String) && dgListView.Columns[dv.Table.Columns[i].ColumnName].Visible == true)
                                        {
                                            if (sFilter != " ( ")//Add OR Except First Time
                                            {
                                                sFilter += " OR ";
                                            }
                                            if ((dv.Table.Columns[i].ColumnName == "Guarantor") && (_ListControlType == gloListControlType.GuarantorsAccounts)) //if condition added for problem 00000225 for filtering FName,MName,LName 
                                                sFilter += dv.Table.Columns[i].ColumnName + " Like '%" + strSearch + "%'";
                                            else   
                                                if (_ListControlType == gloListControlType.ImplantableDevices)
                                                {
                                                    sFilter += "[" + dv.Table.Columns[i].ColumnName + "]" + " Like '" + strSearch + "%'";
                                                }
                                                else
	                                                {
                                                        sFilter += dv.Table.Columns[i].ColumnName + " Like '" + strSearch + "%'";
	                                                }

                                        }
                                    }
                                    else
                                    {
                                        //If column is string & visible
                                        if (dv.Table.Columns[i].DataType == typeof(System.String) && dgListView.Columns[dv.Table.Columns[i].ColumnName].Visible == true)
                                        {

                                            if (_ListControlType == gloListControlType.ReportProviders)
                                            {
                                                if (sFilter != " ( ")
                                                {
                                                    sFilter += " OR ";
                                                }

                                                sFilter += dv.Table.Columns[i].ColumnName + " Like '%" + strSearch + "%'";
                                            }
                                            //ADDED BY SHUBHANGI 20100615 SEARCH SHOULD NOT ON PROVIDER COLUMN ACCORDING TO THE CASE NO GLO2010-0005195
                                            else if (dv.Table.Columns[i].ColumnName != "Provider")
                                            {
                                                if (sFilter != " ( ")
                                                {
                                                    sFilter += " OR ";
                                                }
                                                //or condition added for bugid 83556
                                                if ((_ListControlType == gloListControlType.Modifier) || (_ListControlType == gloListControlType.MedicalCategory))
                                                {
                                                    sFilter += dv.Table.Columns[i].ColumnName + " Like '%" + strSearch + "%'";
                                                }
                                                else if (_ListControlType == gloListControlType.CPT && CallingForm == "Claim Rule")
                                                {
                                                    sFilter += dv.Table.Columns[i].ColumnName + " Like '%" + strSearch + "%'";
                                                }
                                                else
                                                {
                                                    if (_ListControlType == gloListControlType.OBVitalComments)
                                                    {
                                                        sFilter += dv.Table.Columns[i].ColumnName + " Like '%" + strSearch + "%'";
                                                    }
                                                    //added to search word in whole string of column
                                                    else if (_ListControlType == gloListControlType.ReasonCode || _ListControlType == gloListControlType.CPTProcedures || _ListControlType == gloListControlType.RemarkCode)
                                                    {
                                                        sFilter += dv.Table.Columns[i].ColumnName + " Like '%" + strSearch + "%'";
                                                    }
                                                    else
                                                    {
                                                        sFilter += dv.Table.Columns[i].ColumnName + " Like '" + strSearch + "%'";
                                                    }
                                                }

                                            }
                                        }
                                    }
                                }
                                sFilter += " )";
                            }
                            else
                            {
                                //For Comma separated  value search
                                for (int k = 0; k < strSearchArray.Length; k++) //Loop is for Search Text.
                                {

                                    if (sFilter != "")
                                    {
                                        sFilter += " AND ";
                                    }

                                    string sTempFilter = " ( ";
                                    strSearch = strSearchArray[k].Trim();

                                    if (strSearch.Length > 1)
                                    {
                                        string str = strSearch.Substring(1).Replace("%", "");
                                        strSearch = strSearch.Substring(0, 1) + str;
                                        str = null;
                                    }

                                    for (int i = 0; i < dv.Table.Columns.Count; i++) //This loop is for Column Names.
                                    {
                                        if (_ismultiselect == false)
                                        {
                                            //If column is string & visible
                                            if (dv.Table.Columns[i].DataType == typeof(System.String) && dgListView.Columns[dv.Table.Columns[i].ColumnName].Visible == true)
                                            {
                                                //ADDED BY SHUBHANGI 20100615 SEARCH SHOULD NOT ON PROVIDER COLUMN ACCORDING TO THE CASE NO GLO2010-0005195
                                                if (dv.Table.Columns[i].ColumnName != "Provider")
                                                {
                                                    if (sTempFilter != " ( ")//Add OR Except First Time
                                                    {
                                                        sTempFilter += " OR ";
                                                    }
                                                    sTempFilter += dv.Table.Columns[i].ColumnName + " Like '" + strSearch + "%'";
                                                }
                                            }
                                        }
                                        else
                                        {
                                            //If column is string & visible
                                            if (dv.Table.Columns[i].DataType == typeof(System.String) && dgListView.Columns[dv.Table.Columns[i].ColumnName].Visible == true)
                                            {
                                                if (dv.Table.Columns[i].ColumnName != "Provider")
                                                {
                                                    if (sTempFilter != " ( ")//Add OR Except First Time
                                                    {
                                                        sTempFilter += " OR ";
                                                    }
                                                    if (_ListControlType == gloListControlType.Modifier)
                                                    {
                                                        sTempFilter += dv.Table.Columns[i].ColumnName + " Like '%" + strSearch + "%'";
                                                    }
                                                    //added to search word in whole string of column
                                                    else if (_ListControlType == gloListControlType.ReasonCode || _ListControlType == gloListControlType.RemarkCode)
                                                    {
                                                        sTempFilter += dv.Table.Columns[i].ColumnName + " Like '%" + strSearch + "%'";
                                                    }
                                                    else
                                                    {
                                                        sTempFilter += dv.Table.Columns[i].ColumnName + " Like '" + strSearch + "%'";
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    sTempFilter += " )";

                                    sFilter += sTempFilter;
                                    sTempFilter = null;
                                }

                            }

                            if (_ListControlType == gloListControlType.Modifier)
                            {
                                dgListView.RowEnter -= dgListView_RowEnter;
                                dgListView.SelectionChanged -= dgListView_SelectionChanged;
                            }
                            dv.RowFilter = sFilter;

                        }
                        else
                        {
                            if (_ListControlType == gloListControlType.Modifier)
                            {
                                dgListView.RowEnter -= dgListView_RowEnter;
                                dgListView.SelectionChanged -= dgListView_SelectionChanged;
                            }
                            dv.RowFilter = "";

                        }

                        //  ((DataView)(dgListView.DataSource)).Table.Rows.Clear();  
                        dgListView.DataSource = dv;

                        //dgListView.DataSource = dv;


                        //DataView dv = (DataView)dgListView.DataSource;
                        if (_dvList != null && _dvList.Table != null && _ismultiselect == true)
                        {
                            if (_dvList.Table.Rows.Count > 0)
                            {

                                for (int Count = 0; Count < dgListView.Rows.Count; Count++)
                                {
                                    //if (hst.ContainsKey(dgListView.Rows[Count].Cells[1].Value))
                                    //{
                                    //    dgListView.Rows[Count].Cells[0].Value = true;
                                    //}
                                    //if (Convert.ToInt32(_dvList.Table.Rows[Count]["Check"]) == 1)
                                    //{
                                    //    dgListView.Rows[Count].Cells[0].Value = true;
                                    //}
                                    //else
                                    //{
                                    //    dgListView.Rows[Count].Cells[0].Value = false;
                                    //}
                                    //if(dgListView.Rows[Count].Cells[1].Value)
                                    //dgListView.EndEdit();
                                    dgListView.CommitEdit(DataGridViewDataErrorContexts.Display);
                                    //Commneted by Mayuri:20100706
                                    //DataRow rw = dtForSearch.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                    //if (rw != null)
                                    //{
                                    //    if (Convert.ToInt32(rw["Check"]) != 0)
                                    //    {
                                    //        dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check"]);
                                    //    }
                                    //}
                                    //end code commnetd by Mayuri:20100706
                                    //if (_ListControlType !=gloListControlType .Users  )
                                    //{
                                    if (tsb_UserGroups.Text == "Users")
                                    {
                                        DataRow rw = _dtGroupList.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                        if (rw != null)
                                        {
                                            if (Convert.ToInt32(rw["Check1"]) != 0)
                                            {
                                                dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check1"]);
                                            }
                                        }
                                        rw = null;
                                    }
                                    else
                                    {
                                        if (_ListControlType == gloListControlType.Race || _ListControlType == gloListControlType.Ethnicity || _ListControlType == gloListControlType.MedicalCategory || _ListControlType == gloListControlType.OBMedicalCategory)
                                        {
                                            DataRow dr = dtSelected.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                            if (dr != null)
                                            {
                                                dgListView.Rows[Count].Cells[0].Value = 1;
                                            }
                                            dr = null;
                                        }
                                        else if (_ListControlType == gloListControlType.Modifier)
                                        {
                                            if (dgListView.ColumnCount >= 7)
                                            {
                                                DataRow[] dr = _dvList.Table.Select("nModifierID='" + dgListView.Rows[Count].Cells[2].Value + "'");
                                                if (dr.Length > 0)
                                                {
                                                    dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(dr[0]["Check1"]);
                                                    dgListView.Rows[Count].Cells[1].Value = dr[0]["Modifier2"].ToString();
                                                }
                                                dr = null;
                                            }
                                        }
                                        else
                                        {
                                            DataRow rw = _dvList.Table.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                            if (rw != null)
                                            {
                                                if (Convert.ToInt32(rw["Check1"]) != 0)
                                                {
                                                    dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check1"]);
                                                }
                                            }
                                            rw = null;
                                        }
                                    }
                                    //}
                                }
                            }
                        }
                    }
                }
                //Sandip Darade 20100422
                //for referrlas and physicians 
                //Shubhangi 20110111 Pharmacy
                //initially only 1000 records will be pulled from database 
                //records will be now pulled as per user search query
                else
                {

                    _IsTextchanged = true;
                    string strsearch = txtSearch.Text.Trim();

                    string[] strSearchArray = null;
                    string sFilter = "";

                    strsearch = strsearch.Replace("'", "''").Replace("[", "").Replace("]", "").Replace("%", "[%]");

                    if (strsearch.StartsWith("*") == true)
                    {
                        strsearch = strsearch.Replace("*", "%");
                    }

                    strsearch = strsearch.Replace("*", "[*]");

                    if (strsearch.Length > 1)
                    {
                        string str = strsearch.Substring(1);
                        strsearch = strsearch.Substring(0, 1) + str;
                    }

                    if (strsearch.Trim() != "")
                    {
                        strSearchArray = strsearch.Split(',');
                    }
                    if (strSearchArray != null)
                    {
                        //  string _strPatientFilter = "";
                        if (Convert.ToString(_strPatientCol).Trim() != "")
                        {


                        }
                        if (_ListControlType != gloListControlType.Pharmacy)
                        {
                            if (strSearchArray.Length == 1)
                            {
                                //sFilter = "AND ( sFirstName like ('" + strsearch + "%')OR sMiddleName like ('" + strsearch + "%') OR sLastName like ('" + strsearch + "%') OR sPhone like ('" + strsearch + "%') OR sFax like ('" + strsearch + "%') )";
                                //APPLY SEARCH ON PREFIX & SUFFIX FIELDS IF THEY PRESENT 20100609
                                sFilter = "AND (  sPrefix like ('" + strsearch + "%')  OR sSuffix like ('" + strsearch + "%') OR sFirstName like ('" + strsearch + "%')OR sMiddleName like ('" + strsearch + "%') OR sLastName like ('" + strsearch + "%') OR  Contacts_Physician_DTL.sDegree like ('" + strsearch + "%')"
                            + "   OR sAddressline1 like ('" + strsearch + "%') OR sAddressline2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sPhone like ('" + strsearch + "%') OR Contacts_MST.sSPI like ('" + strsearch + "%') OR sDirectAddress like ('" + strsearch + "%') OR sClinicName like ('" + strsearch + "%') OR sSpecialtytype1 like ('" + strsearch + "%')  OR sFax like ('" + strsearch + "%') OR sMobile like ('" + strsearch + "%') OR sEmail like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') OR sGender like ('" + strsearch + "%') OR sNPI like ('" + strsearch + "%') ) ";
                                if (_ListControlType == gloListControlType.Patient)
                                {

                                    sFilter = "AND ( Patient.sPatientCode like ('" + strsearch + "%')OR Patient.sFirstName like ('" + strsearch + "%') OR Patient.sLastName like ('" + strsearch + "%') ";
                                    sFilter = sFilter + GetPatientFilter(strsearch) + ")";

                                }


                            }

                            else
                            {
                                //For Comma separated value search
                                for (int i = 0; i <= strSearchArray.Length - 1; i++)
                                {
                                    strsearch = strSearchArray[i].Trim();

                                    if (i == 0)
                                    {
                                        sFilter = sFilter + " AND ";
                                        //sFilter = sFilter + " ( " + " sFirstName like ('" + strsearch + "%')OR sMiddleName like ('" + strsearch + "%') OR sLastName like ('" + strsearch + "%') OR sPhone like ('" + strsearch + "%') OR sFax like ('" + strsearch + "%') ";

                                        if (_ListControlType == gloListControlType.Patient)
                                        {
                                            sFilter = sFilter + " ( " + " Patient.sPatientCode like ('" + strsearch + "%')OR Patient.sFirstName like ('" + strsearch + "%') OR Patient.sLastName like ('" + strsearch + "%') ";

                                            sFilter = sFilter + GetPatientFilter(strsearch);
                                        }
                                        else
                                        {
                                            //APPLY SEARCH ON PREFIX & SUFFIX COLUMN ALSO 20100609
                                            sFilter = sFilter + " ( " + " sPrefix like ('" + strsearch + "%') OR sFirstName like ('" + strsearch + "%')OR sMiddleName like ('" + strsearch + "%') OR sLastName like ('" + strsearch + "%') OR Contacts_Physician_DTL.sDegree like ('" + strsearch + "%') "
                                      + "   OR sAddressline1 like ('" + strsearch + "%') OR sAddressline2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') OR sNPI like ('" + strsearch + "%')  ";

                                        }
                                        sFilter = sFilter + " ) ";


                                    }
                                    else
                                    {
                                        if (!string.IsNullOrEmpty(sFilter))
                                        {

                                            sFilter = sFilter + " AND ";


                                            if (_ListControlType == gloListControlType.Patient)
                                            {
                                                sFilter = sFilter + " ( " + " Patient.sPatientCode like ('" + strsearch + "%')OR Patient.sFirstName like ('" + strsearch + "%') OR Patient.sLastName like ('" + strsearch + "%') ";

                                                sFilter = sFilter + GetPatientFilter(strsearch);
                                            }
                                            else
                                            {
                                                //APPLY SEARCH ON PREFIX & SUFFIX COLUMN ALSO 20100614
                                                sFilter = sFilter + " (" + "  sPrefix like ('" + strsearch + "%') OR sFirstName like ('" + strsearch + "%')OR sMiddleName like ('" + strsearch + "%') OR sLastName like ('" + strsearch + "%') OR Contacts_Physician_DTL.sDegree like ('" + strsearch + "%')"
                                           + "   OR sAddressline1 like ('" + strsearch + "%') OR sAddressline2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') OR sNPI like ('" + strsearch + "%')  ";


                                            }

                                            sFilter = sFilter + " ) ";
                                        }

                                    }

                                }
                            }
                        }
                        //SHUBHANGI 20110111 FOR MULTIPLE PHARMACY
                        else if (_ListControlType == gloListControlType.Pharmacy)
                        {
                            if (strSearchArray.Length == 1)
                            {
                                //sFilter = "AND ( sFirstName like ('" + strsearch + "%')OR sMiddleName like ('" + strsearch + "%') OR sLastName like ('" + strsearch + "%') OR sPhone like ('" + strsearch + "%') OR sFax like ('" + strsearch + "%') )";
                                //APPLY SEARCH ON PREFIX & SUFFIX FIELDS IF THEY PRESENT 20100609
                                if (cmbSpeciality.Text != "MailOrder")
                                {
                                    //Bug #65546: 00000652 : Pharmacy search issue
                                    //Remove NCPDID from search query.
                                    sFilter = " AND ( sName like ('" + strsearch + "%') "
                                   + " OR sAddressLine1 like ('" + strsearch + "%') OR sAddressLine2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') OR sPhone like ('" + strsearch + "%')  OR sFax like ('" + strsearch + "%'))";

                                    //sFilter = " AND ( sName like ('" + strsearch + "%') "
                                    //+ " OR sAddressLine1 like ('" + strsearch + "%') OR sAddressLine2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') )";
                                }
                                else
                                {
                                    //OR sAddressLine1 like ('" + strsearch + "%') OR sAddressLine2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%')
                                    //Bug #65546: 00000652 : Pharmacy search issue
                                    //Remove NCPDID from search query.
                                    sFilter = " AND ( sName like ('" + strsearch + "%') "
                                 + "  OR sPhone like ('" + strsearch + "%') OR sFax like ('" + strsearch + "%'))";

                                }
                                sFilter = sFilter + GetPatientFilter(strsearch);

                            }

                            else
                            {
                                //For Comma separated value search
                                for (int i = 0; i <= strSearchArray.Length - 1; i++)
                                {
                                    strsearch = strSearchArray[i].Trim();

                                    if (i == 0)
                                    {
                                        sFilter = sFilter + " AND ";
                                        //sFilter = sFilter + " ( " + " sFirstName like ('" + strsearch + "%')OR sMiddleName like ('" + strsearch + "%') OR sLastName like ('" + strsearch + "%') OR sPhone like ('" + strsearch + "%') OR sFax like ('" + strsearch + "%') ";
                                        //APPLY SEARCH ON PREFIX & SUFFIX COLUMN ALSO 20100609
                                        if (_ListControlType == gloListControlType.Pharmacy)
                                        {
                                            if (cmbSpeciality.Text != "MailOrder")
                                            {
                                                //Bug #65546: 00000652 : Pharmacy search issue
                                                //Remove NCPDID from search query.
                                                sFilter = sFilter + " ( " + " sName like ('" + strsearch + "%') OR  "
                                                + " sAddressline1 like ('" + strsearch + "%') OR sAddressline2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') OR sPhone like ('" + strsearch + "%') OR sFax like ('" + strsearch + "%') ";
                                            }
                                            else
                                            {
                                                // sAddressline1 like ('" + strsearch + "%') OR sAddressline2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') OR
                                                //Bug #65546: 00000652 : Pharmacy search issue
                                                //Remove NCPDID from search query.
                                                sFilter = sFilter + " ( " + " sName like ('" + strsearch + "%') OR  "
                                                + " sPhone like ('" + strsearch + "%') OR sFax like ('" + strsearch + "%') ";
                                            }
                                        }
                                        else
                                        {
                                            //Bug #65546: 00000652 : Pharmacy search issue
                                            //Remove NCPDID from search query.
                                            sFilter = sFilter + " ( " + " sName like ('" + strsearch + "%') OR  "
                                            + " sAddressline1 like ('" + strsearch + "%') OR sAddressline2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%')";
                                        }


                                        sFilter = sFilter + " ) ";


                                    }
                                    else
                                    {
                                        if (!string.IsNullOrEmpty(sFilter))
                                        {

                                            sFilter = sFilter + " AND ";


                                            //if (_ListControlType == gloListControlType.Patient)
                                            //{
                                            //    sFilter = sFilter + " ( " + " Patient.sPatientCode like ('" + strsearch + "%')OR Patient.sFirstName like ('" + strsearch + "%') OR Patient.sLastName like ('" + strsearch + "%') ";

                                            //    sFilter = sFilter + GetPatientFilter(strsearch);
                                            //}
                                            //else
                                            //{
                                            //APPLY SEARCH ON PREFIX & SUFFIX COLUMN ALSO 20100614
                                            if (_ListControlType == gloListControlType.Pharmacy)
                                            {
                                                if (cmbSpeciality.Text != "MailOrder")
                                                {
                                                    //Bug #65546: 00000652 : Pharmacy search issue
                                                    //Remove NCPDID from search query.
                                                    sFilter = sFilter + " (" + "  sName like ('" + strsearch + "%') "
                                                     + "   OR sAddressline1 like ('" + strsearch + "%') OR sAddressline2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') OR sPhone like ('" + strsearch + "%') OR sFax like ('" + strsearch + "%') ";
                                                }
                                                else
                                                {
                                                    //  OR sAddressline1 like ('" + strsearch + "%') OR sAddressline2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') 
                                                    //Bug #65546: 00000652 : Pharmacy search issue
                                                    //Remove NCPDID from search query.
                                                    sFilter = sFilter + " (" + "  sName like ('" + strsearch + "%') "
                                                      + " OR sPhone like ('" + strsearch + "%') OR sFax like ('" + strsearch + "%') ";
                                                }
                                            }
                                            else
                                            {
                                                //Bug #65546: 00000652 : Pharmacy search issue
                                                //Remove NCPDID from search query.
                                                sFilter = sFilter + " (" + "  sName like ('" + strsearch + "%') "
                                                + "   OR sAddressline1 like ('" + strsearch + "%') OR sAddressline2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') ";
                                            }


                                            //}

                                            sFilter = sFilter + " ) ";
                                        }

                                    }

                                }
                            }
                        }
                        //END

                    }

                    dgListView.DataSource = null;
                    dgListView.ColumnCount = 0;
                    strfilterForReferral = sFilter;
                    if (_isFromStatement == true && chkShowActpatient.Checked == true)
                    {
                        FillListAsCriteria(0, dtPatientStList);
                    }
                    else
                    {
                        FillListAsCriteria(0);
                    }

                    if (dgListView.RowCount <= 0)
                    {
                        return;
                    }

                    strsearch = null;
                    strSearchArray = null;
                    sFilter = null;

                    DataView dv = (DataView)dgListView.DataSource;
                    dgListView.DataSource = dv;


                    if (_ismultiselect == true && dv != null)
                    {
                        //dtForSearch = null;
                        //dtForSearch = ((DataView)dgListView.DataSource).Table.Copy();
                        //DataColumn dcID = new DataColumn("Check", typeof(int));
                        //dcID.DefaultValue = 0;

                        //dtForSearch.Columns.Add(dcID);
                        //DataColumn[] pk1 = new DataColumn[] { dtForSearch.Columns[0] };
                        //dtForSearch.PrimaryKey = pk1;
                        _dvList = null;
                        _dvList = (DataView)dgListView.DataSource;
                        //DataColumn dcID = new DataColumn("Check1", typeof(int));
                        //dcID.DefaultValue = 0;
                        //_dvList.Table.Columns.Add(dcID);

                        //DataColumn[] pk1 = new DataColumn[] { _dvList.Table.Columns[0] };
                        //_dvList.Table.PrimaryKey = pk1;
                    }

                    foreach (gloGeneralItem.gloItem n in glItems)
                    {
                        this.SelectedItems.Add(n.ID, n.Description);

                    }

                    if (dgListView != null)
                    {
                        if (dgListView.RowCount > 0)
                        {
                            if (_ismultiselect == false)
                            {
                                lblSearch.Text = dgListView.Columns[1].HeaderText.ToString() + " :";
                                dgListView.ScrollBars = ScrollBars.Both;
                                dgListView.ReadOnly = true;
                            }
                            else
                            {
                                lblSearch.Text = dgListView.Columns[2].HeaderText.ToString() + " :";
                                for (int i = 0; i < dgListView.Columns.Count; i++)
                                {
                                    dgListView.Columns[i].ReadOnly = true;
                                }
                                dgListView.Columns[0].ReadOnly = false;
                            }


                            //Sandip Darade 20080812 ....
                            //code to set Last name column as default search column
                            lblSearch.Text = "Search :";

                            if (_ismultiselect == true)
                            {
                                //lblSearch.Text = dgListView.Columns[4].HeaderText.ToString();
                                //dgListView.Sort(dgListView.Columns[5], ListSortDirection.Ascending);
                            }
                            else
                            {
                                //lblSearch.Text = dgListView.Columns[3].HeaderText.ToString();
                                // dgListView.Sort(dgListView.Columns[4], ListSortDirection.Ascending);
                            }



                        }


                    }
                    if (_dvList != null && _dvList.Table != null && _ismultiselect == true)
                    {
                        if (_dvList.Table.Rows.Count > 0)
                        {

                            for (int Count = 0; Count < dgListView.Rows.Count; Count++)
                            {

                                //dgListView.CommitEdit(DataGridViewDataErrorContexts.Display);
                                //DataRow rw = dtForSearch.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                //if (rw != null)
                                //{
                                //    if (Convert.ToInt32(rw["Check"]) != 0)
                                //    {
                                //        dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check"]);
                                //    }
                                //}
                                //if (_ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians )
                                //{
                                //    DataRow dr = dtSelected.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                //    if (dr != null)
                                //    {

                                //        dgListView.Rows[Count].Cells[0].Value = 1;

                                //    }
                                //}
                                dgListView.CommitEdit(DataGridViewDataErrorContexts.Display);
                                DataRow rw = _dvList.Table.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                if (rw != null)
                                {
                                    if (Convert.ToInt32(rw["Check1"]) != 0)
                                    {
                                        dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check1"]);
                                    }
                                }
                                rw = null;
                                // if (_ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians)
                                // code below added for guarantor changes  20100728
                                if (_ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians || _ListControlType == gloListControlType.Patient || _ListControlType == gloListControlType.Pharmacy)
                                {
                                    Int64 chkId = -1;
                                    DataRow dr = dtSelected.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                    if (dr != null)
                                    {

                                        dgListView.Rows[Count].Cells[0].Value = 1;
                                        chkId = Convert.ToInt64(dgListView.Rows[Count].Cells[1].Value);
                                    }
                                    dr = null;

                                    if (_isdefault == chkId)

                                        if (_isdefault != 0 && Convert.ToString(dgListView.Rows[Count].Cells[0].Value) == "1")
                                        {
                                            if (Convert.ToString(dgListView.Rows[Count].Cells[12].Value).ToLower() != "true")
                                                //if (dgListView.Rows[Count].Cells[12].Value.ToString() == "False")
                                                dgListView.Rows[Count].Cells[12].Value = true;
                                        }
                                        else if (_isdefault != 0)
                                        {
                                            if (Convert.ToInt64(dgListView.Rows[Count].Cells[1].Value) == _isdefault)
                                            {
                                                dgListView.Rows[Count].Cells[12].Value = true;
                                            }
                                        }
                                }


                            }
                        }
                    }


                    if (dgListView.Rows.Count > 0)
                    {
                        if (_ListControlType == gloListControlType.Referrals)
                        {
                            if (_ismultiselect == true)
                            {
                                dgListView.Rows[0].Cells[0].Selected = true;
                            }
                            else
                            {
                                dgListView.Rows[0].Cells[1].Selected = true;
                            }
                        }
                        else
                        {
                            if (_ListControlType == gloListControlType.Physicians)
                            {
                                dgListView.Rows[0].Cells[1].Selected = true;
                            }
                            else
                            {
                                dgListView.Rows[0].Selected = true;
                            }

                        }
                    }

                    _IsTextchanged = false;


                }

                //}
            }
            catch (Exception Ex)
            {
                MessageBox.Show(Ex.ToString(), _MessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            finally
            {
                //oDB.Disconnect();
                //oDB.Dispose();
                dgListView.KeyDown += dgListView_KeyDown;
                if (_ListControlType == gloListControlType.Modifier)
                {
                    dgListView.RowEnter += dgListView_RowEnter;
                    dgListView.SelectionChanged += dgListView_SelectionChanged;
                }
            }

        }
        //code end by nilesh on 20110328

        private void txtSearch_TextChanged(object sender, EventArgs e)
        {
            try
            {
                //code start by nilesh on 20110328
                if (oTimerSearch.Enabled == false)
                {
                    oTimerSearch.Stop();
                    oTimerSearch.Enabled = true;
                }
                return;
                //code end by nilesh on 20110328

                #region "Code commented by nilesh 20110328"
                //// if (_ListControlType != gloListControlType.Referrals)//For Blank DataBase
                //// code below added for guarantor changes  20100728

                //if (_ListControlType != gloListControlType.Referrals && _ListControlType != gloListControlType.Physicians && _ListControlType != gloListControlType.Patient && _ListControlType != gloListControlType.Pharmacy)//For Blank DataBase

                //// if (_ListControlType != gloListControlType.Referrals && _ListControlType != gloListControlType.Physicians )//For Blank DataBase
                //{

                //    if (dgListView.DataSource != null)//For Blank DataBase
                //    {

                //        DataView dv = (DataView)dgListView.DataSource;

                //        string strSearch = txtSearch.Text.Trim();
                //        sFilter = "";

                //        //strSearch = strSearch.Replace("'", "''").Replace("[", "").Replace("]", "").Replace("%", "").Replace("*", "");

                //        //Added By Mukesh for instring search 2009-08-29
                //        strSearch = strSearch.Replace("'", "''").Replace("[", "").Replace("]", "").Replace("*", "%");
                //        //if (strSearch.Length > 1)
                //        //{
                //        //    string str = strSearch.Substring(1).Replace("%", "");
                //        //    strSearch = strSearch.Substring(0, 1) + str;
                //        //}

                //        if (strSearch.Trim() != "")
                //        {
                //            strSearchArray = strSearch.Split(',');
                //        }
                //        if (strSearch.Trim() != "")
                //        {

                //            if (strSearchArray.Length == 1)
                //            {
                //                sFilter += " ( ";
                //                strSearch = strSearchArray[0].Trim();

                //                if (strSearch.Length > 1)
                //                {
                //                    string str = strSearch.Substring(1).Replace("%", "");
                //                    strSearch = strSearch.Substring(0, 1) + str;
                //                }

                //                for (int i = 0; i < dv.Table.Columns.Count; i++) //This loop is for Column Names.
                //                {
                //                    if (_ismultiselect == false)
                //                    {
                //                        //If column is string & visible
                //                        if (dv.Table.Columns[i].DataType == typeof(System.String) && dgListView.Columns[dv.Table.Columns[i].ColumnName].Visible == true)
                //                        {
                //                            if (sFilter != " ( ")//Add OR Except First Time
                //                            {
                //                                sFilter += " OR ";
                //                            }
                //                            sFilter += dv.Table.Columns[i].ColumnName + " Like '" + strSearch + "%'";
                //                        }
                //                    }
                //                    else
                //                    {
                //                        //If column is string & visible
                //                        if (dv.Table.Columns[i].DataType == typeof(System.String) && dgListView.Columns[dv.Table.Columns[i].ColumnName].Visible == true)
                //                        {
                //                            //ADDED BY SHUBHANGI 20100615 SEARCH SHOULD NOT ON PROVIDER COLUMN ACCORDING TO THE CASE NO GLO2010-0005195
                //                            if (dv.Table.Columns[i].ColumnName != "Provider")
                //                            {
                //                                if (sFilter != " ( ")
                //                                {
                //                                    sFilter += " OR ";
                //                                }


                //                                sFilter += dv.Table.Columns[i].ColumnName + " Like '" + strSearch + "%'";
                //                            }
                //                        }
                //                    }
                //                }
                //                sFilter += " )";
                //            }
                //            else
                //            {
                //                //For Comma separated  value search
                //                for (int k = 0; k < strSearchArray.Length; k++) //Loop is for Search Text.
                //                {

                //                    if (sFilter != "")
                //                    {
                //                        sFilter += " AND ";
                //                    }

                //                    string sTempFilter = " ( ";
                //                    strSearch = strSearchArray[k].Trim();

                //                    if (strSearch.Length > 1)
                //                    {
                //                        string str = strSearch.Substring(1).Replace("%", "");
                //                        strSearch = strSearch.Substring(0, 1) + str;
                //                    }

                //                    for (int i = 0; i < dv.Table.Columns.Count; i++) //This loop is for Column Names.
                //                    {
                //                        if (_ismultiselect == false)
                //                        {
                //                            //If column is string & visible
                //                            if (dv.Table.Columns[i].DataType == typeof(System.String) && dgListView.Columns[dv.Table.Columns[i].ColumnName].Visible == true)
                //                            {
                //                                //ADDED BY SHUBHANGI 20100615 SEARCH SHOULD NOT ON PROVIDER COLUMN ACCORDING TO THE CASE NO GLO2010-0005195
                //                                if (dv.Table.Columns[i].ColumnName != "Provider")
                //                                {
                //                                    if (sTempFilter != " ( ")//Add OR Except First Time
                //                                    {
                //                                        sTempFilter += " OR ";
                //                                    }
                //                                    sTempFilter += dv.Table.Columns[i].ColumnName + " Like '" + strSearch + "%'";
                //                                }
                //                            }
                //                        }
                //                        else
                //                        {
                //                            //If column is string & visible
                //                            if (dv.Table.Columns[i].DataType == typeof(System.String) && dgListView.Columns[dv.Table.Columns[i].ColumnName].Visible == true)
                //                            {
                //                                if (dv.Table.Columns[i].ColumnName != "Provider")
                //                                {
                //                                    if (sTempFilter != " ( ")//Add OR Except First Time
                //                                    {
                //                                        sTempFilter += " OR ";
                //                                    }
                //                                    sTempFilter += dv.Table.Columns[i].ColumnName + " Like '" + strSearch + "%'";
                //                                }
                //                            }
                //                        }
                //                    }
                //                    sTempFilter += " )";

                //                    sFilter += sTempFilter;

                //                }

                //            }

                //            dv.RowFilter = sFilter;
                //        }
                //        else
                //        {
                //            dv.RowFilter = "";
                //        }


                //        dgListView.DataSource = dv;

                //        //dgListView.DataSource = dv;


                //        //DataView dv = (DataView)dgListView.DataSource;
                //        if (_dvList != null && _dvList.Table != null && _ismultiselect == true)
                //        {
                //            if (_dvList.Table.Rows.Count > 0)
                //            {

                //                for (int Count = 0; Count < dgListView.Rows.Count; Count++)
                //                {
                //                    //if (hst.ContainsKey(dgListView.Rows[Count].Cells[1].Value))
                //                    //{
                //                    //    dgListView.Rows[Count].Cells[0].Value = true;
                //                    //}
                //                    //if (Convert.ToInt32(_dvList.Table.Rows[Count]["Check"]) == 1)
                //                    //{
                //                    //    dgListView.Rows[Count].Cells[0].Value = true;
                //                    //}
                //                    //else
                //                    //{
                //                    //    dgListView.Rows[Count].Cells[0].Value = false;
                //                    //}
                //                    //if(dgListView.Rows[Count].Cells[1].Value)
                //                    //dgListView.EndEdit();
                //                    dgListView.CommitEdit(DataGridViewDataErrorContexts.Display);
                //                    //Commneted by Mayuri:20100706
                //                    //DataRow rw = dtForSearch.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                //                    //if (rw != null)
                //                    //{
                //                    //    if (Convert.ToInt32(rw["Check"]) != 0)
                //                    //    {
                //                    //        dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check"]);
                //                    //    }
                //                    //}
                //                    //end code commnetd by Mayuri:20100706
                //                    //if (_ListControlType !=gloListControlType .Users  )
                //                    //{
                //                    if (tsb_UserGroups.Text == "Users")
                //                    {
                //                        DataRow rw = _dtGroupList.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                //                        if (rw != null)
                //                        {
                //                            if (Convert.ToInt32(rw["Check1"]) != 0)
                //                            {
                //                                dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check1"]);
                //                            }
                //                        }
                //                    }
                //                    else
                //                    {
                //                        DataRow rw = _dvList.Table.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                //                        if (rw != null)
                //                        {
                //                            if (Convert.ToInt32(rw["Check1"]) != 0)
                //                            {
                //                                dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check1"]);
                //                            }
                //                        }
                //                    }
                //                    //}
                //                }
                //            }
                //        }
                //    }
                //}
                ////Sandip Darade 20100422
                ////for referrlas and physicians 
                //    //Shubhangi 20110111 Pharmacy
                ////initially only 1000 records will be pulled from database 
                ////records will be now pulled as per user search query
                //else
                //{

                //    _IsTextchanged = true;
                //    string strsearch = txtSearch.Text.Trim();

                //    string[] strSearchArray = null;
                //    string sFilter = "";

                //    strsearch = strsearch.Replace("'", "''").Replace("[", "").Replace("]", "").Replace("%", "[%]");

                //    if (strsearch.StartsWith("*") == true)
                //    {
                //        strsearch = strsearch.Replace("*", "%");
                //    }

                //    strsearch = strsearch.Replace("*", "[*]");

                //    if (strsearch.Length > 1)
                //    {
                //        string str = strsearch.Substring(1);
                //        strsearch = strsearch.Substring(0, 1) + str;
                //    }

                //    if (strsearch.Trim() != "")
                //    {
                //        strSearchArray = strsearch.Split(',');
                //    }
                //    if (strSearchArray != null)
                //    {
                //        string _strPatientFilter = "";
                //        if (Convert.ToString(_strPatientCol).Trim() != "")
                //        {


                //        }
                //        if (_ListControlType != gloListControlType.Pharmacy)
                //        {
                //            if (strSearchArray.Length == 1)
                //            {
                //                //sFilter = "AND ( sFirstName like ('" + strsearch + "%')OR sMiddleName like ('" + strsearch + "%') OR sLastName like ('" + strsearch + "%') OR sPhone like ('" + strsearch + "%') OR sFax like ('" + strsearch + "%') )";
                //                //APPLY SEARCH ON PREFIX & SUFFIX FIELDS IF THEY PRESENT 20100609
                //                sFilter = "AND (  sPrefix like ('" + strsearch + "%')OR sFirstName like ('" + strsearch + "%')OR sMiddleName like ('" + strsearch + "%') OR sLastName like ('" + strsearch + "%') OR  Contacts_Physician_DTL.sDegree like ('" + strsearch + "%')"
                //                + "   OR sAddressline1 like ('" + strsearch + "%') OR sAddressline2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') OR sNPI like ('" + strsearch + "%') ) ";
                //                if (_ListControlType == gloListControlType.Patient)
                //                {

                //                    sFilter = "AND ( Patient.sPatientCode like ('" + strsearch + "%')OR Patient.sFirstName like ('" + strsearch + "%') OR Patient.sLastName like ('" + strsearch + "%') )";
                //                    sFilter = sFilter + GetPatientFilter(strsearch);

                //                }


                //            }

                //            else
                //            {
                //                //For Comma separated value search
                //                for (int i = 0; i <= strSearchArray.Length - 1; i++)
                //                {
                //                    strsearch = strSearchArray[i].Trim();

                //                    if (i == 0)
                //                    {
                //                        sFilter = sFilter + " AND ";
                //                        //sFilter = sFilter + " ( " + " sFirstName like ('" + strsearch + "%')OR sMiddleName like ('" + strsearch + "%') OR sLastName like ('" + strsearch + "%') OR sPhone like ('" + strsearch + "%') OR sFax like ('" + strsearch + "%') ";

                //                        if (_ListControlType == gloListControlType.Patient)
                //                        {
                //                            sFilter = sFilter + " ( " + " Patient.sPatientCode like ('" + strsearch + "%')OR Patient.sFirstName like ('" + strsearch + "%') OR Patient.sLastName like ('" + strsearch + "%') ";

                //                            sFilter = sFilter + GetPatientFilter(strsearch);
                //                        }
                //                        else
                //                        {
                //                            //APPLY SEARCH ON PREFIX & SUFFIX COLUMN ALSO 20100609
                //                            sFilter = sFilter + " ( " + " sPrefix like ('" + strsearch + "%') OR sFirstName like ('" + strsearch + "%')OR sMiddleName like ('" + strsearch + "%') OR sLastName like ('" + strsearch + "%') OR Contacts_Physician_DTL.sDegree like ('" + strsearch + "%') "
                //                      + "   OR sAddressline1 like ('" + strsearch + "%') OR sAddressline2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') OR sNPI like ('" + strsearch + "%')  ";

                //                        }
                //                        sFilter = sFilter + " ) ";


                //                    }
                //                    else
                //                    {
                //                        if (!string.IsNullOrEmpty(sFilter))
                //                        {

                //                            sFilter = sFilter + " AND ";


                //                            if (_ListControlType == gloListControlType.Patient)
                //                            {
                //                                sFilter = sFilter + " ( " + " Patient.sPatientCode like ('" + strsearch + "%')OR Patient.sFirstName like ('" + strsearch + "%') OR Patient.sLastName like ('" + strsearch + "%') ";

                //                                sFilter = sFilter + GetPatientFilter(strsearch);
                //                            }
                //                            else
                //                            {
                //                                //APPLY SEARCH ON PREFIX & SUFFIX COLUMN ALSO 20100614
                //                                sFilter = sFilter + " (" + "  sPrefix like ('" + strsearch + "%') OR sFirstName like ('" + strsearch + "%')OR sMiddleName like ('" + strsearch + "%') OR sLastName like ('" + strsearch + "%') OR Contacts_Physician_DTL.sDegree like ('" + strsearch + "%')"
                //                           + "   OR sAddressline1 like ('" + strsearch + "%') OR sAddressline2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') OR sNPI like ('" + strsearch + "%')  ";


                //                            }

                //                            sFilter = sFilter + " ) ";
                //                        }

                //                    }

                //                }
                //            }
                //        }
                //       //SHUBHANGI 20110111 FOR MULTIPLE PHARMACY
                //        else if (_ListControlType == gloListControlType.Pharmacy)
                //        {
                //            if (strSearchArray.Length == 1)
                //            {
                //                //sFilter = "AND ( sFirstName like ('" + strsearch + "%')OR sMiddleName like ('" + strsearch + "%') OR sLastName like ('" + strsearch + "%') OR sPhone like ('" + strsearch + "%') OR sFax like ('" + strsearch + "%') )";
                //                //APPLY SEARCH ON PREFIX & SUFFIX FIELDS IF THEY PRESENT 20100609
                //                sFilter = " AND ( sName like ('" + strsearch + "%') "
                //               + " OR sAddressLine1 like ('" + strsearch + "%') OR sAddressLine2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') OR sPhone like ('" + strsearch + "%') OR sFax like ('" + strsearch + "%'))";

                //                //sFilter = " AND ( sName like ('" + strsearch + "%') "
                //                //+ " OR sAddressLine1 like ('" + strsearch + "%') OR sAddressLine2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') )";

                //                    sFilter = sFilter + GetPatientFilter(strsearch);

                //            }

                //            else
                //            {
                //                //For Comma separated value search
                //                for (int i = 0; i <= strSearchArray.Length - 1; i++)
                //                {
                //                    strsearch = strSearchArray[i].Trim();

                //                    if (i == 0)
                //                    {
                //                        sFilter = sFilter + " AND ";
                //                        //sFilter = sFilter + " ( " + " sFirstName like ('" + strsearch + "%')OR sMiddleName like ('" + strsearch + "%') OR sLastName like ('" + strsearch + "%') OR sPhone like ('" + strsearch + "%') OR sFax like ('" + strsearch + "%') ";
                //                        //APPLY SEARCH ON PREFIX & SUFFIX COLUMN ALSO 20100609
                //                        if (_ListControlType == gloListControlType.Pharmacy)
                //                        {
                //                            sFilter = sFilter + " ( " + " sName like ('" + strsearch + "%') OR  "
                //               + " sAddressline1 like ('" + strsearch + "%') OR sAddressline2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') OR sNCPDPID like ('" + strsearch + "%') OR sPhone like ('" + strsearch + "%') OR sFax like ('" + strsearch + "%') ";

                //                        }
                //                        else
                //                        {
                //                            sFilter = sFilter + " ( " + " sName like ('" + strsearch + "%') OR  "
                //                      + " sAddressline1 like ('" + strsearch + "%') OR sAddressline2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') OR sNCPDPID like ('" + strsearch + "%')  ";
                //                        }


                //                        sFilter = sFilter + " ) ";


                //                    }
                //                    else
                //                    {
                //                        if (!string.IsNullOrEmpty(sFilter))
                //                        {

                //                            sFilter = sFilter + " AND ";


                //                            //if (_ListControlType == gloListControlType.Patient)
                //                            //{
                //                            //    sFilter = sFilter + " ( " + " Patient.sPatientCode like ('" + strsearch + "%')OR Patient.sFirstName like ('" + strsearch + "%') OR Patient.sLastName like ('" + strsearch + "%') ";

                //                            //    sFilter = sFilter + GetPatientFilter(strsearch);
                //                            //}
                //                            //else
                //                            //{
                //                                //APPLY SEARCH ON PREFIX & SUFFIX COLUMN ALSO 20100614
                //                            if (_ListControlType == gloListControlType.Pharmacy)
                //                            {
                //                                sFilter = sFilter + " (" + "  sName like ('" + strsearch + "%') "
                //                                 + "   OR sAddressline1 like ('" + strsearch + "%') OR sAddressline2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') OR sNCPDPID like ('" + strsearch + "%') OR sPhone like ('" + strsearch + "%') OR sFax like ('" + strsearch + "%') ";

                //                            }
                //                            else
                //                            {
                //                                sFilter = sFilter + " (" + "  sName like ('" + strsearch + "%') "
                //                           + "   OR sAddressline1 like ('" + strsearch + "%') OR sAddressline2 like ('" + strsearch + "%') OR sCity like ('" + strsearch + "%') OR sState like ('" + strsearch + "%') OR sZip like ('" + strsearch + "%') OR sNCPDPID like ('" + strsearch + "%')  ";
                //                            }


                //                            //}

                //                            sFilter = sFilter + " ) ";
                //                        }

                //                    }

                //                }
                //            }
                //        }
                //        //END
                //    }
                //    dgListView.DataSource = null;
                //    dgListView.ColumnCount = 0;
                //    strfilterForReferral = sFilter;
                //    FillListAsCriteria(0);
                //    DataView dv = (DataView)dgListView.DataSource;
                //    dgListView.DataSource = dv;


                //    if (_ismultiselect == true && dv != null)
                //    {
                //        //dtForSearch = null;
                //        //dtForSearch = ((DataView)dgListView.DataSource).Table.Copy();
                //        //DataColumn dcID = new DataColumn("Check", typeof(int));
                //        //dcID.DefaultValue = 0;

                //        //dtForSearch.Columns.Add(dcID);
                //        //DataColumn[] pk1 = new DataColumn[] { dtForSearch.Columns[0] };
                //        //dtForSearch.PrimaryKey = pk1;
                //        _dvList = null;
                //        _dvList = (DataView)dgListView.DataSource;
                //        //DataColumn dcID = new DataColumn("Check1", typeof(int));
                //        //dcID.DefaultValue = 0;
                //        //_dvList.Table.Columns.Add(dcID);

                //        //DataColumn[] pk1 = new DataColumn[] { _dvList.Table.Columns[0] };
                //        //_dvList.Table.PrimaryKey = pk1;
                //    }

                //    foreach (gloGeneralItem.gloItem n in glItems)
                //    {
                //        this.SelectedItems.Add(n.ID, n.Description);

                //    }

                //    if (dgListView != null)
                //    {
                //        if (dgListView.RowCount > 0)
                //        {
                //            if (_ismultiselect == false)
                //            {
                //                lblSearch.Text = dgListView.Columns[1].HeaderText.ToString();
                //                dgListView.ScrollBars = ScrollBars.Both;
                //                dgListView.ReadOnly = true;
                //            }
                //            else
                //            {
                //                lblSearch.Text = dgListView.Columns[2].HeaderText.ToString();
                //                for (int i = 0; i < dgListView.Columns.Count; i++)
                //                {
                //                    dgListView.Columns[i].ReadOnly = true;
                //                }
                //                dgListView.Columns[0].ReadOnly = false;
                //            }


                //            //Sandip Darade 20080812 ....
                //            //code to set Last name column as default search column
                //            lblSearch.Text = "Search :";

                //            if (_ismultiselect == true)
                //            {
                //                //lblSearch.Text = dgListView.Columns[4].HeaderText.ToString();
                //                //dgListView.Sort(dgListView.Columns[5], ListSortDirection.Ascending);
                //            }
                //            else
                //            {
                //                //lblSearch.Text = dgListView.Columns[3].HeaderText.ToString();
                //               // dgListView.Sort(dgListView.Columns[4], ListSortDirection.Ascending);
                //            }



                //        }


                //    }
                //    if (_dvList != null && _dvList.Table != null && _ismultiselect == true)
                //    {
                //        if (_dvList.Table.Rows.Count > 0)
                //        {

                //            for (int Count = 0; Count < dgListView.Rows.Count; Count++)
                //            {

                //                    //dgListView.CommitEdit(DataGridViewDataErrorContexts.Display);
                //                    //DataRow rw = dtForSearch.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                //                    //if (rw != null)
                //                    //{
                //                    //    if (Convert.ToInt32(rw["Check"]) != 0)
                //                    //    {
                //                    //        dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check"]);
                //                    //    }
                //                    //}
                //                    //if (_ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians )
                //                    //{
                //                    //    DataRow dr = dtSelected.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                //                    //    if (dr != null)
                //                    //    {

                //                    //        dgListView.Rows[Count].Cells[0].Value = 1;

                //                    //    }
                //                    //}
                //                    dgListView.CommitEdit(DataGridViewDataErrorContexts.Display);
                //                    DataRow rw = _dvList.Table.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                //                    if (rw != null)
                //                    {
                //                        if (Convert.ToInt32(rw["Check1"]) != 0)
                //                        {
                //                            dgListView.Rows[Count].Cells[0].Value = Convert.ToBoolean(rw["Check1"]);
                //                        }
                //                    }
                //                    // if (_ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians)
                //                    // code below added for guarantor changes  20100728
                //                    if (_ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians || _ListControlType == gloListControlType.Patient || _ListControlType == gloListControlType.Pharmacy)
                //                    {
                //                        Int64 chkId = -1;
                //                        DataRow dr = dtSelected.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                //                        if (dr != null)
                //                        {

                //                            dgListView.Rows[Count].Cells[0].Value = 1;
                //                            chkId = Convert.ToInt64(dgListView.Rows[Count].Cells[1].Value);
                //                        }
                //                        if (_isdefault == chkId)

                //                            if (_isdefault != 0 && Convert.ToString(dgListView.Rows[Count].Cells[0].Value) == "1")
                //                            {
                //                                if (dgListView.Rows[Count].Cells[12].Value != "True")
                //                                    //if (dgListView.Rows[Count].Cells[12].Value.ToString() == "False")
                //                                    dgListView.Rows[Count].Cells[12].Value = true;
                //                            }
                //                            else if (_isdefault != 0)
                //                            {
                //                                if (Convert.ToInt64(dgListView.Rows[Count].Cells[1].Value) == _isdefault)
                //                                {
                //                                    dgListView.Rows[Count].Cells[12].Value = true;
                //                                }
                //                            }
                //                    }


                //            }
                //        }
                //    }


                //    if (dgListView.Rows.Count > 0)
                //    {
                //        if (_ListControlType == gloListControlType.Referrals)
                //        {
                //            if (_ismultiselect == true)
                //            {
                //                dgListView.Rows[0].Cells[0].Selected = true;
                //            }
                //            else
                //            {
                //                dgListView.Rows[0].Cells[1].Selected = true;
                //            }
                //        }
                //        else
                //        {
                //            if (_ListControlType == gloListControlType.Physicians)
                //            {
                //                dgListView.Rows[0].Cells[1].Selected = true;
                //            }
                //            else
                //            {
                //                dgListView.Rows[0].Selected = true;
                //            }

                //        }
                //    }

                //    _IsTextchanged = false;


                //}

                ////}
                #endregion
            }
            catch (Exception Ex)
            {
                MessageBox.Show(Ex.ToString(), _MessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            finally
            {
                //oDB.Disconnect();
                //oDB.Dispose();
            }
        }

        //private void SelectUnselect()
        //{
        //    DataGridViewRowCollection drv = dgListView.Rows();
        //    for (int i = 0; i < drv.Count; i++)
        //    {
        //        if(drv[i].Tag==0)
        //    }
        //}
        private string GetPatientFilter(string sFilter)
        {
            string[] PatientColumns = Convert.ToString(_strPatientCol).Trim().Split(',');

            string _strPatientFilter = "";
            foreach (string str in PatientColumns)
            {
                switch (str)
                {
                    case "MI":
                        {
                            _strPatientFilter = _strPatientFilter + "   OR   Patient.sMiddleName like ('" + sFilter + "%')";
                        }
                        break;
                    case "SSN":
                        {
                            _strPatientFilter = _strPatientFilter + "   OR   Patient.nSSN like ('" + sFilter + "%')";

                        }
                        break;
                    case "DOB":
                        {
                            _strPatientFilter = _strPatientFilter + "   OR   convert(varchar,Patient.dtDOB,101)like ('" + sFilter + "%')";
                        }
                        break;
                    case "Provider":
                        {
                            _strPatientFilter = _strPatientFilter + "   OR   Provider_MST.sFirstName like ('" + sFilter + "%')";
                        }
                        break;
                    case "Phone":
                        {
                            _strPatientFilter = _strPatientFilter + "   OR   Patient.sPhone like ('" + sFilter + "%')";
                        }
                        break;
                    case "Mobile":
                        {
                            _strPatientFilter = _strPatientFilter + "   OR   Patient.sMobile like ('" + sFilter + "%')";
                        }
                        break;

                }
            }
            PatientColumns = null;
            return _strPatientFilter;

        }
        #endregion





        private void AddRemoveResources()
        {
            TreeNode oNode = null;
            TreeNode oSubNode = null;

            if (_ListControlType == gloListControlType.Procedures)
            {
                if (_FillInProcess == false)
                {
                    if (_ismultiselect == true)
                    {
                        string _MainNode = dgListView[1, dgListView.CurrentRow.Index].Value.ToString();
                        bool _Found = false;
                        int _FoundNode = 0;

                        for (int i = 0; i <= trvItems.GetNodeCount(false) - 1; i++)
                        {
                            if (Convert.ToInt64(trvItems.Nodes[i].Tag.ToString()) == Convert.ToInt64(_MainNode))
                            {
                                _Found = true;
                                _FoundNode = i;
                                break;
                            }
                        }
                        _MainNode = null;
                        if (_Found == true)
                        {
                            oNode = trvItems.Nodes[_FoundNode];
                        }
                        else
                        {
                            oNode = new TreeNode();
                        }

                        oNode.Nodes.Clear();
                        oNode.Text = dgListView[2, dgListView.CurrentRow.Index].Value.ToString();
                        oNode.Tag = dgListView[1, dgListView.CurrentRow.Index].Value.ToString();

                        for (int i = 0; i <= dgListSubView.Rows.Count - 1; i++)
                        {
                            if (Convert.ToBoolean(dgListSubView.Rows[i].Cells[0].Value) == true)
                            {
                                oSubNode = new TreeNode();
                                oSubNode.Text = dgListSubView.Rows[i].Cells[3].Value.ToString();
                                oSubNode.Tag = dgListSubView.Rows[i].Cells[1].Value.ToString();
                                oSubNode.ToolTipText = dgListSubView.Rows[i].Cells[2].Value.ToString();
                                oNode.Nodes.Add(oSubNode);
                                oSubNode = null;
                            }
                        }


                        if (Convert.ToBoolean(dgListView[0, dgListView.CurrentRow.Index].Value) == true)
                        {
                            if (_Found == false)
                            {
                                trvItems.Nodes.Add(oNode);
                            }
                        }
                        else
                        {
                            if (_Found == true)
                            {
                                trvItems.Nodes.Remove(oNode);
                            }
                        }

                        oNode = null;
                    }
                    else
                    {
                        trvItems.Nodes.Clear();
                        oNode = new TreeNode();
                        oNode.Text = dgListView[1, dgListView.CurrentRow.Index].Value.ToString();
                        oNode.Tag = dgListView[0, dgListView.CurrentRow.Index].Value.ToString();

                        for (int i = 0; i <= dgListSubView.Rows.Count - 1; i++)
                        {
                            if (Convert.ToBoolean(dgListSubView.Rows[i].Cells[0].Value) == true)
                            {
                                oSubNode = new TreeNode();
                                oSubNode.Text = dgListSubView.Rows[i].Cells[3].Value.ToString();
                                oSubNode.Tag = dgListSubView.Rows[i].Cells[1].Value.ToString();
                                oSubNode.ToolTipText = dgListSubView.Rows[i].Cells[2].Value.ToString();
                                oNode.Nodes.Add(oSubNode);
                                oSubNode = null;
                            }
                        }


                        trvItems.Nodes.Add(oNode);
                        oNode = null;
                    }
                }
                trvItems.ExpandAll();
            }
        }

        private void AddRemoveResources_For_SelectAll() //For Select All option for Problem/resource Type
        {
            TreeNode oNode = null;
            TreeNode oSubNode = null;

            if (_ListControlType == gloListControlType.Procedures)
            {
                if (_FillInProcess == false)
                {
                    if (_ismultiselect == true)
                    {
                        for (int Count = 0; Count < dgListView.Rows.Count; Count++)
                        {
                            string _MainNode = dgListView[1, Count].Value.ToString();
                            bool _Found = false;
                            int _FoundNode = 0;

                            for (int i = 0; i <= trvItems.GetNodeCount(false) - 1; i++)
                            {
                                if (Convert.ToInt64(trvItems.Nodes[i].Tag.ToString()) == Convert.ToInt64(_MainNode))
                                {
                                    _Found = true;
                                    _FoundNode = i;
                                    break;
                                }
                            }
                            _MainNode = null;
                            if (_Found == true)
                            {
                                oNode = trvItems.Nodes[_FoundNode];
                            }
                            else
                            {
                                oNode = new TreeNode();
                            }

                            oNode.Nodes.Clear();
                            oNode.Text = dgListView[2, Count].Value.ToString();
                            oNode.Tag = dgListView[1, Count].Value.ToString();
                            dgListSubView.EndEdit();


                            #region Getting Resource for Select All Condition

                            dgListSubView.DataSource = null;
                            dgListSubView.Columns.Clear();

                            if (_ListControlType != gloListControlType.Other)
                            {
                                if (_DatabaseConnectionString.Trim() != "")
                                {
                                    DataTable _dtList = null;
                                    string _sqlQuery = "";
                                    gloDatabaseLayer.DBLayer oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
                                    gloDatabaseLayer.DBParameters oParameters = new gloDatabaseLayer.DBParameters();

                                    oDB.Connect(false);


                                    switch (_ListControlType)
                                    {
                                        case gloListControlType.Procedures:
                                            {
                                                _sqlQuery = "SELECT  AB_Resource_MST.nResourceID, AB_Resource_MST.sCode, AB_Resource_MST.sDescription " +
                                                " FROM AB_AppointmentType_Details INNER JOIN AB_Resource_MST ON AB_AppointmentType_Details.nResourceID = AB_Resource_MST.nResourceID " +
                                                " WHERE (AB_AppointmentType_Details.nAppointmentTypeID = " + Convert.ToInt64(oNode.Tag) + ") AND (AB_Resource_MST.nClinicID = " + _ClinicID + ") AND (AB_Resource_MST.bitIsBlocked = 0)";
                                            }
                                            break;
                                        default:
                                            {
                                            }
                                            break;
                                    }

                                    oDB.Retrive_Query(_sqlQuery, out _dtList);
                            #endregion
                                    if (_dtList != null)
                                    {
                                        if (_dtList.Rows.Count > 0)
                                        {
                                            for (int k = 0; k < _dtList.Rows.Count; k++)
                                            {
                                                oSubNode = new TreeNode();

                                                //02-Feb-16 Aniket: Resolving Bug #92804: Charges>>Patient Appointments>>Application not showing correct information in Provider/resource/problem type column
                                                //oSubNode.Text = _dtList.Rows[k]["sCode"].ToString();
                                                oSubNode.Text = _dtList.Rows[k]["sDescription"].ToString();
                                                oSubNode.Tag = _dtList.Rows[k]["nResourceID"].ToString();
                                                //oSubNode.ToolTipText = _dtList.Rows[k]["sDescription"].ToString();
                                                oSubNode.ToolTipText = _dtList.Rows[k]["sCode"].ToString();
                                                oNode.Nodes.Add(oSubNode);
                                                oSubNode = null;
                                            }
                                        }
                                        _dtList.Dispose();
                                        _dtList = null;
                                    }
                                    if (oDB != null)
                                    {
                                        oDB.Disconnect();
                                        oDB.Dispose();
                                        oDB = null;
                                    }
                                    if (oParameters != null)
                                    {
                                        oParameters.Dispose();
                                        oParameters = null;
                                    }
                                    _sqlQuery = null;
                                }
                            }





                            if (Convert.ToBoolean(dgListView[0, Count].Value) == true)
                            {
                                if (_Found == false)
                                {
                                    trvItems.Nodes.Add(oNode);
                                }
                            }
                            else
                            {
                                if (_Found == true)
                                {
                                    trvItems.Nodes.Remove(oNode);
                                }
                            }

                            oNode = null;
                        }
                    }
                    else
                    {
                    }
                }
                trvItems.ExpandAll();
            }
        }

        #region MouseHover & Leave events

        private void btnOK_MouseHover(object sender, EventArgs e)
        {
            btnOK.BackgroundImage = global::gloListControl.Properties.Resources.ImgButtonHover;
            btnOK.BackgroundImageLayout = ImageLayout.Tile;
        }

        private void btnOK_MouseLeave(object sender, EventArgs e)
        {
            btnOK.BackgroundImage = global::gloListControl.Properties.Resources.ImgButton;
            btnOK.BackgroundImageLayout = ImageLayout.Tile;
        }

        private void btnCancel_MouseHover(object sender, EventArgs e)
        {
            btnCancel.BackgroundImage = global::gloListControl.Properties.Resources.ImgButtonHover;
            btnCancel.BackgroundImageLayout = ImageLayout.Tile;
        }

        private void btnCancel_MouseLeave(object sender, EventArgs e)
        {
            btnCancel.BackgroundImage = global::gloListControl.Properties.Resources.ImgButton;
            btnCancel.BackgroundImageLayout = ImageLayout.Tile;
        }

        private void btnSelect_MouseHover(object sender, EventArgs e)
        {
            btnSelect.BackgroundImage = global::gloListControl.Properties.Resources.ImgButtonHover;
            btnSelect.BackgroundImageLayout = ImageLayout.Tile;
        }

        private void btnSelect_MouseLeave(object sender, EventArgs e)
        {
            btnSelect.BackgroundImage = global::gloListControl.Properties.Resources.ImgButton;
            btnSelect.BackgroundImageLayout = ImageLayout.Tile;
        }

        private void btnClose_MouseHover(object sender, EventArgs e)
        {
            btnClose.BackgroundImage = global::gloListControl.Properties.Resources.ImgButtonHover;
            btnClose.BackgroundImageLayout = ImageLayout.Tile;
        }

        private void btnClose_MouseLeave(object sender, EventArgs e)
        {
            btnClose.BackgroundImage = global::gloListControl.Properties.Resources.ImgButton;
            btnClose.BackgroundImageLayout = ImageLayout.Tile;
        }

        private void btnRefresh_MouseHover(object sender, EventArgs e)
        {
            btnRefresh.BackgroundImage = global::gloListControl.Properties.Resources.ImgButtonHover;
            btnRefresh.BackgroundImageLayout = ImageLayout.Tile;
        }

        private void btnRefresh_MouseLeave(object sender, EventArgs e)
        {
            btnRefresh.BackgroundImage = global::gloListControl.Properties.Resources.ImgButton;
            btnRefresh.BackgroundImageLayout = ImageLayout.Tile;
        }

        #endregion

        #region " ToolStrip Item Click Event "

        private void ts_Commands_ItemClicked(object sender, ToolStripItemClickedEventArgs e)
        {
            try
            {
                switch (e.ClickedItem.Tag.ToString())
                {
                    case "Save":
                        {
                            if ((_ListControlType == gloListControlType.Patient || _ListControlType == gloListControlType.AllPatient || _ListControlType == gloListControlType.ConflictingPatient) && !IsFromStatement)
                            {
                                if (dgListView != null && dgListView.Rows.Count > 0)
                                {
                                    if (!_ismultiselect)
                                    {
                                        dgListView.Select();  //To Select Default Row after Search patient.                                       
                                        if (dgListView.CurrentRow != null)
                                        {
                                            if (Convert.ToString(dgListView.CurrentRow.Cells["PatientStatus"].Value).ToUpper() == "LOCK CHARTS")
                                            {
                                                MessageBox.Show("The status of the patient is 'Lock Charts'. " + Environment.NewLine + "You can not perform any activity on this patient", _MessageBoxCaption, System.Windows.Forms.MessageBoxButtons.OK, System.Windows.Forms.MessageBoxIcon.Warning);
                                                return;
                                            }
                                        }
                                    }
                                }
                            }

                            if (_ListControlType == gloListControlType.Patient && IsFromStatement == true)
                            {
                                if (dgListView != null && dgListView.Rows.Count <= 0)
                                {
                                    MessageBox.Show("Select patient to continue.", _MessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Information);
                                    return;
                                }
                            }


                            if ((_ListControlType == gloListControlType.CQMHCPCS) || (_ListControlType == gloListControlType.CQMICD10) || (_ListControlType == gloListControlType.CQMICD9) || (_ListControlType == gloListControlType.CQMOrders) || (_ListControlType == gloListControlType.CQMRxNorm) || (_ListControlType == gloListControlType.CQMSnomed) || (_ListControlType == gloListControlType.CQMCVX))
                            {
                                dgListView.DataSource = null;
                                dgListView.DataSource = _dvList.Table;  
                                
                            }
                            _IsFormClosing = true;
                            btnSelect_Click(null, null);
                            break;
                        }

                    case "Cancel":
                        {
                            btnClose_Click(null, null);
                            break;
                        }

                    case "ShowAllRace":
                        {
                            tsb_ShowAllRace.Visible = false;
                            tsb_ShowFavorites.Visible = true;
                            ShowALLFavoritesRace(true);
                            break;
                        }

                    case "ShowFavorites":
                        {
                            tsb_ShowAllRace.Visible = true;
                            tsb_ShowFavorites.Visible = false;
                            ShowALLFavoritesRace(false);
                        }
                        break;
                }
            }
            catch (Exception ex)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
            }
        }

        private void ShowALLFavoritesRace(bool ShowALL)
        {

            //string _sqlQuery = "";
            gloDatabaseLayer.DBLayer oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
            gloDatabaseLayer.DBParameters oParameters = new gloDatabaseLayer.DBParameters();

            try
            {
                //if (ShowALL)
                //{
                //    _dvList.RowFilter= "";
                //}
                //else
                //{
                //    _dvList.RowFilter = "bFavorites = 1";
                //}

                txtSearch.Text = "";

                //if (ShowALL)
                //{
                //    _sqlQuery = "select nCategoryID, sDescription, sCode, bFavorites from category_mst where sCategoryType in ('Race','Race Specification') order by sDescription";
                //}
                //else
                //{
                //    _sqlQuery = "select nCategoryID, sDescription, sCode, bFavorites from category_mst where in ('Race','Race Specification') and bFavorites = 1 order by sDescription";
                //}

                oDB.Connect(false);
                if (_dtList != null)
                {
                    _dtList.Dispose();
                    _dtList = null;
                }
                //oDB.Retrive_Query(_sqlQuery, out _dtList);


                if (_ListControlType == gloListControlType.Race)
                {
                    oParameters.Add("@RaceCode", DBNull.Value, ParameterDirection.Input, SqlDbType.NVarChar);
                    oParameters.Add("@RaceCodeCategoryId", DBNull.Value, ParameterDirection.Input, SqlDbType.BigInt);
                    oParameters.Add("@RaceSpecificationCode", DBNull.Value, ParameterDirection.Input, SqlDbType.NVarChar);
                    oParameters.Add("@IncludeParent", 1, ParameterDirection.Input, SqlDbType.Bit);
                    if (ShowALL)
                    {
                        oParameters.Add("@showFavorites", 0, ParameterDirection.Input, SqlDbType.Bit);  //0-All,1-Favorite
                    }
                    else
                    {
                        oParameters.Add("@showFavorites", 1, ParameterDirection.Input, SqlDbType.Bit);
                    }
                    oDB.Retrive("gsp_GetRaceSpecification", oParameters, out _dtList);
                }

                if (_ListControlType == gloListControlType.Ethnicity)
                {
                    oParameters.Add("@EthinicityCode", DBNull.Value, ParameterDirection.Input, SqlDbType.NVarChar);
                    oParameters.Add("@EthinicityCodeCategoryId", DBNull.Value, ParameterDirection.Input, SqlDbType.BigInt);
                    oParameters.Add("@EthinicitySpecificationCode", DBNull.Value, ParameterDirection.Input, SqlDbType.NVarChar);
                    oParameters.Add("@IncludeParent", 1, ParameterDirection.Input, SqlDbType.Bit);
                    if (ShowALL)
                    {
                        oParameters.Add("@showFavorites", 0, ParameterDirection.Input, SqlDbType.Bit);  //0-All,1-Favorite
                    }
                    else
                    {
                        oParameters.Add("@showFavorites", 1, ParameterDirection.Input, SqlDbType.Bit);
                    }
                    oDB.Retrive("gsp_GetEthnicitySpecification", oParameters, out _dtList);
                }


                if (_dtList.Rows.Count > 0)
                {
                    _dvList = _dtList.DefaultView;
                    if (_ismultiselect == true)
                    {
                        DataColumn dcID1 = new DataColumn("Check1", typeof(int));

                        dcID1.DefaultValue = 0;
                        _dvList.Table.Columns.Add(dcID1);
                        DataColumn[] pk5 = new DataColumn[] { _dvList.Table.Columns[0] };
                        _dvList.Table.PrimaryKey = pk5;

                        if (dtSelected.Columns.Count == 0)
                        {
                            DataColumn col1 = new DataColumn("ID");
                            DataColumn col2 = new DataColumn("Name");
                            dtSelected.Columns.Add(col1);
                            dtSelected.Columns.Add(col2);
                        }

                        DataColumn[] pkey = new DataColumn[] { dtSelected.Columns[0] };
                        dtSelected.PrimaryKey = pkey;
                    }

                    if (tsb_UserGroups.Text == "Groups")
                    {
                        _dtGroupList = GetGroups();
                        DataColumn dcID1 = new DataColumn("Check1", typeof(int));

                        dcID1.DefaultValue = 0;
                        _dtGroupList.Columns.Add(dcID1);
                        DataColumn[] pk2 = new DataColumn[] { _dtGroupList.Columns[0] };
                        _dtGroupList.PrimaryKey = pk2;
                    }

                    dgListView.DataSource = _dvList;

                    ts_Commands.Focus();

                    if (_dvList != null && _dvList.Table != null && _ismultiselect == true)
                    {
                        if (_dvList.Table.Rows.Count > 0)
                        {

                            for (int Count = 0; Count < dgListView.Rows.Count; Count++)
                            {
                                DataRow dr = dtSelected.Rows.Find(dgListView.Rows[Count].Cells[1].Value);
                                if (dr != null)
                                {
                                    dgListView.Rows[Count].Cells[0].Value = 1;
                                    dgListView.EndEdit();
                                    dgListView.CommitEdit(DataGridViewDataErrorContexts.Display);
                                }
                                dr = null;
                            }
                        }
                    }

                    dgListView.Focus();
                }

            }
            catch (Exception ex)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
            }
            finally
            {
                //_sqlQuery = null;
                oDB.Dispose();
                oDB = null;
            }

        }

        #endregion " ToolStrip Item Click Event "

        private void gloListControl_KeyDown(object sender, KeyEventArgs e)
        {
            try
            {
                if (e.KeyCode == Keys.Escape)
                {
                    btnClose_Click(null, null);
                }

            }
            catch (Exception ex)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
            }
        }

        //code start by nilesh on 20110328
        private bool IsValidKey(int _KeyValue)
        {
            bool _ValidKey = false;

            if (_KeyValue >= 32 && _KeyValue <= 47)
            { _ValidKey = true; }

            if (_KeyValue >= 48 && _KeyValue <= 57)
            { _ValidKey = true; }

            if ((_KeyValue >= 65 && _KeyValue <= 90) || (_KeyValue >= 97 && _KeyValue <= 122))
            { _ValidKey = true; }

            return _ValidKey;
        }

        //code end by nilesh on 20110328

        private void txtSearch_KeyDown(object sender, KeyEventArgs e)
        {
            try
            {

                if (e.KeyCode == Keys.Enter)
                {
                    //..Check if there are rows after the search is done 
                    //..if yes then set focus to the grid else keep in the search text box.
                    if (_ListControlType == gloListControlType.Modifier) //added for bugid 79263
                    {
                        e.SuppressKeyPress = true;
                        txtSearch.Focus();
                        return;
                    }
                    if (dgListView.Rows.Count > 0)
                    { dgListView.Focus(); }
                    else
                    {
                        txtSearch.SelectAll();
                        txtSearch.Focus();
                    }
                }

                //code start by nilesh on 20110328
                if (e.Alt
                    || e.Control
                    || e.KeyCode.Equals(Keys.Left)
                    || e.KeyCode.Equals(Keys.Right)
                    || e.KeyCode.Equals(Keys.Up)
                    || e.KeyCode.Equals(Keys.Down)
                    || e.KeyCode.Equals(Keys.Home)
                    || e.KeyCode.Equals(Keys.End))
                { return; }

                if (IsValidKey(e.KeyValue) == false)
                { return; }

                _CurrentTime = DateTime.Now;
                oTimerSearch.Stop();
                oTimerSearch.Interval = 500;
                oTimerSearch.Enabled = true;
                ////code end by nilesh on 20110328
            }
            catch (Exception ex)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
            }
        }

        private void btnShowAllCPT_Click(object sender, EventArgs e)
        {
            try
            {
                cmbTypeOfservice.SelectedIndex = -1;
            }
            catch (Exception ex)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
            }
        }

        private void FillTOS()
        {
            gloDatabaseLayer.DBLayer oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
            DataTable dtTOS = null;
            string strQuery = "";
            try
            {
                oDB.Connect(false);

                if (_ClinicID == 0)
                    strQuery = "select nTOSID,sDescription,sTOSCode from BL_TOS_MST where (bIsBlocked IS NULL OR bIsBlocked = '" + false + "') ORDER BY sDescription";
                else
                    strQuery = "select nTOSID,sDescription,sTOSCode from BL_TOS_MST where (bIsBlocked IS NULL OR bIsBlocked = '" + false + "') AND nClinicID = " + _ClinicID + " ORDER BY sDescription";

                oDB.Retrive_Query(strQuery, out dtTOS);
                if (dtTOS != null)
                {
                    cmbTypeOfservice.SelectedIndexChanged -= new EventHandler(cmbTypeOfservice_SelectedIndexChanged);
                    cmbTypeOfservice.DataSource = dtTOS.Copy();
                    cmbTypeOfservice.ValueMember = dtTOS.Columns["nTOSID"].ColumnName;
                    cmbTypeOfservice.DisplayMember = dtTOS.Columns["sDescription"].ColumnName;
                    cmbTypeOfservice.Refresh();
                    cmbTypeOfservice.SelectedIndex = -1;
                    cmbTypeOfservice.SelectedIndexChanged += new EventHandler(cmbTypeOfservice_SelectedIndexChanged);
                }

            }
            catch (gloDatabaseLayer.DBException dbex)
            {
                dbex.ERROR_Log(dbex.ToString());
            }
            catch (Exception ex)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
            }
            finally
            {
                oDB.Disconnect();
                oDB.Dispose();
                oDB = null;
                dtTOS.Dispose();
                dtTOS = null;
                strQuery = null;
            }
        }

        private void FillSpecialityType()
        {
            gloDatabaseLayer.DBLayer oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
            DataTable dtSpeciality = null;
            string strQuery = "";
            try
            {
                oDB.Connect(false);

                strQuery = "Select nID,sDownloadName  from SpecialityTypeMst where bIsDisplay='True' Order by sDownloadName";

                oDB.Retrive_Query(strQuery, out dtSpeciality);
                if (dtSpeciality != null)
                {
                    cmbSpeciality.SelectedIndexChanged -= new EventHandler(cmbSpeciality_SelectedIndexChanged);
                    cmbSpeciality.DataSource = dtSpeciality.Copy();
                    cmbSpeciality.ValueMember = dtSpeciality.Columns["nID"].ColumnName;
                    cmbSpeciality.DisplayMember = dtSpeciality.Columns["sDownloadName"].ColumnName;
                    cmbSpeciality.Refresh();
                    cmbSpeciality.SelectedIndex = 0;
                    cmbSpeciality.SelectedIndexChanged += new EventHandler(cmbSpeciality_SelectedIndexChanged);
                }

            }
            catch (gloDatabaseLayer.DBException dbex)
            {
                dbex.ERROR_Log(dbex.ToString());
            }
            catch (Exception ex)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
            }
            finally
            {
                oDB.Disconnect();
                oDB.Dispose();
                oDB = null;
                dtSpeciality.Dispose();
                dtSpeciality = null;
                strQuery = null;
            }
        }


        private void cmbSpeciality_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                //if (cmbSpeciality.SelectedIndex != -1 || cmbSpeciality.SelectedIndex != 1)
                //{
                //    _SpecialityID = Convert.ToInt64(cmbSpeciality.SelectedValue);
                FillListAsCriteria(0);
                //}
                //else
                //{
                //  _SpecialityID = 0;
                //    FillListAsCriteria(0);                   
                //}
                dgListView.Focus();
            }
            catch (Exception ex)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
            }

        }

        private void cmbTypeOfservice_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                if (cmbTypeOfservice.SelectedIndex != -1)
                {
                    _TOSID = Convert.ToInt64(cmbTypeOfservice.SelectedValue);
                    FillListAsCriteria(0);
                    btnShowAllCPT.Enabled = true;
                }
                else
                {
                    _TOSID = 0;
                    FillListAsCriteria(0);
                    btnShowAllCPT.Enabled = false;
                }

                if (dgListView != null)
                {
                    if (dgListView.RowCount > 0)
                    {
                        if (_ismultiselect == false)
                        {
                            lblSearch.Text = dgListView.Columns[1].HeaderText.ToString() + " :";
                            dgListView.ReadOnly = true;
                        }
                        else
                        {
                            lblSearch.Text = dgListView.Columns[2].HeaderText.ToString() + " :";
                            for (int i = 0; i < dgListView.Columns.Count; i++)
                            {
                                dgListView.Columns[i].ReadOnly = true;
                            }
                            dgListView.Columns[0].ReadOnly = false;
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
            }
        }

        private void chkSelectAll_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                if ((_ismultiselect == true) && (_ListControlType == gloListControlType.Diagnosis)) //Bug #65085:
                {
                    if (_dtSelectedRecords != null)
                        _dtSelectedRecords.Rows.Clear();
                    if (_dtStoreDiagnosis != null)
                        _dtStoreDiagnosis.Rows.Clear();
                    if (dtSelected != null)
                    {
                        if (chkSelectAll.Checked == false)
                        {
                            dtSelected.Rows.Clear();
                        }
                    }
                }
                
                SelectALL(chkSelectAll.Checked);
                if (chkSelectAll.Visible && _ListControlType == gloListControlType.Patient)
                {
                    if (dtSelected != null)
                    {
                        if (chkSelectAll.Checked == false)
                        {
                            dtSelected.Rows.Clear();
                        }
                    }
                }


            }
            catch (Exception ex)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);
            }
        }

        private void SelectALL(bool _Select)
        {
            for (int i = 0; i < dgListView.RowCount; i++)
            {
                dgListView[0, i].Value = _Select;
            }
            //Added By MaheshB
            //For Check/Uncheck Values For Search
            //Condition Added by Mayuri:20100510-To fill users of selected group in combo To.
            Int16 nIDColumn = 0;
            if (dgListView.RowCount > 0)
            {

                /////
                if (dgListView.Columns[1].HeaderText == "Id" || dgListView.Columns[1].HeaderText == "UserId" || dgListView.Columns[1].HeaderText == "Insurance ID" || dgListView.Columns[1].HeaderText == "nCategoryID" || dgListView.Columns[1].HeaderText == "nHistoryDetailsID") //condition "Insurance ID" added by nilesh on 20110329 for case GLO2010-0010142
                    nIDColumn = 1;
                else if (dgListView.Columns[2].HeaderText == "Id" || dgListView.Columns[2].HeaderText == "UserId")
                    nIDColumn = 2;
            }
            /////

            if (tsb_UserGroups.Text == "Users")
            {
                for (int j = 0; j < dgListView.Rows.Count; j++)
                {
                    DataRow to_be_edited = _dtGroupList.Rows.Find(dgListView.Rows[j].Cells[nIDColumn].Value);//Id Column
                    if (to_be_edited != null)
                    {
                        if (_Select == true)
                        {
                            to_be_edited["Check1"] = 1;
                        }
                        else
                        {
                            to_be_edited["Check1"] = 0;

                        }
                    }
                }
            }
            else
            {
                for (int j = 0; j < dgListView.Rows.Count; j++)
                {
                    //Commenetd by Mayuri:20100706
                    //DataRow to_be_edited = dtForSearch.Rows.Find(dgListView.Rows[j].Cells[1].Value);//Id Column
                    DataRow to_be_edited = _dvList.Table.Rows.Find(dgListView.Rows[j].Cells[nIDColumn].Value);//Id Column
                    if (to_be_edited != null)
                    {

                        if (_Select == true)
                        {
                            to_be_edited["Check1"] = 1;
                            if (_ListControlType == gloListControlType.Pharmacy)
                            {
                                dgListView[0, j].Value = _Select;
                            }
                            //Selected icd code get removed after clear search in case of ICD Codes
                            if (CallingForm == "Claim Rule" && _ListControlType == gloListControlType.Diagnosis)
                            {
                                DataRow drCheck = dtSelected.Rows.Find(dgListView.Rows[j].Cells[nIDColumn].Value);
                                if (drCheck == null)
                                {
                                    DataRow drnew = dtSelected.NewRow();
                                    drnew[0] = Convert.ToInt64(to_be_edited["nICD9ID"]);
                                    drnew[1] = to_be_edited["sICD9Code"];
                                    dtSelected.Rows.Add(drnew);
                                }
                            }
                        }
                        else
                        {
                            if (_ListControlType != gloListControlType.Patient)
                            {
                                to_be_edited["Check1"] = 0;
                            }                            
                            if (_ListControlType == gloListControlType.Pharmacy)
                            {
                                dgListView[0, j].Value = _Select;
                            }
                        }

                    }
                    to_be_edited = null;
                }
            }
            //            if (_ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians)
            if (_ListControlType == gloListControlType.HistoryOBPhysicalExam || _ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians || _ListControlType == gloListControlType.Patient || _ListControlType == gloListControlType.HistoryItem || _ListControlType == gloListControlType.Pharmacy || _ListControlType == gloListControlType.Race || _ListControlType == gloListControlType.Ethnicity || _ListControlType == gloListControlType.MedicalCategory || _ListControlType == gloListControlType.OBMedicalCategory || (_ListControlType == gloListControlType.Users && tsb_UserGroups.Text == "Groups"))
            {
                for (int j = 0; j < dgListView.Rows.Count; j++)
                {
                    DataRow to_be_edited = dtSelected.Rows.Find(dgListView.Rows[j].Cells[nIDColumn].Value);//Id Column


                    if (_Select == true)
                    {
                        if (to_be_edited == null)
                        {

                            DataRow drnew;
                            drnew = dtSelected.Rows.Find(dgListView.Rows[j].Cells[nIDColumn].Value);
                            if (drnew == null)
                            {
                                DataRow dr = dtSelected.NewRow();

                                dr[0] = Convert.ToInt64(dgListView[nIDColumn, j].Value);
                                if (_ListControlType == gloListControlType.Patient)
                                {
                                    dr[1] = dgListView[3, j].Value.ToString().Trim() + " " + dgListView[4, j].Value.ToString().Trim() + " " + dgListView[5, j].Value.ToString().Trim();

                                }
                                else
                                {
                                    // dr[1] = dgListView[2, j].Value.ToString().Trim() + " " + dgListView[3, j].Value.ToString().Trim() + " " + dgListView[4, j].Value.ToString().Trim();
                                    //ADDED BY SHUBHANGI 20100609 ADD PREFIX & SUFFIX INTO PHYSICIANS IF THEY PRESENT
                                    if (_ListControlType == gloListControlType.HistoryItem)
                                    {
                                    }
                                    else
                                    {
                                        if (_ListControlType == gloListControlType.CQMICD9
                               || _ListControlType == gloListControlType.CQMOrders
                                 || _ListControlType == gloListControlType.CQMSnomed
                                || _ListControlType == gloListControlType.CQMRxNorm
                                || _ListControlType == gloListControlType.CQMHCPCS
                                || _ListControlType == gloListControlType.CQMCVX)
                                        {
                                           // dr[1] = Convert.ToString(dgListView[3, j].Value);
                                            dr[0] = Convert.ToInt64(dgListView[1, j].Value);
                                           dr[1] = Convert.ToString(dgListView[2, j].Value);
                                            dr[2] = dgListView[3, j].Value.ToString().Trim();
                                        }
                                        else if (_ListControlType == gloListControlType.Pharmacy)
                                        {
                                            dr[1] = dgListView[nIDColumn + 1, j].Value.ToString().Trim(); //+ " " + dgListView[4, j].Value.ToString().Trim() + " " + dgListView[5, j].Value.ToString().Trim() + " " + dgListView[6, j].Value.ToString().Trim();
                                        }
                                        else if (_ListControlType == gloListControlType.Race)
                                        {
                                            dr[1] = dgListView[3, j].Value.ToString().Trim();
                                        }
                                        else if (_ListControlType == gloListControlType.Ethnicity)
                                        {
                                            dr[1] = dgListView[3, j].Value.ToString().Trim();
                                        }
                                        else if (_ListControlType == gloListControlType.MedicalCategory)
                                        {
                                            dr[1] = dgListView[2, j].Value.ToString().Trim();
                                        }
                                        else if (_ListControlType == gloListControlType.ApptSelectedCols)
                                        {
                                            dr[1] = dgListView[2, j].Value.ToString().Trim();
                                        }
                                        else if (_ListControlType == gloListControlType.OBMedicalCategory)
                                        {
                                            dr[1] = dgListView[2, j].Value.ToString().Trim();
                                        }
                                        else if (_ListControlType == gloListControlType.HistoryOBPhysicalExam)
                                        {
                                            dr[1] = dgListView[2, j].Value.ToString().Trim();
                                        }

                                        else if (_ListControlType == gloListControlType.Users)
                                        {
                                            dr[1] = dgListView[3, j].Value.ToString().Trim();
                                            if (IsgloCollectCustomer)
                                            {
                                                dr[2] = dgListView[9, j].Value.ToString().Trim();
                                            }
                                        }
                                        else if (dgListView[2, j].Value.ToString() != "" && dgListView[6, j].Value.ToString() != "")
                                        {
                                            dr[1] = dgListView[2, j].Value.ToString().Trim() + " " + dgListView[3, j].Value.ToString().Trim() + " " + dgListView[4, j].Value.ToString().Trim() + " " + dgListView[5, j].Value.ToString().Trim() + " " + dgListView[6, j].Value.ToString().Trim();
                                        }
                                        else if (dgListView[2, j].Value.ToString() == "" && dgListView[6, j].Value.ToString() != "")
                                        {
                                            dr[1] = dgListView[3, j].Value.ToString().Trim() + " " + dgListView[4, j].Value.ToString().Trim() + " " + dgListView[5, j].Value.ToString().Trim() + " " + dgListView[6, j].Value.ToString().Trim();
                                        }

                                        else if (dgListView[2, j].Value.ToString() != "" && dgListView[6, j].Value.ToString() == "")
                                        {
                                            dr[1] = dgListView[2, j].Value.ToString().Trim() + " " + dgListView[3, j].Value.ToString().Trim() + " " + dgListView[4, j].Value.ToString().Trim() + " " + dgListView[5, j].Value.ToString().Trim();
                                        }
                                        else
                                        {
                                            dr[1] = dgListView[3, j].Value.ToString().Trim() + " " + dgListView[4, j].Value.ToString().Trim() + " " + dgListView[5, j].Value.ToString().Trim();
                                        }
                                    }
                                }
                                dtSelected.Rows.Add(dr);
                                dr = null;
                            }
                            drnew = null;

                        }
                    }
                    else
                    {



                        if (_ListControlType == gloListControlType.HistoryOBPhysicalExam || _ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Physicians || _ListControlType == gloListControlType.Patient || _ListControlType == gloListControlType.HistoryItem || _ListControlType == gloListControlType.Pharmacy || _ListControlType == gloListControlType.Race || _ListControlType == gloListControlType.Ethnicity || _ListControlType == gloListControlType.MedicalCategory || _ListControlType == gloListControlType.OBMedicalCategory || (_ListControlType == gloListControlType.Users && tsb_UserGroups.Text == "Groups"))
                        {
                            DataRow drnew;
                            if (_ListControlType == gloListControlType.Pharmacy)
                            {

                                drnew = dtSelected.Rows.Find(dgListView.Rows[j].Cells[nIDColumn].Value);


                            }
                            else
                            {
                                drnew = dtSelected.Rows.Find(dgListView.Rows[j].Cells[1].Value);
                            }

                            if (drnew != null)
                            {
                                dtSelected.Rows.Remove(drnew);
                                if (_ListControlType == gloListControlType.HistoryOBPhysicalExam || _ListControlType == gloListControlType.Pharmacy || _ListControlType == gloListControlType.Referrals || _ListControlType == gloListControlType.Race || _ListControlType == gloListControlType.Ethnicity|| _ListControlType == gloListControlType.MedicalCategory || _ListControlType == gloListControlType.OBMedicalCategory || (_ListControlType == gloListControlType.Users && tsb_UserGroups.Text == "Groups"))
                                {
                                    Int16 nDefault = 0;

                                    if (_ListControlType == gloListControlType.Race)
                                    {
                                        dgListView.Rows[j].Cells[5].Value = false;
                                        dgListView.EndEdit();
                                    }
                                    else if (_ListControlType == gloListControlType.Ethnicity)
                                    {
                                        dgListView.Rows[j].Cells[5].Value = false;
                                        dgListView.EndEdit();
                                    }
                                    else if (_ListControlType == gloListControlType.MedicalCategory)
                                    {
                                        dgListView.Rows[j].Cells[3].Value = false;
                                        dgListView.EndEdit();
                                    }
                                    else if (_ListControlType == gloListControlType.ApptSelectedCols)
                                    {
                                        dgListView.Rows[j].Cells[3].Value = false;
                                        dgListView.EndEdit();
                                    }

                                    else if (_ListControlType == gloListControlType.HistoryOBPhysicalExam)
                                    {
                                        dgListView.Rows[j].Cells[3].Value = false;
                                        dgListView.EndEdit();
                                    }
                                    else if (_ListControlType == gloListControlType.OBMedicalCategory)
                                    {
                                        dgListView.Rows[j].Cells[3].Value = false;
                                        dgListView.EndEdit();
                                    }
                                    else if (_ListControlType == gloListControlType.Users)
                                    {
                                        if (IsgloCollectCustomer)
                                        {
                                            dgListView.Rows[j].Cells[10].Value = false;
                                        }
                                        else
                                        {
                                            dgListView.Rows[j].Cells[9].Value = false;
                                        }
                                        dgListView.EndEdit();
                                    }
                                    else
                                    {
                                        dgListView.Rows[j].Cells[13].Value = false;
                                    }
                                    if (_ListControlType == gloListControlType.Pharmacy)
                                    {
                                        if (dgListView.Columns[1].HeaderText == "IsDefault")
                                        {
                                            nDefault = 1;
                                        }
                                        else
                                            if (dgListView.Columns[12].HeaderText == "IsDefault")
                                            {
                                                nDefault = 12;
                                            }
                                        if (dgListView.Rows[j].Cells[nDefault].Value != null)
                                        {
                                            if (dgListView.Rows[j].Cells[nDefault].Value.ToString() == "True")
                                            {
                                                dgListView.Rows[j].Cells[nDefault].Value = false;
                                            }
                                            _isdefault = 0;
                                        }
                                    }
                                }
                                else
                                {
                                    dgListView.Rows[j].Cells[12].Value = false;
                                }

                            }
                            drnew = null;
                        }
                    }
                    to_be_edited = null;
                }

            }


            //Added Against the Bug ID.:6268 in 6001
            if (_Select == true)
            {
                AddRemoveResources_For_SelectAll();
            }
            else
            {
                if (_ListControlType == gloListControlType.Procedures)
                {
                    if (dgListView.Rows.Count > 0)
                    {
                        FillSubListAsCriteria(Convert.ToInt64(dgListView[1, dgListView.SelectedRows[0].Index].Value.ToString()));
                    }
                }
                else
                {
                    AddRemoveResources_For_SelectAll();
                }
            }
        }

        //To Fill User groups
        private void tsb_UserGroups_Click(object sender, EventArgs e)
        {
            //Fill groups
            try
            {

                if (tsb_UserGroups.Text == "Groups")
                {

                    gloDatabaseLayer.DBLayer oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
                    oDB.Connect(false);
                    string _sqlQuery = "SELECT ISNULL(nGroupID,0)AS nGroupID,ISNULL(sGroupName,'') AS sGroupName, ISNULL(nType,0) AS nType  FROM SEC_UserGroups_MST";
                    if (ClinicID > 0)
                    {
                        _sqlQuery = _sqlQuery + " WHERE nClinicID = " + ClinicID + "";
                    }
                    if (_dtList != null)
                    {
                        _dtList.Dispose();
                        _dtList = null;
                    }
                    if (_sqlQuery.Trim() != "")
                    {
                        oDB.Retrive_Query(_sqlQuery, out _dtList);
                    }
                    _sqlQuery = null;

                    if (_dtList != null)
                    {
                        if (_dtList.Rows.Count > 0)
                        {
                            chkIncludeAllUsers.Visible = false;
                            tsb_UserGroups.Text = "Users";
                            tsb_UserGroups.Image = global::gloListControl.Properties.Resources.User;
                            tsb_UserGroups.ImageAlign = ContentAlignment.MiddleCenter;
                            lblSearch.Text = "Group :";
                            chkSelectAll.Checked = false; //Bug 2534 //Sandip Darade 20100730
                            dgListView.DataSource = null;
                            dgListView.ColumnCount = 0;

                            _dvList = _dtList.DefaultView;
                            dgListView.DataSource = _dtList.DefaultView;

                            if (_ismultiselect == true)
                            {
                                dgListView.Columns.Insert(0, new DataGridViewCheckBoxColumn(false));
                                dgListView.Columns[0].HeaderText = "Select";
                                dgListView.Columns[1].HeaderText = "Id";
                                dgListView.Columns[2].HeaderText = "Group";
                                dgListView.Columns[3].HeaderText = "Type";

                                dgListView.Columns[0].Visible = true;
                                dgListView.Columns[1].Visible = false;
                                dgListView.Columns[2].Visible = true;
                                dgListView.Columns[3].Visible = false;

                                int _width = (_thiswidth - 17) / 10;
                                dgListView.Columns[0].Width = _width * 1;
                                dgListView.Columns[1].Width = _width * 0;
                                dgListView.Columns[2].Width = _width * 8;
                                dgListView.Columns[3].Width = _width * 0;
                                dgListView.Columns[2].ReadOnly = true;
                            }
                            else
                            {
                                dgListView.Columns[0].HeaderText = "Id";
                                dgListView.Columns[1].HeaderText = "Group";
                                dgListView.Columns[2].HeaderText = "Type";

                                dgListView.Columns[0].Visible = false;
                                dgListView.Columns[1].Visible = true;
                                dgListView.Columns[2].Visible = false;

                                int _width = (_thiswidth - 17) / 5;
                                dgListView.Columns[0].Width = _width * 0;
                                dgListView.Columns[1].Width = _width * 9;
                                dgListView.Columns[2].Width = _width * 0;
                                dgListView.ReadOnly = true;
                            }
                        }
                        else
                        {
                            MessageBox.Show("There are no user groups available.   ", _MessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Information);
                        }
                    }
                    else
                    {
                        MessageBox.Show("There are no user groups available.   ", _MessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Information);
                    }
                    oDB.Disconnect();
                    oDB.Dispose();
                    oDB = null;
                }

                else //Fill Users
                {
                    if (IsgloCollectCustomer)
                    {
                        gloDatabaseLayer.DBLayer oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
                        DataTable dtUsersCount = null;
                        oDB.Connect(false);
                        oDB.Retrive_Query("Select count(nUserId) From user_mst where isnull(bisglocollect,0) = 1", out dtUsersCount);
                        if (Convert.ToInt64(dtUsersCount.Rows[0][0]) > 0)
                        {
                            chkIncludeAllUsers.Visible = true;
                        }
                        oDB.Disconnect();
                        oDB.Dispose();
                        oDB = null;

                        if (dtUsersCount != null)
                        {
                            dtUsersCount.Dispose();
                            dtUsersCount = null;
                        }
                    }
                    dgListView.DataSource = null;
                    dgListView.ColumnCount = 0;
                    tsb_UserGroups.Text = "Groups";
                    tsb_UserGroups.Image = global::gloListControl.Properties.Resources.Group;
                    tsb_UserGroups.ImageAlign = ContentAlignment.MiddleCenter;
                    _ListControlType = gloListControlType.Users;
                    gloListControl_Load(null, null);
                    chkSelectAll.Checked = false; //Bug 2534 //Sandip Darade 20100730
                }
            }
            catch (Exception ex)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);

            }


        }
        //Added by Mayuri:on 20100508-To fill users of selected group
        public DataTable GetGroups()
        {
            gloDatabaseLayer.DBLayer oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
            try
            {
                oDB.Connect(false);
                string _sqlQuery = "SELECT ISNULL(nGroupID,0)AS nGroupID,ISNULL(sGroupName,'') AS sGroupName, ISNULL(nType,0) AS nType  FROM SEC_UserGroups_MST";
                if (ClinicID > 0)
                {
                    _sqlQuery = _sqlQuery + " WHERE nClinicID = " + ClinicID + "";
                }
                if (_dtList != null)
                {
                    _dtList.Dispose();
                    _dtList = null;
                }
                if (_sqlQuery.Trim() != "")
                {
                    oDB.Retrive_Query(_sqlQuery, out _dtList);
                }
                _sqlQuery = null;
                return _dtList;
            }

            catch (Exception ex)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), false);

                return null;
            }
            finally
            {
                oDB.Disconnect();
                oDB.Dispose();
                oDB = null;
            }
        }
        //End code Added on 20100508

        public DataTable GetGroupUsers(Int64 groupID)
        {
            DataTable dtgloPMgroupUsers = null;
            gloDatabaseLayer.DBLayer oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
            try
            {
                oDB.Connect(false);
                //string  strQuery = "SELECT nUserID,sUserName FROM SEC_UserGroups_DTL WHERE nGroupID =" + groupID + "  AND nClinicID = " + _ClinicID;
                string strQuery = null;
                if (IsgloCollectCustomer)
                {
                    strQuery = "SELECT  ISNULL(SEC_UserGroups_DTL.nUserID,0) AS nUserID, ISNULL(User_MST.sLoginName,'') AS LoginName,ISNULL(User_MST.sFirstName,'') + SPACE(1) + ISNULL(User_MST.sMiddleName,'') + SPACE(1) + ISNULL(User_MST.sLastName,'') AS sUserName , isnull(bisglocollect,0) AS bisglocollect"
                                 + " FROM SEC_UserGroups_DTL INNER JOIN User_MST ON SEC_UserGroups_DTL.nUserID = User_MST.nUserID "
                                 + " WHERE (SEC_UserGroups_DTL.nGroupID =" + groupID + ") AND (SEC_UserGroups_DTL.nClinicID  = " + _ClinicID + ")"
                                 + "  AND ISNULL(User_MST.nBlockStatus,'false') <> '" + true + "' order by isnull(bisglocollect,0),LoginName ";
                }
                else
                {
                    strQuery = "SELECT  ISNULL(SEC_UserGroups_DTL.nUserID,0) AS nUserID, ISNULL(User_MST.sLoginName,'') AS LoginName,ISNULL(User_MST.sFirstName,'') + SPACE(1) + ISNULL(User_MST.sMiddleName,'') + SPACE(1) + ISNULL(User_MST.sLastName,'') AS sUserName "
                                  + " FROM SEC_UserGroups_DTL INNER JOIN User_MST ON SEC_UserGroups_DTL.nUserID = User_MST.nUserID "
                                  + " WHERE (SEC_UserGroups_DTL.nGroupID =" + groupID + ") AND (SEC_UserGroups_DTL.nClinicID  = " + _ClinicID + ")"
                                  + "  AND ISNULL(User_MST.nBlockStatus,'false') <> '" + true + "'";
                }
                oDB.Retrive_Query(strQuery, out dtgloPMgroupUsers);
                strQuery = null;
                return dtgloPMgroupUsers;
            }
            catch (gloDatabaseLayer.DBException DBErr)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(DBErr.ToString(), false);

                return null;
            }
            catch (Exception ex)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), false);

                return null;
            }
            finally
            {
                oDB.Disconnect();
                oDB.Dispose();
                oDB = null;
            }
        }

        private void trvItems_AfterSelect(object sender, TreeViewEventArgs e)
        {
        }

        private void tsb_Modify_Click(object sender, EventArgs e)
        {
            _isModify = true;
            ModifyFormHandlerClick(sender, e);
        }

        private void dgListView_Sorted(object sender, EventArgs e)
        {
            if ((_ListControlType == gloListControlType.Patient || _ListControlType == gloListControlType.AllPatient || _ListControlType == gloListControlType.ConflictingPatient) && !IsFromStatement)
            {
                if (dgListView != null && dgListView.Rows.Count > 0)
                {
                    for (int i = 0; i < dgListView.Rows.Count; i++)
                    {
                        if (Convert.ToString(dgListView.Rows[i].Cells[10].Value).ToUpper() == "LOCK CHARTS")
                        {
                            dgListView.Rows[i].DefaultCellStyle.ForeColor = System.Drawing.Color.Red;
                            dgListView.Rows[i].DefaultCellStyle.SelectionForeColor = System.Drawing.Color.Red;
                        }
                    }
                }
            }
        }

        //SHUBHANGI 20101223 FOR CHECKING CHECK BOX OF 'ISDEFAULT'
        private void dgListView_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            try
            {

                if (_ListControlType == gloListControlType.Pharmacy)
                {
                    if (dgListView.Columns[e.ColumnIndex].HeaderText == "IsDefault" && _ismultiselect == true && e.RowIndex >= 0)
                    {
                        if (Convert.ToBoolean(dgListView.Rows[e.RowIndex].Cells[e.ColumnIndex].Value) == false && Convert.ToBoolean(dgListView.Rows[e.RowIndex].Cells[0].Value) == true)
                        {
                            for (int i = 0; i <= dgListView.Rows.Count - 1; i++)
                            {
                                if (Convert.ToBoolean(dgListView.Rows[i].Cells[e.ColumnIndex].Value) == true)
                                {
                                    dgListView.Rows[i].Cells[e.ColumnIndex].Value = false;
                                    _isdefault = 0;
                                }
                            }
                            dgListView.Rows[e.RowIndex].Cells[e.ColumnIndex].Value = true;
                            //20110111 TO SET ISDEFAULT CHECK AFTER MODIFY
                            Int16 nIDColumn = 0;
                            if (dgListView.Columns[1].HeaderText == "Id")
                                nIDColumn = 1;
                            else if (dgListView.Columns[2].HeaderText == "Id")
                                nIDColumn = 2;
                            _isdefault = Convert.ToInt64(dgListView.Rows[e.RowIndex].Cells[nIDColumn].Value);
                        }
                        else if (Convert.ToBoolean(dgListView.Rows[e.RowIndex].Cells[e.ColumnIndex].Value) == true)
                        {
                            dgListView.Rows[e.RowIndex].Cells[e.ColumnIndex].Value = false;
                            _isdefault = 0;
                        }
                    }
                }

                if (_ismultiselect == true)
                {
                    if (_ListControlType == gloListControlType.Modifier)
                    {
                        if (e.RowIndex >= 0)
                        {
                            if (dgListView.Columns.Count >= 7)

                                if (dgListView[1, e.RowIndex].Value != null)
                                {

                                    dgListView[6, e.RowIndex].Value = dgListView[1, e.RowIndex].Value;
                                }

                        }
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString(), _MessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Error);

            }
        }

        private void btnSearchCancel_Click(object sender, EventArgs e)
        {
            txtSearch.Text = "";
        }

        private void rbICD9_CheckedChanged(object sender, EventArgs e)
        {
            if (rbICD9.Checked == true)
            {
                rbICD9.Font = gloGlobal.clsgloFont.gFont_BOLD; // new Font("Tahoma", 9, FontStyle.Bold);
                rbICD10.Font = gloGlobal.clsgloFont.gFont; // new Font("Tahoma", 9, FontStyle.Regular);
                rbAll.Font = gloGlobal.clsgloFont.gFont; //new Font("Tahoma", 9, FontStyle.Regular);
            }
            else if (rbICD10.Checked == true)
            {
                rbICD9.Font = gloGlobal.clsgloFont.gFont;// new Font("Tahoma", 9, FontStyle.Regular);
                rbICD10.Font = gloGlobal.clsgloFont.gFont_BOLD; //new Font("Tahoma", 9, FontStyle.Bold);
                rbAll.Font = gloGlobal.clsgloFont.gFont;// new Font("Tahoma", 9, FontStyle.Regular);
            }
            else
            {
                rbICD9.Font = gloGlobal.clsgloFont.gFont;// new Font("Tahoma", 9, FontStyle.Regular);
                rbICD10.Font = gloGlobal.clsgloFont.gFont;// new Font("Tahoma", 9, FontStyle.Regular);
                rbAll.Font = gloGlobal.clsgloFont.gFont_BOLD; // new Font("Tahoma", 9, FontStyle.Bold);
            }

            if (dtSelected != null)
                dtSelected.Rows.Clear();
            if (_dtStoreDiagnosis != null)
                _dtStoreDiagnosis.Rows.Clear();
            FillICD9ICD10();
            txtSearch.Focus();
        }

        private void chkShowActpatient_CheckedChanged(object sender, EventArgs e)
        {
            txtSearch.Text = "";
            strfilterForReferral = "";
            chkShowActpatient_Change(sender, e);
            txtSearch.Focus();
            if (_isFromStatement == true && chkShowActpatient.Checked == true)
            {
                if (dgListView != null && dgListView.DataSource != null)
                {
                    DataView dv = (DataView)dgListView.DataSource;
                    if (dv != null)
                        dtPatientStList = dv.Table;
                }
            }

        }

        //private void rbICD10_CheckedChanged(object sender, EventArgs e)
        //{
        //    if (rbICD10.Checked == true)
        //    {
        //        if (dtSelected != null)
        //            dtSelected.Rows.Clear();
        //        if (_dtStoreDiagnosis != null)
        //            _dtStoreDiagnosis.Rows.Clear();   
        //        FillICD9ICD10();
        //        txtSearch.Focus();  
        //    }
        //}

        public bool IsAccountFeatureON()
        {
            gloDatabaseLayer.DBLayer oDB = new gloDatabaseLayer.DBLayer(_DatabaseConnectionString);
            bool Result = false;
            try
            {

                oDB.Connect(false);
                String strQuery = "Select ISNULL(sSettingValue,'false') from Settings_Replication Where sSettingName = 'Patient Account Feature'";
                object obj = oDB.ExecuteScalar_Query(strQuery);
                if (obj != null)
                {
                    Boolean.TryParse(obj.ToString(), out Result);
                    obj = null;
                }


            }
            catch (gloDatabaseLayer.DBException DBErr)
            {
                DBErr.ERROR_Log(DBErr.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString(), _MessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                oDB.Disconnect();
                oDB.Dispose();
                oDB = null;
            }
            return Result;
        }

        private void chkIncludeAllUsers_CheckedChanged(object sender, EventArgs e)
        {
            gloGeneralItem.gloItems _SelectedItemsTemp = new gloGeneralItem.gloItems();
            try
            {
                _IsReLoad = false;
                if (chkIncludeAllUsers.Checked)
                {
                    bchkIncludeAllUsers = true;
                }
                else
                {
                    bchkIncludeAllUsers = false;
                }


                gloGeneralItem.gloItem _oListItemTemp = null;

                for (int i = 0; i <= dgListView.Rows.Count - 1; i++)
                {
                    if (Convert.ToBoolean(dgListView.Rows[i].Cells[0].Value) == true)
                    {
                        _oListItemTemp = new gloGeneralItem.gloItem();
                        _oListItemTemp.ID = Convert.ToInt64(dgListView.Rows[i].Cells[1].Value);
                        _oListItemTemp.Description = Convert.ToString(dgListView.Rows[i].Cells[3].Value);
                        _SelectedItemsTemp.Add(_oListItemTemp);
                        _oListItemTemp.Dispose();
                    }
                }

                FillListAsCriteria(0);
                this.chkSelectAll.CheckedChanged -= new EventHandler(this.chkSelectAll_CheckedChanged);
                chkSelectAll.Checked = false;
                if (_SelectedItemsTemp != null)
                {
                    if (_SelectedItemsTemp.Count > 0)
                    {
                        int nSelCount;
                        for (nSelCount = 0; nSelCount <= _SelectedItemsTemp.Count - 1; nSelCount++)
                        {
                            for (int subCount = 0; subCount <= ((DataView)dgListView.DataSource).Table.Rows.Count - 1; subCount++)
                            {
                                if (Convert.ToInt64(dgListView.Rows[subCount].Cells[1].Value) == _SelectedItemsTemp[nSelCount].ID)
                                {
                                    dgListView.Rows[subCount].Cells[0].Value = true;
                                }
                            }
                        }
                    }
                }

                for (int j = 0; j <= dtSelected.Rows.Count - 1; j++)
                {
                    for (int subCount = 0; subCount <= ((DataView)dgListView.DataSource).Table.Rows.Count - 1; subCount++)
                    {
                        if (Convert.ToInt64(dgListView.Rows[subCount].Cells[1].Value) == Convert.ToInt64(dtSelected.Rows[j][0]))
                        {
                            dgListView.Rows[subCount].Cells[0].Value = true;
                        }
                    }
                }

                Int32 cnt = 0;
                for (int i = 0; i <= dgListView.Rows.Count - 1; i++)
                {
                    if (Convert.ToBoolean(dgListView.Rows[i].Cells[0].Value) == true)
                    {
                        cnt++;
                    }
                }
                if (dgListView.Rows.Count == cnt)
                {
                    chkSelectAll.Checked = true;

                }
                else
                {
                    chkSelectAll.Checked = false;
                }


            }
            catch (Exception ex)
            {
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex.ToString(), true);

            }
            finally
            {
                this.chkSelectAll.CheckedChanged += new EventHandler(this.chkSelectAll_CheckedChanged);
                _IsReLoad = true;
                if (_SelectedItemsTemp != null)
                {
                    _SelectedItemsTemp.Clear();
                    _SelectedItemsTemp.Dispose();
                    _SelectedItemsTemp = null;
                }
            }
        }
        ArrayList arrSSNColumnNames = new ArrayList();
        private void dgListView_CellFormatting(object sender, DataGridViewCellFormattingEventArgs e)
        {
            if (arrSSNColumnNames.Contains(dgListView.Columns[e.ColumnIndex].HeaderText.ToLower()))
            {
                if (e.Value != null && e.Value.ToString() != "")
                {
                    if (!(dgListView.CurrentCell != null && dgListView.IsCurrentCellInEditMode && dgListView.CurrentCell.RowIndex == e.RowIndex && dgListView.CurrentCell.ColumnIndex == e.ColumnIndex))
                    {
                        e.Value = e.Value.ToString().Replace("-", "");
                        e.Value = "*****" + e.Value.ToString().Substring(e.Value.ToString().Length - Math.Min(e.Value.ToString().Length, 4));
                        e.FormattingApplied = true;

                    }
                }
            }
        }

    }
}
