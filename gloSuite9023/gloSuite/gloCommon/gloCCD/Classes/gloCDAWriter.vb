Imports gloCCDSchema
Imports System.Windows.Forms
Imports System.IO
Imports System.IO.Compression
Imports System.Linq
Imports System.Text

Public Class gloCDAWriter
    Implements IDisposable
    Public mPatient As Patient

    ' IDisposable
    Dim _dtvitals As DataTable
    Dim oCodingSystemMaster As CodeSystemMaster
    Dim oTemplateIDMaster As TemplateIDMaster
    Dim _msgString As String = ""
    Dim _errormsg As String = "Error while writing CDA "
    Private _SelectedQRDAIFilePath As String = ""
    Private _SelectedFilePath As String = ""
    Private _IsExportSummary As Boolean = False
    Dim _CCDAPatientidentifier As String = ""
    Dim _OID As String = ""
    Dim _IsGroupReporting As Boolean = False
    Dim _IsACI As Boolean = False
    Dim dtsec As DataTable = Nothing
    Dim _ReportingYear As String = ""
    Dim _MediaType As String = ""
    Dim _ActualFileName As String = ""
    Public Property ActualFileName As String
        Get
            Return _ActualFileName
        End Get
        Set(value As String)
            _ActualFileName = value
        End Set
    End Property
    Public Property FileMediaType As String
        Get
            Return _MediaType
        End Get
        Set(value As String)
            _MediaType = value
        End Set
    End Property

    Public Property ReportingYear As String
        Get
            Return _ReportingYear
        End Get
        Set(value As String)
            _ReportingYear = value
        End Set
    End Property
    Public Property IsACI() As Boolean
        Get
            Return _IsACI
        End Get
        Set(ByVal value As Boolean)
            _IsACI = value
        End Set
    End Property
    Public Property IsGroupReporting() As Boolean
        Get
            Return _IsGroupReporting
        End Get
        Set(ByVal value As Boolean)
            _IsGroupReporting = value
        End Set
    End Property
    Public Property CCDAPatientidentifier() As String
        Get
            Return _CCDAPatientidentifier
        End Get
        Set(ByVal value As String)
            _CCDAPatientidentifier = value
        End Set
    End Property
    Public Property OID() As String
        Get
            Return _OID
        End Get
        Set(ByVal value As String)
            _OID = value
        End Set
    End Property
    Public Property msgString() As String
        Get
            Return _msgString
        End Get
        Set(ByVal value As String)
            _msgString = value
        End Set
    End Property
    Public Property IsExportSummary() As Boolean
        Get
            Return _IsExportSummary
        End Get
        Set(ByVal value As Boolean)
            _IsExportSummary = value
        End Set
    End Property
    Public Property SelectedFilePath() As String
        Get
            Return _SelectedFilePath
        End Get
        Set(ByVal value As String)
            _SelectedFilePath = value
        End Set
    End Property
    Public Property dtvitals() As DataTable
        Get
            Return _dtvitals
        End Get
        Set(ByVal value As DataTable)
            _dtvitals = value
        End Set
    End Property
    Dim _nQRDAFileType As Int32
    Public Property nQRDAFileType() As Int32
        Get
            Return _nQRDAFileType
        End Get
        Set(ByVal value As Int32)
            _nQRDAFileType = value
        End Set
    End Property
    Dim _CDAWritingParams As gloCDAWriterParameters
    Public Property CDAWritingParams() As gloCDAWriterParameters
        Get
            Return _CDAWritingParams
        End Get
        Set(ByVal value As gloCDAWriterParameters)
            _CDAWritingParams = value
        End Set
    End Property



#Region "IDisposable Support"
    Private disposedValue As Boolean ' To detect redundant calls

    ' IDisposable
    Protected Overridable Sub Dispose(ByVal disposing As Boolean)
        If Not Me.disposedValue Then
            If disposing Then

                If Not IsNothing(oCodingSystemMaster) Then
                    oCodingSystemMaster.Dispose()
                End If

                If Not IsNothing(oTemplateIDMaster) Then
                    oTemplateIDMaster.Dispose()
                End If

                ' TODO: dispose managed state (managed objects).
            End If

            ' TODO: free unmanaged resources (unmanaged objects) and override Finalize() below.
            ' TODO: set large fields to null.
        End If
        Me.disposedValue = True
    End Sub

    ' This code added by Visual Basic to correctly implement the disposable pattern.
    Public Sub Dispose() Implements IDisposable.Dispose
        ' Do not change this code.  Put cleanup code in Dispose(ByVal disposing As Boolean) above.
        Dispose(True)
        GC.SuppressFinalize(Me)
    End Sub
#End Region

    Private Function GetCDALegalAuthenticator() As POCD_MT000040UV02LegalAuthenticator
        Dim _legalAuthenticator As POCD_MT000040UV02LegalAuthenticator
        Dim oProvider As gloCCDLibrary.PatientProvider = Nothing
        Try

            'If Not IsNothing(mPatient.PatientProviders) AndAlso mPatient.PatientProviders.Count > 0 Then
            '    oProvider = mPatient.PatientProviders.Item(0)
            'End If
            'If IsNothing(oProvider) Then
            '    Return Nothing
            'End If

            'Legal Authenticator
            'If _isQRDA3 Then
            If _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then


                _legalAuthenticator = New POCD_MT000040UV02LegalAuthenticator
                _legalAuthenticator.typeCode = Nothing
                _legalAuthenticator.typeCodeSpecified = False
                _legalAuthenticator.contextControlCode = Nothing
                _legalAuthenticator.time = New TS()
                ''As per QualityNet After first validation on CMS

                _legalAuthenticator.time.value = DateTime.Now.ToString("yyyyMMddhhmmss") & Replace(DateTime.Now.ToString("zzzz"), ":", "")
                _legalAuthenticator.signatureCode = New CS()
                _legalAuthenticator.signatureCode.code = "S"
                _legalAuthenticator.signatureCode.codeSystem = Nothing
                _legalAuthenticator.signatureCode.codeSystemName = Nothing
                _legalAuthenticator.signatureCode.codeSystemVersion = Nothing
                _legalAuthenticator.signatureCode.displayName = Nothing
                _legalAuthenticator.assignedEntity = New POCD_MT000040UV02AssignedEntity()
                _legalAuthenticator.assignedEntity.classCode = Nothing
                _legalAuthenticator.assignedEntity.classCodeSpecified = False
                _legalAuthenticator.assignedEntity.id = New II(0) {}
                _legalAuthenticator.assignedEntity.id(0) = New II()
                _legalAuthenticator.assignedEntity.id(0).nullFlavor = Nothing
                ''As per QualityNet after first validation on CMS
                _legalAuthenticator.assignedEntity.id(0).root = System.Guid.NewGuid().ToString()
                _legalAuthenticator.assignedEntity.id(0).extension = Nothing
                _legalAuthenticator.assignedEntity.id(0).assigningAuthorityName = Nothing
                '_legalAuthenticator.assignedEntity.code = New CE()
                '_legalAuthenticator.assignedEntity.code.code = Nothing
                '_legalAuthenticator.assignedEntity.code.codeSystem = Nothing
                '_legalAuthenticator.assignedEntity.code.codeSystemName = Nothing
                '_legalAuthenticator.assignedEntity.code.displayName = Nothing
                '_legalAuthenticator.assignedEntity.code.codeSystemVersion = Nothing

                _legalAuthenticator.assignedEntity.representedOrganization = New POCD_MT000040UV02Organization
                _legalAuthenticator.assignedEntity.representedOrganization.id = New II(0) {}
                _legalAuthenticator.assignedEntity.representedOrganization.id(0) = New II
                _legalAuthenticator.assignedEntity.representedOrganization.id(0).assigningAuthorityName = Nothing

                ''As per QualityNet After first validation on CMS

                _legalAuthenticator.assignedEntity.representedOrganization.id(0).root = "1.1.1.1.1.1.1.1.2"
                _legalAuthenticator.assignedEntity.representedOrganization.id(0).extension = Nothing
                _legalAuthenticator.assignedEntity.representedOrganization.classCode = Nothing
                _legalAuthenticator.assignedEntity.representedOrganization.classCodeSpecified = False
                _legalAuthenticator.assignedEntity.representedOrganization.determinerCode = Nothing

            Else
                If Not IsNothing(mPatient.LoginProvider) AndAlso _nQRDAFileType <> CDAFileTypeEnum.QRDA1 Then
                    _legalAuthenticator = New POCD_MT000040UV02LegalAuthenticator
                    _legalAuthenticator.typeCode = Nothing
                    _legalAuthenticator.typeCodeSpecified = False
                    _legalAuthenticator.contextControlCode = Nothing
                    _legalAuthenticator.time = New TS()
                    ''As per QualityNet After first validation on CMS
                    _legalAuthenticator.time.value = DateTime.Now.ToString("yyyyMMddhhmmss") & Replace(DateTime.Now.ToString("zzzz"), ":", "")

                    _legalAuthenticator.signatureCode = New CS()
                    _legalAuthenticator.signatureCode.code = "S"
                    _legalAuthenticator.signatureCode.codeSystem = Nothing
                    _legalAuthenticator.signatureCode.codeSystemName = Nothing
                    _legalAuthenticator.signatureCode.codeSystemVersion = Nothing
                    _legalAuthenticator.signatureCode.displayName = Nothing
                    _legalAuthenticator.assignedEntity = New POCD_MT000040UV02AssignedEntity()
                    _legalAuthenticator.assignedEntity.classCode = Nothing
                    _legalAuthenticator.assignedEntity.classCodeSpecified = False
                    _legalAuthenticator.assignedEntity.id = New II(0) {}
                    _legalAuthenticator.assignedEntity.id(0) = New II()
                    _legalAuthenticator.assignedEntity.id(0).nullFlavor = Nothing
                    _legalAuthenticator.assignedEntity.id(0).root = "2.16.840.1.113883.4.6"
                    If mPatient.LoginProvider.NPI IsNot Nothing AndAlso mPatient.LoginProvider.NPI <> "" Then
                        _legalAuthenticator.assignedEntity.id(0).extension = mPatient.LoginProvider.NPI
                    Else
                        _legalAuthenticator.assignedEntity.id(0).extension = Nothing
                    End If

                    _legalAuthenticator.assignedEntity.id(0).assigningAuthorityName = Nothing
                    '_legalAuthenticator.assignedEntity.code = New CE()
                    '_legalAuthenticator.assignedEntity.code.code = "207QG0300X"
                    '_legalAuthenticator.assignedEntity.code.codeSystem = "2.16.840.1.113883.6.101"
                    '_legalAuthenticator.assignedEntity.code.codeSystemName = "NUCC"
                    '_legalAuthenticator.assignedEntity.code.displayName = "Adult Medicine"
                    '_legalAuthenticator.assignedEntity.code.codeSystemVersion = Nothing
                    _legalAuthenticator.assignedEntity.addr = New AD(0) {}
                    _legalAuthenticator.assignedEntity.addr(0) = New AD()
                    'TestMayuri
                    _legalAuthenticator.assignedEntity.addr(0).use = New PostalAddressUse(0) {}
                    _legalAuthenticator.assignedEntity.addr(0).use(0) = PostalAddressUse.WP
                    _legalAuthenticator.assignedEntity.addr(0).Items = New ADXP(4) {}
                    ' _legalAuthenticator.assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()
                    If mPatient.LoginProvider.StreetAddress IsNot Nothing AndAlso mPatient.LoginProvider.StreetAddress <> "" Then
                        _legalAuthenticator.assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()
                        _legalAuthenticator.assignedEntity.addr(0).Items(0).Text = New String() {mPatient.LoginProvider.StreetAddress}
                        _legalAuthenticator.assignedEntity.addr(0).Items(0).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(0).partType = Nothing
                    Else

                        _legalAuthenticator.assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()
                        _legalAuthenticator.assignedEntity.addr(0).Items(0).Text = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(0).nullFlavor = "NA"
                        _legalAuthenticator.assignedEntity.addr(0).Items(0).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(0).partType = Nothing
                    End If


                    '  _legalAuthenticator.assignedEntity.addr(0).Items(1) = New adxpcity()

                    'City
                    If mPatient.LoginProvider.City IsNot Nothing AndAlso mPatient.LoginProvider.City <> "" Then
                        _legalAuthenticator.assignedEntity.addr(0).Items(1) = New adxpcity()
                        _legalAuthenticator.assignedEntity.addr(0).Items(1).Text = New String() {mPatient.LoginProvider.City}
                        _legalAuthenticator.assignedEntity.addr(0).Items(1).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(1).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.addr(0).Items(1) = New adxpcity()
                        _legalAuthenticator.assignedEntity.addr(0).Items(1).Text = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(1).nullFlavor = "NA"

                        _legalAuthenticator.assignedEntity.addr(0).Items(1).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(1).partType = Nothing
                    End If

                    'State
                    If mPatient.LoginProvider.State IsNot Nothing AndAlso mPatient.LoginProvider.State <> "" Then
                        _legalAuthenticator.assignedEntity.addr(0).Items(2) = New adxpstate()
                        _legalAuthenticator.assignedEntity.addr(0).Items(2).Text = New String() {mPatient.LoginProvider.State}
                        _legalAuthenticator.assignedEntity.addr(0).Items(2).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(2).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.addr(0).Items(2) = New adxpstate()
                        _legalAuthenticator.assignedEntity.addr(0).Items(2).Text = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(2).nullFlavor = "NA"
                        _legalAuthenticator.assignedEntity.addr(0).Items(2).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(2).partType = Nothing
                    End If

                    'Zip Code
                    If mPatient.LoginProvider.zip IsNot Nothing AndAlso mPatient.LoginProvider.zip <> "" Then
                        _legalAuthenticator.assignedEntity.addr(0).Items(3) = New adxppostalCode()
                        _legalAuthenticator.assignedEntity.addr(0).Items(3).Text = New String() {mPatient.LoginProvider.zip}
                        _legalAuthenticator.assignedEntity.addr(0).Items(3).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(3).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.addr(0).Items(3) = New adxppostalCode()
                        _legalAuthenticator.assignedEntity.addr(0).Items(3).Text = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(3).nullFlavor = "NA"
                        _legalAuthenticator.assignedEntity.addr(0).Items(3).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(3).partType = Nothing
                    End If

                    'Country
                    If mPatient.LoginProvider.Country IsNot Nothing AndAlso mPatient.LoginProvider.Country <> "" Then
                        _legalAuthenticator.assignedEntity.addr(0).Items(4) = New adxpcountry()
                        _legalAuthenticator.assignedEntity.addr(0).Items(4).Text = New String() {mPatient.LoginProvider.Country}
                        _legalAuthenticator.assignedEntity.addr(0).Items(4).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(4).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.addr(0).Items(4) = New adxpcountry()
                        _legalAuthenticator.assignedEntity.addr(0).Items(4).Text = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(4).nullFlavor = "NA"
                        _legalAuthenticator.assignedEntity.addr(0).Items(4).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(4).partType = Nothing
                    End If

                    _legalAuthenticator.assignedEntity.telecom = New TEL(0) {}
                    _legalAuthenticator.assignedEntity.telecom(0) = New TEL()
                    'If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Then ''QRDA1
                    '    If oProvider.WorkPhone IsNot Nothing AndAlso oProvider.WorkPhone <> "" Then
                    '        _legalAuthenticator.assignedEntity.telecom(0).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(oProvider.WorkPhone))
                    '        _legalAuthenticator.assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.WP
                    '    Else
                    '        _legalAuthenticator.assignedEntity.telecom(0).nullFlavor = "NI"
                    '        _legalAuthenticator.assignedEntity.telecom(0).value = Nothing
                    '        _legalAuthenticator.assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.WP

                    '    End If
                    'Else
                    If mPatient.LoginProvider.WorkPhone IsNot Nothing AndAlso mPatient.LoginProvider.WorkPhone <> "" Then
                        _legalAuthenticator.assignedEntity.telecom(0).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(mPatient.LoginProvider.WorkPhone))
                        _legalAuthenticator.assignedEntity.telecom(0).use = New TelecommunicationAddressUse(0) {}
                        _legalAuthenticator.assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.WP
                    Else
                        _legalAuthenticator.assignedEntity.telecom(0).nullFlavor = "NI"
                        _legalAuthenticator.assignedEntity.telecom(0).value = Nothing


                    End If
                    _legalAuthenticator.assignedEntity.telecom(0).use = New TelecommunicationAddressUse(0) {}
                    _legalAuthenticator.assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.WP
                    'End If



                    _legalAuthenticator.assignedEntity.assignedPerson = New POCD_MT000040UV02Person()
                    _legalAuthenticator.assignedEntity.assignedPerson.classCode = Nothing
                    _legalAuthenticator.assignedEntity.assignedPerson.classCodeSpecified = False
                    _legalAuthenticator.assignedEntity.assignedPerson.determinerCode = Nothing
                    _legalAuthenticator.assignedEntity.assignedPerson.name = New PN(0) {}
                    _legalAuthenticator.assignedEntity.assignedPerson.name(0) = New PN()
                    _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items = New ENXP(4) {}


                    If mPatient.LoginProvider.Prefix IsNot Nothing AndAlso mPatient.LoginProvider.Prefix <> "" Then
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0) = New enprefix()
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0).Text = New String() {mPatient.LoginProvider.Prefix}
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0).language = Nothing
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0) = Nothing
                    End If

                    If mPatient.LoginProvider.FirstName IsNot Nothing AndAlso mPatient.LoginProvider.FirstName <> "" Then
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1) = New engiven()
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1).Text = New String() {mPatient.LoginProvider.FirstName}
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1).language = Nothing
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1) = Nothing
                    End If

                    If mPatient.LoginProvider.MiddleName IsNot Nothing AndAlso mPatient.LoginProvider.MiddleName <> "" Then
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2) = New engiven()
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2).Text = New String() {mPatient.LoginProvider.MiddleName}

                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2).language = Nothing
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2) = Nothing
                    End If


                    If mPatient.LoginProvider.LastName IsNot Nothing AndAlso mPatient.LoginProvider.LastName <> "" Then
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(3) = New enfamily()
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(3).Text = New String() {mPatient.LoginProvider.LastName}
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(3).language = Nothing
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(3).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(3) = Nothing
                    End If



                    If mPatient.LoginProvider.Suffix IsNot Nothing AndAlso mPatient.LoginProvider.Suffix <> "" Then
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(4) = New ensuffix()
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(4).Text = New String() {mPatient.LoginProvider.Suffix}
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(4).language = Nothing
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(4).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(4) = Nothing
                    End If
                Else
                    If Not IsNothing(mPatient.PatientProviders) AndAlso mPatient.PatientProviders.Count > 0 Then
                        oProvider = mPatient.PatientProviders.Item(0)
                    End If
                    _legalAuthenticator = New POCD_MT000040UV02LegalAuthenticator
                    _legalAuthenticator.typeCode = Nothing
                    _legalAuthenticator.typeCodeSpecified = False
                    _legalAuthenticator.contextControlCode = Nothing
                    _legalAuthenticator.time = New TS()
                    ''As per QualityNet After first validation on CMS
                    _legalAuthenticator.time.value = DateTime.Now.ToString("yyyyMMddhhmmss") & Replace(DateTime.Now.ToString("zzzz"), ":", "")

                    _legalAuthenticator.signatureCode = New CS()
                    _legalAuthenticator.signatureCode.code = "S"
                    _legalAuthenticator.signatureCode.codeSystem = Nothing
                    _legalAuthenticator.signatureCode.codeSystemName = Nothing
                    _legalAuthenticator.signatureCode.codeSystemVersion = Nothing
                    _legalAuthenticator.signatureCode.displayName = Nothing
                    _legalAuthenticator.assignedEntity = New POCD_MT000040UV02AssignedEntity()
                    _legalAuthenticator.assignedEntity.classCode = Nothing
                    _legalAuthenticator.assignedEntity.classCodeSpecified = False
                    _legalAuthenticator.assignedEntity.id = New II(0) {}
                    _legalAuthenticator.assignedEntity.id(0) = New II()
                    _legalAuthenticator.assignedEntity.id(0).nullFlavor = Nothing
                    _legalAuthenticator.assignedEntity.id(0).root = "2.16.840.1.113883.4.6"
                    If oProvider.NPI IsNot Nothing AndAlso oProvider.NPI <> "" Then
                        _legalAuthenticator.assignedEntity.id(0).extension = oProvider.NPI
                    Else
                        _legalAuthenticator.assignedEntity.id(0).extension = Nothing
                    End If

                    _legalAuthenticator.assignedEntity.id(0).assigningAuthorityName = Nothing
                    '_legalAuthenticator.assignedEntity.code = New CE()
                    '_legalAuthenticator.assignedEntity.code.code = "207QG0300X"
                    '_legalAuthenticator.assignedEntity.code.codeSystem = "2.16.840.1.113883.6.101"
                    '_legalAuthenticator.assignedEntity.code.codeSystemName = "NUCC"
                    '_legalAuthenticator.assignedEntity.code.displayName = "Adult Medicine"
                    '_legalAuthenticator.assignedEntity.code.codeSystemVersion = Nothing
                    _legalAuthenticator.assignedEntity.addr = New AD(0) {}
                    _legalAuthenticator.assignedEntity.addr(0) = New AD()
                    _legalAuthenticator.assignedEntity.addr(0).use = New PostalAddressUse(0) {}
                    _legalAuthenticator.assignedEntity.addr(0).use(0) = PostalAddressUse.WP
                    _legalAuthenticator.assignedEntity.addr(0).Items = New ADXP(4) {}
                    ' _legalAuthenticator.assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()
                    If oProvider.StreetAddress IsNot Nothing AndAlso oProvider.StreetAddress <> "" Then
                        _legalAuthenticator.assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()
                        _legalAuthenticator.assignedEntity.addr(0).Items(0).Text = New String() {oProvider.StreetAddress}
                        _legalAuthenticator.assignedEntity.addr(0).Items(0).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(0).partType = Nothing
                    Else

                        _legalAuthenticator.assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()
                        _legalAuthenticator.assignedEntity.addr(0).Items(0).Text = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(0).nullFlavor = "NA"
                        _legalAuthenticator.assignedEntity.addr(0).Items(0).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(0).partType = Nothing
                    End If


                    '  _legalAuthenticator.assignedEntity.addr(0).Items(1) = New adxpcity()

                    'City
                    If oProvider.City IsNot Nothing AndAlso oProvider.City <> "" Then
                        _legalAuthenticator.assignedEntity.addr(0).Items(1) = New adxpcity()
                        _legalAuthenticator.assignedEntity.addr(0).Items(1).Text = New String() {oProvider.City}
                        _legalAuthenticator.assignedEntity.addr(0).Items(1).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(1).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.addr(0).Items(1) = New adxpcity()
                        _legalAuthenticator.assignedEntity.addr(0).Items(1).Text = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(1).nullFlavor = "NA"
                        _legalAuthenticator.assignedEntity.addr(0).Items(1).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(1).partType = Nothing
                    End If

                    'State
                    If oProvider.State IsNot Nothing AndAlso oProvider.State <> "" Then
                        _legalAuthenticator.assignedEntity.addr(0).Items(2) = New adxpstate()
                        _legalAuthenticator.assignedEntity.addr(0).Items(2).Text = New String() {oProvider.State}
                        _legalAuthenticator.assignedEntity.addr(0).Items(2).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(2).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.addr(0).Items(2) = New adxpstate()
                        _legalAuthenticator.assignedEntity.addr(0).Items(2).Text = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(2).nullFlavor = "NA"
                        _legalAuthenticator.assignedEntity.addr(0).Items(2).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(2).partType = Nothing
                    End If

                    'Zip Code
                    If oProvider.zip IsNot Nothing AndAlso oProvider.zip <> "" Then
                        _legalAuthenticator.assignedEntity.addr(0).Items(3) = New adxppostalCode()
                        _legalAuthenticator.assignedEntity.addr(0).Items(3).Text = New String() {oProvider.zip}
                        _legalAuthenticator.assignedEntity.addr(0).Items(3).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(3).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.addr(0).Items(3) = New adxppostalCode()
                        _legalAuthenticator.assignedEntity.addr(0).Items(3).Text = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(3).nullFlavor = "NA"
                        _legalAuthenticator.assignedEntity.addr(0).Items(3).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(3).partType = Nothing
                    End If

                    'Country
                    If oProvider.Country IsNot Nothing AndAlso oProvider.Country <> "" Then
                        _legalAuthenticator.assignedEntity.addr(0).Items(4) = New adxpcountry()
                        _legalAuthenticator.assignedEntity.addr(0).Items(4).Text = New String() {oProvider.Country}
                        _legalAuthenticator.assignedEntity.addr(0).Items(4).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(4).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.addr(0).Items(4) = New adxpcountry()
                        _legalAuthenticator.assignedEntity.addr(0).Items(4).Text = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(4).nullFlavor = "NA"
                        _legalAuthenticator.assignedEntity.addr(0).Items(4).language = Nothing
                        _legalAuthenticator.assignedEntity.addr(0).Items(4).partType = Nothing
                    End If

                    _legalAuthenticator.assignedEntity.telecom = New TEL(0) {}
                    _legalAuthenticator.assignedEntity.telecom(0) = New TEL()
                    'If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Then ''QRDA1
                    '    If oProvider.WorkPhone IsNot Nothing AndAlso oProvider.WorkPhone <> "" Then
                    '        _legalAuthenticator.assignedEntity.telecom(0).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(oProvider.WorkPhone))
                    '        _legalAuthenticator.assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.WP
                    '    Else
                    '        _legalAuthenticator.assignedEntity.telecom(0).nullFlavor = "NI"
                    '        _legalAuthenticator.assignedEntity.telecom(0).value = Nothing
                    '        _legalAuthenticator.assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.WP

                    '    End If
                    'Else
                    If oProvider.WorkPhone IsNot Nothing AndAlso oProvider.WorkPhone <> "" Then
                        _legalAuthenticator.assignedEntity.telecom(0).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(oProvider.WorkPhone))
                        _legalAuthenticator.assignedEntity.telecom(0).use = New TelecommunicationAddressUse(0) {}
                        _legalAuthenticator.assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.WP
                    Else
                        _legalAuthenticator.assignedEntity.telecom(0).nullFlavor = "NI"
                        _legalAuthenticator.assignedEntity.telecom(0).value = Nothing


                    End If
                    _legalAuthenticator.assignedEntity.telecom(0).use = New TelecommunicationAddressUse(0) {}
                    _legalAuthenticator.assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.WP
                    'End If



                    _legalAuthenticator.assignedEntity.assignedPerson = New POCD_MT000040UV02Person()
                    _legalAuthenticator.assignedEntity.assignedPerson.classCode = Nothing
                    _legalAuthenticator.assignedEntity.assignedPerson.classCodeSpecified = False
                    _legalAuthenticator.assignedEntity.assignedPerson.determinerCode = Nothing
                    _legalAuthenticator.assignedEntity.assignedPerson.name = New PN(0) {}
                    _legalAuthenticator.assignedEntity.assignedPerson.name(0) = New PN()
                    _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items = New ENXP(4) {}


                    If oProvider.Prefix IsNot Nothing AndAlso oProvider.Prefix <> "" Then
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0) = New enprefix()
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0).Text = New String() {oProvider.Prefix}
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0).language = Nothing
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0) = Nothing
                    End If

                    If oProvider.FirstName IsNot Nothing AndAlso oProvider.FirstName <> "" Then
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1) = New engiven()
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1).Text = New String() {oProvider.FirstName}
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1).language = Nothing
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1) = Nothing
                    End If

                    If oProvider.MiddleName IsNot Nothing AndAlso oProvider.MiddleName <> "" Then
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2) = New engiven()
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2).Text = New String() {oProvider.MiddleName}

                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2).language = Nothing
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2) = Nothing
                    End If


                    If oProvider.LastName IsNot Nothing AndAlso oProvider.LastName <> "" Then
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(3) = New enfamily()
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(3).Text = New String() {oProvider.LastName}
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(3).language = Nothing
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(3).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(3) = Nothing
                    End If



                    If oProvider.Suffix IsNot Nothing AndAlso oProvider.Suffix <> "" Then
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(4) = New ensuffix()
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(4).Text = New String() {oProvider.Suffix}
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(4).language = Nothing
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(4).partType = Nothing
                    Else
                        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(4) = Nothing
                    End If
                End If




            End If



            '_legalAuthenticator = New POCD_MT000040LegalAuthenticator
            '_legalAuthenticator.typeCode = Nothing
            '_legalAuthenticator.contextControlCode = Nothing
            '_legalAuthenticator.time = New TS()
            '_legalAuthenticator.time.value = DateTime.Now.ToString("yyyyMMddmmss") & "00"
            '_legalAuthenticator.signatureCode = New CS()
            '_legalAuthenticator.signatureCode.code = "S"
            '_legalAuthenticator.signatureCode.codeSystem = Nothing
            '_legalAuthenticator.signatureCode.codeSystemName = Nothing
            '_legalAuthenticator.signatureCode.codeSystemVersion = Nothing
            '_legalAuthenticator.signatureCode.displayName = Nothing
            '_legalAuthenticator.assignedEntity = New POCD_MT000040UV02AssignedEntity()
            '_legalAuthenticator.assignedEntity.classCode = Nothing
            '_legalAuthenticator.assignedEntity.id = New II(0) {}
            '_legalAuthenticator.assignedEntity.id(0) = New II()
            '_legalAuthenticator.assignedEntity.id(0).nullFlavor = Nothing
            '_legalAuthenticator.assignedEntity.id(0).root = "2.16.840.1.113883.4.6"
            '_legalAuthenticator.assignedEntity.id(0).extension = "12345"
            '_legalAuthenticator.assignedEntity.id(0).assigningAuthorityName = Nothing
            '_legalAuthenticator.assignedEntity.code = New CE()
            '_legalAuthenticator.assignedEntity.code.code = "207QG0300X"
            '_legalAuthenticator.assignedEntity.code.codeSystem = "2.16.840.1.113883.6.101"
            '_legalAuthenticator.assignedEntity.code.codeSystemName = "NUCC"
            '_legalAuthenticator.assignedEntity.code.displayName = "Adult Medicine"
            '_legalAuthenticator.assignedEntity.code.codeSystemVersion = Nothing
            '_legalAuthenticator.assignedEntity.addr = New AD(0) {}
            '_legalAuthenticator.assignedEntity.addr(0) = New AD()
            '_legalAuthenticator.assignedEntity.addr(0).Items = New ADXP(4) {}
            '_legalAuthenticator.assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()
            '_legalAuthenticator.assignedEntity.addr(0).Items(0).Text = New String() {("Address" + " " + "Address2").Trim()}
            '_legalAuthenticator.assignedEntity.addr(0).Items(0).language = Nothing
            '_legalAuthenticator.assignedEntity.addr(0).Items(0).partType = Nothing
            '_legalAuthenticator.assignedEntity.addr(0).Items(1) = New adxpcity()
            '_legalAuthenticator.assignedEntity.addr(0).Items(1).Text = New String() {"Springfield"}
            '_legalAuthenticator.assignedEntity.addr(0).Items(1).language = Nothing
            '_legalAuthenticator.assignedEntity.addr(0).Items(1).partType = Nothing
            '_legalAuthenticator.assignedEntity.addr(0).Items(2) = New adxpstate()
            '_legalAuthenticator.assignedEntity.addr(0).Items(2).Text = New String() {"VA"} 'StateCode
            '_legalAuthenticator.assignedEntity.addr(0).Items(2).language = Nothing
            '_legalAuthenticator.assignedEntity.addr(0).Items(2).partType = Nothing
            '_legalAuthenticator.assignedEntity.addr(0).Items(3) = New adxppostalCode()
            '_legalAuthenticator.assignedEntity.addr(0).Items(3).Text = New String() {"42130"}  'Zip Code
            '_legalAuthenticator.assignedEntity.addr(0).Items(3).language = Nothing
            '_legalAuthenticator.assignedEntity.addr(0).Items(3).partType = Nothing
            '_legalAuthenticator.assignedEntity.addr(0).Items(4) = New adxpcountry()
            '_legalAuthenticator.assignedEntity.addr(0).Items(4).Text = New String() {"US"}  'Country Code
            '_legalAuthenticator.assignedEntity.addr(0).Items(4).language = Nothing
            '_legalAuthenticator.assignedEntity.addr(0).Items(4).partType = Nothing
            '_legalAuthenticator.assignedEntity.telecom = New TEL(0) {}
            '_legalAuthenticator.assignedEntity.telecom(0) = New TEL()
            '_legalAuthenticator.assignedEntity.telecom(0).value = "tel:+1(571)555-0179;ext=221"
            '_legalAuthenticator.assignedEntity.telecom(0).use = Nothing
            '_legalAuthenticator.assignedEntity.assignedPerson = New POCD_MT000040UV02Person()
            '_legalAuthenticator.assignedEntity.assignedPerson.classCode = Nothing
            '_legalAuthenticator.assignedEntity.assignedPerson.determinerCode = Nothing
            '_legalAuthenticator.assignedEntity.assignedPerson.name = New PN(0) {}
            '_legalAuthenticator.assignedEntity.assignedPerson.name(0) = New PN()
            '_legalAuthenticator.assignedEntity.assignedPerson.name(0).Items = New ENXP(2) {}
            '_legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0) = New enfamily()
            '_legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0).Text = New String() {"Boccino"}
            '_legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0).language = Nothing
            '_legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0).partType = Nothing
            '_legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1) = New engiven()
            '_legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1).Text = New String() {"Raymond"}
            '_legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1).language = Nothing
            '_legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1).partType = Nothing
            '_legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2) = New ensuffix()
            '_legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2).Text = New String() {"MD"}
            '_legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2).language = Nothing
            '_legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2).partType = Nothing

            Return _legalAuthenticator
        Catch ex As Exception
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            If Not IsNothing(oProvider) Then
                oProvider.Dispose()
                oProvider = Nothing
            End If
        End Try
    End Function


    Public Function GeneratePatientCDA(ByVal _FinalCDAFilePath As String, ByVal PatientLastName As String, Optional ByVal Patientcode As String = "", Optional ByVal base64string As String = "") As String
        Dim strfilepath As String = ""
        Dim CDADoc As New POCD_MT000040UV02ClinicalDocument()
        oCodingSystemMaster = New CodeSystemMaster
        oTemplateIDMaster = New TemplateIDMaster

        Try
            
        
            'Set Clinic Information - End 
            If _FinalCDAFilePath <> "" Then
                strfilepath = _FinalCDAFilePath
            Else
                strfilepath = GenerateFileName("", "", Patientcode)
            End If
            'Header
            CDADoc = GetCDAInitialization()

            'recordTarget
            CDADoc.recordTarget = New POCD_MT000040UV02RecordTarget(0) {}
            CDADoc.recordTarget(0) = GetCDARecordTarget()


            'author
            CDADoc.author = New POCD_MT000040UV02Author(0) {}
            CDADoc.author(0) = GetCDAAuthor()

            'custodian
            CDADoc.custodian = New POCD_MT000040UV02Custodian
            CDADoc.custodian = GetCDACustodian()

            'documentationOf
            CDADoc.documentationOf = New POCD_MT000040UV02DocumentationOf(0) {}
            CDADoc.documentationOf(0) = GetCDAdocumentationOf()

            'componentOf
            CDADoc.componentOf = New POCD_MT000040UV02Component1()
            CDADoc.componentOf = GetCDAcomponentOf()

            ''            
            ''CDADoc.component = New POCD_MT000040UV02Component2()
            ''CDADoc.component = GetCDAPurposeOfUseComponent()

            ''_moduleData = GetCDAPurposeOfUseComponent()
            ''_moduleData.typeCodeSpecified = False
            ''If Not IsNothing(_moduleData) Then
            ''    _moduleList.Add(_moduleData)
            ''End If
            ''_moduleData = Nothing
            ''

            If _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                CDADoc.informationRecipient = New POCD_MT000040UV02Participant(0) {}
                CDADoc.informationRecipient(0) = GetCDAinformationRecipient()

            End If


            'CDA Body
            CDADoc.component = New POCD_MT000040UV02Component2
            CDADoc.component = GetCDAComponent(base64string)
            'Dim _component2 As POCD_MT000040Component2 = Nothing
            '_component2 = New POCD_MT000040Component2
            '_component2.Item = New POCD_MT000040UV02NonXMLBody()
            'Dim _NonXML As POCD_MT000040UV02NonXMLBody = Nothing
            '_NonXML = _component2.Item
            'DirectCast(_component2.Item, POCD_MT000040UV02NonXMLBody).classCode = "DOCBODY"
            'DirectCast(_component2.Item, POCD_MT000040UV02NonXMLBody).moodCode = "EVN"
            '_NonXML.text = New ED()
            '_NonXML.text.representation = "B64"
            '_NonXML.text.mediaType = "application/pdf"
            '_NonXML.text.language = Nothing
            'Dim str As String = ConvertBase64ToPDF("\\glosvr01\\gloDocuments\\gloSuite 8070\\gloEMR\\CCDA Files\\Attachments\\Untitled.jpg")
            '_NonXML.text.Text = New String() {str}

            'CDADoc.component.Item = _component2.Item
            ''dataEnterer
            'CDADoc.dataEnterer = New POCD_MT000040UV02DataEnterer

            CDADoc.dataEnterer = GetCDADataEnterer()

            ''informationRecipient
            'CDADoc.informationRecipient = New POCD_MT000040InformationRecipient(0) {}
            'CDADoc.informationRecipient(0) = GetCDAinforecepient()

            ''legalAuthenticator
            CDADoc.legalAuthenticator = New POCD_MT000040UV02LegalAuthenticator(0) {}
            CDADoc.legalAuthenticator(0) = GetCDALegalAuthenticator()

            ''participant
            'CDADoc.participant = New POCD_MT000040Participant1(0) {}
            'CDADoc.participant(0) = GetCDAParticipant()



            Try
                'CDADoc.author = Nothing
                'If _CDAWritingParams.CDAFileType = CDAFileTypeEnum.UnstructuredCDA Then
                '    CDAWritingParams.StyleSheetPath = "TRIACDA.xsl"
                'End If

                gloSerialization.SetClinicalDocument(strfilepath, CDADoc, CDAWritingParams.StyleSheetPath, IsIntuit)

            Catch ex As Exception
                gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
                ex = Nothing
                Return ""
            End Try
            'If _msgString <> "" Then
            '    MessageBox.Show(_msgString, "gloEMR", MessageBoxButtons.OK, MessageBoxIcon.Error)
            'End If
        Catch ex As Exception
            ' MessageBox.Show(ex.ToString, "gloEMR", MessageBoxButtons.OK, MessageBoxIcon.Error)
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return ""
        Finally
            If Not IsNothing(CDADoc.recordTarget(0)) Then
                CDADoc.recordTarget(0) = Nothing
            End If
            If Not IsNothing(CDADoc.author(0)) Then
                CDADoc.author(0) = Nothing
            End If
            If Not IsNothing(CDADoc.custodian) Then
                CDADoc.custodian = Nothing
            End If
            If Not IsNothing(CDADoc.component) Then
                CDADoc.component = Nothing
            End If
            If Not IsNothing(CDADoc) Then
                CDADoc = Nothing
            End If
            If Not IsNothing(oCodingSystemMaster) Then
                oCodingSystemMaster.Dispose()
                oCodingSystemMaster = Nothing
            End If
            If Not IsNothing(oTemplateIDMaster) Then
                oTemplateIDMaster.Dispose()
                oTemplateIDMaster = Nothing
            End If
            If Not IsNothing(dtvitals) Then
                dtvitals.Dispose()
                dtvitals = Nothing
            End If
            If Not IsNothing(_dtvitals) Then
                _dtvitals.Dispose()
                _dtvitals = Nothing
            End If
        End Try

        Return strfilepath
    End Function
    Private Function ConvertBase64ToPDF(ByVal strFilpath As String) As String
        'Dim in_fs As FileStream = New FileInfo(strFilpath).OpenRead
        'Dim out_fs As FileStream = File.Create("D:\\def.cmp")
        'in_fs.CopyTo(New DeflateStream(out_fs, CompressionMode.Compress))
        'in_fs.Close()
        'out_fs.Close()


        'Dim arrByte As Byte() = ConvertFiletoBinary(out_fs.Name)
        Dim arrByte As Byte() = ConvertFiletoBinary(strFilpath)
        Dim strData As String = Convert.ToBase64String(arrByte)
        arrByte = Nothing
        Return strData
    End Function
    Private Sub Compress(ByVal fi As FileInfo)
        Using inFile As FileStream = fi.OpenRead()
            If (File.GetAttributes(fi.FullName) And FileAttributes.Hidden) _
                <> FileAttributes.Hidden And fi.Extension <> ".cmp" Then
                Using outFile As FileStream = File.Create(fi.FullName + ".cmp")
                    Using Compress As DeflateStream = New DeflateStream(outFile, CompressionMode.Compress)
                        inFile.CopyTo(Compress)
                        Console.WriteLine("Compressed {0} from {1} to {2} bytes.", _
                          fi.Name, fi.Length.ToString(), outFile.Length.ToString())
                    End Using
                    Try
                        outFile.Close() 'SLR file to be closed
                    Catch

                    End Try
                End Using
            End If
            Try
                inFile.Close() 'SLR file to be closed
            Catch

            End Try
        End Using
    End Sub

    Public Function GenerateFileName(Optional ByVal PatientLastName As String = "", Optional ByVal PatientFirstName As String = "", Optional ByVal PatientCode As String = "") As String
        Dim strfilename As String = ""

        Dim dtdate As DateTime = Date.UtcNow
        Dim strtemp As String
        Try
            If _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then
                strfilename = "QRDAIII_"
            ElseIf _nQRDAFileType = CDAFileTypeEnum.QRDA1 Then
                ' strfilename = "QRDAI_"
            ElseIf _nQRDAFileType = CDAFileTypeEnum.UnstructuredCDA Then
                strfilename = "CDA_US_"
            Else
                strfilename = "CDA_"
            End If
            If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Then
                strtemp = PatientFirstName & "_" & PatientLastName & "_" & dtdate.Month.ToString & dtdate.Day.ToString & dtdate.Year.ToString & dtdate.Hour.ToString & dtdate.Minute.ToString & dtdate.Second.ToString & dtdate.Millisecond.ToString
            ElseIf _nQRDAFileType = CDAFileTypeEnum.UnstructuredCDA Then
                strtemp = strfilename & PatientCode & "_" & "(" & ActualFileName & ")"
            Else
                If PatientCode = "" Then
                    If PatientLastName = "" Then
                        strtemp = strfilename & dtdate.Month.ToString & dtdate.Day.ToString & dtdate.Year.ToString & dtdate.Hour.ToString & dtdate.Minute.ToString & dtdate.Second.ToString & dtdate.Millisecond.ToString
                    Else
                        strtemp = strfilename & PatientLastName & "_" & dtdate.Month.ToString & dtdate.Day.ToString & dtdate.Year.ToString & dtdate.Hour.ToString & dtdate.Minute.ToString & dtdate.Second.ToString & dtdate.Millisecond.ToString
                    End If
                Else
                    strtemp = strfilename & PatientCode & "_" & dtdate.Month.ToString & dtdate.Day.ToString & dtdate.Year.ToString & dtdate.Hour.ToString & dtdate.Minute.ToString & dtdate.Second.ToString & dtdate.Millisecond.ToString
                End If
            End If

            '  strtemp = strfilename & dtdate.ToString("MMddyyyy_hhmmss")

            '09-Dec-13 Aniket: Resolving Bug #60681
            strtemp = Replace(strtemp, """", "")

            If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Then
                strfilename = SelectedQRDAIFilePath & strtemp & ".xml"
            ElseIf _IsExportSummary Then
                strfilename = SelectedFilePath & strtemp & ".xml"
            Else

                strfilename = gloLibCCDGeneral.CCDFileGenerationPath & strtemp & ".xml"
            End If
            ''
            '  If _IsExportSummary Then
            Dim i As Integer = 0
            Dim _Path() As String
            Dim path As String = ""
            Dim oFileInfo1 As System.IO.FileInfo
            oFileInfo1 = New System.IO.FileInfo(strfilename)
            Do While oFileInfo1.Exists
                oFileInfo1 = New System.IO.FileInfo(strfilename)
                If oFileInfo1.Exists Then
                    strfilename = strfilename.Replace(".xml", "")
                    If strfilename.Contains("-") Then
                        _Path = strfilename.Split("-")
                        If _Path.Length > 1 Then
                            path = _Path(0)
                        End If
                    Else
                        path = strfilename
                    End If
                    i += 1
                    strfilename = path & "-" & i & ".xml"
                Else
                    Exit Do
                End If
            Loop
            '  End If

            ''
        Catch ex As Exception
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return ""
        Finally
            dtdate = Nothing
            strtemp = Nothing
        End Try

        Return strfilename
    End Function
    Private Function GetCDAInitialization() As POCD_MT000040UV02ClinicalDocument
        Try

            ''Dim sVal As String = ""
            Dim CDADoc As New POCD_MT000040UV02ClinicalDocument()

            CDADoc.realmCode = New CS(0) {}
            CDADoc.realmCode(0) = New CS()
            CDADoc.realmCode(0).code = "US"
            CDADoc.realmCode(0).codeSystem = Nothing
            CDADoc.realmCode(0).codeSystemName = Nothing
            CDADoc.realmCode(0).codeSystemVersion = Nothing
            CDADoc.realmCode(0).displayName = Nothing
            CDADoc.typeId = New POCD_MT000040UV02InfrastructureRoottypeId()
            CDADoc.typeId.root = "2.16.840.1.113883.1.3"
            CDADoc.typeId.extension = "POCD_HD000040"
            CDADoc.typeId.assigningAuthorityName = Nothing
            If _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then
                CDADoc.templateId = New II(1) {}
                CDADoc.templateId(0) = New II()
                CDADoc.templateId(0).root = "2.16.840.1.113883.10.20.27.1.1"
                CDADoc.templateId(0).extension = "2017-06-01"
                CDADoc.templateId(0).assigningAuthorityName = Nothing


                ''As per Quality net standards
                CDADoc.templateId(1) = New II()
                CDADoc.templateId(1).root = "2.16.840.1.113883.10.20.27.1.2"
                CDADoc.templateId(1).extension = "2017-07-01"
                CDADoc.templateId(1).assigningAuthorityName = Nothing


                CDADoc.id = New II()
                CDADoc.id.root = Guid.NewGuid().ToString()
                CDADoc.id.assigningAuthorityName = Nothing
                CDADoc.id.extension = Nothing
                CDADoc.code = New CE()
                CDADoc.code.code = "55184-6"
                CDADoc.code.codeSystem = CodeSystem.LOINC
                CDADoc.code.codeSystemName = "LOINC"
                CDADoc.code.displayName = "Quality Reporting Document Architecture Calculated Summary Report"
                CDADoc.code.codeSystemVersion = Nothing

                '<title>orgname Continuity of Care Document</title>
                CDADoc.title = New ST()
                CDADoc.title.Text = New String() {"QRDA Calculated Summary Report"}
                CDADoc.title.language = Nothing
                CDADoc.title.mediaType = Nothing
                CDADoc.title.representation = Nothing
            ElseIf _nQRDAFileType = CDAFileTypeEnum.QRDA1 Then
                CDADoc.templateId = New II(3) {}
                CDADoc.templateId(0) = New II()
                CDADoc.templateId(0).root = "2.16.840.1.113883.10.20.22.1.1"
                CDADoc.templateId(0).extension = "2014-06-09"
                CDADoc.templateId(0).assigningAuthorityName = Nothing

                CDADoc.templateId(1) = New II()
                CDADoc.templateId(1).root = "2.16.840.1.113883.10.20.24.1.1"
                CDADoc.templateId(1).extension = "2014-12-01"
                CDADoc.templateId(1).assigningAuthorityName = Nothing

                CDADoc.templateId(2) = New II()
                CDADoc.templateId(2).root = "2.16.840.1.113883.10.20.24.1.2"
                CDADoc.templateId(2).extension = "2014-12-01"
                CDADoc.templateId(2).assigningAuthorityName = Nothing

                ''As per CMS
                CDADoc.templateId(3) = New II()
                CDADoc.templateId(3).root = "2.16.840.1.113883.10.20.24.1.3"
                CDADoc.templateId(3).extension = "2015-07-01"
                CDADoc.templateId(3).assigningAuthorityName = Nothing
                ''End As per CMS
                CDADoc.id = New II()
                CDADoc.id.root = Guid.NewGuid().ToString()
                CDADoc.id.assigningAuthorityName = Nothing
                CDADoc.id.extension = Nothing
                CDADoc.code = New CE()
                CDADoc.code.code = "55182-0"
                CDADoc.code.codeSystem = CodeSystem.LOINC
                CDADoc.code.codeSystemName = "LOINC"
                CDADoc.code.displayName = "Quality Measure Report"
                CDADoc.code.codeSystemVersion = Nothing

                '<title>orgname Continuity of Care Document</title>
                CDADoc.title = New ST()
                CDADoc.title.Text = New String() {"QRDA Incidence Report"}
                CDADoc.title.language = Nothing
                ''CMS QRDAI
                CDADoc.title.mediaType = Nothing
                CDADoc.title.representation = Nothing
            ElseIf _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Then
                CDADoc.templateId = New II(4) {}
                CDADoc.templateId(0) = New II()
                CDADoc.templateId(0).root = "2.16.840.1.113883.10.20.22.1.1"
                CDADoc.templateId(0).extension = _DateExtension2015
                CDADoc.templateId(0).assigningAuthorityName = Nothing


                CDADoc.templateId(1) = New II()
                CDADoc.templateId(1).root = "2.16.840.1.113883.10.20.22.1.1"
                CDADoc.templateId(1).extension = Nothing
                CDADoc.templateId(1).assigningAuthorityName = Nothing


                CDADoc.templateId(2) = New II()
                CDADoc.templateId(2).root = "2.16.840.1.113883.10.20.22.1.14"
                CDADoc.templateId(2).extension = _DateExtension2015
                CDADoc.templateId(2).assigningAuthorityName = Nothing


                CDADoc.templateId(3) = New II()
                CDADoc.templateId(3).root = "2.16.840.1.113883.10.20.22.1.14"
                CDADoc.templateId(3).extension = Nothing
                CDADoc.templateId(3).assigningAuthorityName = Nothing

                '----
                If gloLibCCDGeneral.sConfidentialityCode.ToLower = "restricted" Then
                    CDADoc.templateId(2) = New II()
                    CDADoc.templateId(2).root = "2.16.840.1.113883.3.3251.1.1"
                    CDADoc.templateId(2).extension = Nothing
                    CDADoc.templateId(2).assigningAuthorityName = "HL7 Security"
                End If
                '----

                CDADoc.id = New II()
                CDADoc.id.root = "1.1.1.1.1.1.1.1.1"
                If CDAWritingParams.MarkPatientCopy = True Then
                    CDADoc.id.extension = "Patient Copy"
                Else
                    CDADoc.id.extension = Nothing
                End If

                CDADoc.id.assigningAuthorityName = Nothing

                CDADoc.code = New CE()
                CDADoc.code.code = "57133-1"
                CDADoc.code.codeSystem = "2.16.840.1.113883.6.1"
                CDADoc.code.codeSystemName = "LOINC"
                CDADoc.code.displayName = "Referral Note"
                CDADoc.code.codeSystemVersion = Nothing

                '<title>orgname Continuity of Care Document</title>
                CDADoc.title = New ST()
                CDADoc.title.Text = New String() {mPatient.Clinic.ClinicName & " : " & CDAWritingParams.getFileType()}
                ''& " (Confidentiality: " & gloLibCCDGeneral.sConfidentialityCode & ")"}
                CDADoc.title.language = Nothing
            ElseIf _nQRDAFileType = CDAFileTypeEnum.CarePlan Then
                CDADoc.templateId = New II(2) {}
                CDADoc.templateId(0) = New II()
                CDADoc.templateId(0).root = "2.16.840.1.113883.10.20.22.1.15"
                CDADoc.templateId(0).extension = _DateExtension2015
                CDADoc.templateId(0).assigningAuthorityName = Nothing

                CDADoc.templateId(1) = New II()
                CDADoc.templateId(1).root = "2.16.840.1.113883.10.20.22.1.1"
                CDADoc.templateId(1).extension = _DateExtension2015
                CDADoc.templateId(1).assigningAuthorityName = Nothing

                '----
                If gloLibCCDGeneral.sConfidentialityCode.ToLower = "restricted" Then
                    CDADoc.templateId(2) = New II()
                    CDADoc.templateId(2).root = "2.16.840.1.113883.3.3251.1.1"
                    CDADoc.templateId(2).extension = Nothing
                    CDADoc.templateId(2).assigningAuthorityName = "HL7 Security"
                End If
                '----

                CDADoc.id = New II()
                CDADoc.id.root = "1.1.1.1.1.1.1.1.1"
                If CDAWritingParams.MarkPatientCopy = True Then
                    CDADoc.id.extension = "Patient Copy"
                Else
                    CDADoc.id.extension = Nothing
                End If

                CDADoc.id.assigningAuthorityName = Nothing

                CDADoc.code = New CE()
                CDADoc.code.code = "52521-2"
                CDADoc.code.codeSystem = "2.16.840.1.113883.6.1"
                CDADoc.code.codeSystemName = "LOINC"
                CDADoc.code.displayName = "Overall Plan of Care/Advance Care Directives"
                CDADoc.code.codeSystemVersion = Nothing

                '<title>orgname Continuity of Care Document</title>
                CDADoc.title = New ST()
                CDADoc.title.Text = New String() {mPatient.Clinic.ClinicName & " : " & CDAWritingParams.getFileType()}
                '" (Confidentiality: " & gloLibCCDGeneral.sConfidentialityCode & ")"}
                CDADoc.title.language = Nothing
            ElseIf _nQRDAFileType = CDAFileTypeEnum.UnstructuredCDA Then
                CDADoc.templateId = New II(4) {}

                CDADoc.templateId(0) = New II()
                CDADoc.templateId(0).root = "2.16.840.1.113883.10.20.22.1.1"
                CDADoc.templateId(0).extension = _DateExtension2015
                CDADoc.templateId(0).assigningAuthorityName = Nothing

                CDADoc.templateId(1) = New II()
                CDADoc.templateId(1).root = "2.16.840.1.113883.10.20.22.1.1"
                CDADoc.templateId(1).extension = Nothing
                CDADoc.templateId(1).assigningAuthorityName = Nothing

                CDADoc.templateId(2) = New II()
                CDADoc.templateId(2).root = "2.16.840.1.113883.10.20.22.1.10"
                CDADoc.templateId(2).extension = _DateExtension2015
                CDADoc.templateId(2).assigningAuthorityName = Nothing

                CDADoc.templateId(3) = New II()
                CDADoc.templateId(3).root = "2.16.840.1.113883.10.20.22.1.10"
                CDADoc.templateId(3).extension = Nothing
                CDADoc.templateId(3).assigningAuthorityName = Nothing

                '----
                If gloLibCCDGeneral.sConfidentialityCode.ToLower = "restricted" Then
                    CDADoc.templateId(2) = New II()
                    CDADoc.templateId(2).root = "2.16.840.1.113883.3.3251.1.1"
                    CDADoc.templateId(2).extension = Nothing
                    CDADoc.templateId(2).assigningAuthorityName = "HL7 Security"
                End If
                '----

                '' ''
                ''If gloLibCCDGeneral.dvCCDAPatientPurposeofUse.Count > 0 Then
                ''    sVal = gloLibCCDGeneral.dvCCDAPatientPurposeofUse.Table(0)(0).ToString()
                ''Else
                ''    sVal = "Treatment"
                ''End If

                '' ''
                CDADoc.id = New II()
                CDADoc.id.root = "1.1.1.1.1.1.1.1.1"
                If CDAWritingParams.MarkPatientCopy = True Then
                    CDADoc.id.extension = "Patient Copy" ''& vbNewLine & sVal
                Else
                    CDADoc.id.extension = Nothing
                End If

                ''sVal = ""

                CDADoc.id.assigningAuthorityName = Nothing

                CDADoc.code = New CE()
                CDADoc.code.code = "52033-8"
                CDADoc.code.codeSystem = "2.16.840.1.113883.6.1"
                CDADoc.code.codeSystemName = "LOINC"
                CDADoc.code.displayName = "General correspondence attachment"
                CDADoc.code.codeSystemVersion = Nothing

                '<title>orgname Continuity of Care Document</title>
                CDADoc.title = New ST()
                CDADoc.title.Text = New String() {ActualFileName}
                '  & " (Confidentiality: " & gloLibCCDGeneral.sConfidentialityCode & ")"}
                CDADoc.title.language = Nothing
            Else
                CDADoc.templateId = New II(4) {}

                CDADoc.templateId(0) = New II()
                CDADoc.templateId(0).root = "2.16.840.1.113883.10.20.22.1.1"
                CDADoc.templateId(0).extension = _DateExtension2015
                CDADoc.templateId(0).assigningAuthorityName = Nothing

                CDADoc.templateId(1) = New II()
                CDADoc.templateId(1).root = "2.16.840.1.113883.10.20.22.1.1"
                CDADoc.templateId(1).extension = Nothing
                CDADoc.templateId(1).assigningAuthorityName = Nothing

                CDADoc.templateId(2) = New II()
                CDADoc.templateId(2).root = "2.16.840.1.113883.10.20.22.1.2"
                CDADoc.templateId(2).extension = _DateExtension2015
                CDADoc.templateId(2).assigningAuthorityName = Nothing

                CDADoc.templateId(3) = New II()
                CDADoc.templateId(3).root = "2.16.840.1.113883.10.20.22.1.2"
                CDADoc.templateId(3).extension = Nothing
                CDADoc.templateId(3).assigningAuthorityName = Nothing

                '----
                If gloLibCCDGeneral.sConfidentialityCode.ToLower = "restricted" Then
                    CDADoc.templateId(2) = New II()
                    CDADoc.templateId(2).root = "2.16.840.1.113883.3.3251.1.1"
                    CDADoc.templateId(2).extension = Nothing
                    CDADoc.templateId(2).assigningAuthorityName = "HL7 Security"
                End If
                '----

                '' ''
                ''If gloLibCCDGeneral.dvCCDAPatientPurposeofUse.Count > 0 Then
                ''    sVal = gloLibCCDGeneral.dvCCDAPatientPurposeofUse.Table(0)(0).ToString()
                ''Else
                ''    sVal = "Treatment"
                ''End If

                '' ''
                CDADoc.id = New II()
                CDADoc.id.root = "1.1.1.1.1.1.1.1.1"
                If CDAWritingParams.MarkPatientCopy = True Then
                    CDADoc.id.extension = "Patient Copy" ''& vbNewLine & sVal
                Else
                    CDADoc.id.extension = Nothing
                End If

                ''sVal = ""

                CDADoc.id.assigningAuthorityName = Nothing

                CDADoc.code = New CE()
                CDADoc.code.code = "34133-9"
                CDADoc.code.codeSystem = "2.16.840.1.113883.6.1"
                CDADoc.code.codeSystemName = "LOINC"
                CDADoc.code.displayName = "Summarization of Episode note"
                CDADoc.code.codeSystemVersion = Nothing

                '<title>orgname Continuity of Care Document</title>
                CDADoc.title = New ST()
                CDADoc.title.Text = New String() {mPatient.Clinic.ClinicName & " : " & CDAWritingParams.getFileType()}
                '  & " (Confidentiality: " & gloLibCCDGeneral.sConfidentialityCode & ")"}
                CDADoc.title.language = Nothing


            End If
            '<effectiveTime value="20111109552200-0700" />
            'Dim hours As Integer = TimeZone.CurrentTimeZone.GetUtcOffset(DateTime.Now).Hours
            'Dim minutes As Integer = TimeZone.CurrentTimeZone.GetUtcOffset(DateTime.Now).Minutes
            'Dim tzOffset As String = [String].Format("{0,2:D2}{1,2:D2}", hours, minutes)
            '  DateTime.UtcNow
            'CDADoc.effectiveTime = New TS()
            'CDADoc.effectiveTime.value = DateTime.Now.ToString("yyyyMMddmmss") & "00-" & tzOffset
            'hours = Nothing
            'minutes = Nothing
            'tzOffset = Nothing

            ''for timezone -0500 it was showing --0500,so removed hardcode '-' sign
            CDADoc.effectiveTime = New TS()



            CDADoc.effectiveTime.value = DateTime.Now.ToString("yyyyMMddhhmmss") & Replace(DateTime.Now.ToString("zzzz"), ":", "")
            '   CDADoc.effectiveTime.value = DateTime.Parse(CDADoc.effectiveTime.value).ToUniversalTime()
            ''Added by Ujwala for certification criteria - 170.315(b)(7) Data Segmentation for Privacy – Send - Start

            If (_nQRDAFileType = CDAFileTypeEnum.QRDA3) Then
                CDADoc.confidentialityCode = New CE()
                CDADoc.confidentialityCode.code = "N"

            Else
                CDADoc.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, Nothing, CDADoc)

            End If
            'CDADoc.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, Nothing, CDADoc)

            '' Added by Ujwala for certification criteria - 170.315(b)(7) Data Segmentation for Privacy – Send - End

            '<languageCode code="en-US" />
            CDADoc.languageCode = New CE()
            If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Or _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then
                CDADoc.languageCode.code = "en"
            Else
                CDADoc.languageCode.code = "en-US"
            End If

            CDADoc.languageCode.codeSystem = Nothing
            CDADoc.languageCode.codeSystemName = Nothing
            CDADoc.languageCode.displayName = Nothing
            CDADoc.languageCode.codeSystemVersion = Nothing

            Return CDADoc
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Initialization"
            Else
                _msgString = _msgString & vbNewLine & "Initialization"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            '  MessageBox.Show("Error:" & ex.ToString())
            Return Nothing
        End Try
    End Function
    Private Function GetCDARecordTarget() As POCD_MT000040UV02RecordTarget
        Dim _recordTarget As New POCD_MT000040UV02RecordTarget()
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim _oCDADataExtraction As New gloCDADataExtraction

        Try
            'Record Target
            If _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then
                _recordTarget.typeCode = Nothing
                _recordTarget.typeCodeSpecified = False
                _recordTarget.contextControlCode = Nothing
                _recordTarget.patientRole = New POCD_MT000040UV02PatientRole()
                _recordTarget.patientRole.classCode = Nothing
                _recordTarget.patientRole.classCodeSpecified = False
                _recordTarget.patientRole.id = New II(0) {}
                _recordTarget.patientRole.id(0) = New II()
                _recordTarget.patientRole.id(0).nullFlavor = "NA"
                _recordTarget.patientRole.id(0).assigningAuthorityName = Nothing
                _recordTarget.patientRole.id(0).extension = Nothing
                _recordTarget.patientRole.id(0).root = Nothing
            Else

                _recordTarget.typeCode = Nothing
                _recordTarget.typeCodeSpecified = False
                _recordTarget.contextControlCode = Nothing
                _recordTarget.patientRole = New POCD_MT000040UV02PatientRole()
                _recordTarget.patientRole.classCode = Nothing
                _recordTarget.patientRole.classCodeSpecified = False
                If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Then
                    _recordTarget.patientRole.id = New II(1) {}
                    _recordTarget.patientRole.id(0) = New II()
                    _recordTarget.patientRole.id(0).root = "2.16.840.1.113883.4.572"
                    'Patient Medicare HIC number
                    _recordTarget.patientRole.id(0).extension = Nothing
                    ''CMS QRDAI
                    _recordTarget.patientRole.id(0).assigningAuthorityName = Nothing
                    ''CMS QRDAI
                    _recordTarget.patientRole.id(1) = New II()
                    _recordTarget.patientRole.id(1).root = "2.16.840.1.113883.123.123.1"
                    If mPatient.PatientName.Code IsNot Nothing AndAlso mPatient.PatientName.Code <> "" Then
                        _recordTarget.patientRole.id(1).extension = mPatient.PatientName.Code
                    Else
                        _recordTarget.patientRole.id(1).extension = Nothing
                    End If


                    _recordTarget.patientRole.id(1).assigningAuthorityName = Nothing
                Else
                    _recordTarget.patientRole.id = New II(0) {}
                    _recordTarget.patientRole.id(0) = New II()
                    _recordTarget.patientRole.id(0).root = "2.16.840.1.113883.4.1"
                    'Patient SSN


                    'If mPatient.PatientDemographics.DemographicsDetail.PatientSSN IsNot Nothing AndAlso mPatient.PatientDemographics.DemographicsDetail.PatientSSN <> "" Then
                    '    _recordTarget.patientRole.id(0).extension = mPatient.PatientDemographics.DemographicsDetail.PatientSSN
                    'Else
                    '    _recordTarget.patientRole.id(0).extension = Nothing
                    'End If
                    _recordTarget.patientRole.id(0).root = "2.16.840.1.113883.4.1"
                    Dim sGUID As String = ""
                    Dim sExternalCode As String = ""

                    If _CCDAPatientidentifier = "" Then
                        Dim dtidentifier As DataTable = _oCDADataExtraction.GetSettings_CCDAPatientIdentifier()
                        If Not IsNothing(dtidentifier) Then
                            If dtidentifier.Rows.Count > 0 Then
                                _CCDAPatientidentifier = CType(dtidentifier.Rows(0).Item("sShortName"), String)

                                If dtidentifier.Columns.Contains("sOID") Then
                                    _OID = CType(dtidentifier.Rows(0).Item("sOID"), String)
                                End If

                                If dtidentifier.Columns.Contains("sExternalCode") Then
                                    sExternalCode = CType(dtidentifier.Rows(0).Item("sExternalCode"), String)
                                End If
                            End If
                        End If
                    End If

                    If Not IsNothing(_OID) AndAlso _OID <> "" Then
                        _recordTarget.patientRole.id(0).root = _OID
                    Else
                        _recordTarget.patientRole.id(0).root = "2.16.840.1.113883.4.1"
                    End If
                    If _CCDAPatientidentifier = "PID" Then
                        If mPatient.PatientID <> 0 AndAlso Not IsNothing(mPatient.PatientID) Then
                            _recordTarget.patientRole.id(0).extension = mPatient.PatientID
                        Else
                            _recordTarget.patientRole.id(0).extension = Nothing
                        End If
                    ElseIf _CCDAPatientidentifier = "PCode" Then
                        Using md5 As System.Security.Cryptography.MD5 = System.Security.Cryptography.MD5.Create()
                            sGUID = New Guid(md5.ComputeHash(Encoding.Default.GetBytes(sExternalCode))).ToString()
                        End Using

                        If Not IsNothing(mPatient.PatientName.Code) AndAlso mPatient.PatientName.Code <> "" Then
                            _recordTarget.patientRole.id(0).extension = mPatient.PatientName.Code
                        Else
                            _recordTarget.patientRole.id(0).extension = Nothing
                        End If

                        _recordTarget.patientRole.id(0).root = sGUID
                    ElseIf _CCDAPatientidentifier = "SSN" Then

                        If Not IsNothing(mPatient.SSN) AndAlso mPatient.SSN <> "" Then
                            If Convert.ToString(mPatient.SSN).Length > 4 Then
                                _recordTarget.patientRole.id(0).extension = Convert.ToString(mPatient.SSN).Substring(Convert.ToString(mPatient.SSN).Length - 4)
                            Else
                                _recordTarget.patientRole.id(0).extension = Nothing
                            End If

                        Else
                            _recordTarget.patientRole.id(0).extension = Nothing
                        End If
                    ElseIf _CCDAPatientidentifier = "GUID" Then
                        Using md5 As System.Security.Cryptography.MD5 = System.Security.Cryptography.MD5.Create()
                            sGUID = New Guid(md5.ComputeHash(Encoding.Default.GetBytes(sExternalCode))).ToString()
                        End Using

                        If Not IsNothing(mPatient.PatientName.Code) AndAlso mPatient.PatientName.Code <> "" Then
                            _recordTarget.patientRole.id(0).extension = mPatient.PatientName.Code
                        Else
                            _recordTarget.patientRole.id(0).extension = Nothing
                        End If

                        _recordTarget.patientRole.id(0).root = sGUID                        
                    Else
                        If Not IsNothing(mPatient.PatientName.Code) AndAlso mPatient.PatientName.Code <> "" Then
                            _recordTarget.patientRole.id(0).extension = mPatient.PatientName.Code
                        Else
                            _recordTarget.patientRole.id(0).extension = Nothing
                        End If
                    End If



                    _recordTarget.patientRole.id(0).assigningAuthorityName = Nothing
                End If

                ' _recordTarget.patientRole.id(0).assigningAuthorityName = Nothing
                _recordTarget.patientRole.addr = New AD(0) {}
                _recordTarget.patientRole.addr(0) = New AD()
                _recordTarget.patientRole.addr(0).use = New PostalAddressUse(0) {}
                _recordTarget.patientRole.addr(0).use(0) = PostalAddressUse.HP
                _recordTarget.patientRole.addr(0).Items = New ADXP(5) {}
                _recordTarget.patientRole.addr(0).Items(0) = New adxpstreetAddressLine()
                _recordTarget.patientRole.addr(0).Items(0).language = Nothing
                _recordTarget.patientRole.addr(0).Items(0).partType = Nothing
                If _nQRDAFileType <> CDAFileTypeEnum.QRDA1 Then

                    _recordTarget.patientRole.addr(0).Items(1) = New adxpstreetAddressLine()
                    _recordTarget.patientRole.addr(0).Items(1).language = Nothing
                    _recordTarget.patientRole.addr(0).Items(1).partType = Nothing
                End If
               
                'Patient Address
                If mPatient.PatientName.PersonContactAddress.Street IsNot Nothing AndAlso mPatient.PatientName.PersonContactAddress.Street <> "" Then
                    _recordTarget.patientRole.addr(0).Items(0).Text = New String() {mPatient.PatientName.PersonContactAddress.Street}
                Else
                    _recordTarget.patientRole.addr(0).Items(0).Text = Nothing
                    _recordTarget.patientRole.addr(0).Items(0).nullFlavor = "NA"
                End If
                If _nQRDAFileType <> CDAFileTypeEnum.QRDA1 Then

                    If mPatient.PatientName.PersonContactAddress.AddressLine2 IsNot Nothing AndAlso mPatient.PatientName.PersonContactAddress.AddressLine2 <> "" Then
                        _recordTarget.patientRole.addr(0).Items(1).Text = New String() {mPatient.PatientName.PersonContactAddress.AddressLine2}
                    Else
                        _recordTarget.patientRole.addr(0).Items(1).Text = Nothing
                        _recordTarget.patientRole.addr(0).Items(1).nullFlavor = "NA"
                    End If
                End If
                _recordTarget.patientRole.addr(0).Items(2) = New adxpcity()
                _recordTarget.patientRole.addr(0).Items(2).language = Nothing
                _recordTarget.patientRole.addr(0).Items(2).partType = Nothing
                'Patient city
                If mPatient.PatientName.PersonContactAddress.City IsNot Nothing AndAlso mPatient.PatientName.PersonContactAddress.City <> "" Then
                    _recordTarget.patientRole.addr(0).Items(2).Text = New String() {mPatient.PatientName.PersonContactAddress.City}
                Else
                    _recordTarget.patientRole.addr(0).Items(2).Text = Nothing
                    _recordTarget.patientRole.addr(0).Items(2).nullFlavor = "NA"
                End If

                _recordTarget.patientRole.addr(0).Items(3) = New adxpstate()
                _recordTarget.patientRole.addr(0).Items(3).language = Nothing
                _recordTarget.patientRole.addr(0).Items(3).partType = Nothing
                'Patient state
                If mPatient.PatientName.PersonContactAddress.State IsNot Nothing AndAlso mPatient.PatientName.PersonContactAddress.State <> "" Then
                    _recordTarget.patientRole.addr(0).Items(3).Text = New String() {mPatient.PatientName.PersonContactAddress.State}
                Else
                    If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Then
                        _recordTarget.patientRole.addr(0).Items(3).Text = Nothing
                    Else
                        _recordTarget.patientRole.addr(0).Items(3).Text = Nothing
                        _recordTarget.patientRole.addr(0).Items(3).nullFlavor = "NA"
                    End If
                End If

                _recordTarget.patientRole.addr(0).Items(4) = New adxppostalCode()
                _recordTarget.patientRole.addr(0).Items(4).language = Nothing
                _recordTarget.patientRole.addr(0).Items(4).partType = Nothing
                'Patient Zip Code
                If mPatient.PatientName.PersonContactAddress.Zip IsNot Nothing AndAlso mPatient.PatientName.PersonContactAddress.Zip <> "" Then
                    _recordTarget.patientRole.addr(0).Items(4).Text = New String() {mPatient.PatientName.PersonContactAddress.Zip}
                Else
                    If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Then
                        _recordTarget.patientRole.addr(0).Items(4).Text = Nothing
                    Else
                        _recordTarget.patientRole.addr(0).Items(4).Text = Nothing
                        _recordTarget.patientRole.addr(0).Items(4).nullFlavor = "NA"
                    End If

                End If

                'Patient Country Code
                _recordTarget.patientRole.addr(0).Items(5) = New adxpcountry()
                _recordTarget.patientRole.addr(0).Items(5).language = Nothing
                _recordTarget.patientRole.addr(0).Items(5).partType = Nothing
                If mPatient.PatientName.PersonContactAddress.Country IsNot Nothing AndAlso mPatient.PatientName.PersonContactAddress.Country <> "" Then
                    _recordTarget.patientRole.addr(0).Items(5).Text = New String() {mPatient.PatientName.PersonContactAddress.Country}
                Else
                    If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Then
                        _recordTarget.patientRole.addr(0).Items(5).Text = Nothing
                    Else
                        _recordTarget.patientRole.addr(0).Items(5).Text = Nothing
                        _recordTarget.patientRole.addr(0).Items(5).nullFlavor = "NA"
                    End If

                End If
                _recordTarget.patientRole.telecom = New TEL(1) {}
                _recordTarget.patientRole.telecom(0) = New TEL()
                'Patient Phone
                If mPatient.Phone IsNot Nothing AndAlso mPatient.Phone <> "" Then
                    If mPatient.Phone.Contains("tel") Then
                        _recordTarget.patientRole.telecom(0).value = Nothing
                        _recordTarget.patientRole.telecom(0).nullFlavor = "NA"
                        _recordTarget.patientRole.telecom(0).use = New TelecommunicationAddressUse(0) {}
                        _recordTarget.patientRole.telecom(0).use(0) = TelecommunicationAddressUse.HP
                    Else
                        _recordTarget.patientRole.telecom(0).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(mPatient.Phone))
                        _recordTarget.patientRole.telecom(0).use = New TelecommunicationAddressUse(0) {}
                        _recordTarget.patientRole.telecom(0).use(0) = TelecommunicationAddressUse.HP
                    End If

                Else
                    _recordTarget.patientRole.telecom(0).value = Nothing
                    _recordTarget.patientRole.telecom(0).nullFlavor = "NA"
                    _recordTarget.patientRole.telecom(0).use = New TelecommunicationAddressUse(0) {}
                    _recordTarget.patientRole.telecom(0).use(0) = TelecommunicationAddressUse.HP
                End If
                _recordTarget.patientRole.telecom(1) = New TEL()
                If mPatient.Mobile IsNot Nothing AndAlso mPatient.Mobile <> "" Then
                    If mPatient.Mobile.Contains("tel") Then
                        _recordTarget.patientRole.telecom(1).value = Nothing
                        _recordTarget.patientRole.telecom(1).nullFlavor = "NA"
                        _recordTarget.patientRole.telecom(1).use = New TelecommunicationAddressUse(0) {}
                        _recordTarget.patientRole.telecom(1).use(0) = TelecommunicationAddressUse.MC
                    Else
                        _recordTarget.patientRole.telecom(1).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(mPatient.Mobile))
                        _recordTarget.patientRole.telecom(1).use = New TelecommunicationAddressUse(0) {}
                        _recordTarget.patientRole.telecom(1).use(0) = TelecommunicationAddressUse.MC
                    End If

                Else
                    _recordTarget.patientRole.telecom(1).value = Nothing
                    _recordTarget.patientRole.telecom(1).nullFlavor = "NA"
                    _recordTarget.patientRole.telecom(1).use = New TelecommunicationAddressUse(0) {}
                    _recordTarget.patientRole.telecom(1).use(0) = TelecommunicationAddressUse.MC
                End If

                'Record Target Patient
                _recordTarget.patientRole.patient = New POCD_MT000040UV02Patient()
                _recordTarget.patientRole.patient.classCode = Nothing
                _recordTarget.patientRole.patient.classCodeSpecified = False
                _recordTarget.patientRole.patient.determinerCode = Nothing
                _recordTarget.patientRole.patient.name = New PN(1) {}
                _recordTarget.patientRole.patient.name(0) = New PN()
                _recordTarget.patientRole.patient.name(0).use = New EntityNameUse(0) {}
                _recordTarget.patientRole.patient.name(0).use(0) = EntityNameUse.L

                Dim Isonlypreviousname As Boolean = False
                If mPatient.PatientName.PreviousFirstName <> "" AndAlso mPatient.PatientName.PreviousLastName = "" AndAlso mPatient.PatientName.PreviousMiddleName = "" Then
                    _recordTarget.patientRole.patient.name(0).Items = New ENXP(4) {}
                    Isonlypreviousname = True
                Else
                    _recordTarget.patientRole.patient.name(0).Items = New ENXP(3) {}
                End If

                If Isonlypreviousname = True Then
                    'Patient First Name
                    If mPatient.PatientName.FirstName IsNot Nothing AndAlso mPatient.PatientName.FirstName <> "" Then
                        _recordTarget.patientRole.patient.name(0).Items(0) = New engiven()
                        _recordTarget.patientRole.patient.name(0).Items(0).language = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(0).partType = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(0).Text = New String() {mPatient.PatientName.FirstName}
                    Else
                        _recordTarget.patientRole.patient.name(0).Items(0) = Nothing
                    End If

                    'Patient Previous First name
                    If mPatient.PatientName.PreviousFirstName IsNot Nothing AndAlso mPatient.PatientName.PreviousFirstName <> "" Then
                        _recordTarget.patientRole.patient.name(0).Items(1) = New engiven()
                        _recordTarget.patientRole.patient.name(0).Items(1).language = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(1).partType = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(1).Text = New String() {mPatient.PatientName.PreviousFirstName}
                        _recordTarget.patientRole.patient.name(0).Items(1).qualifier = New EntityNamePartQualifier(0) {}
                        _recordTarget.patientRole.patient.name(0).Items(1).qualifier(0) = EntityNamePartQualifier.BR
                    Else
                        _recordTarget.patientRole.patient.name(0).Items(1) = Nothing
                    End If
                    'Patient Middle Name
                    If mPatient.PatientName.MiddleName IsNot Nothing AndAlso mPatient.PatientName.MiddleName <> "" Then
                        _recordTarget.patientRole.patient.name(0).Items(2) = New engiven()

                        _recordTarget.patientRole.patient.name(0).Items(2).language = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(2).partType = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(2).Text = New String() {mPatient.PatientName.MiddleName}
                    Else
                        _recordTarget.patientRole.patient.name(0).Items(2) = Nothing
                    End If

                    'Patient last Name
                    If mPatient.PatientName.LastName IsNot Nothing AndAlso mPatient.PatientName.LastName <> "" Then
                        _recordTarget.patientRole.patient.name(0).Items(3) = New enfamily()

                        _recordTarget.patientRole.patient.name(0).Items(3).language = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(3).partType = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(3).Text = New String() {mPatient.PatientName.LastName}
                    Else
                        _recordTarget.patientRole.patient.name(0).Items(3) = Nothing
                    End If
                    If mPatient.PatientName.Suffix IsNot Nothing AndAlso mPatient.PatientName.Suffix <> "" Then
                        _recordTarget.patientRole.patient.name(0).Items(4) = New ensuffix()
                        _recordTarget.patientRole.patient.name(0).Items(4).language = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(4).partType = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(4).Text = New String() {mPatient.PatientName.Suffix}
                    Else
                        _recordTarget.patientRole.patient.name(0).Items(4) = Nothing
                    End If
                Else

                    'Patient First Name
                    If mPatient.PatientName.FirstName IsNot Nothing AndAlso mPatient.PatientName.FirstName <> "" Then
                        _recordTarget.patientRole.patient.name(0).Items(0) = New engiven()
                        _recordTarget.patientRole.patient.name(0).Items(0).language = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(0).partType = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(0).Text = New String() {mPatient.PatientName.FirstName}
                    Else
                        _recordTarget.patientRole.patient.name(0).Items(0) = Nothing
                    End If

                    'Patient Middle name
                    If mPatient.PatientName.MiddleName IsNot Nothing AndAlso mPatient.PatientName.MiddleName <> "" Then
                        _recordTarget.patientRole.patient.name(0).Items(1) = New engiven()

                        _recordTarget.patientRole.patient.name(0).Items(1).language = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(1).partType = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(1).Text = New String() {mPatient.PatientName.MiddleName}
                    Else
                        _recordTarget.patientRole.patient.name(0).Items(1) = Nothing
                    End If

                    'Patient last Name
                    If mPatient.PatientName.LastName IsNot Nothing AndAlso mPatient.PatientName.LastName <> "" Then
                        _recordTarget.patientRole.patient.name(0).Items(2) = New enfamily()

                        _recordTarget.patientRole.patient.name(0).Items(2).language = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(2).partType = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(2).Text = New String() {mPatient.PatientName.LastName}
                    Else
                        _recordTarget.patientRole.patient.name(0).Items(2) = Nothing
                    End If

                    If mPatient.PatientName.Suffix IsNot Nothing AndAlso mPatient.PatientName.Suffix <> "" Then
                        _recordTarget.patientRole.patient.name(0).Items(3) = New ensuffix()
                        _recordTarget.patientRole.patient.name(0).Items(3).language = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(3).partType = Nothing
                        _recordTarget.patientRole.patient.name(0).Items(3).Text = New String() {mPatient.PatientName.Suffix}
                    Else
                        _recordTarget.patientRole.patient.name(0).Items(3) = Nothing
                    End If


                    'Create a new name tag to include patient previous name i.e Birth name
                    _recordTarget.patientRole.patient.name(1) = New PN()
                    '_recordTarget.patientRole.patient.name(0).use = New EntityNameUse(0) {}
                    '_recordTarget.patientRole.patient.name(0).use(0) = EntityNameUse.L

                    _recordTarget.patientRole.patient.name(1).Items = New ENXP(2) {}
                    If mPatient.PatientName.PreviousFirstName IsNot Nothing AndAlso mPatient.PatientName.PreviousFirstName <> "" Then
                        _recordTarget.patientRole.patient.name(1).Items(0) = New engiven()
                        _recordTarget.patientRole.patient.name(1).Items(0).language = Nothing
                        _recordTarget.patientRole.patient.name(1).Items(0).partType = Nothing
                        _recordTarget.patientRole.patient.name(1).Items(0).Text = New String() {mPatient.PatientName.PreviousFirstName}
                        _recordTarget.patientRole.patient.name(1).Items(0).qualifier = New EntityNamePartQualifier(0) {}
                        _recordTarget.patientRole.patient.name(1).Items(0).qualifier(0) = EntityNamePartQualifier.BR
                    Else
                        _recordTarget.patientRole.patient.name(1).Items(0) = Nothing
                    End If

                    If mPatient.PatientName.PreviousMiddleName IsNot Nothing AndAlso mPatient.PatientName.PreviousMiddleName <> "" Then
                        _recordTarget.patientRole.patient.name(1).Items(1) = New engiven()
                        _recordTarget.patientRole.patient.name(1).Items(1).language = Nothing
                        _recordTarget.patientRole.patient.name(1).Items(1).partType = Nothing
                        _recordTarget.patientRole.patient.name(1).Items(1).Text = New String() {mPatient.PatientName.PreviousMiddleName}
                    Else
                        _recordTarget.patientRole.patient.name(1).Items(1) = Nothing
                    End If

                    If mPatient.PatientName.PreviousLastName IsNot Nothing AndAlso mPatient.PatientName.PreviousLastName <> "" Then
                        _recordTarget.patientRole.patient.name(1).Items(2) = New enfamily()
                        _recordTarget.patientRole.patient.name(1).Items(2).language = Nothing
                        _recordTarget.patientRole.patient.name(1).Items(2).partType = Nothing
                        _recordTarget.patientRole.patient.name(1).Items(2).Text = New String() {mPatient.PatientName.PreviousLastName}
                    ElseIf mPatient.PatientName.LastName IsNot Nothing AndAlso mPatient.PatientName.LastName <> "" Then
                        _recordTarget.patientRole.patient.name(1).Items(2) = New enfamily()
                        _recordTarget.patientRole.patient.name(1).Items(2).language = Nothing
                        _recordTarget.patientRole.patient.name(1).Items(2).partType = Nothing
                        _recordTarget.patientRole.patient.name(1).Items(2).Text = New String() {mPatient.PatientName.LastName}
                    Else

                        _recordTarget.patientRole.patient.name(1).Items(2) = Nothing
                    End If

                    If Convert.ToString(mPatient.PatientName.PreviousFirstName) = "" AndAlso Convert.ToString(mPatient.PatientName.PreviousLastName) = "" AndAlso Convert.ToString(mPatient.PatientName.PreviousMiddleName) = "" Then
                        _recordTarget.patientRole.patient.name(1) = Nothing
                    End If
                End If


















                ''Patient Gender
                _recordTarget.patientRole.patient.administrativeGenderCode = New CE()
                _recordTarget.patientRole.patient.administrativeGenderCode.codeSystem = CodeSystem.AdministrativeGender
                _recordTarget.patientRole.patient.administrativeGenderCode.codeSystemVersion = Nothing
                If mPatient.Gender Is Nothing OrElse mPatient.Gender = "" Then
                    mPatient.Gender = "Other"
                End If
                _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.AdministrativeGender, mPatient.Gender)
                If Not IsNothing(_CodeSysItem) Then
                    If mPatient.Gender = "Unknown" Then
                        _recordTarget.patientRole.patient.administrativeGenderCode.nullFlavorSpecified = True
                        _recordTarget.patientRole.patient.administrativeGenderCode.nullFlavor = _CodeSysItem.Code
                        _recordTarget.patientRole.patient.administrativeGenderCode.code = Nothing
                        _recordTarget.patientRole.patient.administrativeGenderCode.displayName = Nothing
                        _recordTarget.patientRole.patient.administrativeGenderCode.codeSystemName = Nothing
                        _recordTarget.patientRole.patient.administrativeGenderCode.codeSystem = Nothing
                    Else
                        _recordTarget.patientRole.patient.administrativeGenderCode.code = _CodeSysItem.Code
                        _recordTarget.patientRole.patient.administrativeGenderCode.displayName = _CodeSysItem.Description
                        _recordTarget.patientRole.patient.administrativeGenderCode.codeSystemName = _CodeSysItem.CodingSystemName
                    End If
                End If

                ''Patient DOB
                _recordTarget.patientRole.patient.birthTime = New TS()
                If mPatient.DateofBirth IsNot Nothing AndAlso mPatient.DateofBirth <> "" Then
                    _recordTarget.patientRole.patient.birthTime.value = (Convert.ToDateTime(mPatient.DateofBirth)).ToString("yyyyMMdd")
                Else
                    _recordTarget.patientRole.patient.birthTime.value = Nothing
                End If
                ''Patient Marital Status

                _recordTarget.patientRole.patient.maritalStatusCode = New CE()
                If mPatient.MaritalStatus IsNot Nothing AndAlso mPatient.MaritalStatus <> "" Then
                    _recordTarget.patientRole.patient.maritalStatusCode.codeSystem = CodeSystem.MaritalStatus
                    _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.MaritalStatus, mPatient.MaritalStatus)
                    If Not IsNothing(_CodeSysItem) Then
                        _recordTarget.patientRole.patient.maritalStatusCode.code = _CodeSysItem.Code
                        _recordTarget.patientRole.patient.maritalStatusCode.displayName = _CodeSysItem.Description
                        _recordTarget.patientRole.patient.maritalStatusCode.codeSystemName = _CodeSysItem.CodingSystemName
                    Else
                        _recordTarget.patientRole.patient.maritalStatusCode.code = Nothing
                        _recordTarget.patientRole.patient.maritalStatusCode.codeSystemName = Nothing
                        _recordTarget.patientRole.patient.maritalStatusCode.displayName = Nothing
                    End If

                    _recordTarget.patientRole.patient.maritalStatusCode.codeSystemVersion = Nothing
                Else
                    _recordTarget.patientRole.patient.maritalStatusCode.code = Nothing
                    _recordTarget.patientRole.patient.maritalStatusCode.codeSystem = Nothing
                    _recordTarget.patientRole.patient.maritalStatusCode.codeSystemName = Nothing
                    _recordTarget.patientRole.patient.maritalStatusCode.codeSystemVersion = Nothing
                    _recordTarget.patientRole.patient.maritalStatusCode.displayName = Nothing
                    _recordTarget.patientRole.patient.maritalStatusCode.nullFlavor = "UNK"
                End If

                _recordTarget.patientRole.patient.religiousAffiliationCode = Nothing

                ' Dim oRaces As RaceDetails = Nothing
                If Not IsNothing(mPatient.Races) AndAlso mPatient.Races.Count > 0 Then
                    ' For oRacescnt As Integer = 0 To mPatient.Races.Count - 1



                    Dim oRaceDetails As RaceCol = DirectCast(mPatient.Races, gloCCDLibrary.RaceCol)
                    _recordTarget.patientRole.patient.raceCode = New CE(mPatient.Races.Count * 2) {}
                    _recordTarget.patientRole.patient.raceCode1 = New CE(oRaceDetails.RaceCount) {}
                    Dim _cnt As Int64 = 1
                    For k As Integer = 0 To oRaceDetails.Count - 1
                        If k = 0 Then
                            Dim oRaces As RaceDetails = DirectCast(oRaceDetails.Item(k), gloCCDLibrary.RaceDetails)
                            If oRaces.OMBCode = "ASKU" Then
                                _recordTarget.patientRole.patient.raceCode = New CE(0) {}
                                _recordTarget.patientRole.patient.raceCode(0) = New CE()
                                _recordTarget.patientRole.patient.raceCode(0).code = Nothing
                                _recordTarget.patientRole.patient.raceCode(0).codeSystem = Nothing
                                _recordTarget.patientRole.patient.raceCode(0).codeSystemName = Nothing
                                _recordTarget.patientRole.patient.raceCode(0).codeSystemVersion = Nothing
                                _recordTarget.patientRole.patient.raceCode(0).displayName = Nothing
                                _recordTarget.patientRole.patient.raceCode(0).nullFlavor = "ASKU"
                                Exit For
                            Else
                                _recordTarget.patientRole.patient.raceCode(k) = New CE()
                                If oRaces.OMBCode = "UNK" Then
                                    _recordTarget.patientRole.patient.raceCode(k).nullFlavor = "UNK"
                                    _recordTarget.patientRole.patient.raceCode(k).displayName = Nothing
                                    _recordTarget.patientRole.patient.raceCode(k).codeSystem = Nothing
                                    _recordTarget.patientRole.patient.raceCode(k).codeSystemName = Nothing
                                    _recordTarget.patientRole.patient.raceCode(k).codeSystemVersion = Nothing

                                Else
                                    _recordTarget.patientRole.patient.raceCode(k).code = oRaces.OMBCode
                                    _recordTarget.patientRole.patient.raceCode(k).displayName = oRaces.OMBDescription
                                    _recordTarget.patientRole.patient.raceCode(k).codeSystem = CodeSystem.RaceAndEthnicity
                                    _recordTarget.patientRole.patient.raceCode(k).codeSystemName = "Race and Ethnicity - CDC"
                                    _recordTarget.patientRole.patient.raceCode(k).codeSystemVersion = Nothing
                                End If

                                If Not IsNothing(oRaces.CDCCol) AndAlso oRaces.CDCCol.Count > 0 Then



                                    '  _recordTarget.patientRole.patient.raceCode1(k) = New CE(oRaces.CDCCol.Count - 1) {}
                                    For _CDCcnt As Integer = 0 To oRaces.CDCCol.Count - 1

                                        Dim oCDCDetails As CDCRaceDetails = oRaces.CDCCol.Item(_CDCcnt)
                                        _recordTarget.patientRole.patient.raceCode1(_cnt) = New CE()
                                        _recordTarget.patientRole.patient.raceCode1(_cnt).code = oCDCDetails.CDCCode
                                        _recordTarget.patientRole.patient.raceCode1(_cnt).displayName = oRaces.OMBDescription & " " & oCDCDetails.CDCDescription
                                        _recordTarget.patientRole.patient.raceCode1(_cnt).codeSystem = CodeSystem.RaceAndEthnicity
                                        _recordTarget.patientRole.patient.raceCode1(_cnt).codeSystemName = "Race and Ethnicity - CDC"
                                        _recordTarget.patientRole.patient.raceCode1(_cnt).codeSystemVersion = Nothing
                                        _cnt = _cnt + 1
                                    Next






                                End If
                                'If oRaceDetails.Count = 1 Then
                                '    _recordTarget.patientRole.patient.raceCode1(k) = New CE()
                                '    _recordTarget.patientRole.patient.raceCode1(k).code = Nothing
                                '    _recordTarget.patientRole.patient.raceCode1(k).displayName = Nothing
                                '    _recordTarget.patientRole.patient.raceCode1(k).codeSystem = Nothing
                                '    _recordTarget.patientRole.patient.raceCode1(k).codeSystemName = Nothing
                                '    _recordTarget.patientRole.patient.raceCode1(k).codeSystemVersion = Nothing
                                '    _recordTarget.patientRole.patient.raceCode1(k).nullFlavor = "UNK"
                                'End If
                            End If

                        Else
                            Dim oRaces As RaceDetails = DirectCast(oRaceDetails.Item(k), gloCCDLibrary.RaceDetails)

                            _recordTarget.patientRole.patient.raceCode1(_cnt) = New CE()
                            _recordTarget.patientRole.patient.raceCode1(_cnt).code = oRaces.OMBCode
                            _recordTarget.patientRole.patient.raceCode1(_cnt).displayName = oRaces.OMBDescription
                            _recordTarget.patientRole.patient.raceCode1(_cnt).codeSystem = CodeSystem.RaceAndEthnicity
                            _recordTarget.patientRole.patient.raceCode1(_cnt).codeSystemName = "Race and Ethnicity - CDC"
                            _recordTarget.patientRole.patient.raceCode1(_cnt).codeSystemVersion = Nothing
                            _cnt = _cnt + 1
                            If Not IsNothing(oRaces.CDCCol) AndAlso oRaces.CDCCol.Count > 0 Then


                                ' _recordTarget.patientRole.patient.raceCode1(_cnt) = New CD(oRaces.CDCCol.Count - 1) {}
                                For _CDCcnt As Integer = 0 To oRaces.CDCCol.Count - 1

                                    Dim oCDCDetails As CDCRaceDetails = oRaces.CDCCol.Item(_CDCcnt)
                                    _recordTarget.patientRole.patient.raceCode1(_cnt) = New CE()
                                    _recordTarget.patientRole.patient.raceCode1(_cnt).code = oCDCDetails.CDCCode
                                    _recordTarget.patientRole.patient.raceCode1(_cnt).displayName = oRaces.OMBDescription & " " & oCDCDetails.CDCDescription
                                    _recordTarget.patientRole.patient.raceCode1(_cnt).codeSystem = CodeSystem.RaceAndEthnicity
                                    _recordTarget.patientRole.patient.raceCode1(_cnt).codeSystemName = "Race and Ethnicity - CDC"
                                    _recordTarget.patientRole.patient.raceCode1(_cnt).codeSystemVersion = Nothing
                                    _cnt = _cnt + 1
                                Next
                            End If
                        End If

                    Next


                Else
                    _recordTarget.patientRole.patient.raceCode = New CE(0) {}
                    _recordTarget.patientRole.patient.raceCode(0) = New CE()
                    _recordTarget.patientRole.patient.raceCode(0).code = Nothing
                    _recordTarget.patientRole.patient.raceCode(0).codeSystem = Nothing
                    _recordTarget.patientRole.patient.raceCode(0).codeSystemName = Nothing
                    _recordTarget.patientRole.patient.raceCode(0).codeSystemVersion = Nothing
                    _recordTarget.patientRole.patient.raceCode(0).displayName = Nothing
                    _recordTarget.patientRole.patient.raceCode(0).nullFlavor = "UNK"
                End If

                If Not IsNothing(mPatient.Ethnicities) AndAlso mPatient.Ethnicities.Count > 0 Then
                    ' For oRacescnt As Integer = 0 To mPatient.Races.Count - 1


                    Dim _cntEth As Int64 = 1
                    Dim oRaceDetails As EthnicityCol = DirectCast(mPatient.Ethnicities, gloCCDLibrary.EthnicityCol)
                    _recordTarget.patientRole.patient.ethnicGroupCode = New CE(mPatient.Ethnicities.Count * 2) {}
                    _recordTarget.patientRole.patient.ethnicGroupCode1 = New CE(oRaceDetails.EthCount) {}
                    For k As Integer = 0 To oRaceDetails.Count - 1
                        If k = 0 Then
                            Dim oRaces As RaceDetails = DirectCast(oRaceDetails.Item(k), gloCCDLibrary.RaceDetails)
                            If oRaces.OMBCode = "ASKU" Then
                                _recordTarget.patientRole.patient.ethnicGroupCode = New CE(0) {}
                                _recordTarget.patientRole.patient.ethnicGroupCode(0) = New CE()
                                _recordTarget.patientRole.patient.ethnicGroupCode(0).code = Nothing
                                _recordTarget.patientRole.patient.ethnicGroupCode(0).codeSystem = Nothing
                                _recordTarget.patientRole.patient.ethnicGroupCode(0).codeSystemName = Nothing
                                _recordTarget.patientRole.patient.ethnicGroupCode(0).codeSystemVersion = Nothing
                                _recordTarget.patientRole.patient.ethnicGroupCode(0).displayName = Nothing
                                _recordTarget.patientRole.patient.ethnicGroupCode(0).nullFlavor = "ASKU"
                                Exit For
                            Else
                                _recordTarget.patientRole.patient.ethnicGroupCode(k) = New CE()
                                If oRaces.OMBCode = "UNK" Then

                                    _recordTarget.patientRole.patient.ethnicGroupCode(k).nullFlavor = "UNK"
                                    _recordTarget.patientRole.patient.ethnicGroupCode(k).displayName = Nothing
                                    _recordTarget.patientRole.patient.ethnicGroupCode(k).codeSystem = Nothing
                                    _recordTarget.patientRole.patient.ethnicGroupCode(k).codeSystemName = Nothing
                                    _recordTarget.patientRole.patient.ethnicGroupCode(k).codeSystemVersion = Nothing
                                Else

                                    _recordTarget.patientRole.patient.ethnicGroupCode(k).code = oRaces.OMBCode
                                    _recordTarget.patientRole.patient.ethnicGroupCode(k).displayName = oRaces.OMBDescription
                                    _recordTarget.patientRole.patient.ethnicGroupCode(k).codeSystem = CodeSystem.RaceAndEthnicity
                                    _recordTarget.patientRole.patient.ethnicGroupCode(k).codeSystemName = "Race and Ethnicity - CDC"
                                    _recordTarget.patientRole.patient.ethnicGroupCode(k).codeSystemVersion = Nothing
                                End If

                                If Not IsNothing(oRaces.CDCCol) AndAlso oRaces.CDCCol.Count > 0 Then



                                    ' _recordTarget.patientRole.patient.ethnicGroupCode(k) = New CD(oRaces.CDCCol.Count - 1) {}
                                    For _CDCcnt As Integer = 0 To oRaces.CDCCol.Count - 1

                                        Dim oCDCDetails As CDCRaceDetails = oRaces.CDCCol.Item(_CDCcnt)
                                        _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth) = New CE()
                                        _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth).code = oCDCDetails.CDCCode
                                        _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth).displayName = oCDCDetails.CDCDescription
                                        _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth).codeSystem = CodeSystem.RaceAndEthnicity
                                        _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth).codeSystemName = "Race and Ethnicity - CDC"
                                        _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth).codeSystemVersion = Nothing
                                        _cntEth = _cntEth + 1
                                    Next






                                End If
                                'If oRaceDetails.Count = 1 Then
                                '    _recordTarget.patientRole.patient.ethnicGroupCode1(k) = New CE()
                                '    _recordTarget.patientRole.patient.ethnicGroupCode1(k).code = Nothing
                                '    _recordTarget.patientRole.patient.ethnicGroupCode1(k).displayName = Nothing
                                '    _recordTarget.patientRole.patient.ethnicGroupCode1(k).codeSystem = Nothing
                                '    _recordTarget.patientRole.patient.ethnicGroupCode1(k).codeSystemName = Nothing
                                '    _recordTarget.patientRole.patient.ethnicGroupCode1(k).codeSystemVersion = Nothing
                                '    _recordTarget.patientRole.patient.ethnicGroupCode1(k).nullFlavor = "UNK"
                                'End If
                            End If

                        Else
                            Dim oRaces As RaceDetails = DirectCast(oRaceDetails.Item(k), gloCCDLibrary.RaceDetails)

                            _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth) = New CE()
                            _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth).code = oRaces.OMBCode
                            _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth).displayName = oRaces.OMBDescription
                            _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth).codeSystem = CodeSystem.RaceAndEthnicity
                            _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth).codeSystemName = "Race and Ethnicity - CDC"
                            _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth).codeSystemVersion = Nothing
                            _cntEth = _cntEth + 1
                            If Not IsNothing(oRaces.CDCCol) AndAlso oRaces.CDCCol.Count > 0 Then


                                ' _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth) = New CD(oRaces.CDCCol.Count - 1) {}
                                For _CDCcnt As Integer = 0 To oRaces.CDCCol.Count - 1

                                    Dim oCDCDetails As CDCRaceDetails = oRaces.CDCCol.Item(_CDCcnt)
                                    _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth) = New CE()
                                    _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth).code = oCDCDetails.CDCCode
                                    _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth).displayName = oCDCDetails.CDCDescription
                                    _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth).codeSystem = CodeSystem.RaceAndEthnicity
                                    _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth).codeSystemName = "Race and Ethnicity - CDC"
                                    _recordTarget.patientRole.patient.ethnicGroupCode1(_cntEth).codeSystemVersion = Nothing
                                    _cntEth = _cntEth + 1
                                Next
                            End If
                        End If

                    Next


                Else
                    _recordTarget.patientRole.patient.ethnicGroupCode = New CE(0) {}
                    _recordTarget.patientRole.patient.ethnicGroupCode(0) = New CE()
                    _recordTarget.patientRole.patient.ethnicGroupCode(0).code = Nothing
                    _recordTarget.patientRole.patient.ethnicGroupCode(0).codeSystem = Nothing
                    _recordTarget.patientRole.patient.ethnicGroupCode(0).codeSystemName = Nothing
                    _recordTarget.patientRole.patient.ethnicGroupCode(0).codeSystemVersion = Nothing
                    _recordTarget.patientRole.patient.ethnicGroupCode(0).displayName = Nothing
                    _recordTarget.patientRole.patient.ethnicGroupCode(0).nullFlavor = "UNK"
                End If


                ''Patient Language
                _recordTarget.patientRole.patient.languageCommunication = New POCD_MT000040UV02LanguageCommunication(0) {}
                _recordTarget.patientRole.patient.languageCommunication(0) = New POCD_MT000040UV02LanguageCommunication()

                If mPatient.LanguageCode IsNot Nothing AndAlso mPatient.LanguageCode <> "" Then
                    _recordTarget.patientRole.patient.languageCommunication(0).languageCode = New CS()
                    If mPatient.LanguageCode.Length > 2 Then
                        _recordTarget.patientRole.patient.languageCommunication(0).languageCode.code = mPatient.LanguageCode.Substring(0, 3)
                    Else
                        _recordTarget.patientRole.patient.languageCommunication(0).languageCode.code = mPatient.LanguageCode
                    End If

                    _recordTarget.patientRole.patient.languageCommunication(0).languageCode.codeSystem = Nothing
                    _recordTarget.patientRole.patient.languageCommunication(0).languageCode.codeSystemName = Nothing
                    _recordTarget.patientRole.patient.languageCommunication(0).languageCode.codeSystemVersion = Nothing
                    _recordTarget.patientRole.patient.languageCommunication(0).languageCode.displayName = Nothing
                ElseIf mPatient.Language IsNot Nothing AndAlso mPatient.Language <> "" Then
                    If mPatient.Language = "Declined to specify" Then
                        _recordTarget.patientRole.patient.languageCommunication(0).languageCode = New CS()
                        _recordTarget.patientRole.patient.languageCommunication(0).languageCode.code = Nothing
                        _recordTarget.patientRole.patient.languageCommunication(0).languageCode.codeSystem = Nothing
                        _recordTarget.patientRole.patient.languageCommunication(0).languageCode.codeSystemName = Nothing
                        _recordTarget.patientRole.patient.languageCommunication(0).languageCode.codeSystemVersion = Nothing
                        _recordTarget.patientRole.patient.languageCommunication(0).languageCode.displayName = Nothing
                        _recordTarget.patientRole.patient.languageCommunication(0).languageCode.nullFlavor = "ASKU"
                    Else
                        ''
                        _recordTarget.patientRole.patient.languageCommunication(0).languageCode = New CS()
                        _recordTarget.patientRole.patient.languageCommunication(0).languageCode.code = Nothing
                        _recordTarget.patientRole.patient.languageCommunication(0).languageCode.codeSystem = Nothing
                        _recordTarget.patientRole.patient.languageCommunication(0).languageCode.codeSystemName = Nothing
                        _recordTarget.patientRole.patient.languageCommunication(0).languageCode.codeSystemVersion = Nothing
                        _recordTarget.patientRole.patient.languageCommunication(0).languageCode.displayName = Nothing
                        _recordTarget.patientRole.patient.languageCommunication(0).languageCode.nullFlavor = "NA"
                    End If
                Else

                    ''
                    _recordTarget.patientRole.patient.languageCommunication(0).languageCode = New CS()
                    _recordTarget.patientRole.patient.languageCommunication(0).languageCode.code = Nothing
                    _recordTarget.patientRole.patient.languageCommunication(0).languageCode.codeSystem = Nothing
                    _recordTarget.patientRole.patient.languageCommunication(0).languageCode.codeSystemName = Nothing
                    _recordTarget.patientRole.patient.languageCommunication(0).languageCode.codeSystemVersion = Nothing
                    _recordTarget.patientRole.patient.languageCommunication(0).languageCode.displayName = Nothing
                    '_recordTarget.patientRole.patient.languageCommunication(0).languageCode = Nothing
                    _recordTarget.patientRole.patient.languageCommunication(0).languageCode.nullFlavor = "NA"
                End If
                _recordTarget.patientRole.patient.languageCommunication(0).modeCode = New CE()
                _recordTarget.patientRole.patient.languageCommunication(0).modeCode.code = "ESP"
                _recordTarget.patientRole.patient.languageCommunication(0).modeCode.displayName = "Expressed spoken"
                _recordTarget.patientRole.patient.languageCommunication(0).modeCode.codeSystem = "2.16.840.1.113883.5.60"
                _recordTarget.patientRole.patient.languageCommunication(0).modeCode.codeSystemName = "LanguageAbilityMode"
                _recordTarget.patientRole.patient.languageCommunication(0).modeCode.codeSystemVersion = Nothing


                ''Added to remove CCDA Warnings
                If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                    _recordTarget.patientRole.patient.languageCommunication(0).proficiencyLevelCode = New CE()
                    '_recordTarget.patientRole.patient.languageCommunication(0).proficiencyLevelCode.nullFlavorSpecified = True
                    _recordTarget.patientRole.patient.languageCommunication(0).proficiencyLevelCode.nullFlavor = "NI"
                    _recordTarget.patientRole.patient.languageCommunication(0).proficiencyLevelCode.code = Nothing
                    _recordTarget.patientRole.patient.languageCommunication(0).proficiencyLevelCode.codeSystem = Nothing
                    _recordTarget.patientRole.patient.languageCommunication(0).proficiencyLevelCode.codeSystemName = Nothing
                    _recordTarget.patientRole.patient.languageCommunication(0).proficiencyLevelCode.codeSystemVersion = Nothing
                    _recordTarget.patientRole.patient.languageCommunication(0).proficiencyLevelCode.displayName = Nothing
                End If
                ''
            End If

            Return _recordTarget
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Record Target Section"
            Else
                _msgString = _msgString & vbNewLine & "Record Target Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            '  MessageBox.Show("Error:" & ex.ToString())
            Return Nothing
        Finally
            _CodeSysItem = Nothing
            If Not IsNothing(_oCDADataExtraction) Then
                _oCDADataExtraction.Dispose()
                _oCDADataExtraction = Nothing
            End If
            'If Not IsNothing(_recordTarget) Then
            '    _recordTarget = Nothing
            'End If
        End Try
    End Function
    Private Function GetCDAAuthor() As POCD_MT000040UV02Author
        Dim _author As POCD_MT000040UV02Author()
        Dim _person As POCD_MT000040UV02Person = Nothing
        Dim oAuthor As gloCCDLibrary.PatientAuthor = Nothing
        Try

            If IsNothing(mPatient.Author) Then
                Return Nothing
            Else
                oAuthor = mPatient.Author
            End If
            'Author
            _author = New POCD_MT000040UV02Author(0) {}

            _author(0) = New POCD_MT000040UV02Author

            '----
            If gloLibCCDGeneral.sConfidentialityCode.ToLower = "restricted" Then
                _author(0).templateId = New II(0) {}
                _author(0).templateId(0) = New II()
                _author(0).templateId(0).root = "2.16.840.1.113883.3.3251.1.2"
                _author(0).templateId(0).extension = Nothing
                _author(0).templateId(0).assigningAuthorityName = "HL7 Security"
            End If
            '----

            _author(0).typeCode = Nothing
            _author(0).typeCodeSpecified = False
            _author(0).contextControlCode = Nothing
            _author(0).time = New TS()
            ''_author(0).time.value = System.DateTime.Now.ToString("yyyyMMddmmss")
            ''As per QualityNet after first validation on CMS

            _author(0).time.value = DateTime.Now.ToString("yyyyMMddhhmmss") & Replace(DateTime.Now.ToString("zzzz"), ":", "")
            _author(0).assignedAuthor = New POCD_MT000040UV02AssignedAuthor()
            _author(0).assignedAuthor.classCode = Nothing
            _author(0).assignedAuthor.classCodeSpecified = False
            _author(0).assignedAuthor.id = New II(0) {}
            _author(0).assignedAuthor.id(0) = New II()
            If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Or _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then


                ''As per QualityNet after first validation on CMS
                _author(0).assignedAuthor.id(0).root = System.Guid.NewGuid().ToString()
                _author(0).assignedAuthor.id(0).extension = Nothing
            Else
                '----
                If gloLibCCDGeneral.sConfidentialityCode.ToLower = "restricted" Then
                    _author(0).assignedAuthor.templateId = New II(0) {}
                    _author(0).assignedAuthor.templateId(0) = New II()
                    _author(0).assignedAuthor.templateId(0).root = "2.16.840.1.113883.3.3251.1.3"
                    _author(0).assignedAuthor.templateId(0).extension = Nothing
                    _author(0).assignedAuthor.templateId(0).assigningAuthorityName = "HL7 Security"
                End If
                '----

                _author(0).assignedAuthor.id(0).root = "2.16.840.1.113883.4.6"
                If oAuthor.PersonName IsNot Nothing AndAlso oAuthor.PersonName.Code IsNot Nothing AndAlso oAuthor.PersonName.Code <> "" Then
                    _author(0).assignedAuthor.id(0).extension = oAuthor.PersonName.ID
                Else
                    _author(0).assignedAuthor.id(0).extension = Nothing
                End If
                End If

                _author(0).assignedAuthor.id(0).assigningAuthorityName = Nothing
                If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                _author(0).assignedAuthor.code = New CE()
                If oAuthor.PersonName.TaxonomyCode <> "" Then
                    _author(0).assignedAuthor.code.code = oAuthor.PersonName.TaxonomyCode
                    _author(0).assignedAuthor.code.codeSystem = CodeSystem.TaxanomyCodeSystem
                    _author(0).assignedAuthor.code.codeSystemName = "Healthcare Provider Taxonomy (HIPAA)"
                    If oAuthor.PersonName.TaxonomyDesc <> "" Then
                        _author(0).assignedAuthor.code.displayName = oAuthor.PersonName.TaxonomyDesc
                    Else
                        _author(0).assignedAuthor.code.displayName = Nothing
                    End If
                Else
                    _author(0).assignedAuthor.code.nullFlavorSpecified = True
                    _author(0).assignedAuthor.code.nullFlavor = "UNK"
                    _author(0).assignedAuthor.code.codeSystem = Nothing
                    _author(0).assignedAuthor.code.codeSystemName = Nothing
                    _author(0).assignedAuthor.code.displayName = Nothing
                End If
                _author(0).assignedAuthor.code.codeSystemVersion = Nothing
            
                End If
                _author(0).assignedAuthor.addr = New AD(0) {}
                _author(0).assignedAuthor.addr(0) = New AD()
                If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                    _author(0).assignedAuthor.addr(0).use = New PostalAddressUse(0) {}
                    _author(0).assignedAuthor.addr(0).use(0) = PostalAddressUse.WP
                End If
                _author(0).assignedAuthor.addr(0).Items = New ADXP(4) {}
                'StreetAddress
                _author(0).assignedAuthor.addr(0).Items(0) = New adxpstreetAddressLine()
                _author(0).assignedAuthor.addr(0).Items(0).language = Nothing
                _author(0).assignedAuthor.addr(0).Items(0).partType = Nothing
                If oAuthor.PersonContactAddress IsNot Nothing AndAlso oAuthor.PersonContactAddress.Street IsNot Nothing AndAlso oAuthor.PersonContactAddress.Street <> "" Then
                    _author(0).assignedAuthor.addr(0).Items(0).Text = New String() {oAuthor.PersonContactAddress.Street.Trim}
                Else
                    _author(0).assignedAuthor.addr(0).Items(0).Text = Nothing
                    _author(0).assignedAuthor.addr(0).Items(0).nullFlavor = "NA"

                End If

                'City
                _author(0).assignedAuthor.addr(0).Items(1) = New adxpcity()
                _author(0).assignedAuthor.addr(0).Items(1).language = Nothing
                _author(0).assignedAuthor.addr(0).Items(1).partType = Nothing
                If oAuthor.PersonContactAddress IsNot Nothing AndAlso oAuthor.PersonContactAddress.City IsNot Nothing AndAlso oAuthor.PersonContactAddress.City <> "" Then
                    _author(0).assignedAuthor.addr(0).Items(1).Text = New String() {oAuthor.PersonContactAddress.City}
                Else
                    _author(0).assignedAuthor.addr(0).Items(1).Text = Nothing
                    _author(0).assignedAuthor.addr(0).Items(1).nullFlavor = "NA"
                End If

                'State
                _author(0).assignedAuthor.addr(0).Items(2) = New adxpstate()
                _author(0).assignedAuthor.addr(0).Items(2).language = Nothing
                _author(0).assignedAuthor.addr(0).Items(2).partType = Nothing
                If oAuthor.PersonContactAddress IsNot Nothing AndAlso oAuthor.PersonContactAddress.State IsNot Nothing AndAlso oAuthor.PersonContactAddress.State <> "" Then
                    _author(0).assignedAuthor.addr(0).Items(2).Text = New String() {oAuthor.PersonContactAddress.State}
                Else
                    If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Or _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then
                        _author(0).assignedAuthor.addr(0).Items(2).Text = Nothing
                    Else
                        _author(0).assignedAuthor.addr(0).Items(2).Text = Nothing
                        _author(0).assignedAuthor.addr(0).Items(2).nullFlavor = "NA"
                    End If
                End If

                'Zip Code
                _author(0).assignedAuthor.addr(0).Items(3) = New adxppostalCode()
                _author(0).assignedAuthor.addr(0).Items(3).language = Nothing
                _author(0).assignedAuthor.addr(0).Items(3).partType = Nothing
                If oAuthor.PersonContactAddress IsNot Nothing AndAlso oAuthor.PersonContactAddress.Zip IsNot Nothing AndAlso oAuthor.PersonContactAddress.Zip <> "" Then
                    _author(0).assignedAuthor.addr(0).Items(3).Text = New String() {oAuthor.PersonContactAddress.Zip}
                Else
                    If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Or _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then
                        _author(0).assignedAuthor.addr(0).Items(3).Text = Nothing
                    Else
                        _author(0).assignedAuthor.addr(0).Items(3).Text = Nothing
                        _author(0).assignedAuthor.addr(0).Items(3).nullFlavor = "NA"
                    End If

                End If

                '  _author(0).assignedAuthor.addr(0).Items(4) = Nothing
                'country
                _author(0).assignedAuthor.addr(0).Items(4) = New adxpcountry()
                _author(0).assignedAuthor.addr(0).Items(4).language = Nothing
                _author(0).assignedAuthor.addr(0).Items(4).partType = Nothing
                If oAuthor.PersonContactAddress IsNot Nothing AndAlso oAuthor.PersonContactAddress.Country IsNot Nothing AndAlso oAuthor.PersonContactAddress.Country <> "" Then
                    _author(0).assignedAuthor.addr(0).Items(4).Text = New String() {oAuthor.PersonContactAddress.Country}
                Else
                    If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Or _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then
                        _author(0).assignedAuthor.addr(0).Items(4).Text = Nothing
                    Else
                        _author(0).assignedAuthor.addr(0).Items(4).Text = Nothing
                        _author(0).assignedAuthor.addr(0).Items(4).nullFlavor = "NA"
                    End If

                End If
                _author(0).assignedAuthor.telecom = New TEL(0) {}
                _author(0).assignedAuthor.telecom(0) = New TEL()
                If oAuthor.Phone IsNot Nothing AndAlso oAuthor.Phone <> "" Then
                    _author(0).assignedAuthor.telecom(0).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(oAuthor.Phone))
                Else
                    _author(0).assignedAuthor.telecom(0).nullFlavor = "NI"
                    _author(0).assignedAuthor.telecom(0).value = Nothing
                End If
                _author(0).assignedAuthor.telecom(0).use = New TelecommunicationAddressUse(0) {}
                _author(0).assignedAuthor.telecom(0).use(0) = TelecommunicationAddressUse.WP
                If _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then
                    _author(0).assignedAuthor.assignedAuthoringDevice = New POCD_MT000040UV02AuthoringDevice()
                    _author(0).assignedAuthor.assignedAuthoringDevice.classCode = Nothing
                    _author(0).assignedAuthor.assignedAuthoringDevice.classCodeSpecified = False
                    _author(0).assignedAuthor.assignedAuthoringDevice.determinerCode = Nothing
                    _author(0).assignedAuthor.assignedAuthoringDevice.softwareName = New SC()
                    _author(0).assignedAuthor.assignedAuthoringDevice.softwareName.representation = Nothing
                    _author(0).assignedAuthor.assignedAuthoringDevice.softwareName.mediaType = Nothing
                    _author(0).assignedAuthor.assignedAuthoringDevice.softwareName.language = Nothing
                    _author(0).assignedAuthor.assignedAuthoringDevice.softwareName.code = Nothing
                    _author(0).assignedAuthor.assignedAuthoringDevice.softwareName.codeSystem = Nothing
                    _author(0).assignedAuthor.assignedAuthoringDevice.softwareName.codeSystemName = Nothing
                    _author(0).assignedAuthor.assignedAuthoringDevice.softwareName.codeSystemVersion = Nothing
                    _author(0).assignedAuthor.assignedAuthoringDevice.softwareName.displayName = Nothing
                    _author(0).assignedAuthor.representedOrganization = New POCD_MT000040UV02Organization()
                    _author(0).assignedAuthor.representedOrganization.id = New II(0) {}
                    _author(0).assignedAuthor.representedOrganization.id(0) = New II()


                    _author(0).assignedAuthor.representedOrganization.id(0).root = "2.16.840.1.113883.4.2"

                    ''As per QualityNet after first validation on CMS

                    If Not IsNothing(mPatient.Clinic) Then
                        If mPatient.Clinic.ClinicTaxID IsNot Nothing AndAlso mPatient.Clinic.ClinicTaxID <> "" Then
                            _author(0).assignedAuthor.representedOrganization.id(0).extension = mPatient.Clinic.ClinicTaxID
                        Else
                            _author(0).assignedAuthor.representedOrganization.id(0).extension = Nothing
                            _author(0).assignedAuthor.representedOrganization.id(0).root = Nothing
                            _author(0).assignedAuthor.representedOrganization.id(0).nullFlavor = "UNK"
                        End If
                    Else
                        _author(0).assignedAuthor.representedOrganization.id(0).extension = Nothing
                        _author(0).assignedAuthor.representedOrganization.id(0).root = Nothing
                        _author(0).assignedAuthor.representedOrganization.id(0).nullFlavor = "UNK"
                    End If

                    '_author(0).assignedAuthor.representedOrganization.id(0).root = Nothing
                    '_author(0).assignedAuthor.representedOrganization.id(0).extension = Nothing
                    _author(0).assignedAuthor.representedOrganization.id(0).assigningAuthorityName = Nothing
                    _author(0).assignedAuthor.representedOrganization.name = New [ON](0) {}
                    _author(0).assignedAuthor.representedOrganization.name(0) = New [ON]
                    _author(0).assignedAuthor.representedOrganization.name(0).Text = Nothing
                    _author(0).assignedAuthor.representedOrganization.classCode = Nothing
                    _author(0).assignedAuthor.representedOrganization.classCodeSpecified = False
                    _author(0).assignedAuthor.representedOrganization.determinerCode = Nothing
                Else
                    _author(0).assignedAuthor.Item = New POCD_MT000040UV02Person
                    _person = DirectCast(_author(0).assignedAuthor.Item, POCD_MT000040UV02Person)
                    _person.classCode = Nothing
                    _person.classCodeSpecified = False
                    _person.determinerCode = Nothing
                    _person.name = New PN(0) {}
                    _person.name(0) = New PN()
                    _person.name(0).Items = New ENXP(4) {}
                    If oAuthor.PersonName IsNot Nothing AndAlso oAuthor.PersonName.Prefix IsNot Nothing AndAlso oAuthor.PersonName.Prefix <> "" Then
                        _person.name(0).Items(0) = New enprefix()
                        _person.name(0).Items(0).Text = New String() {oAuthor.PersonName.Prefix}
                        _person.name(0).Items(0).language = Nothing
                        _person.name(0).Items(0).partType = Nothing
                    Else
                        _person.name(0).Items(0) = Nothing
                    End If
                    If oAuthor.PersonName IsNot Nothing AndAlso oAuthor.PersonName.FirstName IsNot Nothing AndAlso oAuthor.PersonName.FirstName <> "" Then
                        _person.name(0).Items(1) = New engiven()
                        _person.name(0).Items(1).Text = New String() {oAuthor.PersonName.FirstName}
                        _person.name(0).Items(1).language = Nothing
                        _person.name(0).Items(1).partType = Nothing
                    Else
                        _person.name(0).Items(1) = Nothing
                    End If
                    If oAuthor.PersonName IsNot Nothing AndAlso oAuthor.PersonName.MiddleName IsNot Nothing AndAlso oAuthor.PersonName.MiddleName <> "" Then
                        _person.name(0).Items(2) = New engiven()
                        _person.name(0).Items(2).Text = New String() {oAuthor.PersonName.MiddleName}
                        _person.name(0).Items(2).language = Nothing
                        _person.name(0).Items(2).partType = Nothing
                    Else
                        _person.name(0).Items(2) = Nothing
                    End If

                    If oAuthor.PersonName IsNot Nothing AndAlso oAuthor.PersonName.LastName IsNot Nothing AndAlso oAuthor.PersonName.LastName <> "" Then
                        _person.name(0).Items(3) = New enfamily()
                        _person.name(0).Items(3).Text = New String() {oAuthor.PersonName.LastName}
                        _person.name(0).Items(3).language = Nothing
                        _person.name(0).Items(3).partType = Nothing
                    Else
                        _person.name(0).Items(3) = Nothing
                    End If


                    If oAuthor.PersonName IsNot Nothing AndAlso oAuthor.PersonName.Suffix IsNot Nothing AndAlso oAuthor.PersonName.Suffix <> "" Then
                        _person.name(0).Items(4) = New ensuffix()
                        _person.name(0).Items(4).Text = New String() {oAuthor.PersonName.Suffix}
                        _person.name(0).Items(4).language = Nothing
                        _person.name(0).Items(4).partType = Nothing
                    Else
                        _person.name(0).Items(4) = Nothing
                    End If
                End If
                Return _author(0)
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Author Section"
            Else
                _msgString = _msgString & vbNewLine & "Author Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            '  MessageBox.Show("Error:" & ex.ToString())
            Return Nothing
        Finally
            If Not IsNothing(oAuthor) Then
                oAuthor.Dispose()
                oAuthor = Nothing
            End If
            _person = Nothing

        End Try
    End Function
    Private Function GetCDAinformationRecipient() As POCD_MT000040UV02Participant
        Dim _Recipient As POCD_MT000040UV02Participant()
        Dim _person As POCD_MT000040UV02Person = Nothing
        Dim oRecipient As gloCCDLibrary.InfoRecipent = Nothing
        Try

         



            If Not IsNothing(mPatient.InfoRecipent) Then
                oRecipient = mPatient.InfoRecipent
            End If

            'Author
            _Recipient = New POCD_MT000040UV02Participant(0) {}

            _Recipient(0) = New POCD_MT000040UV02Participant
            _Recipient(0).typeCode = Nothing
            _Recipient(0).typeCodeSpecified = False
            _Recipient(0).realmCode = Nothing
            _Recipient(0).templateId = Nothing
            _Recipient(0).typeId = Nothing
            _Recipient(0).intendedRecipient = New POCD_MT000040UV02IntendedRecipient()
            _Recipient(0).intendedRecipient.classCode = Nothing
            _Recipient(0).intendedRecipient.classCodeSpecified = False
            If Not IsNothing(oRecipient) Then
                _Recipient(0).intendedRecipient.informationRecipient = New POCD_MT000040UV02Person()
                _Recipient(0).intendedRecipient.informationRecipient.birthTime = Nothing
                _Recipient(0).intendedRecipient.informationRecipient.classCode = Nothing
                _Recipient(0).intendedRecipient.informationRecipient.classCodeSpecified = False
                _Recipient(0).intendedRecipient.informationRecipient.desc = Nothing
                _Recipient(0).intendedRecipient.informationRecipient.determinerCode = Nothing
                _Recipient(0).intendedRecipient.informationRecipient.determinerCodeSpecified = False

                _Recipient(0).intendedRecipient.informationRecipient.name = New PN() {}
                ''



                _Recipient(0).intendedRecipient.informationRecipient = New POCD_MT000040UV02Person()
                _person = DirectCast(_Recipient(0).intendedRecipient.informationRecipient, POCD_MT000040UV02Person)
                _person.classCode = Nothing
                _person.classCodeSpecified = False
                _person.determinerCode = Nothing
                _person.name = New PN(0) {}
                _person.name(0) = New PN()
                _person.name(0).Items = New ENXP(4) {}
                If oRecipient.Prefix IsNot Nothing AndAlso oRecipient.Prefix <> "" Then
                    _person.name(0).Items(0) = New enprefix()
                    _person.name(0).Items(0).Text = New String() {oRecipient.Prefix}
                    _person.name(0).Items(0).language = Nothing
                    _person.name(0).Items(0).partType = Nothing
                Else
                    _person.name(0).Items(0) = Nothing
                End If
                If oRecipient.Suffix IsNot Nothing AndAlso oRecipient.Suffix <> "" Then
                    _person.name(0).Items(1) = New ensuffix()
                    _person.name(0).Items(1).Text = New String() {oRecipient.Suffix}
                    _person.name(0).Items(1).language = Nothing
                    _person.name(0).Items(1).partType = Nothing
                Else
                    _person.name(0).Items(1) = Nothing
                End If
                If oRecipient.FirstName IsNot Nothing AndAlso oRecipient.FirstName <> "" Then
                    _person.name(0).Items(2) = New engiven()
                    _person.name(0).Items(2).Text = New String() {oRecipient.FirstName}
                    _person.name(0).Items(2).language = Nothing
                    _person.name(0).Items(2).partType = Nothing
                Else
                    _person.name(0).Items(2) = Nothing
                End If
                If oRecipient.MiddleName IsNot Nothing AndAlso oRecipient.MiddleName <> "" Then
                    _person.name(0).Items(3) = New engiven()
                    _person.name(0).Items(3).Text = New String() {oRecipient.MiddleName}
                    _person.name(0).Items(3).language = Nothing
                    _person.name(0).Items(3).partType = Nothing
                Else
                    _person.name(0).Items(3) = Nothing
                End If
                If oRecipient.LastName IsNot Nothing AndAlso oRecipient.LastName <> "" Then
                    _person.name(0).Items(4) = New enfamily()
                    _person.name(0).Items(4).Text = New String() {oRecipient.LastName}
                    _person.name(0).Items(4).language = Nothing
                    _person.name(0).Items(4).partType = Nothing
                Else
                    _person.name(0).Items(4) = Nothing
                End If
            End If
            _Recipient(0).intendedRecipient.receivedOrganization = New POCD_MT000040UV02Organization
            _Recipient(0).intendedRecipient.receivedOrganization.id = Nothing
            _Recipient(0).intendedRecipient.receivedOrganization.classCode = Nothing
            _Recipient(0).intendedRecipient.receivedOrganization.classCodeSpecified = False
            ' _Recipient(0).intendedRecipient.receivedOrganization.id(0).assigningAuthorityName = Nothing
            _Recipient(0).intendedRecipient.receivedOrganization.name = New [ON](0) {}
            _Recipient(0).intendedRecipient.receivedOrganization.name(0) = New [ON]
            If mPatient.Clinic.ClinicName IsNot Nothing AndAlso mPatient.Clinic.ClinicName <> "" Then
                _Recipient(0).intendedRecipient.receivedOrganization.name(0).Text = New String() {mPatient.Clinic.ClinicName}
            Else
                _Recipient(0).intendedRecipient.receivedOrganization.name(0).Text = Nothing
            End If


            Return _Recipient(0)
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Author Section"
            Else
                _msgString = _msgString & vbNewLine & "Author Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            '  MessageBox.Show("Error:" & ex.ToString())
            Return Nothing
        Finally
            If Not IsNothing(oRecipient) Then
                oRecipient.Dispose()
                oRecipient = Nothing
            End If
            _person = Nothing

        End Try
    End Function

    Private Function GetCDACustodian() As POCD_MT000040UV02Custodian
        Dim _custodian As POCD_MT000040UV02Custodian
        Try
            If IsNothing(mPatient.Clinic) Then
                Return Nothing
            End If
            '_custodian
            _custodian = New POCD_MT000040UV02Custodian

            _custodian.typeCode = Nothing
            _custodian.typeCodeSpecified = False
            _custodian.assignedCustodian = New POCD_MT000040UV02AssignedCustodian()
            _custodian.assignedCustodian.classCode = Nothing
            _custodian.assignedCustodian.classCodeSpecified = False
            _custodian.assignedCustodian.representedCustodianOrganization = New POCD_MT000040UV02CustodianOrganization()
            _custodian.assignedCustodian.representedCustodianOrganization.classCode = Nothing
            _custodian.assignedCustodian.representedCustodianOrganization.classCodeSpecified = False
            _custodian.assignedCustodian.representedCustodianOrganization.determinerCode = Nothing
            _custodian.assignedCustodian.representedCustodianOrganization.id = New II(0) {}
            _custodian.assignedCustodian.representedCustodianOrganization.id(0) = New II()

            If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                _custodian.assignedCustodian.representedCustodianOrganization.id(0).root = "2.16.840.1.113883.4.6"
            Else
                _custodian.assignedCustodian.representedCustodianOrganization.id(0).root = "1.1.1.1.1.1.1.1.2"
            End If

            _custodian.assignedCustodian.representedCustodianOrganization.id(0).assigningAuthorityName = Nothing
            _custodian.assignedCustodian.representedCustodianOrganization.id(0).extension = Nothing
            _custodian.assignedCustodian.representedCustodianOrganization.id(0).nullFlavor = Nothing
            _custodian.assignedCustodian.representedCustodianOrganization.name = New [ON]()
            If mPatient.Clinic.ClinicName IsNot Nothing AndAlso mPatient.Clinic.ClinicName <> "" Then
                _custodian.assignedCustodian.representedCustodianOrganization.name.Text = New String() {mPatient.Clinic.ClinicName}
            Else
                _custodian.assignedCustodian.representedCustodianOrganization.name.Text = Nothing
                ' _custodian.assignedCustodian.representedCustodianOrganization.name.nullFlavorSpecified = True
                _custodian.assignedCustodian.representedCustodianOrganization.name.nullFlavor = "NI"
            End If
            _custodian.assignedCustodian.representedCustodianOrganization.telecom = New TEL()
            If mPatient.Clinic.PersonContactPhone IsNot Nothing AndAlso mPatient.Clinic.PersonContactPhone.Phone IsNot Nothing AndAlso mPatient.Clinic.PersonContactPhone.Phone <> "" Then
                _custodian.assignedCustodian.representedCustodianOrganization.telecom.value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(mPatient.Clinic.PersonContactPhone.Phone))
            Else

                '_custodian.assignedCustodian.representedCustodianOrganization.telecom.nullFlavorSpecified = True
                _custodian.assignedCustodian.representedCustodianOrganization.telecom.nullFlavor = "NI"
                _custodian.assignedCustodian.representedCustodianOrganization.telecom.value = Nothing

            End If

            _custodian.assignedCustodian.representedCustodianOrganization.telecom.use = New TelecommunicationAddressUse(0) {}
            _custodian.assignedCustodian.representedCustodianOrganization.telecom.use(0) = TelecommunicationAddressUse.WP

            _custodian.assignedCustodian.representedCustodianOrganization.addr = New AD()
            If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                _custodian.assignedCustodian.representedCustodianOrganization.addr.use = New PostalAddressUse(0) {}
                _custodian.assignedCustodian.representedCustodianOrganization.addr.use(0) = PostalAddressUse.WP
            End If
            _custodian.assignedCustodian.representedCustodianOrganization.addr.Items = New ADXP(4) {}
            'Street
            _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(0) = New adxpstreetAddressLine()
            _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(0).language = Nothing
            _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(0).partType = Nothing
            If mPatient.Clinic.PersonContactAddress IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.Street IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.Street <> "" Then
                _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(0).Text = New String() {mPatient.Clinic.PersonContactAddress.Street}
            Else
                _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(0).Text = Nothing
                _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(0).nullFlavor = "NA"
            End If

            'City
            _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(1) = New adxpcity()
            _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(1).language = Nothing
            _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(1).partType = Nothing
            If mPatient.Clinic.PersonContactAddress IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.City IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.City <> "" Then
                _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(1).Text = New String() {mPatient.Clinic.PersonContactAddress.City}
            Else
                _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(1).Text = Nothing
                _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(1).nullFlavor = "NA"
            End If

            'State
            _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(2) = New adxpstate()
            _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(2).language = Nothing
            _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(2).partType = Nothing
            If mPatient.Clinic.PersonContactAddress IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.State IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.State <> "" Then
                _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(2).Text = New String() {mPatient.Clinic.PersonContactAddress.State}
            Else
                If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Or _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then
                    _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(2).Text = Nothing
                Else
                    _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(2).Text = Nothing
                    _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(2).nullFlavor = "NA"

                End If


            End If

            'Zip
            _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(3) = New adxppostalCode()
            _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(3).language = Nothing
            _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(3).partType = Nothing
            If mPatient.Clinic.PersonContactAddress IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.Zip IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.Zip <> "" Then
                _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(3).Text = New String() {mPatient.Clinic.PersonContactAddress.Zip}
            Else
                If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Or _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then
                    _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(3).Text = Nothing
                Else
                    _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(3).Text = Nothing
                    _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(3).nullFlavor = "NA"

                End If


            End If

            'Country
            _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(4) = New adxpcountry()
            _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(4).language = Nothing
            _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(4).partType = Nothing
            If mPatient.Clinic.PersonContactAddress IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.Country IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.Country <> "" Then
                _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(4).Text = New String() {mPatient.Clinic.PersonContactAddress.Country}
            Else
                If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Or _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then
                    _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(4).Text = Nothing
                Else
                    _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(4).Text = Nothing
                    _custodian.assignedCustodian.representedCustodianOrganization.addr.Items(4).nullFlavor = "NA"

                End If


            End If

            Return _custodian
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Custodian Section"
            Else
                _msgString = _msgString & vbNewLine & "Custodian Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            '  MessageBox.Show("Error:" & ex.ToString())
            Return Nothing
        Finally

        End Try
    End Function
    Private Function GetCDAdocumentationOf() As POCD_MT000040UV02DocumentationOf
        Dim _documentaionof As POCD_MT000040UV02DocumentationOf()
        Dim oTeamMember As PatientSupport = Nothing
        Try
            'DocumentationOf
            _documentaionof = New POCD_MT000040UV02DocumentationOf(0) {}
            _documentaionof(0) = New POCD_MT000040UV02DocumentationOf()

            _documentaionof(0).typeCode = ActRelationshipType.DOC
            _documentaionof(0).serviceEvent = New POCD_MT000040UV02ServiceEvent()
            _documentaionof(0).serviceEvent.classCode = ActClassRoot.PCPR
            _documentaionof(0).serviceEvent.moodCode = Nothing
            _documentaionof(0).serviceEvent.moodCodeSpecified = False
            _documentaionof(0).serviceEvent.effectiveTime = New IVL_TS()
            _documentaionof(0).serviceEvent.effectiveTime.value = Nothing
            _documentaionof(0).serviceEvent.effectiveTime.operator = Nothing

            _documentaionof(0).serviceEvent.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
            _documentaionof(0).serviceEvent.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
            _documentaionof(0).serviceEvent.effectiveTime.ItemsElementName(1) = ItemsChoiceType2.high
            Dim _currentDate As System.DateTime = System.DateTime.Now
            _documentaionof(0).serviceEvent.effectiveTime.Items = New QTY(1) {}
            _documentaionof(0).serviceEvent.effectiveTime.Items(0) = New IVXB_TS()
            ''As per QualityNet After first validation on CMS
            'Bug #93534: 00001078: Direct Messaging :Embedded Xml link has minutes entered as hour that has limit of 23

            If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Or _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then

                '  DirectCast(_documentaionof(0).serviceEvent.effectiveTime.Items(0), IVXB_TS).value = _currentDate.ToString("yyyyMMdd")
                DirectCast(_documentaionof(0).serviceEvent.effectiveTime.Items(0), IVXB_TS).value = _currentDate.ToString("yyyyMMddhhmmss") & Replace(_currentDate.ToString("zzzz"), ":", "")

            Else
                DirectCast(_documentaionof(0).serviceEvent.effectiveTime.Items(0), IVXB_TS).value = _currentDate.ToString("yyyyMMddhhmmss")
            End If

            _documentaionof(0).serviceEvent.effectiveTime.Items(1) = New IVXB_TS()
            If _nQRDAFileType = CDAFileTypeEnum.QRDA1 Or _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then
                '  DirectCast(_documentaionof(0).serviceEvent.effectiveTime.Items(1), IVXB_TS).value = _currentDate.ToString("yyyyMMdd")
                DirectCast(_documentaionof(0).serviceEvent.effectiveTime.Items(1), IVXB_TS).value = _currentDate.ToString("yyyyMMddhhmmss") & Replace(_currentDate.ToString("zzzz"), ":", "")

            Else
                DirectCast(_documentaionof(0).serviceEvent.effectiveTime.Items(1), IVXB_TS).value = _currentDate.ToString("yyyyMMddhhmmss")
            End If

            If Not IsNothing(mPatient.PatientCareTeam) AndAlso mPatient.PatientCareTeam.Count > 0 Then
                _documentaionof(0).serviceEvent.performer = New POCD_MT000040UV02Performer1(mPatient.PatientCareTeam.Count) {}
                For i As Integer = 0 To mPatient.PatientCareTeam.Count - 1
                    oTeamMember = mPatient.PatientCareTeam.Item(i)
                    _documentaionof(0).serviceEvent.performer(i) = New POCD_MT000040UV02Performer1()   'Provider
                    If _nQRDAFileType = CDAFileTypeEnum.QRDA3 Or _nQRDAFileType = CDAFileTypeEnum.QRDA1 Then
                        _documentaionof(0).serviceEvent.performer(i).typeCode = x_ServiceEventPerformer.PRF
                    Else
                        _documentaionof(0).serviceEvent.performer(i).typeCodeSpecified = True
                        _documentaionof(0).serviceEvent.performer(i).typeCode = x_ServiceEventPerformer.PRF
                    End If

                    'Adding FunctionCode Section
                    Dim _CodeSysItem As CodeSystemItem = Nothing
                    _documentaionof(0).serviceEvent.performer(i).functionCode = New CE()
                    If oTeamMember.PersonName.ContactFlag = "2" Then
                        _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.ParticipantFunction, "primary care physician")
                        _documentaionof(0).serviceEvent.performer(i).functionCode.code = _CodeSysItem.Code
                        _documentaionof(0).serviceEvent.performer(i).functionCode.displayName = _CodeSysItem.Description
                        _documentaionof(0).serviceEvent.performer(i).functionCode.codeSystem = CodeSystem.ParticipantFunction
                        _documentaionof(0).serviceEvent.performer(i).functionCode.codeSystemName = _CodeSysItem.CodingSystemName
                        _documentaionof(0).serviceEvent.performer(i).functionCode.codeSystemVersion = Nothing
                        _documentaionof(0).serviceEvent.performer(i).functionCode.originalText = New ED()
                        _documentaionof(0).serviceEvent.performer(i).functionCode.originalText.Text = New String() {("Primary Care Provider").Trim()}

                        _documentaionof(0).serviceEvent.performer(i).functionCode.originalText.mediaType = Nothing
                        _documentaionof(0).serviceEvent.performer(i).functionCode.originalText.representation = Nothing
                        _documentaionof(0).serviceEvent.performer(i).functionCode.originalText.language = Nothing

                    ElseIf oTeamMember.PersonName.ContactFlag = "3" Then
                        _documentaionof(0).serviceEvent.performer(i).functionCode = Nothing
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.code = "RP"
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.displayName = "Referring Provider"
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.codeSystem = "2.16.840.1.113883.12.443"
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.codeSystemName = "Provider Role"
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.codeSystemVersion = Nothing
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.originalText = New ED()
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.originalText.Text = New String() {("Referring Provider").Trim()}
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.originalText.mediaType = Nothing
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.originalText.representation = Nothing
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.originalText.language = Nothing
                        '5 for order provider and 4 fpr care team memebers
                    ElseIf oTeamMember.PersonName.ContactFlag = "4" Or oTeamMember.PersonName.ContactFlag = "5" Then
                        _documentaionof(0).serviceEvent.performer(i).functionCode = Nothing
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.code = "RT"
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.displayName = "Referred to Provider"
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.codeSystem = "2.16.840.1.113883.12.443"
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.codeSystemName = "Provider Role"
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.codeSystemVersion = Nothing
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.originalText = New ED()
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.originalText.Text = New String() {("Referred to Provider").Trim()}
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.originalText.mediaType = Nothing
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.originalText.representation = Nothing
                        '_documentaionof(0).serviceEvent.performer(i).functionCode.originalText.language = Nothing

                    ElseIf oTeamMember.PersonName.ContactFlag = "6" Then
                        _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.ParticipantFunction, "attending physician")
                        _documentaionof(0).serviceEvent.performer(i).functionCode.code = _CodeSysItem.Code
                        _documentaionof(0).serviceEvent.performer(i).functionCode.displayName = _CodeSysItem.Description
                        _documentaionof(0).serviceEvent.performer(i).functionCode.codeSystem = CodeSystem.ParticipantFunction
                        _documentaionof(0).serviceEvent.performer(i).functionCode.codeSystemName = _CodeSysItem.CodingSystemName
                        _documentaionof(0).serviceEvent.performer(i).functionCode.codeSystemVersion = Nothing
                        _documentaionof(0).serviceEvent.performer(i).functionCode.originalText = New ED()
                        _documentaionof(0).serviceEvent.performer(i).functionCode.originalText.Text = New String() {("Attending").Trim()}
                        _documentaionof(0).serviceEvent.performer(i).functionCode.originalText.mediaType = Nothing
                        _documentaionof(0).serviceEvent.performer(i).functionCode.originalText.representation = Nothing
                        _documentaionof(0).serviceEvent.performer(i).functionCode.originalText.language = Nothing

                    End If

                    _documentaionof(0).serviceEvent.performer(i).assignedEntity = New POCD_MT000040UV02AssignedEntity()
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.classCode = Nothing
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.classCodeSpecified = False
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.id = New II(0) {}
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.id(0) = New II()
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.id(0).nullFlavor = Nothing

                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.id(0).root = "2.16.840.1.113883.4.6"

                    ''As per Quality Net After First validation
                    If oTeamMember.PersonName.ProvNPI IsNot Nothing AndAlso oTeamMember.PersonName.ProvNPI <> "" Then
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.id(0).extension = oTeamMember.PersonName.ProvNPI
                    Else
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.id(0).extension = Nothing
                    End If


                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.id(0).assigningAuthorityName = Nothing

                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.code = New CE()

                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.code.nullFlavor = "NI"
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.code.code = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.code.codeSystem = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.code.codeSystemName = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.code.codeSystemVersion = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.code.displayName = Nothing
                    Else
                        If oTeamMember.PersonName.TaxonomyCode IsNot Nothing AndAlso oTeamMember.PersonName.TaxonomyCode <> "" Then
                            _documentaionof(0).serviceEvent.performer(i).assignedEntity.code = New CE()
                            _documentaionof(0).serviceEvent.performer(i).assignedEntity.code.code = oTeamMember.PersonName.TaxonomyCode
                        Else
                            _documentaionof(0).serviceEvent.performer(i).assignedEntity.code = New CE()
                            _documentaionof(0).serviceEvent.performer(i).assignedEntity.code.nullFlavor = "NI"
                            _documentaionof(0).serviceEvent.performer(i).assignedEntity.code.code = Nothing
                        End If

                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.code.codeSystem = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.code.codeSystemName = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.code.codeSystemVersion = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.code.displayName = Nothing

                    End If


                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr = New AD(0) {}
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0) = New AD()
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items = New ADXP(5) {}
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()
                    If oTeamMember.PersonContactAddress.Street IsNot Nothing AndAlso oTeamMember.PersonContactAddress.Street <> "" Then

                        If oTeamMember.PersonContactAddress.AddressLine2 IsNot Nothing AndAlso oTeamMember.PersonContactAddress.AddressLine2 <> "" Then
                            _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(0).Text = New String() {(oTeamMember.PersonContactAddress.Street).Trim() + " " + (oTeamMember.PersonContactAddress.AddressLine2).Trim()}
                        Else
                            _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(0).Text = New String() {(oTeamMember.PersonContactAddress.Street).Trim()}
                        End If

                        '_documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(0).Text = New String() {(oTeamMember.PersonContactAddress.Street).Trim()}

                    Else
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(0).Text = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(0).nullFlavor = "NI"
                        ' _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(0) = Nothing
                    End If
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(0).language = Nothing
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(0).partType = Nothing
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(1) = New adxpcity()
                    If oTeamMember.PersonContactAddress.City IsNot Nothing AndAlso oTeamMember.PersonContactAddress.City <> "" Then

                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(1).Text = New String() {(oTeamMember.PersonContactAddress.City).Trim()}
                    Else
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(1).Text = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(1).nullFlavor = "NI"
                    End If
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(1).language = Nothing
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(1).partType = Nothing

                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(2) = New adxpstate()
                    If oTeamMember.PersonContactAddress.State IsNot Nothing AndAlso oTeamMember.PersonContactAddress.State <> "" Then

                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(2).Text = New String() {(oTeamMember.PersonContactAddress.State).Trim()}
                    Else
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(2).Text = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(2).nullFlavor = "NI"
                    End If
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(2).language = Nothing
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(2).partType = Nothing

                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(3) = New adxppostalCode()
                    If oTeamMember.PersonContactAddress.Zip IsNot Nothing AndAlso oTeamMember.PersonContactAddress.Zip <> "" Then

                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(3).Text = New String() {(oTeamMember.PersonContactAddress.Zip).Trim()}
                    Else
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(3).Text = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(3).nullFlavor = "NI"
                    End If
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(3).language = Nothing
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(3).partType = Nothing

                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(4) = New adxpcountry()
                    If oTeamMember.PersonContactAddress.Country IsNot Nothing AndAlso oTeamMember.PersonContactAddress.Country <> "" Then

                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(4).Text = New String() {(oTeamMember.PersonContactAddress.Country).Trim()}
                    Else
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(4).Text = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(4).nullFlavor = "NI"
                    End If
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(4).language = Nothing
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(4).partType = Nothing

                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(5) = New adxpcounty()
                    If oTeamMember.PersonContactAddress.County IsNot Nothing AndAlso oTeamMember.PersonContactAddress.County <> "" Then

                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(5).Text = New String() {(oTeamMember.PersonContactAddress.County).Trim()}
                    Else
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(5).Text = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(5).nullFlavor = "NI"
                    End If
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(5).language = Nothing
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.addr(0).Items(5).partType = Nothing


                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.telecom = New TEL(0) {}
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.telecom(0) = New TEL()
                    If oTeamMember.PersonContactPhone.Phone IsNot Nothing AndAlso oTeamMember.PersonContactPhone.Phone <> "" Then

                        '02-Jun-14 Aniket: Fixing issue when phone number is greater than 10 digits
                        If oTeamMember.PersonContactPhone.Phone.Length > 10 Then
                            _documentaionof(0).serviceEvent.performer(i).assignedEntity.telecom(0).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(Left(oTeamMember.PersonContactPhone.Phone, 10)))
                        ElseIf oTeamMember.PersonContactPhone.Phone.Length = 10 Then
                            _documentaionof(0).serviceEvent.performer(i).assignedEntity.telecom(0).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(oTeamMember.PersonContactPhone.Phone))
                        End If

                    Else
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.telecom(0).value = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.telecom(0).nullFlavor = "NI"
                    End If
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.telecom(0).use = New TelecommunicationAddressUse(0) {}
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.WP
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson = New POCD_MT000040UV02Person()
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.classCode = Nothing
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.classCodeSpecified = False
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.determinerCode = Nothing
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name = New PN(0) {}
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0) = New PN()
                    _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items = New ENXP(4) {}

                    If oTeamMember.PersonName.Prefix IsNot Nothing AndAlso oTeamMember.PersonName.Prefix <> "" Then
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(0) = New enprefix()
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(0).Text = New String() {oTeamMember.PersonName.Prefix}
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(0).language = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(0).partType = Nothing
                    Else
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(0) = New enprefix()
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(0).language = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(0).partType = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(0).nullFlavorSpecified = True
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(0).nullFlavor = "UNK"

                    End If


                    If oTeamMember.PersonName.FirstName IsNot Nothing AndAlso oTeamMember.PersonName.FirstName <> "" Then
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(1) = New engiven()
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(1).Text = New String() {oTeamMember.PersonName.FirstName}
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(1).language = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(1).partType = Nothing
                    Else
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(1) = New engiven()
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(1).language = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(1).partType = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(1).nullFlavorSpecified = True
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(1).nullFlavor = "UNK"

                    End If

                    If oTeamMember.PersonName.MiddleName IsNot Nothing AndAlso oTeamMember.PersonName.MiddleName <> "" Then
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(2) = New engiven()
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(2).Text = New String() {oTeamMember.PersonName.MiddleName}
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(2).language = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(2).partType = Nothing
                    Else
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(2) = New engiven()
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(2).language = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(2).partType = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(2).nullFlavorSpecified = True
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(2).nullFlavor = "UNK"
                    End If

                    If oTeamMember.PersonName.LastName IsNot Nothing AndAlso oTeamMember.PersonName.LastName <> "" Then
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(3) = New enfamily()
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(3).Text = New String() {oTeamMember.PersonName.LastName}
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(3).language = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(3).partType = Nothing
                    Else
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(3) = New enfamily()
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(3).language = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(3).partType = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(3).nullFlavorSpecified = True
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(3).nullFlavor = "UNK"

                    End If

                    If oTeamMember.PersonName.Suffix IsNot Nothing AndAlso oTeamMember.PersonName.Suffix <> "" Then
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(4) = New ensuffix()
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(4).Text = New String() {oTeamMember.PersonName.Suffix}
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(4).language = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(4).partType = Nothing
                    Else
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(4) = New ensuffix()
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(4).language = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(4).partType = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(4).nullFlavorSpecified = True
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.assignedPerson.name(0).Items(4).nullFlavor = "UNK"
                    End If
                    If _nQRDAFileType = CDAFileTypeEnum.QRDA3 Or _nQRDAFileType = CDAFileTypeEnum.QRDA1 Then
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization = New POCD_MT000040UV02Organization
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization.classCode = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization.classCodeSpecified = False
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization.determinerCode = Nothing
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization.id = New II(0) {}
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization.id(0) = New II
                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization.id(0).assigningAuthorityName = Nothing

                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization.id(0).root = "2.16.840.1.113883.4.2"

                        ''As per QualityNet after first validation on CMS

                        'If Not IsNothing(mPatient.Clinic) Then
                        '    If mPatient.Clinic.ClinicTaxID IsNot Nothing AndAlso mPatient.Clinic.ClinicTaxID <> "" Then
                        '        _documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization.id(0).extension = mPatient.Clinic.ClinicTaxID
                        '    Else
                        '        _documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization.id(0).extension = Nothing
                        '    End If
                        'Else
                        '    _documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization.id(0).extension = Nothing
                        'End If
                        '  If IsNothing(_documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization.id(0).extension) Then
                        If oTeamMember.PersonName.ProvTaXID IsNot Nothing AndAlso oTeamMember.PersonName.ProvTaXID <> "" Then
                            _documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization.id(0).extension = oTeamMember.PersonName.ProvTaXID
                        Else
                            _documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization.id(0).root = Nothing
                            _documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization.id(0).nullFlavor = "UNK"
                            _documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization.id(0).extension = Nothing
                        End If
                        'End If


                        _documentaionof(0).serviceEvent.performer(i).assignedEntity.representedOrganization.name = New [ON](0) {}

                    End If

                Next
            Else
                Dim oProvider As gloCCDLibrary.PatientProvider = Nothing


                If Not IsNothing(mPatient.PatientProviders) AndAlso mPatient.PatientProviders.Count > 0 Then
                    ' oProvider = mPatient.PatientProviders.Item(0)
                    _documentaionof(0).serviceEvent.performer = New POCD_MT000040UV02Performer1(mPatient.PatientProviders.Count) {}
                    For k As Integer = 0 To mPatient.PatientProviders.Count - 1
                        oProvider = mPatient.PatientProviders.Item(k)


                        _documentaionof(0).serviceEvent.performer(k) = New POCD_MT000040UV02Performer1()   'Provider
                        If _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then
                            _documentaionof(0).serviceEvent.performer(k).typeCode = x_ServiceEventPerformer.PRF
                        Else
                            _documentaionof(0).serviceEvent.performer(k).typeCodeSpecified = False
                            _documentaionof(0).serviceEvent.performer(k).typeCode = Nothing
                        End If

                        _documentaionof(0).serviceEvent.performer(k).assignedEntity = New POCD_MT000040UV02AssignedEntity()
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.classCode = Nothing
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.classCodeSpecified = False
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.id = New II(0) {}
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.id(0) = New II()
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.id(0).nullFlavor = Nothing
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.id(0).root = "2.16.840.1.113883.4.6"
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.id(0).extension = Nothing
                        ''As per QualityNet after fist validation on CMS
                        'If _IsGroupReporting Then
                        '    _documentaionof(0).serviceEvent.performer(k).assignedEntity.id(0).extension = Nothing
                        '    _documentaionof(0).serviceEvent.performer(k).assignedEntity.id(0).nullFlavor = "NA"
                        'Else
                        If Not IsNothing(oProvider) Then
                            If oProvider.NPI IsNot Nothing AndAlso oProvider.NPI <> "" Then
                                _documentaionof(0).serviceEvent.performer(k).assignedEntity.id(0).extension = oProvider.NPI
                            Else
                                _documentaionof(0).serviceEvent.performer(k).assignedEntity.id(0).extension = Nothing
                            End If
                        Else

                            _documentaionof(0).serviceEvent.performer(k).assignedEntity.id(0).extension = Nothing
                            _documentaionof(0).serviceEvent.performer(k).assignedEntity.id(0).nullFlavor = "NA"
                        End If
                        ' End If



                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.id(0).assigningAuthorityName = "NPI"
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.addr = New AD(0) {}
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.addr(0) = New AD()
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.addr(0).Items = New ADXP(3) {}

                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.telecom = New TEL(0) {}
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.telecom(0) = New TEL()

                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.telecom(0).value = Nothing
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.telecom(0).nullFlavor = "NI"
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.telecom(0).use = New TelecommunicationAddressUse(0) {}
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.WP
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.assignedPerson = New POCD_MT000040UV02Person()
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.assignedPerson.classCode = Nothing
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.assignedPerson.classCodeSpecified = False
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.assignedPerson.determinerCode = Nothing
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.assignedPerson.name = New PN(0) {}
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.assignedPerson.name(0) = New PN()
                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.assignedPerson.name(0).Items = New ENXP(2) {}

                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.assignedPerson.name(0).Items(0) = Nothing

                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.assignedPerson.name(0).Items(1) = Nothing


                        If _nQRDAFileType = CDAFileTypeEnum.QRDA3 Or _nQRDAFileType = CDAFileTypeEnum.QRDA1 Then
                            _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization = New POCD_MT000040UV02Organization
                            _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.classCode = Nothing
                            _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.classCodeSpecified = False
                            _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.determinerCode = Nothing
                            _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id = New II(0) {}
                            _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0) = New II
                            _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).assigningAuthorityName = Nothing
                            _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).root = "2.16.840.1.113883.4.2"

                            ''As per QualityNet After first validation on CMS
                            'If Not IsNothing(mPatient.Clinic) Then
                            '    If mPatient.Clinic.ClinicTaxID IsNot Nothing AndAlso mPatient.Clinic.ClinicTaxID <> "" Then
                            '        _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).extension = mPatient.Clinic.ClinicTaxID
                            '    Else
                            '        _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).extension = Nothing
                            '    End If
                            'Else
                            '    _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).extension = Nothing
                            'End If
                            'If IsNothing(_documentaionof(0).serviceEvent.performer(k).assignedEntity.id(0).extension) Then
                            If Not IsNothing(oProvider) Then
                                If oProvider.ProvTaxID IsNot Nothing AndAlso oProvider.ProvTaxID <> "" Then
                                    _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).extension = oProvider.ProvTaxID
                                    _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).assigningAuthorityName = "TIN"
                                Else
                                    _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).root = Nothing
                                    _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).nullFlavor = "UNK"
                                    _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).extension = Nothing
                                End If
                            ElseIf _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then
                                If Not IsNothing(mPatient.Clinic) Then
                                    If mPatient.Clinic.ClinicTaxID IsNot Nothing AndAlso mPatient.Clinic.ClinicTaxID <> "" Then
                                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).extension = mPatient.Clinic.ClinicTaxID
                                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).assigningAuthorityName = "TIN"
                                    Else
                                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).extension = Nothing
                                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).root = Nothing
                                        _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).nullFlavor = "UNK"
                                    End If
                                Else
                                    _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).extension = Nothing
                                    _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).root = Nothing
                                    _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).nullFlavor = "UNK"
                                End If
                            Else
                                _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).root = Nothing
                                _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).nullFlavor = "UNK"
                                _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.id(0).extension = Nothing
                            End If
                            'End If

                            _documentaionof(0).serviceEvent.performer(k).assignedEntity.representedOrganization.name = New [ON](0) {}

                        End If
                    Next
                End If
            End If

            Return _documentaionof(0)
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "DocumentationOf Section"
            Else
                _msgString = _msgString & vbNewLine & "DocumentationOf Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            If Not IsNothing(oTeamMember) Then
                oTeamMember.Dispose()
                oTeamMember = Nothing
            End If
        End Try
    End Function
    Private Function GetCDAcomponentOf() As POCD_MT000040UV02Component1
        Dim _componentOf As POCD_MT000040UV02Component1
        Dim oEncounter As Encounters = Nothing
        Dim oEncounterCol As EncountersCol = Nothing
        Try
            _componentOf = New POCD_MT000040UV02Component1
            _componentOf.encompassingEncounter = New POCD_MT000040UV02EncompassingEncounter
            _componentOf.encompassingEncounter.id = New II(0) {}
            _componentOf.encompassingEncounter.id(0) = New II()
            _componentOf.encompassingEncounter.id(0).nullFlavor = Nothing
            _componentOf.encompassingEncounter.id(0).root = System.Guid.NewGuid().ToString()
            _componentOf.encompassingEncounter.id(0).extension = Nothing
            _componentOf.encompassingEncounter.id(0).assigningAuthorityName = Nothing
            _componentOf.encompassingEncounter.effectiveTime = New IVL_TS()
            _componentOf.encompassingEncounter.effectiveTime.value = Nothing

            If _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary OrElse _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary OrElse _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Then
                If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary OrElse _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Then
                    oEncounterCol = mPatient.PatientVisitDateAndLocation
                Else
                    oEncounterCol = mPatient.PatientEncounters
                End If
                If Not IsNothing(oEncounterCol) AndAlso oEncounterCol.Count > 0 Then
                    oEncounter = oEncounterCol.Item(0)
                    '' ''
                    ''Dim sconf As CE
                    ''sconf = New CE()
                    ''sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, _componentOf.encompassingEncounter)
                    '' ''
                    ''If Not IsNothing(sconf.code) Then
                    ''    _componentOf.encompassingEncounter.confidentialityCode = sconf
                    ''End If
                    ''sconf = Nothing
                    '' ''
                    _componentOf.encompassingEncounter.effectiveTime.Items = New QTY(1) {}
                    _componentOf.encompassingEncounter.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
                    _componentOf.encompassingEncounter.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
                    _componentOf.encompassingEncounter.effectiveTime.ItemsElementName(1) = ItemsChoiceType2.high
                    _componentOf.encompassingEncounter.effectiveTime.Items(0) = New IVXB_TS()
                    If oEncounter.StartDateTime IsNot Nothing AndAlso oEncounter.StartDateTime <> "" Then
                        DirectCast(_componentOf.encompassingEncounter.effectiveTime.Items(0), IVXB_TS).value = oEncounter.StartDateTime
                    Else
                        DirectCast(_componentOf.encompassingEncounter.effectiveTime.Items(0), IVXB_TS).value = Nothing
                        DirectCast(_componentOf.encompassingEncounter.effectiveTime.Items(0), IVXB_TS).nullFlavor = "UNK"
                    End If
                    _componentOf.encompassingEncounter.effectiveTime.Items(1) = New IVXB_TS()
                    If oEncounter.EndDateTime IsNot Nothing AndAlso oEncounter.EndDateTime <> "" Then
                        DirectCast(_componentOf.encompassingEncounter.effectiveTime.Items(1), IVXB_TS).value = oEncounter.EndDateTime
                    Else
                        DirectCast(_componentOf.encompassingEncounter.effectiveTime.Items(1), IVXB_TS).value = Nothing
                        DirectCast(_componentOf.encompassingEncounter.effectiveTime.Items(1), IVXB_TS).nullFlavor = "UNK"
                    End If
                End If
            End If

            If _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Then
                If Not IsNothing(mPatient.PatientEncounters) AndAlso mPatient.PatientEncounters.Count > 0 Then
                    oEncounter = mPatient.PatientEncounters.Item(0)
                    _componentOf.encompassingEncounter.responsibleParty = New POCD_MT000040UV02ResponsibleParty
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity = New POCD_MT000040UV02AssignedEntity()
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.classCode = Nothing
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.classCodeSpecified = False
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.id = New II(0) {}
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.id(0) = New II()
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.id(0).nullFlavor = Nothing
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.id(0).root = "2.16.840.1.113883.4.6"
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.id(0).extension = If(oEncounter.ProvNPI <> "" AndAlso oEncounter.ProvNPI IsNot Nothing, oEncounter.ProvNPI, Nothing)
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.id(0).assigningAuthorityName = Nothing
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.code = New CE()
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.code.code = "207QG0300X"
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.code.codeSystem = "2.16.840.1.113883.6.101"
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.code.codeSystemName = "NUCC"
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.code.displayName = "Adult Medicine"
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.code.codeSystemVersion = Nothing
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr = New AD(0) {}
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0) = New AD()
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items = New ADXP(3) {}
                    If oEncounter.StreetAddress IsNot Nothing AndAlso oEncounter.StreetAddress <> "" Then
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(0).Text = New String() {oEncounter.StreetAddress}
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(0).language = Nothing
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(0).partType = Nothing
                    Else
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(0) = Nothing
                    End If
                    If oEncounter.City IsNot Nothing AndAlso oEncounter.City <> "" Then
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(1) = New adxpcity()
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(1).Text = New String() {oEncounter.City}
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(1).language = Nothing
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(1).partType = Nothing
                    Else
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(1) = Nothing
                    End If
                    If oEncounter.State IsNot Nothing AndAlso oEncounter.State <> "" Then
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(2) = New adxpstate()
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(2).Text = New String() {oEncounter.State}
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(2).language = Nothing
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(2).partType = Nothing
                    Else
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(2) = Nothing
                    End If
                    If oEncounter.PostalCode IsNot Nothing AndAlso oEncounter.PostalCode <> "" Then
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(3) = New adxppostalCode()
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(3).Text = New String() {oEncounter.PostalCode}
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(3).language = Nothing
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(3).partType = Nothing
                    Else
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.addr(0).Items(3) = Nothing
                    End If

                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.telecom = New TEL(0) {}
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.telecom(0) = New TEL()
                    If oEncounter.WorkPhone IsNot Nothing AndAlso oEncounter.WorkPhone <> "" Then
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.telecom(0).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(oEncounter.WorkPhone))
                    Else
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.telecom(0).value = Nothing
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.telecom(0).nullFlavor = "NI"
                    End If
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.telecom(0).use = New TelecommunicationAddressUse(0) {}
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.WP
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson = New POCD_MT000040UV02Person()
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.classCode = Nothing
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.classCodeSpecified = False
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.determinerCode = Nothing
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name = New PN(0) {}
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0) = New PN()
                    _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items = New ENXP(4) {}


                    If oEncounter.Prefix IsNot Nothing AndAlso oEncounter.Prefix <> "" Then

                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(0) = New enprefix()
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(0).Text = New String() {oEncounter.Prefix}
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(0).language = Nothing
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(0).partType = Nothing
                    Else
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(0) = Nothing
                    End If

                    If oEncounter.ProvFirstName IsNot Nothing AndAlso oEncounter.ProvFirstName <> "" Then
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(1) = New engiven()
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(1).Text = New String() {oEncounter.ProvFirstName}
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(1).language = Nothing
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(1).partType = Nothing
                    Else
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(1) = Nothing
                    End If

                    If oEncounter.ProvMName IsNot Nothing AndAlso oEncounter.ProvMName <> "" Then
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(2) = New engiven()
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(2).Text = New String() {oEncounter.ProvMName}
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(2).language = Nothing
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(2).partType = Nothing
                    Else
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(2) = Nothing
                    End If

                    If oEncounter.ProvLastName IsNot Nothing AndAlso oEncounter.ProvLastName <> "" Then
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(3) = New enfamily()
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(3).Text = New String() {oEncounter.ProvLastName}
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(3).language = Nothing
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(3).partType = Nothing
                    Else
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(3) = Nothing
                    End If


                    If oEncounter.ProvSuffix IsNot Nothing AndAlso oEncounter.ProvSuffix <> "" Then
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(4) = New ensuffix()
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(4).Text = New String() {oEncounter.ProvSuffix}
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(4).language = Nothing
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(4).partType = Nothing
                    Else
                        _componentOf.encompassingEncounter.responsibleParty.assignedEntity.assignedPerson.name(0).Items(4) = Nothing
                    End If
                End If
            End If



            _componentOf.encompassingEncounter.location = New POCD_MT000040UV02Location
            _componentOf.encompassingEncounter.location.healthCareFacility = New POCD_MT000040UV02HealthCareFacility
            _componentOf.encompassingEncounter.location.healthCareFacility.id = New II(0) {}
            _componentOf.encompassingEncounter.location.healthCareFacility.id(0) = New II()
            _componentOf.encompassingEncounter.location.healthCareFacility.id(0).nullFlavor = Nothing
            _componentOf.encompassingEncounter.location.healthCareFacility.id(0).root = "2.16.840.1.113883.4.6"
            _componentOf.encompassingEncounter.location.healthCareFacility.id(0).extension = Nothing
            _componentOf.encompassingEncounter.location.healthCareFacility.id(0).assigningAuthorityName = Nothing
            _componentOf.encompassingEncounter.location.healthCareFacility.code = New CE()
            _componentOf.encompassingEncounter.location.healthCareFacility.code.code = "207QG0300X"
            _componentOf.encompassingEncounter.location.healthCareFacility.code.codeSystem = "2.16.840.1.113883.6.101"
            _componentOf.encompassingEncounter.location.healthCareFacility.code.codeSystemName = "NUCC"
            _componentOf.encompassingEncounter.location.healthCareFacility.code.displayName = "Adult Medicine"
            _componentOf.encompassingEncounter.location.healthCareFacility.code.codeSystemVersion = Nothing
            If _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Then
                If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Then
                    oEncounterCol = mPatient.PatientVisitDateAndLocation
                Else
                    oEncounterCol = mPatient.PatientEncounters
                End If
                If Not IsNothing(oEncounterCol) AndAlso oEncounterCol.Count > 0 Then
                    oEncounter = oEncounterCol.Item(0)
                    _componentOf.encompassingEncounter.location.healthCareFacility.location = New POCD_MT000040UV02Place
                    _componentOf.encompassingEncounter.location.healthCareFacility.location.name = New EN
                    If oEncounter.Location IsNot Nothing AndAlso oEncounter.Location <> "" Then
                        _componentOf.encompassingEncounter.location.healthCareFacility.location.name.Text = New String() {oEncounter.Location}
                    Else
                        _componentOf.encompassingEncounter.location.healthCareFacility.location.name.Text = Nothing
                        _componentOf.encompassingEncounter.location.healthCareFacility.location.name.nullFlavor = "NI"
                    End If

                    If oEncounter.LocationAdd IsNot Nothing Then
                        _componentOf.encompassingEncounter.location.healthCareFacility.location.addr = New AD
                        _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items = New ADXP(4) {}
                        If oEncounter.LocationAdd.Street IsNot Nothing AndAlso oEncounter.LocationAdd.Street <> "" Then
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(0) = New adxpstreetAddressLine()
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(0).Text = New String() {oEncounter.LocationAdd.Street + " " + oEncounter.LocationAdd.AddressLine2}
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(0).language = Nothing
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(0).partType = Nothing
                        Else
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(0) = Nothing
                        End If

                        If oEncounter.LocationAdd.City IsNot Nothing AndAlso oEncounter.LocationAdd.City <> "" Then
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(1) = New adxpcity()
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(1).Text = New String() {oEncounter.LocationAdd.City}
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(1).language = Nothing
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(1).partType = Nothing
                        Else
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(1) = Nothing
                        End If

                        If oEncounter.LocationAdd.State IsNot Nothing AndAlso oEncounter.LocationAdd.State <> "" Then
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(2) = New adxpstate()
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(2).Text = New String() {oEncounter.LocationAdd.State} 'StateCode
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(2).language = Nothing
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(2).partType = Nothing
                        Else
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(2) = Nothing
                        End If

                        If oEncounter.LocationAdd.Zip IsNot Nothing AndAlso oEncounter.LocationAdd.Zip <> "" Then
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(3) = New adxppostalCode()
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(3).Text = New String() {oEncounter.LocationAdd.Zip}  'Zip Code
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(3).language = Nothing
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(3).partType = Nothing
                        Else
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(3) = Nothing
                        End If

                        If oEncounter.LocationAdd.Country IsNot Nothing AndAlso oEncounter.LocationAdd.Country <> "" Then
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(4) = New adxpcountry()
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(4).Text = New String() {oEncounter.LocationAdd.Country}  'Country Code
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(4).language = Nothing
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(4).partType = Nothing
                        Else
                            _componentOf.encompassingEncounter.location.healthCareFacility.location.addr.Items(4) = Nothing
                        End If
                    End If
                End If

            End If

            If mPatient.Clinic IsNot Nothing Then

                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization = New POCD_MT000040UV02Organization
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.id = New II(0) {}
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.id(0) = New II()
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.id(0).nullFlavor = Nothing
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.id(0).root = "1.1.1.1.1.1.1.1.2"
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.id(0).extension = Nothing
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.id(0).assigningAuthorityName = Nothing
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.name = New [ON](0) {}
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.name(0) = New [ON]
                If mPatient.Clinic.ClinicName IsNot Nothing AndAlso mPatient.Clinic.ClinicName <> "" Then
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.name(0).Text = New String() {mPatient.Clinic.ClinicName}
                Else
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.name(0).Text = Nothing
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.name(0).nullFlavor = "NI"
                End If
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.telecom = New TEL(0) {}
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.telecom(0) = New TEL()
                If mPatient.Clinic.PersonContactPhone IsNot Nothing AndAlso mPatient.Clinic.PersonContactPhone.Phone IsNot Nothing AndAlso mPatient.Clinic.PersonContactPhone.Phone <> "" Then
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.telecom(0).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(mPatient.Clinic.PersonContactPhone.Phone))
                Else
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.telecom(0).nullFlavor = "NI"
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.telecom(0).value = Nothing
                End If
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.telecom(0).use = New TelecommunicationAddressUse(0) {}
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.telecom(0).use(0) = TelecommunicationAddressUse.WP
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr = New AD(0) {}
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0) = New AD
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items = New ADXP(4) {}

                'Street
                If mPatient.Clinic.PersonContactAddress IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.Street IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.Street <> "" Then
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(0) = New adxpstreetAddressLine()
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(0).Text = New String() {mPatient.Clinic.PersonContactAddress.Street}
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(0).language = Nothing
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(0).partType = Nothing
                Else
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(0) = Nothing
                End If

                'City
                If mPatient.Clinic.PersonContactAddress IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.City IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.City <> "" Then
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(1) = New adxpcity()
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(1).Text = New String() {mPatient.Clinic.PersonContactAddress.City}
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(1).language = Nothing
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(1).partType = Nothing
                Else
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(1) = Nothing
                End If

                'State
                If mPatient.Clinic.PersonContactAddress IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.State IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.State <> "" Then
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(2) = New adxpstate()
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(2).Text = New String() {mPatient.Clinic.PersonContactAddress.State}
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(2).language = Nothing
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(2).partType = Nothing
                Else
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(2) = Nothing
                End If

                'Zip
                If mPatient.Clinic.PersonContactAddress IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.Zip IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.Zip <> "" Then
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(3) = New adxppostalCode()
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(3).Text = New String() {mPatient.Clinic.PersonContactAddress.Zip}
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(3).language = Nothing
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(3).partType = Nothing
                Else
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(3) = Nothing
                End If

                'Country
                If mPatient.Clinic.PersonContactAddress IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.Country IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.Country <> "" Then
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(4) = New adxpcountry()
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(4).Text = New String() {mPatient.Clinic.PersonContactAddress.Country}
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(4).language = Nothing
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(4).partType = Nothing
                Else
                    _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.addr(0).Items(4) = Nothing
                End If
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.standardIndustryClassCode = New CE()
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.standardIndustryClassCode.code = "207QG0300X"
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.standardIndustryClassCode.codeSystem = "2.16.840.1.113883.6.101"
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.standardIndustryClassCode.codeSystemName = "NUCC"
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.standardIndustryClassCode.displayName = "Primary Care"
                _componentOf.encompassingEncounter.location.healthCareFacility.serviceProviderOrganization.standardIndustryClassCode.codeSystemVersion = Nothing

            End If

            Return _componentOf
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "ComponentOf Section"
            Else
                _msgString = _msgString & vbNewLine & "ComponentOf Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            oEncounter = Nothing
        End Try
    End Function
    Private Function GetCDAComponent(Optional ByVal base64String As String = "") As POCD_MT000040UV02Component2
        ''Sample XML Structure
        ''<POCD_MT000040Component2>
        ''  <POCD_MT000040UV02StructuredBody> 
        ''      <POCD_MT000040UV02Component3>   Allergies
        ''      <POCD_MT000040UV02Component3>   Medication
        ''      <POCD_MT000040UV02Component3>   Problem List
        ''  </POCD_MT000040UV02StructuredBody> 
        ''</POCD_MT000040Component2>

        Dim _component2 As POCD_MT000040UV02Component2 = Nothing
        Dim _moduleList As New List(Of POCD_MT000040UV02Component3)
        Dim _moduleData As POCD_MT000040UV02Component3
        Dim _component3 As POCD_MT000040UV02Component3()
        Try
            If _nQRDAFileType = CDAFileTypeEnum.QRDA3 Then
                '_moduleData = GetQRDAIIIReportingParamsComponent()
                'If Not IsNothing(_moduleData) Then
                '    _moduleList.Add(_moduleData)
                'End If
                '_moduleData = Nothing
                If _IsACI = True Then
                    _moduleData = GetQRDAIIIACIMeasureComponent()
                Else
                    _moduleData = GetQRDAIIIMeasureComponent()
                End If

                '  _moduleData = GetQRDAIIIMeasureComponent()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing
            ElseIf _nQRDAFileType = CDAFileTypeEnum.QRDA1 Then
                _moduleData = GetQRDAIIIReportingParamsComponent()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing

                _moduleData = GetQRDAIMeasureComponent()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing
                _moduleData = GetQRDAIPatientDataComponent()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing

                '_moduleData = GetCDAInsuranceComponent()
                'If Not IsNothing(_moduleData) Then
                '    _moduleList.Add(_moduleData)
                'End If
                '_moduleData = Nothing
            Else
                ''If gloLibCCDGeneral.sConfidentialityCode.ToLower() = "restricted" Then
                '' get patient consent - commented to get Purpose of Use every time even if it's Normal confidentiality
                Dim oCDADataExtraction As gloCCDLibrary.gloCDADataExtraction = Nothing
                oCDADataExtraction = New gloCCDLibrary.gloCDADataExtraction()

                oCDADataExtraction.GetPatientConsentforCCDA(mPatient.PatientID)

                oCDADataExtraction = Nothing
                ''End If

                If gloLibCCDGeneral.bIncludePrivacySection Then
                    '' Added by Ujwala for certification criteria - 170.315(b)(7) Data Segmentation for Privacy – Send - Start                   
                    _moduleData = GetCDAPrivacyComponent()
                    _moduleData.typeCodeSpecified = False
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing
                    '' Added by Ujwala for certification criteria - 170.315(b)(7) Data Segmentation for Privacy – Send - End                
                Else
                    _moduleData = GetCDAPurposeOfUseComponent()
                    _moduleData.typeCodeSpecified = False
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing
                End If

                Dim objcls As New clsDiagnosisone_DBLayer
                dtsec = objcls.GetPAtCDASection(mPatient.PatientID)
                _moduleData = GetCDAInsuranceComponent()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing

                'MU Data Set'
                '  If CDAWritingParams.SmokingStatus Then
                _moduleData = GetCDASocialHistoryComponent()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing
                ' End If
                ''Problems
                'If CDAWritingParams.Problems Then
                _moduleData = GetCDAProblemListComponent()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing
                'End If
                ''Medications
                'If CDAWritingParams.Medications Then
                _moduleData = GetCDAMedicationComponent()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing
                'End If
                ''Medicaion Allergies
                'If CDAWritingParams.Allergies Then
                _moduleData = GetCDAAllegiesComponent()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing
                'End If
                ''Laboratory Value(s)/result(s)
                'If CDAWritingParams.LaboratoryResult Then
                _moduleData = GetCDALabResultsComponent()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing
                'End If
                ''Vital Signs
                '  If CDAWritingParams.VitalSigns Then
                _moduleData = GetCDAVitalsComponent()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing
                'End If
                ''Care Plan fields(s),including goals and instructions
                '  If CDAWritingParams.CarePlan_GoalsAndInstructions Then
                '_moduleData = GetCDAPlanofCareComponent()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing
                'End If
                ''Procedures
                '  If CDAWritingParams.Procedures Then
                _moduleData = GetCDAProceduresComponent()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing
                _moduleData = GetCDAClinicalInstructionsComponent()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing
                'End If

                ''Family History
                _moduleData = GetCDAFamilyHistoryComponent()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing
                'End If
                _moduleData = GetCDAImmunizationComponent()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing
                'If _CDAWritingParams.Implant = True Then

                _moduleData = GetCDAImplantProcedure()

                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing
                _moduleData = getCDAHealthconcenSection()

                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing
                _moduleData = getCDAGoalsSection()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing



                '_moduleData = Nothing
                ''Care team members(s)
                '  If CDAWritingParams.CareTeamMember Then
                '_moduleData = GetCDAPlanofCareComponent()
                'If Not IsNothing(_moduleData) Then
                '    _moduleList.Add(_moduleData)
                'End If
                '_moduleData = Nothing
                'End If
                If CDAWritingParams.CDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                    'If CDAWritingParams.ProviderName Then
                    '    '  mPatient.PatientProviders = GetPatientProviderInfo(dsPatient.Tables("Provider"))
                    'End If
                    'If CDAWritingParams.OfficeContact Then
                    '    ''Clinic Info
                    'End If
                    'If CDAWritingParams.Visit_DateAndLocation Then
                    '    ''Included in Encounter
                    'End If
                    'If CDAWritingParams.ChiefComplaint Then
                    _moduleData = GetCDAReasonForVisitComponent()
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing
                    'End If
                    'If CDAWritingParams.ImmunizationsAdministered Then

                    '_moduleData = GetCDAImmunizationComponent()
                    'If Not IsNothing(_moduleData) Then
                    '    _moduleList.Add(_moduleData)
                    'End If
                    '_moduleData = Nothing
                    'End If
                    'If CDAWritingParams.MedicationsAdministered Then
                    _moduleData = GetCDAMedicationAdministeredComponent()
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing

                    _moduleData = getCDAplanoftreatment()
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing
                    'End If
                    'If CDAWritingParams.DiagnosticTestsPending Then
                    '_moduleData = GetCDAPlanofCareComponent()
                    'If Not IsNothing(_moduleData) Then
                    '    _moduleList.Add(_moduleData)
                    'End If
                    '_moduleData = Nothing
                    'End If
                    'If CDAWritingParams.ClinicalInstructions Then


                    'End If
                    'If CDAWritingParams.FutureAppointments Then
                    '_moduleData = GetCDAPlanofCareComponent()
                    'If Not IsNothing(_moduleData) Then
                    '    _moduleList.Add(_moduleData)
                    'End If
                    '_moduleData = Nothing
                    'End If
                    'If CDAWritingParams.ReferralsToOtherProviders Then
                    '_moduleData = GetCDAPlanofCareComponent()
                    'If Not IsNothing(_moduleData) Then
                    '    _moduleList.Add(_moduleData)
                    'End If
                    '_moduleData = Nothing
                    'End If
                    'If CDAWritingParams.FutureScheduledTests Then
                    '_moduleData = GetCDAPlanofCareComponent()
                    'If Not IsNothing(_moduleData) Then
                    '    _moduleList.Add(_moduleData)
                    'End If
                    '_moduleData = Nothing
                    'End If
                    'If CDAWritingParams.RecommendedPatientDecisionAids Then
                    '_moduleData = GetCDAClinicalInstructionsComponent()
                    'If Not IsNothing(_moduleData) Then
                    '    _moduleList.Add(_moduleData)
                    'End If
                    '_moduleData = Nothing
                    'End If

                ElseIf CDAWritingParams.CDAFileType = CDAFileTypeEnum.CareRecordSummary Then
                    'If CDAWritingParams.EncounterDiagnoses Then
                    '    ' mPatient.PatientEncounters = GetPatientEncounter(_PatientID)
                    'End If
                    'If CDAWritingParams.Immunizations Then
                    '_moduleData = GetCDAImmunizationComponent()
                    'If Not IsNothing(_moduleData) Then
                    '    _moduleList.Add(_moduleData)
                    'End If
                    '_moduleData = Nothing

                    _moduleData = GetCDAFunctionalStatusComponent()
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing

                    _moduleData = getCDAMentalStatusComponent()
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing

                    _moduleData = GetCDAReasonForReferralComponent()
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing

                    _moduleData = GetCDAEncounterdiagnosisComponent()
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing

                    _moduleData = getCDAplanoftreatment()
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing

                    ' End If
                    'If CDAWritingParams.CognitiveStatus Then

                    'End If
                    'If CDAWritingParams.FunctionalStatus Then

                    'End If
                    'If CDAWritingParams.ReasonForReferral Then

                    'End If
                    'If CDAWritingParams.ReferringProvider Then

                    'End If
                ElseIf CDAWritingParams.CDAFileType = CDAFileTypeEnum.AmbulatorySummary Then
                    ' If CDAWritingParams.OfficeContact Then

                    'End If
                    'If CDAWritingParams.ProviderName Then
                    'mPatient.PatientProviders = GetPatientProviderInfo(dsPatient.Tables("Provider"))
                    'End If
                    '_moduleData = GetCDAImmunizationComponent()
                    'If Not IsNothing(_moduleData) Then
                    '    _moduleList.Add(_moduleData)
                    'End If
                    '_moduleData = Nothing

                    _moduleData = GetCDAFunctionalStatusComponent()
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing

                    _moduleData = getCDAMentalStatusComponent()
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing

                    _moduleData = GetCDAReasonForReferralComponent()
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing

                    _moduleData = GetCDAEncounterdiagnosisComponent()
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing

                    _moduleData = getCDAplanoftreatment()
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing
                ElseIf CDAWritingParams.CDAFileType = CDAFileTypeEnum.CarePlan Then
                    _moduleData = getCDAInterventionSection()
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing
                    _moduleData = getCDAHealthStatusOutcome()
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing

                    _moduleData = GetCDAEncounterdiagnosisComponent()
                    If Not IsNothing(_moduleData) Then
                        _moduleList.Add(_moduleData)
                    End If
                    _moduleData = Nothing
                End If
                _moduleData = GetCDAAssessments()
                If Not IsNothing(_moduleData) Then
                    _moduleList.Add(_moduleData)
                End If
                _moduleData = Nothing
            End If




            'Declare Component3 array and Copy list to array
            _component3 = New POCD_MT000040UV02Component3(_moduleList.Count) {}
            _moduleList.CopyTo(_component3)

            _component2 = New POCD_MT000040UV02Component2
            If base64String <> String.Empty Then
                GenerateNonXMLBody(_component2, base64String)

            Else
                _component2.Item = New POCD_MT000040UV02StructuredBody()
                DirectCast(_component2.Item, POCD_MT000040UV02StructuredBody).classCode = Nothing
                DirectCast(_component2.Item, POCD_MT000040UV02StructuredBody).classCodeSpecified = False
                DirectCast(_component2.Item, POCD_MT000040UV02StructuredBody).moodCode = Nothing
                DirectCast(_component2.Item, POCD_MT000040UV02StructuredBody).moodCodeSpecified = False
                DirectCast(_component2.Item, POCD_MT000040UV02StructuredBody).component = _component3
            End If

           

        Catch ex As Exception
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            _component2 = Nothing
        Finally

            _component3 = Nothing
            _moduleData = Nothing
            _moduleList = Nothing
        End Try

        Return _component2

    End Function
    Private Function GetCDAAllegiesComponent() As POCD_MT000040UV02Component3
        Dim _Allergies As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim table As StrucDocTable = Nothing
        Dim act As POCD_MT000040UV02Act = Nothing
        Dim ob As POCD_MT000040UV02Observation = Nothing
        Dim observation As POCD_MT000040UV02Observation = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim _AllergyCount As Integer = 0
        Try

            _Allergies = New POCD_MT000040UV02Component3
            _Allergies.section = New POCD_MT000040UV02Section()

            section = _Allergies.section
            'section.ID = Nothing
            section.classCodeSpecified = False
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            section.templateId = New II(1) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Allergies")
            section.templateId(0).extension = _DateExtension2015
            section.templateId(0).assigningAuthorityName = Nothing
            section.templateId(1) = New II()
            section.templateId(1).root = oTemplateIDMaster.GetSectionID("Allergies")
            section.templateId(1).extension = Nothing
            section.templateId(1).assigningAuthorityName = Nothing
            section.code = New CE()
            'section.code.nullFlavor = "NA"
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Allergies")
            If _CodeSysItem IsNot Nothing Then
                section.code.code = _CodeSysItem.Code
                section.code.codeSystem = CodeSystem.LOINC
                section.code.codeSystemName = _CodeSysItem.CodingSystemName
                section.code.codeSystemVersion = Nothing
                section.code.displayName = Nothing
            Else
                section.code = Nothing
            End If

            section.title = New ST()
            section.title.Text = New String() {_CodeSysItem.Description}
            section.title.language = Nothing
            section.text = New StrucDocText()
            section.text.ID = Nothing
            section.text.language = Nothing
            section.text.mediaType = Nothing
            

            If Not IsNothing(mPatient.PatientAllergies) AndAlso mPatient.PatientAllergies.Count > 0 Then
                ''
                ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                If Not IsNothing(sconf.code) Then
                    section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''
                ''
                section.text.Items = New Object(0) {}
                section.text.Items(0) = New StrucDocTable()
                table = DirectCast(section.text.Items(0), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}
                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(7) {}

                table.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Medication/Agent Allergy"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Reaction"}
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Concern Status"}
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(3) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Date Recorded"}
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(4) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).Text = New String() {"RxNorm Code"}
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(5) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).Text = New String() {"Severity"}
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(6) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).Text = New String() {"SNOMED Code"}
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).language = Nothing


                table.thead.tr(0).Items(7) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(7), StrucDocTh).Text = New String() {"Occur Date"}
                DirectCast(table.thead.tr(0).Items(7), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(7), StrucDocTh).language = Nothing

                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing
                table.tbody(0).tr = New StrucDocTr(mPatient.PatientAllergies.Count - 1) {}
                Dim allergyentry As Allergies = Nothing
                For ai As Integer = 0 To mPatient.PatientAllergies.Count - 1
                    allergyentry = mPatient.PatientAllergies.Item(ai)
                    table.tbody(0).tr(ai) = New StrucDocTr()
                    table.tbody(0).tr(ai).ID = Nothing
                    table.tbody(0).tr(ai).language = Nothing
                    table.tbody(0).tr(ai).Items = New Object(7) {}

                    table.tbody(0).tr(ai).Items(0) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(0), StrucDocTd).Text = New String() {allergyentry.ProductName}
                    DirectCast(table.tbody(0).tr(ai).Items(0), StrucDocTd).ID = "allergyallergen" & ai + 1
                    DirectCast(table.tbody(0).tr(ai).Items(0), StrucDocTd).language = Nothing
                    table.tbody(0).tr(ai).Items(1) = New StrucDocTd()
                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Or _nQRDAFileType = CDAFileTypeEnum.CarePlan Then
                        DirectCast(table.tbody(0).tr(ai).Items(1), StrucDocTd).Items = New StrucDocContent(0) {}
                        DirectCast(table.tbody(0).tr(ai).Items(1), StrucDocTd).Items(0) = New StrucDocContent
                        DirectCast(DirectCast(table.tbody(0).tr(ai).Items(1), StrucDocTd).Items(0), StrucDocContent).ID = "Reaction" & ai + 1
                        DirectCast(DirectCast(table.tbody(0).tr(ai).Items(1), StrucDocTd).Items(0), StrucDocContent).language = Nothing
                    End If

                    DirectCast(table.tbody(0).tr(ai).Items(1), StrucDocTd).Text = New String() {allergyentry.Reaction}
                    DirectCast(table.tbody(0).tr(ai).Items(1), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(1), StrucDocTd).language = Nothing
                    table.tbody(0).tr(ai).Items(2) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(2), StrucDocTd).Text = New String() {allergyentry.ConcernStatus}
                    DirectCast(table.tbody(0).tr(ai).Items(2), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(2), StrucDocTd).language = Nothing
                    table.tbody(0).tr(ai).Items(3) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(3), StrucDocTd).Text = New String() {allergyentry.EffectiveStartTime.ToString()}
                    DirectCast(table.tbody(0).tr(ai).Items(3), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(3), StrucDocTd).language = Nothing

                    table.tbody(0).tr(ai).Items(4) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(4), StrucDocTd).Text = New String() {allergyentry.RxNormID.ToString()}
                    DirectCast(table.tbody(0).tr(ai).Items(4), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(4), StrucDocTd).language = Nothing
                    table.tbody(0).tr(ai).Items(5) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(5), StrucDocTd).Text = New String() {allergyentry.Severity.ToString()}
                    DirectCast(table.tbody(0).tr(ai).Items(5), StrucDocTd).ID = "allergyreactionseverity" & ai + 1
                    DirectCast(table.tbody(0).tr(ai).Items(5), StrucDocTd).language = Nothing
                    table.tbody(0).tr(ai).Items(6) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(6), StrucDocTd).Text = New String() {allergyentry.ConceptID}
                    DirectCast(table.tbody(0).tr(ai).Items(6), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(6), StrucDocTd).language = Nothing

                    table.tbody(0).tr(ai).Items(7) = New StrucDocTd()
                    If Not IsNothing(allergyentry.AllergyStartTime) AndAlso allergyentry.AllergyStartTime <> "" Then
                        DirectCast(table.tbody(0).tr(ai).Items(7), StrucDocTd).Text = New String() {CType(allergyentry.AllergyStartTime, Date).ToShortDateString()}
                    Else
                        DirectCast(table.tbody(0).tr(ai).Items(7), StrucDocTd).Text = New String() {""}
                    End If


                    DirectCast(table.tbody(0).tr(ai).Items(7), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(7), StrucDocTd).language = Nothing

                Next
                If Not IsNothing(allergyentry) Then
                    allergyentry.Dispose()
                    allergyentry = Nothing
                End If
            Else
                'section.text.Text = New String() {"No known allergies for patient"}
                'If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                '    section.text.Items = New StrucDocContent(0) {}
                '    section.text.Items(0) = New StrucDocContent
                '    DirectCast(section.text.Items(0), StrucDocContent).ID = "Reaction" & 0
                '    DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                'End If
            End If

            If Not IsNothing(mPatient.PatientAllergies) AndAlso mPatient.PatientAllergies.Count > 0 Then
                _AllergyCount = mPatient.PatientAllergies.Count
                section.entry = New POCD_MT000040UV02Entry(_AllergyCount - 1) {}
                Dim allergieEntry As Allergies = Nothing
                For ai As Integer = 0 To _AllergyCount - 1
                    section.entry(ai) = New POCD_MT000040UV02Entry()
                    section.entry(ai).typeCode = x_ActRelationshipEntry.DRIV
                    section.entry(ai).Item = New POCD_MT000040UV02Act()
                    act = DirectCast(section.entry(ai).Item, POCD_MT000040UV02Act)
                    act.classCode = x_ActClassDocumentEntryAct.ACT
                    act.moodCode = x_DocumentActMood.EVN
                    act.moodCodeSpecified = True
                    act.id = New II(0) {}
                    act.id(0) = New II()
                    act.id(0).root = Guid.NewGuid().ToString()
                    act.id(0).extension = Nothing
                    act.id(0).assigningAuthorityName = Nothing
                    act.templateId = New II(1) {}
                    act.templateId(0) = New II()
                    act.templateId(0).root = oTemplateIDMaster.GetEntryID("Allergy Problem Act")
                    act.templateId(0).assigningAuthorityName = Nothing
                    act.templateId(0).extension = _DateExtension2015

                    act.templateId(1) = New II()
                    act.templateId(1).root = oTemplateIDMaster.GetEntryID("Allergy Problem Act")
                    act.templateId(1).extension = Nothing
                    act.templateId(1).assigningAuthorityName = Nothing


                    act.code = New CD()
                    act.code.code = "CONC"
                    act.code.codeSystem = "2.16.840.1.113883.5.6"
                    '_CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Allergies")
                    'If _CodeSysItem IsNot Nothing Then
                    '    act.code.code = _CodeSysItem.Code
                    '    act.code.nullFlavor = Nothing
                    '    act.code.codeSystemName = _CodeSysItem.CodingSystemName
                    '    act.code.codeSystem = CodeSystem.LOINC
                    '    act.code.displayName = _CodeSysItem.Description
                    '    act.code.codeSystemVersion = Nothing
                    'Else
                    '    act.code = Nothing
                    'End If

                    act.effectiveTime = New IVL_TS()
                    act.effectiveTime.value = Nothing
                    act.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
                    act.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
                    act.effectiveTime.ItemsElementName(1) = ItemsChoiceType2.high
                    act.effectiveTime.Items = New QTY(1) {}
                    act.effectiveTime.Items(0) = New IVXB_TS()
                    act.effectiveTime.Items(1) = New IVXB_TS()
                    If Not IsNothing(mPatient.PatientAllergies) AndAlso mPatient.PatientAllergies.Count > 0 Then
                        allergieEntry = mPatient.PatientAllergies.Item(ai)
                    Else
                        allergieEntry = New Allergies
                    End If

                    If allergieEntry.EffectiveStartTime IsNot Nothing AndAlso allergieEntry.EffectiveStartTime <> "" Then
                        DirectCast(act.effectiveTime.Items(0), IVXB_TS).value = Format(CType(allergieEntry.EffectiveStartTime, Date), "yyyyMMdd")
                    Else
                        DirectCast(act.effectiveTime.Items(0), IVXB_TS).value = Nothing
                        DirectCast(act.effectiveTime.Items(0), IVXB_TS).nullFlavor = "UNK"
                    End If

                    If allergieEntry.EffectiveEndTime IsNot Nothing AndAlso allergieEntry.EffectiveEndTime <> "" AndAlso allergieEntry.ConcernStatus = "Completed" Then
                        DirectCast(act.effectiveTime.Items(1), IVXB_TS).value = Format(CType(allergieEntry.EffectiveEndTime, Date), "yyyyMMdd")
                    Else
                        DirectCast(act.effectiveTime.Items(1), IVXB_TS).value = Nothing
                        DirectCast(act.effectiveTime.Items(1), IVXB_TS).nullFlavor = "UNK"
                    End If

                    act.statusCode = New CS()

                    If Convert.ToString(allergieEntry.ConcernStatus) = "" Then
                        act.statusCode.code = "active"
                    Else
                        act.statusCode.code = Convert.ToString(allergieEntry.ConcernStatus).ToLower()
                    End If
                    act.statusCode.codeSystem = Nothing
                    act.statusCode.codeSystemName = Nothing
                    act.statusCode.codeSystemVersion = Nothing
                    act.statusCode.displayName = Nothing
                    act.entryRelationship = New POCD_MT000040UV02EntryRelationship(0) {}
                    act.entryRelationship(0) = New POCD_MT000040UV02EntryRelationship()
                    act.entryRelationship(0).typeCode = ActRelationshipType.SUBJ
                    act.entryRelationship(0).Item = New POCD_MT000040UV02Observation()
                    ob = DirectCast(act.entryRelationship(0).Item, POCD_MT000040UV02Observation)
                    ob.statusCode = New CS()
                    ob.statusCode.code = "completed"
                    ob.statusCode.codeSystem = Nothing
                    ob.statusCode.codeSystemName = Nothing
                    ob.statusCode.codeSystemVersion = Nothing
                    ob.statusCode.displayName = Nothing
                    ob.classCode = ActClassObservation.OBS
                    ob.moodCode = x_ActMoodDocumentObservation.EVN
                    ob.moodCodeSpecified = True
                    If IsNothing(mPatient.PatientAllergies) OrElse mPatient.PatientAllergies.Count = 0 Then
                        ob.negationIndSpecified = True
                        ob.negationInd = True
                    End If
                    ob.templateId = New II(1) {}
                    ob.templateId(0) = New II()
                    ob.templateId(0).root = oTemplateIDMaster.GetEntryID("Allergy Observation")
                    ob.templateId(0).extension = _DateExtension22
                    ob.templateId(0).assigningAuthorityName = Nothing

                    ob.templateId(1) = New II()
                    ob.templateId(1).root = oTemplateIDMaster.GetEntryID("Allergy Observation")
                    ob.templateId(1).extension = Nothing
                    ob.templateId(1).assigningAuthorityName = Nothing


                    ob.code = New CD()
                    ob.code.code = "ASSERTION"
                    ob.code.codeSystemName = Nothing
                    ob.code.codeSystemVersion = Nothing
                    ob.code.displayName = Nothing
                    ob.code.codeSystem = "2.16.840.1.113883.5.4"
                    ob.id = New II(0) {}
                    ob.id(0) = New II()
                    ob.id(0).extension = _DateExtension22
                    ob.id(0).assigningAuthorityName = Nothing
                    ob.id(0).root = Guid.NewGuid().ToString()
                    ob.effectiveTime = New IVL_TS()
                    ob.effectiveTime.value = Nothing
                    ob.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
                    ob.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
                    ob.effectiveTime.ItemsElementName(1) = ItemsChoiceType2.high
                    ob.effectiveTime.Items = New QTY(1) {}

                    ob.effectiveTime.Items(0) = New IVXB_TS()
                    ob.effectiveTime.Items(1) = New IVXB_TS()
                    If Not IsNothing(allergieEntry.AllergyStartTime) AndAlso (allergieEntry.AllergyStartTime) <> "" Then
                        DirectCast(ob.effectiveTime.Items(0), IVXB_TS).value = Format(CType(allergieEntry.AllergyStartTime, Date), "yyyyMMdd")
                    Else
                        DirectCast(ob.effectiveTime.Items(0), IVXB_TS).value = Nothing
                        DirectCast(ob.effectiveTime.Items(0), IVXB_TS).nullFlavor = "UNK"
                    End If

                    If Not IsNothing(allergieEntry.AllergyEndTime) AndAlso (allergieEntry.AllergyEndTime) <> "" Then
                        If Format(CType(allergieEntry.AllergyEndTime, Date), "yyyyMMdd") = "19000101" Then
                            DirectCast(ob.effectiveTime.Items(1), IVXB_TS).value = Nothing
                            DirectCast(ob.effectiveTime.Items(1), IVXB_TS).nullFlavor = "UNK"
                        Else
                            DirectCast(ob.effectiveTime.Items(1), IVXB_TS).value = Format(CType(allergieEntry.AllergyEndTime, Date), "yyyyMMdd")
                        End If

                    Else
                        DirectCast(ob.effectiveTime.Items(1), IVXB_TS).value = Nothing
                        DirectCast(ob.effectiveTime.Items(1), IVXB_TS).nullFlavor = "UNK"
                    End If


                    ob.value = New ANY(0) {}
                    ob.value(0) = New CD()
                    If IsNothing(mPatient.PatientAllergies) OrElse mPatient.PatientAllergies.Count = 0 Then
                        _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Allergy to substance (disorder)")
                        DirectCast(ob.value(0), CD).displayName = _CodeSysItem.Description
                        DirectCast(ob.value(0), CD).code = _CodeSysItem.Code
                        DirectCast(ob.value(0), CD).codeSystemName = _CodeSysItem.CodingSystemName
                        DirectCast(ob.value(0), CD).codeSystemVersion = Nothing
                        DirectCast(ob.value(0), CD).codeSystem = _CodeSysItem.CodingSystem
                        'DirectCast(ob.value(0), CD).nullFlavor = "UNK"
                        ob.participant = New POCD_MT000040UV02Participant3(0) {}
                        ob.participant(0) = New POCD_MT000040UV02Participant3()
                        ob.participant(0).typeCode = ParticipationType.CSM
                        ob.participant(0).participantRole = New POCD_MT000040UV02ParticipantRole()
                        ob.participant(0).participantRole.classCode = RoleClassRoot.MANU
                        ob.participant(0).participantRole.Item = New POCD_MT000040UV02PlayingEntity()
                        DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).classCode = EntityClassRoot.MMAT
                        DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code = New CE()
                        DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.nullFlavorSpecified = True
                        DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.nullFlavor = "NA"
                        'DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.codeSystem = CodeSystem.RxNorm
                        'DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.codeSystemName = "RxNorm"
                        'DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.codeSystemVersion = Nothing
                    Else
                        If allergieEntry.AllergyIntoleranceType <> "" Then
                            DirectCast(ob.value(0), CD).code = allergieEntry.AllergyIntoleranceType
                            DirectCast(ob.value(0), CD).displayName = oCodingSystemMaster.GetbyCode(CodeSystem.SNOMED_CT, allergieEntry.AllergyIntoleranceType).Description
                        Else
                            DirectCast(ob.value(0), CD).displayName = "drug allergy"
                            DirectCast(ob.value(0), CD).code = "416098002"
                        End If

                        DirectCast(ob.value(0), CD).codeSystemName = "SNOMED CT"
                        DirectCast(ob.value(0), CD).codeSystemVersion = Nothing
                        DirectCast(ob.value(0), CD).codeSystem = CodeSystem.SNOMED_CT
                        ob.participant = New POCD_MT000040UV02Participant3(0) {}
                        ob.participant(0) = New POCD_MT000040UV02Participant3()
                        ob.participant(0).typeCode = ParticipationType.CSM
                        ob.participant(0).participantRole = New POCD_MT000040UV02ParticipantRole()
                        ob.participant(0).participantRole.classCode = RoleClassRoot.MANU
                        ob.participant(0).participantRole.Item = New POCD_MT000040UV02PlayingEntity()
                        DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).classCode = EntityClassRoot.MMAT
                        DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code = New CE()

                        DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.codeSystemVersion = Nothing
                        If allergieEntry.RxNormID <> "" AndAlso allergieEntry.RxNormID <> Nothing Then
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.code = allergieEntry.RxNormID
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.codeSystem = CodeSystem.RxNorm
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.codeSystemName = "RxNorm"
                            If allergieEntry.ProductName <> "" AndAlso allergieEntry.ProductName <> Nothing Then
                                DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.displayName = allergieEntry.ProductName
                            Else
                                DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.displayName = Nothing
                            End If
                        Else
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.nullFlavorSpecified = True
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.nullFlavor = "UNK"
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.codeSystem = Nothing
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.codeSystemName = Nothing
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.displayName = Nothing

                        End If




                        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Or _nQRDAFileType = CDAFileTypeEnum.CarePlan Then
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.originalText = New ED()
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.originalText.language = Nothing
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.originalText.mediaType = Nothing
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.originalText.reference = New TEL()
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.originalText.reference.value = "#allergyallergen" & ai + 1
                        End If


                        'generate the translation tag only when snomed cod eis selected
                        If allergieEntry.ConceptID <> "" AndAlso allergieEntry.ConceptID <> Nothing Then
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.translation = New CD(0) {}
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.translation(0) = New CD()
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.translation(0).code = allergieEntry.ConceptID
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.translation(0).codeSystem = CodeSystem.SNOMED_CT
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.translation(0).codeSystemName = "SNOMED CT"
                            DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.translation(0).codeSystemVersion = Nothing
                            If allergieEntry.ProductName <> "" AndAlso allergieEntry.ProductName <> Nothing Then
                                DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.translation(0).displayName = allergieEntry.ProductName
                            Else
                                DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.translation(0).displayName = Nothing
                            End If
                            'Else
                            '    DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.translation(0).code = Nothing
                            '    DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.translation(0).nullFlavor = "UNK"
                        End If



                        ob.entryRelationship = New POCD_MT000040UV02EntryRelationship(0) {}
                        ob.entryRelationship(0) = New POCD_MT000040UV02EntryRelationship()
                        ob.entryRelationship(0).typeCode = ActRelationshipType.MFST
                        ob.entryRelationship(0).inversionInd = True
                        ob.entryRelationship(0).inversionIndSpecified = Boolean.TrueString
                        ob.entryRelationship(0).Item = New POCD_MT000040UV02Observation()
                        observation = DirectCast(ob.entryRelationship(0).Item, POCD_MT000040UV02Observation)
                        observation.classCode = ActClassObservation.OBS
                        observation.moodCode = x_ActMoodDocumentObservation.EVN
                        observation.moodCodeSpecified = True
                        observation.templateId = New II(1) {}
                        observation.templateId(0) = New II()
                        observation.templateId(0).root = oTemplateIDMaster.GetEntryID("Reaction Observation")
                        observation.templateId(0).assigningAuthorityName = Nothing
                        observation.templateId(0).extension = _DateExtension22

                        observation.templateId(1) = New II()
                        observation.templateId(1).root = oTemplateIDMaster.GetEntryID("Reaction Observation")
                        observation.templateId(1).assigningAuthorityName = Nothing
                        observation.templateId(1).extension = Nothing

                        observation.id = New II(0) {}
                        observation.id(0) = New II()
                        observation.id(0).extension = Nothing
                        observation.id(0).assigningAuthorityName = Nothing
                        observation.id(0).root = Guid.NewGuid().ToString()
                        observation.code = New CD()
                        observation.code.code = "ASSERTION"
                        observation.code.codeSystem = "2.16.840.1.113883.5.4"
                        observation.code.codeSystemName = Nothing
                        observation.code.codeSystemVersion = Nothing
                        observation.code.displayName = Nothing

                        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Or _nQRDAFileType = CDAFileTypeEnum.CarePlan Then
                            observation.text = New ED()
                            observation.text.language = Nothing
                            observation.text.mediaType = Nothing
                            observation.text.reference = New TEL()
                            observation.text.reference.value = "#Reaction" & ai + 1
                        End If


                        observation.statusCode = New CS()
                        observation.statusCode.code = "completed"
                        observation.statusCode.codeSystem = Nothing
                        observation.statusCode.codeSystemName = Nothing
                        observation.statusCode.codeSystemVersion = Nothing
                        observation.statusCode.displayName = Nothing

                        observation.effectiveTime = New IVL_TS()
                        observation.effectiveTime.value = Nothing
                        observation.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
                        observation.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
                        observation.effectiveTime.ItemsElementName(1) = ItemsChoiceType2.high
                        observation.effectiveTime.Items = New QTY(1) {}
                        observation.effectiveTime.Items(0) = New IVXB_TS()
                        If allergieEntry.EffectiveStartTime IsNot Nothing AndAlso allergieEntry.EffectiveStartTime <> "" Then
                            DirectCast(observation.effectiveTime.Items(0), IVXB_TS).value = Format(CType(allergieEntry.EffectiveStartTime, Date), "yyyyMMdd")
                        Else
                            DirectCast(observation.effectiveTime.Items(0), IVXB_TS).value = Nothing
                        End If
                        observation.effectiveTime.Items(1) = New IVXB_TS()


                        DirectCast(observation.effectiveTime.Items(1), IVXB_TS).nullFlavor = "UNK"
                        DirectCast(observation.effectiveTime.Items(1), IVXB_TS).value = Nothing


                        observation.value = New CD(0) {}
                        observation.value(0) = New CD()
                        If allergieEntry.ReactionCode IsNot Nothing AndAlso allergieEntry.ReactionCode <> "" Then
                            DirectCast(observation.value(0), CD).code = allergieEntry.ReactionCode
                            DirectCast(observation.value(0), CD).codeSystem = CodeSystem.SNOMED_CT
                            DirectCast(observation.value(0), CD).codeSystemName = "SNOMED CT"
                            DirectCast(observation.value(0), CD).codeSystemVersion = Nothing
                            DirectCast(observation.value(0), CD).displayName = allergieEntry.Reaction
                        Else
                            DirectCast(observation.value(0), CD).nullFlavor = "UNK"
                            DirectCast(observation.value(0), CD).code = Nothing
                            DirectCast(observation.value(0), CD).codeSystem = Nothing
                            DirectCast(observation.value(0), CD).codeSystemName = Nothing
                            DirectCast(observation.value(0), CD).codeSystemVersion = Nothing
                            DirectCast(observation.value(0), CD).displayName = Nothing
                        End If
                        ''
                        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Or _nQRDAFileType = CDAFileTypeEnum.CarePlan Then

                            observation.entryRelationship = New POCD_MT000040UV02EntryRelationship(0) {}
                            observation.entryRelationship(0) = New POCD_MT000040UV02EntryRelationship()
                            observation.entryRelationship(0).typeCode = ActRelationshipType.SUBJ
                            observation.entryRelationship(0).inversionInd = True
                            observation.entryRelationship(0).inversionIndSpecified = Boolean.TrueString
                            observation.entryRelationship(0).Item = New POCD_MT000040UV02Observation()
                            observation = DirectCast(observation.entryRelationship(0).Item, POCD_MT000040UV02Observation)

                            observation.classCode = ActClassObservation.OBS
                            observation.moodCode = x_ActMoodDocumentObservation.EVN
                            observation.moodCodeSpecified = True
                            observation.templateId = New II(1) {}
                            observation.templateId(0) = New II()
                            observation.templateId(0).root = "2.16.840.1.113883.10.20.22.4.8"
                            observation.templateId(0).assigningAuthorityName = Nothing
                            observation.templateId(0).extension = _DateExtension22


                            observation.templateId(1) = New II()
                            observation.templateId(1).root = "2.16.840.1.113883.10.20.22.4.8"
                            observation.templateId(1).assigningAuthorityName = Nothing
                            observation.templateId(1).extension = Nothing



                            observation.code = New CE()
                            observation.code.code = "SEV"
                            observation.code.codeSystem = "2.16.840.1.113883.5.4"
                            observation.code.codeSystemName = Nothing
                            observation.code.codeSystemVersion = Nothing
                            observation.code.displayName = "Severity Observation"



                            observation.text = New ED()
                            observation.text.language = Nothing
                            observation.text.mediaType = Nothing
                            observation.text.reference = New TEL()
                            observation.text.reference.value = "#allergyreactionseverity" & ai + 1

                            observation.statusCode = New CS()
                            observation.statusCode.code = "completed"
                            observation.statusCode.codeSystem = Nothing
                            observation.statusCode.codeSystemName = Nothing
                            observation.statusCode.codeSystemVersion = Nothing
                            observation.statusCode.displayName = Nothing


                            observation.value = New CD(0) {}
                            observation.value(0) = New CD()
                            If allergieEntry.Severity <> "" Then
                                _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, allergieEntry.Severity)
                                If Not IsNothing(_CodeSysItem) Then

                                    DirectCast(observation.value(0), CD).code = _CodeSysItem.Code
                                    DirectCast(observation.value(0), CD).codeSystem = _CodeSysItem.CodingSystem
                                    DirectCast(observation.value(0), CD).codeSystemName = "SNOMED CT"
                                    DirectCast(observation.value(0), CD).codeSystemVersion = Nothing
                                    DirectCast(observation.value(0), CD).displayName = _CodeSysItem.Description
                                End If
                            Else
                                DirectCast(observation.value(0), CD).nullFlavor = "UNK"
                            End If


                        End If

                    End If
                    If Not IsNothing(allergieEntry) Then
                        allergieEntry.Dispose()
                        allergieEntry = Nothing
                    End If
                Next
            Else
                If Not IsNothing(dtsec) Then

                    Dim dr As DataRow() = dtsec.Select("sSectionName='Medication Allergies'")
                    If (dr.Length = 0) Then
                        _Allergies.section = NoInformationSection("Allergies", _CodeSysItem.Description, _DateExtension2015)
                        ''  section.text.Text = New String() {"No Information for Patient"}
                    ElseIf dr(0)(1) = "0" Then
                        _Allergies.section = NoInformationSection("Allergies", _CodeSysItem.Description, _DateExtension2015)
                        ''section.text.Text = New String() {"No Information for Patient"}
                    Else

                        section.text.Text = New String() {"No known allergies for Patient"}
                        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Or _nQRDAFileType = CDAFileTypeEnum.CarePlan Then
                            section.text.Items = New StrucDocContent(0) {}
                            section.text.Items(0) = New StrucDocContent
                            DirectCast(section.text.Items(0), StrucDocContent).ID = "Reaction" & 0
                            DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                        End If
                        getNoKnownAllergies(section.entry)
                    End If
                Else
                    _Allergies.section = NoInformationSection("Allergies", _CodeSysItem.Description, _DateExtension2015)
                End If
            End If

           


            Return _Allergies
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Allergies Section"
            Else
                _msgString = _msgString & vbNewLine & "Allergies Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            '  MessageBox.Show("Error:" & ex.ToString())
            Return Nothing
        Finally
            section = Nothing
            table = Nothing
            act = Nothing
            ob = Nothing
            observation = Nothing
            _CodeSysItem = Nothing
        End Try
    End Function
    'Private Sub getNoKnownMediation(ByRef entry As POCD_MT000040UV02Entry())
    '    entry = New POCD_MT000040UV02Entry(0) {}
    '    entry(0) = New POCD_MT000040UV02Entry
    '    entry(0).typeCode = x_ActRelationshipEntry.DRIV
    '    entry(0).Item = New POCD_MT000040UV02Act()
    '    Dim act As POCD_MT000040UV02Act
    '    act = DirectCast(entry(0).Item, POCD_MT000040UV02Act)
    '    act.classCode = x_ActClassDocumentEntryAct.ACT
    '    act.moodCode = x_DocumentActMood.EVN
    '    act.moodCodeSpecified = True
    '    act.id = New II(0) {}
    '    act.id(0) = New II()
    '    act.id(0).root = Guid.NewGuid().ToString()
    '    act.id(0).extension = Nothing
    '    act.id(0).assigningAuthorityName = Nothing
    '    act.templateId = New II(0) {}
    '    act.templateId(0) = New II()
    '    act.templateId(0).root = oTemplateIDMaster.GetEntryID("Allergy Problem Act")
    '    act.templateId(0).assigningAuthorityName = Nothing
    '    act.templateId(0).extension = _DateExtension2015
    '    act.code = New CD()
    '    act.code.code = "CONC"
    '    act.code.codeSystem = "2.16.840.1.113883.5.6"
    '    act.effectiveTime = New IVL_TS()
    '    act.effectiveTime.value = Nothing
    '    act.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
    '    act.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low

    '    act.effectiveTime.Items = New QTY(1) {}
    '    act.effectiveTime.Items(0) = New IVXB_TS()

    '    DirectCast(act.effectiveTime.Items(0), IVXB_TS).value = Format(CType(DateTime.Now, Date), "yyyyMMdd")

    '    act.statusCode = New CS()
    '    act.statusCode.code = "active"

    '    act.statusCode.codeSystem = Nothing
    '    act.statusCode.codeSystemName = Nothing
    '    act.statusCode.codeSystemVersion = Nothing
    '    act.statusCode.displayName = Nothing
    '    act.entryRelationship = New POCD_MT000040UV02EntryRelationship(0) {}
    '    act.entryRelationship(0) = New POCD_MT000040UV02EntryRelationship()
    '    act.entryRelationship(0).typeCode = ActRelationshipType.SUBJ
    '    act.entryRelationship(0).Item = New POCD_MT000040UV02Observation()
    '    Dim ob As POCD_MT000040UV02Observation
    '    ob = DirectCast(act.entryRelationship(0).Item, POCD_MT000040UV02Observation)
    '    ob.statusCode = New CS()
    '    ob.statusCode.code = "completed"
    '    ob.statusCode.codeSystem = Nothing
    '    ob.statusCode.codeSystemName = Nothing
    '    ob.statusCode.codeSystemVersion = Nothing
    '    ob.statusCode.displayName = Nothing
    '    ob.classCode = ActClassObservation.OBS
    '    ob.moodCode = x_ActMoodDocumentObservation.EVN
    '    ob.moodCodeSpecified = True
    '    ob.negationIndSpecified = True
    '    ob.negationInd = True
    '    ob.templateId = New II(0) {}
    '    ob.templateId(0) = New II()
    '    ob.templateId(0).root = oTemplateIDMaster.GetEntryID("Allergy Observation")
    '    ob.templateId(0).extension = _DateExtension22
    '    ob.templateId(0).assigningAuthorityName = Nothing
    '    ob.code = New CD()
    '    ob.code.code = "ASSERTION"
    '    ob.code.codeSystemName = Nothing
    '    ob.code.codeSystemVersion = Nothing
    '    ob.code.displayName = Nothing
    '    ob.code.codeSystem = "2.16.840.1.113883.5.4"
    '    ob.id = New II(0) {}
    '    ob.id(0) = New II()
    '    ob.id(0).extension = _DateExtension22
    '    ob.id(0).assigningAuthorityName = Nothing
    '    ob.id(0).root = Guid.NewGuid().ToString()
    '    ob.effectiveTime = New IVL_TS()
    '    ob.effectiveTime.value = Nothing
    '    ob.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
    '    ob.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
    '    'ob.effectiveTime.ItemsElementName(1) = ItemsChoiceType2.high
    '    ob.effectiveTime.Items = New QTY(1) {}

    '    ob.effectiveTime.Items(0) = New IVXB_TS()
    '    'ob.effectiveTime.Items(1) = New IVXB_TS()
    '    Dim _CodeSysItem As CodeSystemItem = Nothing
    '    DirectCast(ob.effectiveTime.Items(0), IVXB_TS).nullFlavorSpecified = True
    '    DirectCast(ob.effectiveTime.Items(0), IVXB_TS).nullFlavor = "NA"
    '    _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Allergy to substance (disorder)")
    '    ob.value = New CD(0) {}
    '    ob.value(0) = New CD()
    '    DirectCast(ob.value(0), CD).displayName = _CodeSysItem.Description
    '    DirectCast(ob.value(0), CD).code = _CodeSysItem.Code
    '    DirectCast(ob.value(0), CD).codeSystemName = _CodeSysItem.CodingSystemName
    '    DirectCast(ob.value(0), CD).codeSystemVersion = Nothing
    '    DirectCast(ob.value(0), CD).codeSystem = _CodeSysItem.CodingSystem
    '    'DirectCast(ob.value(0), CD).nullFlavor = "UNK"
    '    ob.participant = New POCD_MT000040UV02Participant3(0) {}
    '    ob.participant(0) = New POCD_MT000040UV02Participant3()
    '    ob.participant(0).typeCode = ParticipationType.CSM
    '    ob.participant(0).participantRole = New POCD_MT000040UV02ParticipantRole()
    '    ob.participant(0).participantRole.classCode = RoleClassRoot.MANU
    '    ob.participant(0).participantRole.Item = New POCD_MT000040UV02PlayingEntity()
    '    DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).classCode = EntityClassRoot.MMAT
    '    DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code = New CE()
    '    DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.nullFlavorSpecified = True
    '    DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.nullFlavor = "NA"

    'End Sub
    Private Sub getNoKnownProblem(ByRef entry As POCD_MT000040UV02Entry())
        entry = New POCD_MT000040UV02Entry(0) {}
        entry(0) = New POCD_MT000040UV02Entry
        entry(0).typeCode = x_ActRelationshipEntry.DRIV
        entry(0).Item = New POCD_MT000040UV02Act()
        Dim act As POCD_MT000040UV02Act
        act = DirectCast(entry(0).Item, POCD_MT000040UV02Act)
        act.classCode = x_ActClassDocumentEntryAct.ACT
        act.moodCode = x_DocumentActMood.EVN
        act.moodCodeSpecified = True
        act.id = New II(0) {}
        act.id(0) = New II()
        act.id(0).root = Guid.NewGuid().ToString()
        act.id(0).extension = Nothing
        act.id(0).assigningAuthorityName = Nothing
        act.templateId = New II(1) {}
        act.templateId(0) = New II()
        act.templateId(0).root = oTemplateIDMaster.GetEntryID("Problem Concern Act (Condition)")
        act.templateId(0).assigningAuthorityName = Nothing
        act.templateId(0).extension = _DateExtension2015


        act.templateId(1) = New II()
        act.templateId(1).root = oTemplateIDMaster.GetEntryID("Problem Concern Act (Condition)")
        act.templateId(1).extension = Nothing
        act.templateId(1).assigningAuthorityName = Nothing


        act.code = New CD()
        act.code.code = "CONC"
        act.code.codeSystem = "2.16.840.1.113883.5.6"
        act.effectiveTime = New IVL_TS()
        act.effectiveTime.value = Nothing
        act.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
        act.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low

        act.effectiveTime.Items = New QTY(1) {}
        act.effectiveTime.Items(0) = New IVXB_TS()

        DirectCast(act.effectiveTime.Items(0), IVXB_TS).value = Format(CType(DateTime.Now, Date), "yyyyMMdd")

        act.statusCode = New CS()
        act.statusCode.code = "active"

        act.statusCode.codeSystem = Nothing
        act.statusCode.codeSystemName = Nothing
        act.statusCode.codeSystemVersion = Nothing
        act.statusCode.displayName = Nothing
        act.entryRelationship = New POCD_MT000040UV02EntryRelationship(0) {}
        act.entryRelationship(0) = New POCD_MT000040UV02EntryRelationship()
        act.entryRelationship(0).typeCode = ActRelationshipType.SUBJ
        act.entryRelationship(0).Item = New POCD_MT000040UV02Observation()
        Dim ob As POCD_MT000040UV02Observation
        ob = DirectCast(act.entryRelationship(0).Item, POCD_MT000040UV02Observation)
        ob.statusCode = New CS()
        ob.statusCode.code = "completed"
        ob.statusCode.codeSystem = Nothing
        ob.statusCode.codeSystemName = Nothing
        ob.statusCode.codeSystemVersion = Nothing
        ob.statusCode.displayName = Nothing
        ob.classCode = ActClassObservation.OBS
        ob.moodCode = x_ActMoodDocumentObservation.EVN
        ob.moodCodeSpecified = True
        ob.negationIndSpecified = True
        ob.negationInd = True
        ob.templateId = New II(1) {}
        ob.templateId(0) = New II()
        ob.templateId(0).root = oTemplateIDMaster.GetEntryID("Problem Observation")  ''oTemplateIDMaster.GetEntryID("Problem Concern Act (Condition)") 
        ob.templateId(0).extension = _DateExtension2015
        ob.templateId(0).assigningAuthorityName = Nothing


        ob.templateId(1) = New II()
        ob.templateId(1).root = oTemplateIDMaster.GetEntryID("Problem Observation")  ''"2.16.840.1.113883.10.20.22.4.4"
        ob.templateId(1).extension = Nothing
        ob.templateId(1).assigningAuthorityName = Nothing


        ob.code = New CD()
        ob.code.code = "55607006"
        ob.code.codeSystemName = "SNOMED-CT"
        ob.code.displayName = "Problem"
        ob.code.codeSystem = "2.16.840.1.113883.6.96"
        ob.code.translation = New CD(1) {}
        ob.code.translation(0) = New CD()
        ob.code.translation(0).code = "75326-9"
        ob.code.translation(0).codeSystem = "2.16.840.1.113883.6.1"
        ob.code.translation(0).displayName = "Problem"
        ob.code.translation(0).codeSystemName = "LOINC"

        ob.id = New II(0) {}
        ob.id(0) = New II()
        ob.id(0).extension = _DateExtension22
        ob.id(0).assigningAuthorityName = Nothing
        ob.id(0).root = Guid.NewGuid().ToString()
        ob.effectiveTime = New IVL_TS()
        ob.effectiveTime.value = Nothing
        ob.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
        ob.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
        'ob.effectiveTime.ItemsElementName(1) = ItemsChoiceType2.high
        ob.effectiveTime.Items = New QTY(1) {}

        ob.effectiveTime.Items(0) = New IVXB_TS()
        'ob.effectiveTime.Items(1) = New IVXB_TS()
        Dim _CodeSysItem As CodeSystemItem = Nothing
        DirectCast(ob.effectiveTime.Items(0), IVXB_TS).nullFlavorSpecified = True
        DirectCast(ob.effectiveTime.Items(0), IVXB_TS).nullFlavor = "NA"
        '_CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Problem List")
        '_CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Allergy to substance (disorder)")
        _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Problem")
        ob.value = New CD(0) {}
        ob.value(0) = New CD()
        DirectCast(ob.value(0), CD).displayName = _CodeSysItem.Description
        DirectCast(ob.value(0), CD).code = _CodeSysItem.Code
        DirectCast(ob.value(0), CD).codeSystemName = _CodeSysItem.CodingSystemName
        DirectCast(ob.value(0), CD).codeSystemVersion = Nothing
        DirectCast(ob.value(0), CD).codeSystem = _CodeSysItem.CodingSystem
        'DirectCast(ob.value(0), CD).nullFlavor = "UNK"
        'ob.participant = New POCD_MT000040UV02Participant3(0) {}
        'ob.participant(0) = New POCD_MT000040UV02Participant3()
        'ob.participant(0).typeCode = ParticipationType.CSM
        'ob.participant(0).participantRole = New POCD_MT000040UV02ParticipantRole()
        'ob.participant(0).participantRole.classCode = RoleClassRoot.MANU
        'ob.participant(0).participantRole.Item = New POCD_MT000040UV02PlayingEntity()
        'DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).classCode = EntityClassRoot.MMAT
        'DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code = New CE()
        'DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.nullFlavorSpecified = True
        'DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.nullFlavor = "NA"

    End Sub

    Private Sub getNoKnownAllergies(ByRef entry As POCD_MT000040UV02Entry())
        entry = New POCD_MT000040UV02Entry(0) {}
        entry(0) = New POCD_MT000040UV02Entry
        entry(0).typeCode = x_ActRelationshipEntry.DRIV
        entry(0).Item = New POCD_MT000040UV02Act()
        Dim act As POCD_MT000040UV02Act
        act = DirectCast(entry(0).Item, POCD_MT000040UV02Act)
        act.classCode = x_ActClassDocumentEntryAct.ACT
        act.moodCode = x_DocumentActMood.EVN
        act.moodCodeSpecified = True
        act.id = New II(0) {}
        act.id(0) = New II()
        act.id(0).root = Guid.NewGuid().ToString()
        act.id(0).extension = Nothing
        act.id(0).assigningAuthorityName = Nothing
        act.templateId = New II(1) {}
        act.templateId(0) = New II()
        act.templateId(0).root = oTemplateIDMaster.GetEntryID("Allergy Problem Act")
        act.templateId(0).assigningAuthorityName = Nothing
        act.templateId(0).extension = _DateExtension2015


        act.templateId(1) = New II()
        act.templateId(1).root = oTemplateIDMaster.GetEntryID("Allergy Problem Act")
        act.templateId(1).extension = Nothing
        act.templateId(1).assigningAuthorityName = Nothing


        act.code = New CD()
        act.code.code = "CONC"
        act.code.codeSystem = "2.16.840.1.113883.5.6"
        act.effectiveTime = New IVL_TS()
        act.effectiveTime.value = Nothing
        act.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
        act.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low

        act.effectiveTime.Items = New QTY(1) {}
        act.effectiveTime.Items(0) = New IVXB_TS()

        DirectCast(act.effectiveTime.Items(0), IVXB_TS).value = Format(CType(DateTime.Now, Date), "yyyyMMdd")
     
        act.statusCode = New CS()
        act.statusCode.code = "active"
 
        act.statusCode.codeSystem = Nothing
        act.statusCode.codeSystemName = Nothing
        act.statusCode.codeSystemVersion = Nothing
        act.statusCode.displayName = Nothing
        act.entryRelationship = New POCD_MT000040UV02EntryRelationship(0) {}
        act.entryRelationship(0) = New POCD_MT000040UV02EntryRelationship()
        act.entryRelationship(0).typeCode = ActRelationshipType.SUBJ
        act.entryRelationship(0).Item = New POCD_MT000040UV02Observation()
        Dim ob As POCD_MT000040UV02Observation
        ob = DirectCast(act.entryRelationship(0).Item, POCD_MT000040UV02Observation)
        ob.statusCode = New CS()
        ob.statusCode.code = "completed"
        ob.statusCode.codeSystem = Nothing
        ob.statusCode.codeSystemName = Nothing
        ob.statusCode.codeSystemVersion = Nothing
        ob.statusCode.displayName = Nothing
        ob.classCode = ActClassObservation.OBS
        ob.moodCode = x_ActMoodDocumentObservation.EVN
        ob.moodCodeSpecified = True
        ob.negationIndSpecified = True
        ob.negationInd = True
        ob.templateId = New II(1) {}
        ob.templateId(0) = New II()
        ob.templateId(0).root = oTemplateIDMaster.GetEntryID("Allergy Observation")
        ob.templateId(0).extension = _DateExtension22
        ob.templateId(0).assigningAuthorityName = Nothing


        ob.templateId(1) = New II()
        ob.templateId(1).root = oTemplateIDMaster.GetEntryID("Allergy Observation")
        ob.templateId(1).extension = Nothing
        ob.templateId(1).assigningAuthorityName = Nothing


        ob.code = New CD()
        ob.code.code = "ASSERTION"
        ob.code.codeSystemName = Nothing
        ob.code.codeSystemVersion = Nothing
        ob.code.displayName = Nothing
        ob.code.codeSystem = "2.16.840.1.113883.5.4"
        ob.id = New II(0) {}
        ob.id(0) = New II()
        ob.id(0).extension = _DateExtension22
        ob.id(0).assigningAuthorityName = Nothing
        ob.id(0).root = Guid.NewGuid().ToString()
        ob.effectiveTime = New IVL_TS()
        ob.effectiveTime.value = Nothing
        ob.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
        ob.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
        'ob.effectiveTime.ItemsElementName(1) = ItemsChoiceType2.high
        ob.effectiveTime.Items = New QTY(1) {}

        ob.effectiveTime.Items(0) = New IVXB_TS()
        'ob.effectiveTime.Items(1) = New IVXB_TS()
        Dim _CodeSysItem As CodeSystemItem = Nothing
        DirectCast(ob.effectiveTime.Items(0), IVXB_TS).nullFlavorSpecified = True
        DirectCast(ob.effectiveTime.Items(0), IVXB_TS).nullFlavor = "NA"
        _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Allergy to substance (disorder)")
        ob.value = New CD(0) {}
        ob.value(0) = New CD()
        DirectCast(ob.value(0), CD).displayName = _CodeSysItem.Description
        DirectCast(ob.value(0), CD).code = _CodeSysItem.Code
        DirectCast(ob.value(0), CD).codeSystemName = _CodeSysItem.CodingSystemName
        DirectCast(ob.value(0), CD).codeSystemVersion = Nothing
        DirectCast(ob.value(0), CD).codeSystem = _CodeSysItem.CodingSystem
        'DirectCast(ob.value(0), CD).nullFlavor = "UNK"
        ob.participant = New POCD_MT000040UV02Participant3(0) {}
        ob.participant(0) = New POCD_MT000040UV02Participant3()
        ob.participant(0).typeCode = ParticipationType.CSM
        ob.participant(0).participantRole = New POCD_MT000040UV02ParticipantRole()
        ob.participant(0).participantRole.classCode = RoleClassRoot.MANU
        ob.participant(0).participantRole.Item = New POCD_MT000040UV02PlayingEntity()
        DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).classCode = EntityClassRoot.MMAT
        DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code = New CE()
        DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.nullFlavorSpecified = True
        DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.nullFlavor = "NA"

    End Sub


    Private Sub getNoKnownMedication(ByRef entry As POCD_MT000040UV02Entry())
        Dim _Medication As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim table As StrucDocTable = Nothing
        Dim sadmin As POCD_MT000040UV02SubstanceAdministration = Nothing
        Dim mat As POCD_MT000040UV02Material = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim _MedicationCount As Integer = 1
        Dim objCDADataExtraction As gloCDADataExtraction = Nothing

        entry = New POCD_MT000040UV02Entry(0) {}
        entry(0) = New POCD_MT000040UV02Entry


        entry(0).Item = New POCD_MT000040UV02SubstanceAdministration()
        sadmin = DirectCast(entry(0).Item, POCD_MT000040UV02SubstanceAdministration)
        sadmin.moodCode = x_DocumentSubstanceMood.EVN
        sadmin.moodCodeSpecified = True
        If IsNothing(mPatient.PatientMedications) Or mPatient.PatientMedications.Count = 0 Then
            sadmin.negationIndSpecified = True
            sadmin.negationInd = True
        End If

        sadmin.templateId = New II(1) {}
        sadmin.templateId(0) = New II()
        sadmin.templateId(0).root = oTemplateIDMaster.GetEntryID("Medication Activity")
        sadmin.templateId(0).extension = _DateExtension22
        sadmin.templateId(0).assigningAuthorityName = Nothing


        sadmin.templateId(1) = New II()
        sadmin.templateId(1).root = oTemplateIDMaster.GetEntryID("Medication Activity")
        sadmin.templateId(1).extension = Nothing
        sadmin.templateId(1).assigningAuthorityName = Nothing


        sadmin.id = New II(0) {}
        sadmin.id(0) = New II()
        sadmin.id(0).root = Guid.NewGuid().ToString()
        sadmin.id(0).extension = Nothing
        sadmin.id(0).assigningAuthorityName = Nothing

       
        '  medentries = New Medication

        ' medentries.GUID = sadmin.id(0).root
        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
            sadmin.text = New ED()
            sadmin.text.language = Nothing
            sadmin.text.mediaType = Nothing
            sadmin.text.reference = New TEL()
            sadmin.text.reference.nullFlavor = "NA"

        End If

        sadmin.statusCode = New CS()

        sadmin.statusCode.code = "active"
      
        sadmin.statusCode.codeSystem = Nothing
        sadmin.statusCode.codeSystemName = Nothing
        sadmin.statusCode.codeSystemVersion = Nothing
        sadmin.statusCode.displayName = Nothing
        'sadmin.effectiveTime = New IVL_TS(0) {}
        sadmin.effectiveTime = New SXCM_TS(1) {}
        sadmin.effectiveTime(0) = New IVL_TS()
        sadmin.effectiveTime(0).value = Nothing
        DirectCast(sadmin.effectiveTime(0), IVL_TS).ItemsElementName = New ItemsChoiceType2(1) {}
        DirectCast(sadmin.effectiveTime(0), IVL_TS).ItemsElementName(0) = ItemsChoiceType2.low
        DirectCast(sadmin.effectiveTime(0), IVL_TS).ItemsElementName(1) = ItemsChoiceType2.high
        DirectCast(sadmin.effectiveTime(0), IVL_TS).Items = New QTY(1) {}
        DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(0) = New IVXB_TS()

        DirectCast(DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(0), IVXB_TS).value = Nothing
        DirectCast(DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(0), IVXB_TS).nullFlavor = "NA"



        'If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
        '    'sadmin.effectiveTime = New PIVL_TS(1) {}

        '    If Not IsNothing(medentries.FrequencyDesc) Then
        '        objCDADataExtraction = New gloCDADataExtraction()
        '        Dim dtdetails As DataTable = objCDADataExtraction.GetFrequencyDetails(medentries.FrequencyDesc)
        '        If Not IsNothing(dtdetails) Then
        '            If dtdetails.Rows.Count > 0 Then
        '                If dtdetails.Rows(0)("sXsiType") IsNot Nothing AndAlso dtdetails.Rows(0)("sXsiType") <> "" Then
        '                    If dtdetails.Rows(0)("sXsiType") = "PIVL_TS" Then
        '                        sadmin.effectiveTime(1) = New PIVL_TS()
        '                        sadmin.effectiveTime(1).value = Nothing
        '                        sadmin.effectiveTime(1).operator = SetOperator.A
        '                        DirectCast(sadmin.effectiveTime(1), PIVL_TS).institutionSpecified1 = dtdetails.Rows(0)("binstitutionSpecified")

        '                        DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()

        '                        If dtdetails.Rows(0)("sValue") IsNot Nothing AndAlso dtdetails.Rows(0)("sValue") <> "" Then
        '                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = dtdetails.Rows(0)("sValue")
        '                        Else
        '                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = "NI"
        '                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing

        '                        End If
        '                        If dtdetails.Rows(0)("sUnit") IsNot Nothing AndAlso dtdetails.Rows(0)("sUnit") <> "" Then
        '                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.unit = dtdetails.Rows(0)("sUnit")
        '                        Else
        '                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.unit = Nothing
        '                        End If
        '                    Else
        '                        sadmin.effectiveTime(1) = New PIVL_TS()
        '                        sadmin.effectiveTime(1).value = Nothing
        '                        sadmin.effectiveTime(1).operator = SetOperator.A
        '                        DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()
        '                        DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = "NI"
        '                        DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing

        '                    End If
        '                Else
        '                    sadmin.effectiveTime(1) = New PIVL_TS()
        '                    sadmin.effectiveTime(1).value = Nothing
        '                    sadmin.effectiveTime(1).operator = SetOperator.A
        '                    DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()
        '                    DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = "NI"
        '                    DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing
        '                End If
        '            Else
        '                sadmin.effectiveTime(1) = New PIVL_TS()
        '                sadmin.effectiveTime(1).value = Nothing
        '                sadmin.effectiveTime(1).operator = SetOperator.A
        '                DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()
        '                DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = "NI"
        '                DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing
        '            End If
        '        Else
        '            sadmin.effectiveTime(1) = New PIVL_TS()
        '            sadmin.effectiveTime(1).value = Nothing
        '            sadmin.effectiveTime(1).operator = SetOperator.A
        '            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()
        '            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = "NI"
        '            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing
        '        End If
        '        If Not IsNothing(dtdetails) Then
        '            dtdetails.Dispose()
        '            dtdetails = Nothing
        '        End If
        '        'Else
        '        '    sadmin.effectiveTime(1) = New PIVL_TS()
        '        '    sadmin.effectiveTime(1).value = Nothing
        '        '    sadmin.effectiveTime(1).operator = SetOperator.A
        '        '    DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()
        '        '    DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = NullFlavor.NI
        '        '    DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing
        '    End If

        '  End If

       
            sadmin.routeCode = Nothing


        sadmin.doseQuantity = New IVL_PQ()
        sadmin.doseQuantity.unit = Nothing
        
            sadmin.doseQuantity.value = Nothing


        'If Not IsNothing(medentries.DrugForm) AndAlso medentries.DrugForm <> "" Then
        '    sadmin.administrationUnitCode = New CE()
        '    sadmin.administrationUnitCode.code = Nothing
        '    sadmin.administrationUnitCode.displayName = If(medentries.DrugForm IsNot Nothing AndAlso medentries.DrugForm <> "", medentries.DrugForm, Nothing)
        '    sadmin.administrationUnitCode.codeSystem = CodeSystem.FDARouteCode
        '    sadmin.administrationUnitCode.codeSystemName = "NCI Thesaurus"
        '    sadmin.administrationUnitCode.codeSystemVersion = Nothing
        'Else
        '    sadmin.administrationUnitCode = Nothing
        'End If


        sadmin.consumable = New POCD_MT000040UV02Consumable()
        sadmin.consumable.typeCodeSpecified = False
        sadmin.consumable.typeCode = Nothing
        sadmin.consumable.manufacturedProduct = New POCD_MT000040UV02ManufacturedProduct()
        sadmin.consumable.manufacturedProduct.classCodeSpecified = True
        sadmin.consumable.manufacturedProduct.classCode = RoleClass.MANU
        sadmin.consumable.manufacturedProduct.templateId = New II(1) {}
        sadmin.consumable.manufacturedProduct.templateId(0) = New II()
        sadmin.consumable.manufacturedProduct.templateId(0).root = oTemplateIDMaster.GetEntryID("Medication Information")
        sadmin.consumable.manufacturedProduct.templateId(0).assigningAuthorityName = Nothing
        sadmin.consumable.manufacturedProduct.templateId(0).extension = _DateExtension22

        sadmin.consumable.manufacturedProduct.templateId(1) = New II()
        sadmin.consumable.manufacturedProduct.templateId(1).root = oTemplateIDMaster.GetEntryID("Medication Information")
        sadmin.consumable.manufacturedProduct.templateId(1).assigningAuthorityName = Nothing
        sadmin.consumable.manufacturedProduct.templateId(1).extension = Nothing


        sadmin.consumable.manufacturedProduct.Item = New POCD_MT000040UV02Material()
        mat = DirectCast(sadmin.consumable.manufacturedProduct.Item, POCD_MT000040UV02Material)
        mat.name = New EN()

        'If medentries.DrugName <> "" AndAlso medentries.DrugName <> Nothing Then
        'mat.name.Text = New String() {medentries.DrugName}
        ' End If
        mat.code = New CE()

        mat.code.code = Nothing
        mat.code.nullFlavorSpecified = True
        mat.code.nullFlavor = "OTH"
        mat.code.codeSystem = CodeSystem.RxNorm
        mat.code.codeSystemName = Nothing
        mat.code.displayName = Nothing
        mat.code.codeSystemVersion = Nothing



        mat.code.originalText = New ED()
        mat.code.originalText.language = Nothing
        '  mat.code.originalText.Text = New String() {If(medentries.DrugName IsNot Nothing, medentries.DrugName, medentries.GenericName)}
        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
            mat.code.originalText.reference = New TEL()
            mat.code.originalText.reference.nullFlavor = "OTH"
        End If
        mat.code.translation = New CD(0) {}
        mat.code.translation(0) = New CD()
        If IsNothing(mPatient.PatientMedications) Then
            _CodeSysItem = New CodeSystemItem
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "drug or medication")
            mat.code.translation(0).code = _CodeSysItem.Code
            mat.code.translation(0).codeSystem = _CodeSysItem.CodingSystem
            mat.code.translation(0).codeSystemName = _CodeSysItem.CodingSystemName
            mat.code.translation(0).codeSystemVersion = Nothing
            mat.code.translation(0).displayName = _CodeSysItem.Description

        End If


        '  Next
        'If Not IsNothing(medentries) Then
        '    medentries.Dispose()
        '    medentries = Nothing
        'End If








        '  entry(0).Item = New POCD_MT000040UV02Act()
        'Dim act As POCD_MT000040UV02Act
        'act = DirectCast(entry(0).Item, POCD_MT000040UV02Act)
        'act.classCode = x_ActClassDocumentEntryAct.ACT
        'act.moodCode = x_DocumentActMood.EVN
        'act.moodCodeSpecified = True
        'act.id = New II(0) {}
        'act.id(0) = New II()
        'act.id(0).root = Guid.NewGuid().ToString()
        'act.id(0).extension = Nothing
        'act.id(0).assigningAuthorityName = Nothing
        'act.templateId = New II(1) {}
        'act.templateId(0) = New II()
        'act.templateId(0).root = oTemplateIDMaster.GetEntryID("Medications")
        'act.templateId(0).assigningAuthorityName = Nothing
        'act.templateId(0).extension = _DateExtension2015


        'act.templateId(1) = New II()
        'act.templateId(1).root = oTemplateIDMaster.GetEntryID("Medications")
        'act.templateId(1).extension = Nothing
        'act.templateId(1).assigningAuthorityName = Nothing


        'act.code = New CD()
        'act.code.code = "CONC"
        'act.code.codeSystem = "2.16.840.1.113883.5.6"
        'act.effectiveTime = New IVL_TS()
        'act.effectiveTime.value = Nothing
        'act.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
        'act.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low

        'act.effectiveTime.Items = New QTY(1) {}
        'act.effectiveTime.Items(0) = New IVXB_TS()

        'DirectCast(act.effectiveTime.Items(0), IVXB_TS).value = Format(CType(DateTime.Now, Date), "yyyyMMdd")

        'act.statusCode = New CS()
        'act.statusCode.code = "active"

        'act.statusCode.codeSystem = Nothing
        'act.statusCode.codeSystemName = Nothing
        'act.statusCode.codeSystemVersion = Nothing
        'act.statusCode.displayName = Nothing
        'act.entryRelationship = New POCD_MT000040UV02EntryRelationship(0) {}
        'act.entryRelationship(0) = New POCD_MT000040UV02EntryRelationship()
        'act.entryRelationship(0).typeCode = ActRelationshipType.SUBJ
        'act.entryRelationship(0).Item = New POCD_MT000040UV02Observation()
        'Dim ob As POCD_MT000040UV02Observation
        'ob = DirectCast(act.entryRelationship(0).Item, POCD_MT000040UV02Observation)
        'ob.statusCode = New CS()
        'ob.statusCode.code = "completed"
        'ob.statusCode.codeSystem = Nothing
        'ob.statusCode.codeSystemName = Nothing
        'ob.statusCode.codeSystemVersion = Nothing
        'ob.statusCode.displayName = Nothing
        'ob.classCode = ActClassObservation.OBS
        'ob.moodCode = x_ActMoodDocumentObservation.EVN
        'ob.moodCodeSpecified = True
        'ob.negationIndSpecified = True
        'ob.negationInd = True
        'ob.templateId = New II(1) {}
        'ob.templateId(0) = New II()
        'ob.templateId(0).root = oTemplateIDMaster.GetEntryID("Medications")
        'ob.templateId(0).extension = _DateExtension22
        'ob.templateId(0).assigningAuthorityName = Nothing


        'ob.templateId(1) = New II()
        'ob.templateId(1).root = oTemplateIDMaster.GetEntryID("Medications")
        'ob.templateId(1).extension = Nothing
        'ob.templateId(1).assigningAuthorityName = Nothing


        'ob.code = New CD()
        'ob.code.code = "ASSERTION"
        'ob.code.codeSystemName = Nothing
        'ob.code.codeSystemVersion = Nothing
        'ob.code.displayName = Nothing
        'ob.code.codeSystem = "2.16.840.1.113883.5.4"
        'ob.id = New II(0) {}
        'ob.id(0) = New II()
        'ob.id(0).extension = _DateExtension22
        'ob.id(0).assigningAuthorityName = Nothing
        'ob.id(0).root = Guid.NewGuid().ToString()
        'ob.effectiveTime = New IVL_TS()
        'ob.effectiveTime.value = Nothing
        'ob.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
        'ob.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
        ''ob.effectiveTime.ItemsElementName(1) = ItemsChoiceType2.high
        'ob.effectiveTime.Items = New QTY(1) {}

        'ob.effectiveTime.Items(0) = New IVXB_TS()
        ''ob.effectiveTime.Items(1) = New IVXB_TS()
        'Dim _CodeSysItem As CodeSystemItem = Nothing
        'DirectCast(ob.effectiveTime.Items(0), IVXB_TS).nullFlavorSpecified = True
        'DirectCast(ob.effectiveTime.Items(0), IVXB_TS).nullFlavor = "NA"
        '_CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Allergy to substance (disorder)")
        'ob.value = New CD(0) {}
        'ob.value(0) = New CD()
        'DirectCast(ob.value(0), CD).displayName = _CodeSysItem.Description
        'DirectCast(ob.value(0), CD).code = _CodeSysItem.Code
        'DirectCast(ob.value(0), CD).codeSystemName = _CodeSysItem.CodingSystemName
        'DirectCast(ob.value(0), CD).codeSystemVersion = Nothing
        'DirectCast(ob.value(0), CD).codeSystem = _CodeSysItem.CodingSystem
        ''DirectCast(ob.value(0), CD).nullFlavor = "UNK"
        'ob.participant = New POCD_MT000040UV02Participant3(0) {}
        'ob.participant(0) = New POCD_MT000040UV02Participant3()
        'ob.participant(0).typeCode = ParticipationType.CSM
        'ob.participant(0).participantRole = New POCD_MT000040UV02ParticipantRole()
        'ob.participant(0).participantRole.classCode = RoleClassRoot.MANU
        'ob.participant(0).participantRole.Item = New POCD_MT000040UV02PlayingEntity()
        'DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).classCode = EntityClassRoot.MMAT
        'DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code = New CE()
        'DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.nullFlavorSpecified = True
        'DirectCast(ob.participant(0).participantRole.Item, POCD_MT000040UV02PlayingEntity).code.nullFlavor = "NA"

    End Sub
    Private Function GetCDAProblemListComponent() As POCD_MT000040UV02Component3
        Dim _Problems As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim table As StrucDocTable = Nothing
        Dim act As POCD_MT000040UV02Act = Nothing
        Dim ob As POCD_MT000040UV02Observation = Nothing
        Dim _ProblemCount As Integer = 1
        Try


            _Problems = New POCD_MT000040UV02Component3

            DirectCast(_Problems, POCD_MT000040UV02Component3).section = New POCD_MT000040UV02Section()
            section = DirectCast(_Problems, POCD_MT000040UV02Component3).section
            'section.ID = Nothing
            section.classCodeSpecified = False
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            section.templateId = New II(1) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Problem")
            '"2.16.840.1.113883.10.20.22.2.5.1"
            section.templateId(0).assigningAuthorityName = Nothing
            section.templateId(0).extension = _DateExtension2015

            section.templateId(1) = New II()
            section.templateId(1).root = oTemplateIDMaster.GetSectionID("Problem")
            '"2.16.840.1.113883.10.20.22.2.5.1"
            section.templateId(1).assigningAuthorityName = Nothing
            section.templateId(1).extension = Nothing



            section.code = New CE()
            ' section.code.nullFlavor = "NA"
            section.code.code = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Problem List").Code
            '"11450-4"

            section.code.codeSystem = CodeSystem.LOINC
            section.code.codeSystemName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Problem List").CodingSystemName
            section.code.codeSystemVersion = Nothing
            section.code.displayName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Problem List").Description
            'nothing
            section.title = New ST()
            section.title.Text = New String() {"Problems"}

            section.title.language = Nothing
            section.text = New StrucDocText()
            section.text.mediaType = Nothing
            section.text.ID = Nothing
            section.text.language = Nothing

            If Not IsNothing(mPatient.PatientProblems) AndAlso mPatient.PatientProblems.Count > 0 Then

                ''                       
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                If Not IsNothing(sconf.code) Then
                    section.confidentialityCode = sconf
                End If
                sconf = Nothing

                ''

                section.text.Items = New Object(0) {}
                section.text.Items(0) = New StrucDocTable()
                table = DirectCast(section.text.Items(0), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}

                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(5) {}
                table.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Condition"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Effective Dates"}
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Condition Status"}
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(3) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Problem Name"}
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(4) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).Text = New String() {"SNOMED Code"}
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(5) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).Text = New String() {"ICD9/10 Code"}
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).language = Nothing

                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing


                table.tbody(0).tr = New StrucDocTr(mPatient.PatientProblems.Count - 1) {}
                section.entry = New POCD_MT000040UV02Entry(mPatient.PatientProblems.Count - 1) {}
                For probs As Integer = 0 To mPatient.PatientProblems.Count - 1
                    Dim oProblem As Problems = mPatient.PatientProblems.Item(probs)
                    table.tbody(0).tr(probs) = New StrucDocTr()
                    table.tbody(0).tr(probs).Items = New Object(5) {}
                    table.tbody(0).tr(probs).Items(0) = New StrucDocTd()
                    table.tbody(0).tr(probs).ID = Nothing
                    table.tbody(0).tr(probs).language = Nothing
                    DirectCast(table.tbody(0).tr(probs).Items(0), StrucDocTd).Items = New StrucDocContent(0) {}
                    DirectCast(table.tbody(0).tr(probs).Items(0), StrucDocTd).Items(0) = New StrucDocContent
                    DirectCast(DirectCast(table.tbody(0).tr(probs).Items(0), StrucDocTd).Items(0), StrucDocContent).ID = "Problem" & probs
                    DirectCast(DirectCast(table.tbody(0).tr(probs).Items(0), StrucDocTd).Items(0), StrucDocContent).language = Nothing

                    DirectCast(table.tbody(0).tr(probs).Items(0), StrucDocTd).Text = New String() {oProblem.Condition}
                    DirectCast(table.tbody(0).tr(probs).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(probs).Items(0), StrucDocTd).language = Nothing
                    table.tbody(0).tr(probs).Items(1) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(probs).Items(1), StrucDocTd).Text = New String() {oProblem.DateOfService.ToString()}
                    DirectCast(table.tbody(0).tr(probs).Items(1), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(probs).Items(1), StrucDocTd).language = Nothing
                    table.tbody(0).tr(probs).Items(2) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(probs).Items(2), StrucDocTd).Text = New String() {oProblem.ConditionStatus}
                    DirectCast(table.tbody(0).tr(probs).Items(2), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(probs).Items(2), StrucDocTd).language = Nothing
                    table.tbody(0).tr(probs).Items(3) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(probs).Items(3), StrucDocTd).Text = New String() {oProblem.ProblemType}
                    DirectCast(table.tbody(0).tr(probs).Items(3), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(probs).Items(3), StrucDocTd).language = Nothing
                    table.tbody(0).tr(probs).Items(4) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(probs).Items(4), StrucDocTd).Text = New String() {oProblem.ConceptID}
                    DirectCast(table.tbody(0).tr(probs).Items(4), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(probs).Items(4), StrucDocTd).language = Nothing
                    table.tbody(0).tr(probs).Items(5) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(probs).Items(5), StrucDocTd).Text = New String() {oProblem.ICD9Code}
                    DirectCast(table.tbody(0).tr(probs).Items(5), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(probs).Items(5), StrucDocTd).language = Nothing
                    If Not IsNothing(oProblem) Then
                        oProblem.Dispose()
                        oProblem = Nothing
                    End If
                Next
            Else
                'section.text.Text = New String() {"No known problems for patient"}
                'If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                '    section.text.Items = New StrucDocContent(0) {}
                '    section.text.Items(0) = New StrucDocContent
                '    DirectCast(section.text.Items(0), StrucDocContent).ID = "Problem" & 0
                '    DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                'End If
            End If

            If Not IsNothing(mPatient.PatientProblems) AndAlso mPatient.PatientProblems.Count > 0 Then
                _ProblemCount = mPatient.PatientProblems.Count


                section.entry = New POCD_MT000040UV02Entry(_ProblemCount - 1) {}
                Dim oProblems As Problems = Nothing
                For probs As Integer = 0 To _ProblemCount - 1

                    If Not IsNothing(mPatient.PatientProblems) AndAlso mPatient.PatientProblems.Count > 0 Then
                        oProblems = mPatient.PatientProblems.Item(probs)
                    Else
                        oProblems = New Problems
                    End If
                    section.entry(probs) = New POCD_MT000040UV02Entry()
                    section.entry(probs).typeCode = x_ActRelationshipEntry.DRIV
                    section.entry(probs).Item = New POCD_MT000040UV02Act()
                    act = DirectCast(section.entry(probs).Item, POCD_MT000040UV02Act)
                    act.classCode = x_ActClassDocumentEntryAct.ACT
                    act.moodCode = x_DocumentActMood.EVN
                    act.moodCodeSpecified = True
                    act.id = New II(0) {}
                    act.id(0) = New II()
                    act.id(0).root = Guid.NewGuid().ToString()
                    act.id(0).extension = Nothing
                    act.id(0).assigningAuthorityName = Nothing
                    act.templateId = New II(1) {}
                    act.templateId(0) = New II()
                    act.templateId(0).root = oTemplateIDMaster.GetEntryID("Problem Concern Act (Condition)")
                    '"2.16.840.1.113883.10.20.22.4.3"
                    act.templateId(0).extension = _DateExtension2015
                    act.templateId(0).assigningAuthorityName = Nothing


                    act.templateId(1) = New II()
                    act.templateId(1).root = oTemplateIDMaster.GetEntryID("Problem Concern Act (Condition)")
                    '"2.16.840.1.113883.10.20.22.4.3"
                    act.templateId(1).extension = Nothing
                    act.templateId(1).assigningAuthorityName = Nothing


                    act.code = New CD()
                    'act.code.nullFlavor = "NA"
                    act.code.code = "CONC"
                    act.code.codeSystem = "2.16.840.1.113883.5.6"
                    act.code.codeSystemName = Nothing
                    act.code.codeSystemVersion = Nothing
                    act.code.displayName = "Concern"
                    act.statusCode = New CS()
                    If Not IsNothing(oProblems.sConcernStatus) AndAlso (oProblems.sConcernStatus) <> "" Then
                        act.statusCode.code = Convert.ToString(oProblems.sConcernStatus).ToLower
                    Else
                        act.statusCode.code = "active"
                    End If

                    act.statusCode.codeSystem = Nothing
                    act.statusCode.codeSystemName = Nothing
                    act.statusCode.codeSystemVersion = Nothing
                    act.statusCode.displayName = Nothing

                    act.effectiveTime = New IVL_TS()
                    act.effectiveTime.value = Nothing
                    act.effectiveTime.ItemsElementName = New ItemsChoiceType2(2) {}
                    act.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
                    act.effectiveTime.ItemsElementName(1) = ItemsChoiceType2.high
                    act.effectiveTime.Items = New QTY(1) {}
                    act.effectiveTime.Items(0) = New IVXB_TS()
                    If Not IsNothing(oProblems.ConcernStartDate) AndAlso oProblems.ConcernStartDate <> "" Then
                        DirectCast(act.effectiveTime.Items(0), IVXB_TS).value = Format(CType(oProblems.ConcernStartDate, Date), "yyyyMMdd")
                    Else
                        DirectCast(act.effectiveTime.Items(0), IVXB_TS).nullFlavor = "UNK"
                        DirectCast(act.effectiveTime.Items(0), IVXB_TS).value = Nothing
                    End If
                    act.effectiveTime.Items(1) = New IVXB_TS()
                    If Not IsNothing(oProblems.ConcernEndDate) AndAlso oProblems.ConcernEndDate <> "" AndAlso oProblems.ConcernEndDate <> "1/1/1900" AndAlso oProblems.ConcernEndDate <> "01/01/1900" Then
                        DirectCast(act.effectiveTime.Items(1), IVXB_TS).value = Format(CType(oProblems.ConcernEndDate, Date), "yyyyMMdd")
                    Else
                        DirectCast(act.effectiveTime.Items(1), IVXB_TS).nullFlavor = "UNK"
                        DirectCast(act.effectiveTime.Items(1), IVXB_TS).value = Nothing
                    End If



                    act.entryRelationship = New POCD_MT000040UV02EntryRelationship(0) {}
                    act.entryRelationship(0) = New POCD_MT000040UV02EntryRelationship()
                    act.entryRelationship(0).typeCode = ActRelationshipType.SUBJ
                    act.entryRelationship(0).Item = New POCD_MT000040UV02Observation()
                    ob = DirectCast(act.entryRelationship(0).Item, POCD_MT000040UV02Observation)

                    ob.statusCode = New CS()
                    ob.statusCode.code = "completed"
                    ob.statusCode.codeSystem = Nothing
                    ob.statusCode.codeSystemName = Nothing
                    ob.statusCode.codeSystemVersion = Nothing
                    ob.statusCode.displayName = Nothing
                    ''''effective time

                    ob.effectiveTime = New IVL_TS()
                    ob.effectiveTime.value = Nothing
                    ob.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
                    ob.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
                    ob.effectiveTime.ItemsElementName(1) = ItemsChoiceType2.high

                    ob.effectiveTime.Items = New QTY(1) {}
                    ob.effectiveTime.Items(0) = New IVXB_TS()
                    If Not IsNothing(oProblems.DateOfService) AndAlso oProblems.DateOfService <> "" Then
                        DirectCast(ob.effectiveTime.Items(0), IVXB_TS).value = Format(CType(oProblems.DateOfService, Date), "yyyyMMdd")
                    Else
                        DirectCast(ob.effectiveTime.Items(0), IVXB_TS).nullFlavor = "UNK"
                        DirectCast(ob.effectiveTime.Items(0), IVXB_TS).value = Nothing
                    End If
                    ob.effectiveTime.Items(1) = New IVXB_TS()
                    If Not IsNothing(oProblems.ResolvedDate) AndAlso oProblems.ResolvedDate <> "" AndAlso Format(CType(oProblems.ResolvedDate, Date), "yyyyMMdd") <> "19000101" Then
                        DirectCast(ob.effectiveTime.Items(1), IVXB_TS).value = Format(CType(oProblems.ResolvedDate, Date), "yyyyMMdd")
                    Else
                        DirectCast(ob.effectiveTime.Items(1), IVXB_TS).nullFlavor = "UNK"
                        DirectCast(ob.effectiveTime.Items(1), IVXB_TS).value = Nothing
                    End If
                    'DirectCast(ob.effectiveTime.Items(1), IVXB_TS).nullFlavor = "UNK"
                    'DirectCast(ob.effectiveTime.Items(1), IVXB_TS).value = Nothing
                    'ob.effectiveTime.Items(1) = New IVXB_TS()

                    'DirectCast(ob.effectiveTime.Items(0), IVXB_TS).value = oProblems.ResolvedDate

                    ''''

                    ob.classCode = ActClassObservation.OBS
                    ob.moodCode = x_ActMoodDocumentObservation.EVN
                    ob.moodCodeSpecified = True
                    If mPatient.PatientProblems.Count = 0 Then
                        ob.negationIndSpecified = True
                        ob.negationInd = True
                        'ob.valueNegationInd = New BL
                        'ob.valueNegationInd.valueSpecified = True
                        'ob.valueNegationInd.value = True
                    End If

                    ob.templateId = New II(1) {}
                    ob.templateId(0) = New II()
                    ob.templateId(0).root = oTemplateIDMaster.GetEntryID("Problem Observation")
                    '"2.16.840.1.113883.10.20.22.4.4"
                    ob.templateId(0).extension = _DateExtension2015
                    ob.templateId(0).assigningAuthorityName = Nothing

                    ob.templateId(1) = New II()
                    ob.templateId(1).root = oTemplateIDMaster.GetEntryID("Problem Observation")
                    '"2.16.840.1.113883.10.20.22.4.4"
                    ob.templateId(1).extension = Nothing
                    ob.templateId(1).assigningAuthorityName = Nothing


                    ob.code = New CD()
                    Dim codesystemItem As gloCCDSchema.CodeSystemItem = Nothing
                    If String.Equals(oProblems.ProblemTypeCode, "Disorder", StringComparison.OrdinalIgnoreCase) Then
                        codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Disorder")
                        ob.code.code = codesystemItem.Code
                        ob.code.codeSystem = codesystemItem.CodingSystem
                        ob.code.codeSystemName = codesystemItem.CodingSystemName
                        ob.code.codeSystemVersion = Nothing
                        ob.code.displayName = codesystemItem.Description
                    ElseIf String.Equals(oProblems.ProblemTypeCode, "Finding", StringComparison.OrdinalIgnoreCase) Then
                        codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Finding")
                        ob.code.code = codesystemItem.Code
                        ob.code.codeSystem = codesystemItem.CodingSystem
                        ob.code.codeSystemName = codesystemItem.CodingSystemName
                        ob.code.codeSystemVersion = Nothing
                        ob.code.displayName = codesystemItem.Description
                    Else
                        codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Problem")
                        ob.code.code = codesystemItem.Code
                        ob.code.codeSystem = codesystemItem.CodingSystem
                        ob.code.codeSystemName = codesystemItem.CodingSystemName
                        ob.code.codeSystemVersion = Nothing
                        ob.code.displayName = codesystemItem.Description
                    End If
                    ob.code.translation = New CD(1) {}
                    ob.code.translation(0) = New CD()
                    ob.code.translation(0).nullFlavorSpecified = True
                    ob.code.translation(0).nullFlavor = "NI"

                    'ob.code.code = "64572001"
                    'ob.code.codeSystem = CodeSystem.SNOMED_CT
                    'ob.code.codeSystemName = "SNOMED CT"
                    'ob.code.codeSystemVersion = Nothing
                    'ob.code.displayName = "Condition"

                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                        ob.text = New ED()
                        ob.text.language = Nothing
                        ob.text.mediaType = Nothing
                        ob.text.reference = New TEL()
                        ob.text.reference.value = "#Problem" & probs
                    End If


                    ob.id = New II(0) {}
                    ob.id(0) = New II()
                    ob.id(0).root = Guid.NewGuid().ToString()
                    oProblems.GUID = ob.id(0).root
                    ob.id(0).assigningAuthorityName = Nothing
                    ob.id(0).extension = Nothing
                    ob.value = New ANY(0) {}
                    ob.value(0) = New CD()

                    If mPatient.PatientProblems.Count = 0 Then
                        codesystemItem = New CodeSystemItem
                        codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Problem")
                        DirectCast(ob.value(0), CD).code = codesystemItem.Code
                        DirectCast(ob.value(0), CD).displayName = codesystemItem.Description
                    Else

                        If Not IsNothing(oProblems.Condition) AndAlso oProblems.Condition <> "" Then
                            DirectCast(ob.value(0), CD).displayName = Convert.ToString(oProblems.Condition).Replace(System.Environment.NewLine, " ")
                        Else
                            DirectCast(ob.value(0), CD).displayName = Nothing
                        End If

                        If Not IsNothing(oProblems.ConceptID) AndAlso oProblems.ConceptID <> "" Then
                            DirectCast(ob.value(0), CD).code = oProblems.ConceptID
                        Else
                            DirectCast(ob.value(0), CD).code = Nothing
                            DirectCast(ob.value(0), CD).nullFlavor = "NI"
                        End If
                    End If
                    DirectCast(ob.value(0), CD).codeSystem = CodeSystem.SNOMED_CT
                    DirectCast(ob.value(0), CD).codeSystemName = "SNOMED CT"
                    DirectCast(ob.value(0), CD).codeSystemVersion = Nothing
                    ''
                    If Not IsNothing(mPatient.PatientProblems) AndAlso mPatient.PatientProblems.Count > 0 Then
                        DirectCast(ob.value(0), CD).translation = New CD(0) {}
                        DirectCast(ob.value(0), CD).translation(0) = New CD()


                        If Not IsNothing(oProblems.ICD9) AndAlso oProblems.ICD9 <> "" Then
                            DirectCast(ob.value(0), CD).translation(0).displayName = oProblems.ICD9.ToString()
                        Else
                            DirectCast(ob.value(0), CD).translation(0).displayName = Nothing
                        End If

                        If Not IsNothing(oProblems.ICD9Code) AndAlso oProblems.ICD9Code <> "" Then
                            DirectCast(ob.value(0), CD).translation(0).code = oProblems.ICD9Code
                        Else
                            DirectCast(ob.value(0), CD).translation(0).code = Nothing
                        End If
                        ''Added ICD10 revision-20140210
                        If Not IsNothing(oProblems.ICDRevision) AndAlso oProblems.ICDRevision <> 0 Then
                            If oProblems.ICDRevision = 9 Then
                                DirectCast(ob.value(0), CD).translation(0).codeSystem = CodeSystem.ICD9
                                DirectCast(ob.value(0), CD).translation(0).codeSystemName = "ICD-9-CM"
                                DirectCast(ob.value(0), CD).translation(0).codeSystemVersion = Nothing
                            ElseIf oProblems.ICDRevision = 10 Then
                                DirectCast(ob.value(0), CD).translation(0).codeSystem = CodeSystem.ICD10
                                DirectCast(ob.value(0), CD).translation(0).codeSystemName = "ICD10CM"
                                DirectCast(ob.value(0), CD).translation(0).codeSystemVersion = Nothing
                            End If
                        Else
                            DirectCast(ob.value(0), CD).translation(0).codeSystem = CodeSystem.ICD9
                            DirectCast(ob.value(0), CD).translation(0).codeSystemName = "ICD-9-CM"
                            DirectCast(ob.value(0), CD).translation(0).codeSystemVersion = Nothing
                        End If
                    End If

                    If Not IsNothing(oProblems) Then
                        oProblems.Dispose()
                        oProblems = Nothing
                    End If

                Next
            Else
                If Not IsNothing(dtsec) Then
                    Dim codesystemItem As gloCCDSchema.CodeSystemItem = Nothing
                    Dim dr As DataRow() = dtsec.Select("sSectionName='Problem'")
                    If (dr.Length = 0) Then

                        '    getNoKnownProblem(section.entry) '' to uncomm
                        _Problems.section = NoInformationSection("Problem", "Problems")
                        _Problems.section.text.Text = New String() {"No Information for Patient"}
                        _Problems.section.code = New CE()
                        ' section.code.nullFlavor = "NA"
                        _Problems.section.code.code = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Problem List").Code
                        '"11450-4"

                        _Problems.section.code.codeSystem = CodeSystem.LOINC
                        _Problems.section.code.codeSystemName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Problem List").CodingSystemName
                        _Problems.section.code.codeSystemVersion = Nothing
                        _Problems.section.code.displayName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Problem List").Description
                    ElseIf dr(0)(1) = "0" Then

                        _Problems.section = NoInformationSection("Problem", "Problems")
                        _Problems.section.text.Text = New String() {"No Information for Patient"}
                        _Problems.section.code = New CE()
                        ' section.code.nullFlavor = "NA"
                        _Problems.section.code.code = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Problem List").Code
                        '"11450-4"

                        _Problems.section.code.codeSystem = CodeSystem.LOINC
                        _Problems.section.code.codeSystemName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Problem List").CodingSystemName
                        _Problems.section.code.codeSystemVersion = Nothing
                        _Problems.section.code.displayName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Problem List").Description

                    Else

                        section.text.Text = New String() {"No known Problems for patient"}
                        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                            section.text.Items = New StrucDocContent(0) {}
                            section.text.Items(0) = New StrucDocContent
                            DirectCast(section.text.Items(0), StrucDocContent).ID = "Problem" & 0
                            DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                        End If
                        getNoKnownProblem(section.entry) '' to uncomment
                        'act = DirectCast(_Problems.section.entry(0).Item, POCD_MT000040UV02Act)
                        'ob = DirectCast(act.entryRelationship(0).Item, POCD_MT000040UV02Observation)

                        'ob.id = New II(0) {}
                        'ob.id(0) = New II()
                        'ob.id(0).root = Guid.NewGuid().ToString()
                        'ob.id(0).assigningAuthorityName = Nothing
                        'ob.id(0).extension = Nothing
                        'ob.value = New ANY(0) {}
                        'ob.value(0) = New CD()
                        'section.text.Text = New String() {"No Information for Patient"}
                        ' '' section.text.Text = New String() {"No Information for Patient"}
                        'codesystemItem = New CodeSystemItem
                        'codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Problem")
                        'DirectCast(ob.value(0), CD).code = codesystemItem.Code
                        'DirectCast(ob.value(0), CD).displayName = codesystemItem.Description
                    End If
                Else

                    _Problems.section = NoInformationSection("Problem", "Problems")
                    _Problems.section.text.Text = New String() {"No Information for Patient"}
                    _Problems.section.code = New CE()
                    ' section.code.nullFlavor = "NA"
                    _Problems.section.code.code = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Problem List").Code
                    '"11450-4"

                    _Problems.section.code.codeSystem = CodeSystem.LOINC
                    _Problems.section.code.codeSystemName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Problem List").CodingSystemName
                    _Problems.section.code.codeSystemVersion = Nothing
                    _Problems.section.code.displayName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Problem List").Description


                End If
            End If




            Return _Problems
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Problem List Section"
            Else
                _msgString = _msgString & vbNewLine & "Problem List Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            '  MessageBox.Show("Error:" & ex.ToString())
            Return Nothing


        Finally
            If Not IsNothing(section) Then
                section = Nothing
            End If
            If Not IsNothing(table) Then
                table = Nothing
            End If
            If Not IsNothing(act) Then
                act = Nothing
            End If
            If Not IsNothing(ob) Then
                ob = Nothing
            End If
        End Try
    End Function
    Private Function GetCDAVitalsComponent() As POCD_MT000040UV02Component3
        Dim _Vitals As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim table As StrucDocTable = Nothing
        Dim organizer As POCD_MT000040UV02Organizer = Nothing
        ' Dim ob As POCD_MT000040UV02Observation
        Try


            _Vitals = New POCD_MT000040UV02Component3


            ''

            If Not IsNothing(dtvitals) AndAlso dtvitals.Rows.Count > 0 Then
                DirectCast(_Vitals, POCD_MT000040UV02Component3).section = New POCD_MT000040UV02Section()
                section = DirectCast(_Vitals, POCD_MT000040UV02Component3).section
                'section.ID = Nothing
                section.classCodeSpecified = False
                section.classCodeSpecified = False
                section.moodCode = Nothing
                section.moodCodeSpecified = False
                section.templateId = New II(1) {}
                section.templateId(0) = New II()
                'section.templateId(0).root = oTemplateIDMaster.GetSectionID("Vital Signs")
                section.templateId(0).root = oTemplateIDMaster.GetSectionID("Vital Signs Required")
                '"2.16.840.1.113883.10.20.22.2.4.1"
                section.templateId(0).assigningAuthorityName = Nothing
                section.templateId(0).extension = _DateExtension2015

                section.templateId(1) = New II()
                section.templateId(1).root = oTemplateIDMaster.GetSectionID("Vital Signs Required")
                '"2.16.840.1.113883.10.20.22.2.4.1"
                section.templateId(1).assigningAuthorityName = Nothing
                section.templateId(1).extension = Nothing

                section.code = New CE()
                ' section.code.nullFlavor = "NA"
                section.code.code = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Vital Signs Required").Code
                '  "8716-3"
                section.code.codeSystem = CodeSystem.LOINC
                section.code.codeSystemName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Vital Signs Required").CodingSystemName
                section.code.codeSystemVersion = Nothing
                section.code.displayName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Vital Signs Required").Description
                section.title = New ST()
                section.title.Text = New String() {"Vital Signs"}

                section.title.language = Nothing

                section.text = New StrucDocText()
                section.text.mediaType = Nothing
                section.text.ID = Nothing
                section.text.language = Nothing



                section.text.Items = New Object(0) {}
                section.text.Items(0) = New StrucDocTable()
                '''''''''''''
                table = DirectCast(section.text.Items(0), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {} ''dtvitals.Columns.Count

                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(4) {} ''dtvitals.Rows.Count

                Dim rowcount As Integer = 14   'No. of columns 
                Dim vitalNo As Integer = 0
                Dim view As DataView = New DataView(dtvitals)
                Dim distinctValues As DataTable = view.ToTable(True, "VitalDate")
                Dim columnno As Integer = 0
                For j As Integer = 0 To distinctValues.Rows.Count - 1
                    ''
                    ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                    ''
                    Dim sconf As CE
                    sconf = New CE()
                    sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                    If Not IsNothing(sconf.code) Then
                        section.confidentialityCode = sconf
                    End If
                    sconf = Nothing
                    ''

                    Dim rows As DataRow() = dtvitals.Select("VitalDate = #" + distinctValues.Rows(j)(0) + "# ")
                    Dim dtvitalsview As DataTable = New DataTable
                    dtvitalsview = rows.CopyToDataTable()
                    'rows.CopyTo(dtvita
                    'dtvitalsview.RowFilter = "VitalDate = " & Convert.ToString(Format(distinctValues.Rows(j)(0), "MM/dd/yyyy")) & ""
                    For i As Integer = 0 To rowcount - 1
                        ''dtvitals.Rows.Count
                        If j = 0 And i = 0 Then
                            table.thead.tr = New StrucDocTr(dtvitalsview.Rows.Count) {}
                            table.thead.tr(i) = New StrucDocTr()
                            table.thead.tr(i).ID = Nothing
                            table.thead.tr(i).language = Nothing
                            table.thead.tr(i).Items = New Object((3 * distinctValues.Rows.Count) + 1) {}
                            table.thead.tr(i).Items(0) = New StrucDocTh()
                            DirectCast(table.thead.tr(i).Items(0), StrucDocTh).Text = New String() {"Vital Name (Units)"}
                            DirectCast(table.thead.tr(i).Items(0), StrucDocTh).ID = Nothing
                            DirectCast(table.thead.tr(i).Items(0), StrucDocTh).language = Nothing
                            table.tbody = New StrucDocTbody(0) {}

                            table.tbody(0) = New StrucDocTbody()
                            table.tbody(0).ID = Nothing
                            table.tbody(0).language = Nothing
                            table.tbody(0).tr = New StrucDocTr(rowcount) {}
                        End If
                        If i = 0 Then
                         

                            columnno = columnno + 1
                            table.thead.tr(i).Items(columnno) = New StrucDocTh()
                            DirectCast(table.thead.tr(i).Items(columnno), StrucDocTh).Text = New String() {dtvitalsview.Rows(i)(1)}
                            DirectCast(table.thead.tr(i).Items(columnno), StrucDocTh).ID = Nothing
                            DirectCast(table.thead.tr(i).Items(columnno), StrucDocTh).language = Nothing
                            columnno = columnno + 1
                            table.thead.tr(i).Items(columnno) = New StrucDocTh()
                            DirectCast(table.thead.tr(i).Items(columnno), StrucDocTh).Text = New String() {"Time"}
                            DirectCast(table.thead.tr(i).Items(columnno), StrucDocTh).ID = Nothing
                            DirectCast(table.thead.tr(i).Items(columnno), StrucDocTh).language = Nothing
                           
                            columnno = columnno + 1
                            table.thead.tr(i).Items(columnno) = New StrucDocTh()
                            DirectCast(table.thead.tr(i).Items(columnno), StrucDocTh).Text = New String() {"Loinc"}
                            DirectCast(table.thead.tr(i).Items(columnno), StrucDocTh).ID = Nothing
                            DirectCast(table.thead.tr(i).Items(columnno), StrucDocTh).language = Nothing
                        End If







                        If j = 0 Then
                            table.tbody(0).tr(i + 1) = New StrucDocTr()
                            table.tbody(0).tr(i + 1).Items = New Object((3 * distinctValues.Rows.Count) + 1) {}
                            table.tbody(0).tr(i + 1).Items(0) = New StrucDocTd()
                            table.tbody(0).tr(i + 1).ID = Nothing
                            table.tbody(0).tr(i + 1).language = Nothing
                            Select Case i

                                Case "0"
                                    DirectCast(table.tbody(0).tr(i + 1).Items(0), StrucDocTd).Text = New String() {"Height/Length ([cm])"}

                                Case "1"
                                    DirectCast(table.tbody(0).tr(i + 1).Items(0), StrucDocTd).Text = New String() {"Weight (kg)"}

                                Case "2"
                                    DirectCast(table.tbody(0).tr(i + 1).Items(0), StrucDocTd).Text = New String() {"Blood Pressure-Diastolic (mm[Hg]"}


                                Case "3"

                                    DirectCast(table.tbody(0).tr(i + 1).Items(0), StrucDocTd).Text = New String() {" Blood Pressure-Systolic (mm[Hg])"}

                                Case "4"
                                    DirectCast(table.tbody(0).tr(i + 1).Items(0), StrucDocTd).Text = New String() {"O2 % BldC Oximetry (%)"}

                                Case "5"
                                    DirectCast(table.tbody(0).tr(i + 1).Items(0), StrucDocTd).Text = New String() {"Body Temperature (Cel)"}


                                Case "6"
                                    DirectCast(table.tbody(0).tr(i + 1).Items(0), StrucDocTd).Text = New String() {"Heart Rate (/min)"}


                                Case "7"
                                    DirectCast(table.tbody(0).tr(i + 1).Items(0), StrucDocTd).Text = New String() {"Respiration Rate (/min)"}

                                Case "8"
                                    DirectCast(table.tbody(0).tr(i + 1).Items(0), StrucDocTd).Text = New String() {"Inhaled Oxygen Concentration (%)"}


                                Case "9"
                                    DirectCast(table.tbody(0).tr(i + 1).Items(0), StrucDocTd).Text = New String() {"Body Mass Index (kg/m2)"}


                                Case "10"
                                    DirectCast(table.tbody(0).tr(i + 1).Items(0), StrucDocTd).Text = New String() {"Body Surface Area (m2)"}

                                Case "11"
                                    DirectCast(table.tbody(0).tr(i + 1).Items(0), StrucDocTd).Text = New String() {"Height/Length ([in_us])"}


                                Case "12"
                                    DirectCast(table.tbody(0).tr(i + 1).Items(0), StrucDocTd).Text = New String() {"Weight ([lb_av])"}


                                Case "13"
                                    DirectCast(table.tbody(0).tr(i + 1).Items(0), StrucDocTd).Text = New String() {"Body Temperature ([degF])"}

                            End Select
                            DirectCast(table.tbody(0).tr(i + 1).Items(0), StrucDocTd).ID = Nothing
                            DirectCast(table.tbody(0).tr(i + 1).Items(0), StrucDocTd).language = Nothing
                        End If
                        Dim codesys As CodeSystemItem = Nothing
                        Select Case i

                            Case "0"

                                Dim rows1 As DataRow() = dtvitalsview.Select("VitalNo = " & i & "")
                                If rows1.Count > 0 Then
                                    codesys = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Height")

                                    getCDAVitalsTest(table, i, columnno - 1, rows1(0).ItemArray(0), rows1(0).ItemArray(2), codesys.Code)
                                    vitalNo = vitalNo + 1
                                    DirectCast(table.tbody(0).tr(i + 1).Items(columnno - 1), StrucDocTd).ID = "Vit" & vitalNo
                                Else
                                    getCDAVitalsTest(table, i, columnno - 1, "-")
                                End If



                            Case "1"

                                Dim rows1 As DataRow() = dtvitalsview.Select("VitalNo = " & i & "")
                                  If rows1.Count > 0 Then
                                    codesys = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Weight")

                                    getCDAVitalsTest(table, i, columnno - 1, rows1(0).ItemArray(0), rows1(0).ItemArray(2), codesys.Code)
                                    vitalNo = vitalNo + 1
                                    DirectCast(table.tbody(0).tr(i + 1).Items(columnno - 1), StrucDocTd).ID = "Vit" & vitalNo
                                Else
                                    getCDAVitalsTest(table, i, columnno - 1, "-")
                                End If


                            Case "2"
                                Dim rows1 As DataRow() = dtvitalsview.Select("VitalNo = " & i & "")
                                If rows1.Count > 0 Then
                                    codesys = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "BP diastolic")

                                    getCDAVitalsTest(table, i, columnno - 1, rows1(0).ItemArray(0), rows1(0).ItemArray(2), codesys.Code)
                                    vitalNo = vitalNo + 1
                                    DirectCast(table.tbody(0).tr(i + 1).Items(columnno - 1), StrucDocTd).ID = "Vit" & vitalNo
                                Else
                                    getCDAVitalsTest(table, i, columnno - 1, "-")
                                End If


                            Case "3"

                                Dim rows1 As DataRow() = dtvitalsview.Select("VitalNo = " & i & "")

                                If rows1.Count > 0 Then
                                    codesys = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "BP Systolic")

                                    getCDAVitalsTest(table, i, columnno - 1, rows1(0).ItemArray(0), rows1(0).ItemArray(2), codesys.Code)
                                    vitalNo = vitalNo + 1
                                    DirectCast(table.tbody(0).tr(i + 1).Items(columnno - 1), StrucDocTd).ID = "Vit" & vitalNo
                                Else
                                    getCDAVitalsTest(table, i, columnno - 1, "-")
                                End If

                            Case "4"
                                Dim rows1 As DataRow() = dtvitalsview.Select("VitalNo = " & i & "")
                                If rows1.Count > 0 Then
                                    codesys = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Pulse Ox")
                                    getCDAVitalsTest(table, i, columnno - 1, rows1(0).ItemArray(0), rows1(0).ItemArray(2), codesys.Code)
                                    vitalNo = vitalNo + 1
                                    DirectCast(table.tbody(0).tr(i + 1).Items(columnno - 1), StrucDocTd).ID = "Vit" & vitalNo
                                Else
                                    getCDAVitalsTest(table, i, columnno - 1, "-")
                                End If

                            Case "5"
                                Dim rows1 As DataRow() = dtvitalsview.Select("VitalNo = " & i & "")
                                If rows1.Count > 0 Then
                                    codesys = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Body Temperature")
                                    getCDAVitalsTest(table, i, columnno - 1, rows1(0).ItemArray(0), rows1(0).ItemArray(2), codesys.Code)
                                    vitalNo = vitalNo + 1
                                    DirectCast(table.tbody(0).tr(i + 1).Items(columnno - 1), StrucDocTd).ID = "Vit" & vitalNo
                                Else
                                    getCDAVitalsTest(table, i, columnno - 1, "-")
                                End If


                            Case "6"
                                Dim rows1 As DataRow() = dtvitalsview.Select("VitalNo = " & i & "")
                                If rows1.Count > 0 Then
                                    codesys = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Pulse Rate")
                                    getCDAVitalsTest(table, i, columnno - 1, rows1(0).ItemArray(0), rows1(0).ItemArray(2), codesys.Code)
                                    vitalNo = vitalNo + 1
                                    DirectCast(table.tbody(0).tr(i + 1).Items(columnno - 1), StrucDocTd).ID = "Vit" & vitalNo
                                Else
                                    getCDAVitalsTest(table, i, columnno - 1, "-")
                                End If


                            Case "7"
                                Dim rows1 As DataRow() = dtvitalsview.Select("VitalNo = " & i & "")
                                If rows1.Count > 0 Then
                                    codesys = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Respiratory Rate")
                                    getCDAVitalsTest(table, i, columnno - 1, rows1(0).ItemArray(0), rows1(0).ItemArray(2), codesys.Code)
                                    vitalNo = vitalNo + 1
                                    DirectCast(table.tbody(0).tr(i + 1).Items(columnno - 1), StrucDocTd).ID = "Vit" & vitalNo
                                Else
                                    getCDAVitalsTest(table, i, columnno - 1, "-")
                                End If

                            Case "8"
                                Dim rows1 As DataRow() = dtvitalsview.Select("VitalNo = " & i & "")
                                If rows1.Count > 0 Then
                                    If IsDBNull(rows1(0).ItemArray(0)) = False Then
                                        codesys = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Inhaled Oxygen Concentration")
                                        getCDAVitalsTest(table, i, columnno - 1, rows1(0).ItemArray(0), rows1(0).ItemArray(2), codesys.Code)
                                        vitalNo = vitalNo + 1
                                        DirectCast(table.tbody(0).tr(i + 1).Items(columnno - 1), StrucDocTd).ID = "Vit" & vitalNo
                                    Else
                                        getCDAVitalsTest(table, i, columnno - 1, "-")
                                    End If

                                Else
                                    getCDAVitalsTest(table, i, columnno - 1, "-")
                                End If




                            Case "9"
                                Dim rows1 As DataRow() = dtvitalsview.Select("VitalNo = " & i & "")
                                If rows1.Count > 0 Then
                                    codesys = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Body mass index")
                                    getCDAVitalsTest(table, i, columnno - 1, rows1(0).ItemArray(0), rows1(0).ItemArray(2), codesys.Code)
                                    vitalNo = vitalNo + 1
                                    DirectCast(table.tbody(0).tr(i + 1).Items(columnno - 1), StrucDocTd).ID = "Vit" & vitalNo
                                Else
                                    getCDAVitalsTest(table, i, columnno - 1, "-")
                                End If


                            Case "10"
                                Dim rows1 As DataRow() = dtvitalsview.Select("VitalNo = " & i & "")
                                If rows1.Count > 0 Then
                                    codesys = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Body surface Area")
                                    getCDAVitalsTest(table, i, columnno - 1, rows1(0).ItemArray(0), rows1(0).ItemArray(2), codesys.Code)
                                    vitalNo = vitalNo + 1
                                    DirectCast(table.tbody(0).tr(i + 1).Items(columnno - 1), StrucDocTd).ID = "Vit" & vitalNo
                                Else
                                    getCDAVitalsTest(table, i, columnno - 1, "-")
                                End If


                            Case "11"
                                Dim rows1 As DataRow() = dtvitalsview.Select("VitalNo = " & i & "")
                                If rows1.Count > 0 Then
                                    codesys = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Height")

                                    getCDAVitalsTest(table, i, columnno - 1, rows1(0).ItemArray(0), rows1(0).ItemArray(2), codesys.Code)
                                    'vitalNo = vitalNo + 1
                                    'DirectCast(table.tbody(0).tr(i + 1).Items(columnno - 1), StrucDocTd).ID = "Vit" & vitalNo
                                Else
                                    getCDAVitalsTest(table, i, columnno - 1, "-")
                                End If


                            Case "12"
                                Dim rows1 As DataRow() = dtvitalsview.Select("VitalNo = " & i & "")
                                If rows1.Count > 0 Then
                                    codesys = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Weight")
                                    getCDAVitalsTest(table, i, columnno - 1, rows1(0).ItemArray(0), rows1(0).ItemArray(2), codesys.Code)
                                    'vitalNo = vitalNo + 1
                                    'DirectCast(table.tbody(0).tr(i + 1).Items(columnno - 1), StrucDocTd).ID = "Vit" & vitalNo
                                Else
                                    getCDAVitalsTest(table, i, columnno - 1, "-")
                                End If


                            Case "13"
                                Dim rows1 As DataRow() = dtvitalsview.Select("VitalNo = " & i & "")
                                If rows1.Count > 0 Then
                                    codesys = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Body Temperature")
                                    getCDAVitalsTest(table, i, columnno - 1, rows1(0).ItemArray(0), rows1(0).ItemArray(2), codesys.Code)
                                    'vitalNo = vitalNo + 1
                                    'DirectCast(table.tbody(0).tr(i + 1).Items(columnno - 1), StrucDocTd).ID = "Vit" & vitalNo
                                Else
                                    getCDAVitalsTest(table, i, columnno - 1, "-")
                                End If

                        End Select









                        DirectCast(table.tbody(0).tr(i + 1).Items(columnno - 1), StrucDocTd).language = Nothing




                    Next
                Next

                Dim codesystemItem As CodeSystemItem = Nothing
                section.entry = New POCD_MT000040UV02Entry(distinctValues.Rows.Count - 1) {}
                vitalNo = 0
                For Vitals As Integer = 0 To distinctValues.Rows.Count - 1
                    Dim rows As DataRow() = dtvitals.Select("VitalDate = #" + distinctValues.Rows(Vitals)(0) + "# ")
                    Dim dtvitalsview As DataTable = Nothing
                    If rows.Length > 0 Then
                        dtvitalsview = New DataTable
                        dtvitalsview = rows.CopyToDataTable()
                    End If


                    section.entry(Vitals) = New POCD_MT000040UV02Entry()
                    section.entry(Vitals).typeCode = x_ActRelationshipEntry.DRIV
                    section.entry(Vitals).Item = New POCD_MT000040UV02Organizer()
                    organizer = DirectCast(section.entry(Vitals).Item, POCD_MT000040UV02Organizer)
                    organizer.classCode = x_ActClassDocumentEntryOrganizer.CLUSTER
                    organizer.moodCode = "EVN"
                    organizer.moodCodeSpecified = True

                    organizer.templateId = New II(1) {}
                    organizer.templateId(0) = New II()
                    organizer.templateId(0).root = oTemplateIDMaster.GetEntryID("Vital Signs Organizer")
                    '"2.16.840.1.113883.10.20.22.4.26"
                    organizer.templateId(0).assigningAuthorityName = Nothing
                    organizer.templateId(0).extension = _DateExtension2015


                    organizer.templateId(1) = New II()
                    organizer.templateId(1).root = oTemplateIDMaster.GetEntryID("Vital Signs Organizer")
                    '"2.16.840.1.113883.10.20.22.4.26"
                    organizer.templateId(1).assigningAuthorityName = Nothing
                    organizer.templateId(1).extension = Nothing


                    organizer.id = New II(0) {}
                    organizer.id(0) = New II()
                    organizer.id(0).root = Guid.NewGuid().ToString()
                    organizer.id(0).extension = Nothing
                    organizer.id(0).assigningAuthorityName = Nothing

                    organizer.code = New CD()

                    codesystemItem = oCodingSystemMaster.GetbyCode(CodeSystem.SNOMED_CT, "46680005")
                    If Not IsNothing(codesystemItem) Then
                        organizer.code.code = codesystemItem.Code
                        organizer.code.codeSystem = CodeSystem.SNOMED_CT
                        organizer.code.codeSystemName = codesystemItem.CodingSystemName
                        organizer.code.codeSystemVersion = Nothing
                        organizer.code.displayName = codesystemItem.Description
                        organizer.code.translation = New CD(0) {}
                        organizer.code.translation(0) = New CD()
                        codesystemItem = Nothing
                        codesystemItem = oCodingSystemMaster.GetbyCode(CodeSystem.LOINC, "74728-7")
                        organizer.code.translation(0).code = codesystemItem.Code
                        organizer.code.translation(0).codeSystemName = codesystemItem.CodingSystemName
                        organizer.code.translation(0).codeSystem = codesystemItem.CodingSystem
                        organizer.code.translation(0).displayName = codesystemItem.Description
                    Else
                        organizer.code.nullFlavorSpecified = True
                        organizer.nullFlavor = "UNK"
                        organizer.code.translation(0).nullFlavorSpecified = True
                        organizer.code.translation(0).nullFlavor = "UNK"
                    End If


                    organizer.statusCode = New CS()
                    organizer.statusCode.code = "completed"
                    organizer.statusCode.codeSystem = Nothing
                    organizer.statusCode.codeSystemName = Nothing
                    organizer.statusCode.codeSystemVersion = Nothing
                    organizer.statusCode.displayName = Nothing

                    organizer.effectiveTime = New IVL_TS()
                    organizer.effectiveTime.Items = New QTY(1) {}
                    'organizer.effectiveTime.value = Format(CType(dtvitals.Rows(Vitals)(0), Date), "yyyyMMdd")
                    organizer.effectiveTime.value = Nothing
                    organizer.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
                    organizer.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
                    organizer.effectiveTime.ItemsElementName(1) = ItemsChoiceType2.high
                    organizer.effectiveTime.Items(0) = New IVXB_TS()
                    organizer.effectiveTime.Items(1) = New IVXB_TS()

                    DirectCast(organizer.effectiveTime.Items(0), IVXB_TS).value = Format(CType(distinctValues.Rows(Vitals)(0), Date), "yyyyMMdd")
                    DirectCast(organizer.effectiveTime.Items(1), IVXB_TS).value = Format(CType(distinctValues.Rows(Vitals)(0), Date), "yyyyMMdd")
                    'Dim _obscomponentindex As Integer = 0

                    organizer.component = New POCD_MT000040UV02Component4(10) {}
                    Dim _obscomponentindex As Integer = 0
                    If Not IsNothing(dtvitalsview) Then
                        If dtvitalsview.Rows.Count > 0 Then
                            For j As Integer = 0 To dtvitalsview.Rows.Count - 1
                                If dtvitalsview.Rows(j)(3) = "HEIGHTINCM" Then
                                    organizer.component(_obscomponentindex) = New POCD_MT000040UV02Component4()
                                    Dim obs As New POCD_MT000040UV02Observation

                                    obs.classCode = ActClassObservation.OBS
                                    obs.moodCode = x_ActMoodDocumentObservation.EVN
                                    obs.moodCodeSpecified = True
                                    obs.templateId = New II(1) {}
                                    obs.templateId(0) = New II()
                                    obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    'Guid.NewGuid.ToString()
                                    obs.templateId(0).extension = _DateExtension22
                                    obs.templateId(0).assigningAuthorityName = Nothing


                                    obs.templateId(1) = New II()
                                    obs.templateId(1).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    'Guid.NewGuid.ToString()
                                    obs.templateId(1).extension = Nothing
                                    obs.templateId(1).assigningAuthorityName = Nothing


                                    obs.id = New II(0) {}
                                    obs.id(0) = New II()
                                    obs.id(0).root = Guid.NewGuid.ToString()
                                    obs.id(0).extension = Nothing
                                    obs.id(0).assigningAuthorityName = Nothing

                                    codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Height")
                                    obs.code = New CD()
                                    obs.code.code = codesystemItem.Code
                                    obs.code.codeSystem = CodeSystem.LOINC
                                    obs.code.codeSystemName = codesystemItem.CodingSystemName
                                    obs.code.codeSystemVersion = Nothing
                                    obs.code.displayName = codesystemItem.Description

                                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                        obs.text = New ED()
                                        obs.text.reference = New TEL()
                                        vitalNo = vitalNo + 1
                                        obs.text.reference.value = "#Vit" & vitalNo
                                        obs.text.language = Nothing
                                        obs.text.reference.nullFlavor = Nothing
                                    End If


                                    obs.statusCode = New CS()
                                    obs.statusCode.code = "completed"
                                    obs.statusCode.codeSystem = Nothing
                                    obs.statusCode.codeSystemName = Nothing
                                    obs.statusCode.codeSystemVersion = Nothing
                                    obs.statusCode.displayName = Nothing


                                    obs.effectiveTime = New IVL_TS()
                                    'obs.effectiveTime.value = Format(CType(dtvitals.Rows(Vitals)(0), DateTime), "yyyyMMdd")

                                    obs.effectiveTime.value = CType(dtvitalsview.Rows(j)(5), Date).ToString("yyyyMMddHHmmss") & Replace(CType(dtvitalsview.Rows(j)(5), Date).ToString("zzzz"), ":", "")
                                    'If _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                    If Not IsNothing(dtvitalsview.Rows(j)(0)) AndAlso dtvitalsview.Rows(j)(0) <> 0 Then
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).value = dtvitalsview.Rows(j)(0)
                                        DirectCast(obs.value(0), PQ).unit = codesystemItem.Unit
                                    Else
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).nullFlavorSpecified = True
                                        DirectCast(obs.value(0), PQ).nullFlavor = "NI"
                                    End If

                                    obs.interpretationCode = New CE(0) {}
                                    obs.interpretationCode(0) = New CE()
                                    obs.interpretationCode(0).code = "N"
                                    obs.interpretationCode(0).codeSystem = "2.16.840.1.113883.5.83"
                                    obs.interpretationCode(0).codeSystemName = Nothing
                                    obs.interpretationCode(0).codeSystemVersion = Nothing
                                    obs.interpretationCode(0).displayName = Nothing
                                    organizer.component(_obscomponentindex).Item = obs
                                    If Not IsNothing(obs) Then
                                        obs = Nothing
                                    End If
                                    _obscomponentindex = _obscomponentindex + 1

                                End If
                                If dtvitalsview.Rows(j)(3) = "WEIGHTINKG" Then
                                    organizer.component(_obscomponentindex) = New POCD_MT000040UV02Component4()
                                    Dim obs As New POCD_MT000040UV02Observation
                                    obs.classCode = ActClassObservation.OBS
                                    obs.moodCode = x_ActMoodDocumentObservation.EVN
                                    obs.moodCodeSpecified = True
                                    obs.templateId = New II(1) {}
                                    obs.templateId(0) = New II()
                                    obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    obs.templateId(0).extension = _DateExtension22
                                    obs.templateId(0).assigningAuthorityName = Nothing

                                    obs.templateId(1) = New II()
                                    obs.templateId(1).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    'Guid.NewGuid.ToString()
                                    obs.templateId(1).extension = Nothing
                                    obs.templateId(1).assigningAuthorityName = Nothing

                                    obs.id = New II(0) {}
                                    obs.id(0) = New II()
                                    obs.id(0).root = Guid.NewGuid.ToString()
                                    obs.id(0).extension = Nothing
                                    obs.id(0).assigningAuthorityName = Nothing
                                    codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Weight")
                                    obs.code = New CD()
                                    obs.code.code = codesystemItem.Code
                                    obs.code.codeSystem = CodeSystem.LOINC
                                    obs.code.codeSystemName = codesystemItem.CodingSystemName
                                    obs.code.codeSystemVersion = Nothing
                                    obs.code.displayName = codesystemItem.Description

                                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                        obs.text = New ED()
                                        obs.text.reference = New TEL()
                                        vitalNo = vitalNo + 1
                                        obs.text.reference.value = "#Vit" & vitalNo
                                        obs.text.language = Nothing
                                        obs.text.reference.nullFlavor = Nothing
                                    End If


                                    obs.statusCode = New CS()
                                    obs.statusCode.code = "completed"
                                    obs.statusCode.codeSystem = Nothing
                                    obs.statusCode.codeSystemName = Nothing
                                    obs.statusCode.codeSystemVersion = Nothing
                                    obs.statusCode.displayName = Nothing


                                    obs.effectiveTime = New IVL_TS()
                                    'obs.effectiveTime.value = Format(CType(dtvitals.Rows(Vitals)(0), DateTime), "yyyyMMdd")
                                    obs.effectiveTime.value = CType(dtvitalsview.Rows(j)(5), Date).ToString("yyyyMMddHHmmss") & Replace(CType(dtvitalsview.Rows(j)(5), Date).ToString("zzzz"), ":", "")
                                    'If _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                    If Not IsNothing(dtvitalsview.Rows(j)(0)) AndAlso dtvitalsview.Rows(j)(0) <> 0 Then
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).value = dtvitalsview.Rows(j)(0)
                                        DirectCast(obs.value(0), PQ).unit = codesystemItem.Unit
                                    Else
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).nullFlavorSpecified = True
                                        DirectCast(obs.value(0), PQ).nullFlavor = "NI"
                                    End If
                                    'Else
                                    '    If Not IsNothing(dtvitals.Rows(Vitals)("dWeightinlbs")) AndAlso dtvitals.Rows(Vitals)("dWeightinlbs") <> 0 Then
                                    '        obs.value = New ANY(0) {}
                                    '        obs.value(0) = New PQ()
                                    '        DirectCast(obs.value(0), PQ).value = dtvitals.Rows(Vitals)("dWeightinlbs")
                                    '        DirectCast(obs.value(0), PQ).unit = "lbs"
                                    '    End If
                                    'End If


                                    obs.interpretationCode = New CE(0) {}
                                    obs.interpretationCode(0) = New CE()
                                    obs.interpretationCode(0).code = "N"
                                    obs.interpretationCode(0).codeSystem = "2.16.840.1.113883.5.83"
                                    obs.interpretationCode(0).codeSystemName = Nothing
                                    obs.interpretationCode(0).codeSystemVersion = Nothing
                                    obs.interpretationCode(0).displayName = Nothing

                                    organizer.component(_obscomponentindex).Item = obs
                                    If Not IsNothing(obs) Then
                                        obs = Nothing
                                    End If
                                    _obscomponentindex = _obscomponentindex + 1
                                End If
                                If dtvitalsview.Rows(j)(3) = "BloodPressureSittingMin" Then
                                    organizer.component(_obscomponentindex) = New POCD_MT000040UV02Component4()
                                    Dim obs As New POCD_MT000040UV02Observation
                                    obs.classCode = ActClassObservation.OBS
                                    obs.moodCode = x_ActMoodDocumentObservation.EVN
                                    obs.moodCodeSpecified = True
                                    obs.templateId = New II(1) {}
                                    obs.templateId(0) = New II()
                                    obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    'Guid.NewGuid.ToString()
                                    obs.templateId(0).extension = _DateExtension22
                                    obs.templateId(0).assigningAuthorityName = Nothing


                                    obs.templateId(1) = New II()
                                    obs.templateId(1).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    'Guid.NewGuid.ToString()
                                    obs.templateId(1).extension = Nothing
                                    obs.templateId(1).assigningAuthorityName = Nothing

                                    obs.id = New II(0) {}
                                    obs.id(0) = New II()
                                    obs.id(0).root = Guid.NewGuid.ToString()
                                    obs.id(0).extension = Nothing
                                    obs.id(0).assigningAuthorityName = Nothing
                                    codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "BP diastolic")
                                    obs.code = New CD()
                                    obs.code.code = codesystemItem.Code
                                    obs.code.codeSystem = CodeSystem.LOINC
                                    obs.code.codeSystemName = codesystemItem.CodingSystemName
                                    obs.code.codeSystemVersion = Nothing
                                    obs.code.displayName = codesystemItem.Description


                                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                        obs.text = New ED()
                                        obs.text.reference = New TEL()
                                        vitalNo = vitalNo + 1
                                        obs.text.reference.value = "#Vit" & vitalNo
                                        obs.text.language = Nothing
                                        obs.text.reference.nullFlavor = Nothing
                                    End If
                                    obs.statusCode = New CS()
                                    obs.statusCode.code = "completed"
                                    obs.statusCode.codeSystem = Nothing
                                    obs.statusCode.codeSystemName = Nothing
                                    obs.statusCode.codeSystemVersion = Nothing
                                    obs.statusCode.displayName = Nothing


                                    obs.effectiveTime = New IVL_TS()
                                    'obs.effectiveTime.value = Format(CType(dtvitals.Rows(Vitals)(0), DateTime), "yyyyMMdd")
                                    obs.effectiveTime.value = CType(dtvitalsview.Rows(j)(5), Date).ToString("yyyyMMddHHmmss") & Replace(CType(dtvitalsview.Rows(j)(5), Date).ToString("zzzz"), ":", "")



                                    If Not IsNothing(dtvitalsview.Rows(j)(0)) AndAlso dtvitalsview.Rows(j)(0) <> 0 Then
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).value = dtvitalsview.Rows(j)(0)
                                        DirectCast(obs.value(0), PQ).unit = codesystemItem.Unit
                                    Else
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).nullFlavorSpecified = True
                                        DirectCast(obs.value(0), PQ).nullFlavor = "NI"
                                    End If
                                    obs.interpretationCode = New CE(0) {}
                                    obs.interpretationCode(0) = New CE()
                                    obs.interpretationCode(0).code = "N"
                                    obs.interpretationCode(0).codeSystem = "2.16.840.1.113883.5.83"
                                    obs.interpretationCode(0).codeSystemName = Nothing
                                    obs.interpretationCode(0).codeSystemVersion = Nothing
                                    obs.interpretationCode(0).displayName = Nothing
                                    organizer.component(_obscomponentindex).Item = obs
                                    If Not IsNothing(obs) Then
                                        obs = Nothing
                                    End If
                                    _obscomponentindex = _obscomponentindex + 1
                                End If
                                If dtvitalsview.Rows(j)(3) = "BloodPressureSittingMax" Then
                                    organizer.component(_obscomponentindex) = New POCD_MT000040UV02Component4()
                                    Dim obs As New POCD_MT000040UV02Observation
                                    obs.classCode = ActClassObservation.OBS
                                    obs.moodCode = x_ActMoodDocumentObservation.EVN
                                    obs.moodCodeSpecified = True
                                    obs.templateId = New II(1) {}
                                    obs.templateId(0) = New II()
                                    obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    obs.templateId(0).extension = _DateExtension22
                                    obs.templateId(0).assigningAuthorityName = Nothing

                                    obs.templateId(1) = New II()
                                    obs.templateId(1).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    'Guid.NewGuid.ToString()
                                    obs.templateId(1).extension = Nothing
                                    obs.templateId(1).assigningAuthorityName = Nothing

                                    obs.id = New II(0) {}
                                    obs.id(0) = New II()
                                    obs.id(0).root = Guid.NewGuid.ToString()
                                    obs.id(0).extension = Nothing
                                    obs.id(0).assigningAuthorityName = Nothing

                                    obs.code = New CD()
                                    codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "BP Systolic")
                                    obs.code.code = codesystemItem.Code
                                    obs.code.codeSystem = CodeSystem.LOINC
                                    obs.code.codeSystemName = codesystemItem.CodingSystemName
                                    obs.code.codeSystemVersion = Nothing
                                    obs.code.displayName = codesystemItem.Description


                                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                        obs.text = New ED()
                                        obs.text.reference = New TEL()
                                        vitalNo = vitalNo + 1
                                        obs.text.reference.value = "#Vit" & vitalNo
                                        obs.text.language = Nothing
                                        obs.text.reference.nullFlavor = Nothing
                                    End If

                                    obs.statusCode = New CS()
                                    obs.statusCode.code = "completed"
                                    obs.statusCode.codeSystem = Nothing
                                    obs.statusCode.codeSystemName = Nothing
                                    obs.statusCode.codeSystemVersion = Nothing
                                    obs.statusCode.displayName = Nothing


                                    obs.effectiveTime = New IVL_TS()
                                    'obs.effectiveTime.value = Format(CType(dtvitals.Rows(Vitals)(0), DateTime), "yyyyMMdd")
                                    obs.effectiveTime.value = CType(dtvitalsview.Rows(j)(5), Date).ToString("yyyyMMddHHmmss") & Replace(CType(dtvitalsview.Rows(j)(5), Date).ToString("zzzz"), ":", "")

                                    If Not IsNothing(dtvitalsview.Rows(j)(0)) AndAlso dtvitalsview.Rows(j)(0) <> 0 Then
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).value = dtvitalsview.Rows(j)(0)
                                        DirectCast(obs.value(0), PQ).unit = codesystemItem.Unit
                                    Else
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).nullFlavorSpecified = True
                                        DirectCast(obs.value(0), PQ).nullFlavor = "NI"
                                    End If

                                    obs.interpretationCode = New CE(0) {}
                                    obs.interpretationCode(0) = New CE()
                                    obs.interpretationCode(0).code = "N"
                                    obs.interpretationCode(0).codeSystem = "2.16.840.1.113883.5.83"
                                    obs.interpretationCode(0).codeSystemName = Nothing
                                    obs.interpretationCode(0).codeSystemVersion = Nothing
                                    obs.interpretationCode(0).displayName = Nothing
                                    organizer.component(_obscomponentindex).Item = obs
                                    If Not IsNothing(obs) Then
                                        obs = Nothing
                                    End If
                                    _obscomponentindex = _obscomponentindex + 1
                                End If
                                If dtvitalsview.Rows(j)(3) = "PulseOX" Then
                                    organizer.component(_obscomponentindex) = New POCD_MT000040UV02Component4()
                                    Dim obs As New POCD_MT000040UV02Observation
                                    obs.classCode = ActClassObservation.OBS
                                    obs.moodCode = x_ActMoodDocumentObservation.EVN
                                    obs.moodCodeSpecified = True
                                    obs.templateId = New II(1) {}
                                    obs.templateId(0) = New II()
                                    obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    obs.templateId(0).extension = _DateExtension22
                                    obs.templateId(0).assigningAuthorityName = Nothing


                                    obs.templateId(1) = New II()
                                    obs.templateId(1).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    'Guid.NewGuid.ToString()
                                    obs.templateId(1).extension = Nothing
                                    obs.templateId(1).assigningAuthorityName = Nothing
                                    obs.id = New II(0) {}
                                    obs.id(0) = New II()
                                    obs.id(0).root = Guid.NewGuid.ToString()
                                    obs.id(0).extension = Nothing
                                    obs.id(0).assigningAuthorityName = Nothing

                                    obs.code = New CD()
                                    codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Pulse Ox")
                                    obs.code.code = codesystemItem.Code
                                    obs.code.codeSystem = CodeSystem.LOINC
                                    obs.code.codeSystemName = codesystemItem.CodingSystemName
                                    obs.code.codeSystemVersion = Nothing
                                    obs.code.displayName = codesystemItem.Description


                                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                        obs.text = New ED()
                                        obs.text.reference = New TEL()
                                        vitalNo = vitalNo + 1
                                        obs.text.reference.value = "#Vit" & vitalNo
                                        obs.text.language = Nothing
                                        obs.text.reference.nullFlavor = Nothing
                                    End If

                                    obs.statusCode = New CS()
                                    obs.statusCode.code = "completed"
                                    obs.statusCode.codeSystem = Nothing
                                    obs.statusCode.codeSystemName = Nothing
                                    obs.statusCode.codeSystemVersion = Nothing
                                    obs.statusCode.displayName = Nothing


                                    obs.effectiveTime = New IVL_TS()
                                    'obs.effectiveTime.value = Format(CType(dtvitals.Rows(Vitals)(0), DateTime), "yyyyMMdd")
                                    obs.effectiveTime.value = CType(dtvitalsview.Rows(j)(5), Date).ToString("yyyyMMddHHmmss") & Replace(CType(dtvitalsview.Rows(j)(5), Date).ToString("zzzz"), ":", "")



                                    If Not IsNothing(dtvitalsview.Rows(j)(0)) AndAlso dtvitalsview.Rows(j)(0) <> 0 Then
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).value = dtvitalsview.Rows(j)(0)
                                        DirectCast(obs.value(0), PQ).unit = codesystemItem.Unit
                                    Else
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).nullFlavorSpecified = True
                                        DirectCast(obs.value(0), PQ).nullFlavor = "NI"
                                    End If
                                    obs.interpretationCode = New CE(0) {}
                                    obs.interpretationCode(0) = New CE()
                                    obs.interpretationCode(0).code = "N"
                                    obs.interpretationCode(0).codeSystem = "2.16.840.1.113883.5.83"
                                    obs.interpretationCode(0).codeSystemName = Nothing
                                    obs.interpretationCode(0).codeSystemVersion = Nothing
                                    obs.interpretationCode(0).displayName = Nothing
                                    organizer.component(_obscomponentindex).Item = obs
                                    If Not IsNothing(obs) Then
                                        obs = Nothing
                                    End If
                                    _obscomponentindex = _obscomponentindex + 1
                                End If
                                If dtvitalsview.Rows(j)(3) = "TempCel" Then
                                    organizer.component(_obscomponentindex) = New POCD_MT000040UV02Component4()
                                    Dim obs As New POCD_MT000040UV02Observation
                                    obs.classCode = ActClassObservation.OBS
                                    obs.moodCode = x_ActMoodDocumentObservation.EVN
                                    obs.moodCodeSpecified = True
                                    obs.templateId = New II(1) {}
                                    obs.templateId(0) = New II()
                                    obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    obs.templateId(0).extension = _DateExtension22
                                    obs.templateId(0).assigningAuthorityName = Nothing

                                    obs.templateId(1) = New II()
                                    obs.templateId(1).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    'Guid.NewGuid.ToString()
                                    obs.templateId(1).extension = Nothing
                                    obs.templateId(1).assigningAuthorityName = Nothing
                                    obs.id = New II(0) {}
                                    obs.id(0) = New II()
                                    obs.id(0).root = Guid.NewGuid.ToString()
                                    obs.id(0).extension = Nothing
                                    obs.id(0).assigningAuthorityName = Nothing

                                    obs.code = New CD()

                                    codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Body Temperature")
                                    obs.code.code = codesystemItem.Code
                                    obs.code.codeSystem = CodeSystem.LOINC
                                    obs.code.codeSystemName = codesystemItem.CodingSystemName
                                    obs.code.codeSystemVersion = Nothing
                                    obs.code.displayName = codesystemItem.Description


                                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                        obs.text = New ED()
                                        obs.text.reference = New TEL()
                                        vitalNo = vitalNo + 1
                                        obs.text.reference.value = "#Vit" & vitalNo
                                        obs.text.language = Nothing
                                        obs.text.reference.nullFlavor = Nothing
                                    End If

                                    obs.statusCode = New CS()
                                    obs.statusCode.code = "completed"
                                    obs.statusCode.codeSystem = Nothing
                                    obs.statusCode.codeSystemName = Nothing
                                    obs.statusCode.codeSystemVersion = Nothing
                                    obs.statusCode.displayName = Nothing


                                    obs.effectiveTime = New IVL_TS()
                                    'obs.effectiveTime.value = Format(CType(dtvitals.Rows(Vitals)(0), DateTime), "yyyyMMdd")
                                    obs.effectiveTime.value = CType(dtvitalsview.Rows(j)(5), Date).ToString("yyyyMMddHHmmss") & Replace(CType(dtvitalsview.Rows(j)(5), Date).ToString("zzzz"), ":", "")
                                    If Not IsNothing(dtvitalsview.Rows(j)(0)) AndAlso dtvitalsview.Rows(j)(0) <> 0 Then
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).value = dtvitalsview.Rows(j)(0)
                                        DirectCast(obs.value(0), PQ).unit = codesystemItem.Unit
                                    Else
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).nullFlavorSpecified = True
                                        DirectCast(obs.value(0), PQ).nullFlavor = "NI"
                                    End If
                                    obs.interpretationCode = New CE(0) {}
                                    obs.interpretationCode(0) = New CE()
                                    obs.interpretationCode(0).code = "N"
                                    obs.interpretationCode(0).codeSystem = "2.16.840.1.113883.5.83"
                                    obs.interpretationCode(0).codeSystemName = Nothing
                                    obs.interpretationCode(0).codeSystemVersion = Nothing
                                    obs.interpretationCode(0).displayName = Nothing
                                    organizer.component(_obscomponentindex).Item = obs
                                    If Not IsNothing(obs) Then
                                        obs = Nothing
                                    End If
                                    _obscomponentindex = _obscomponentindex + 1
                                End If
                                If dtvitalsview.Rows(j)(3) = "PulsePerMinute" Then
                                    organizer.component(_obscomponentindex) = New POCD_MT000040UV02Component4()
                                    Dim obs As New POCD_MT000040UV02Observation
                                    obs.classCode = ActClassObservation.OBS
                                    obs.moodCode = x_ActMoodDocumentObservation.EVN
                                    obs.moodCodeSpecified = True
                                    obs.templateId = New II(1) {}
                                    obs.templateId(0) = New II()
                                    obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    obs.templateId(0).extension = _DateExtension22
                                    obs.templateId(0).assigningAuthorityName = Nothing


                                    obs.templateId(1) = New II()
                                    obs.templateId(1).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    'Guid.NewGuid.ToString()
                                    obs.templateId(1).extension = Nothing
                                    obs.templateId(1).assigningAuthorityName = Nothing


                                    obs.id = New II(0) {}
                                    obs.id(0) = New II()
                                    obs.id(0).root = Guid.NewGuid.ToString()
                                    obs.id(0).extension = Nothing
                                    obs.id(0).assigningAuthorityName = Nothing

                                    obs.code = New CD()

                                    codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Pulse Rate")
                                    obs.code.code = codesystemItem.Code
                                    obs.code.codeSystem = CodeSystem.LOINC
                                    obs.code.codeSystemName = codesystemItem.CodingSystemName
                                    obs.code.codeSystemVersion = Nothing
                                    obs.code.displayName = codesystemItem.Description


                                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                        obs.text = New ED()
                                        obs.text.reference = New TEL()
                                        vitalNo = vitalNo + 1
                                        obs.text.reference.value = "#Vit" & vitalNo
                                        obs.text.language = Nothing
                                        obs.text.reference.nullFlavor = Nothing
                                    End If

                                    obs.statusCode = New CS()
                                    obs.statusCode.code = "completed"
                                    obs.statusCode.codeSystem = Nothing
                                    obs.statusCode.codeSystemName = Nothing
                                    obs.statusCode.codeSystemVersion = Nothing
                                    obs.statusCode.displayName = Nothing


                                    obs.effectiveTime = New IVL_TS()
                                    'obs.effectiveTime.value = Format(CType(dtvitals.Rows(Vitals)(0), DateTime), "yyyyMMdd")
                                    obs.effectiveTime.value = CType(dtvitalsview.Rows(j)(5), Date).ToString("yyyyMMddHHmmss") & Replace(CType(dtvitalsview.Rows(j)(5), Date).ToString("zzzz"), ":", "")
                                    If Not IsNothing(dtvitalsview.Rows(j)(0)) AndAlso dtvitalsview.Rows(j)(0) <> 0 Then
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).value = dtvitalsview.Rows(j)(0)
                                        DirectCast(obs.value(0), PQ).unit = codesystemItem.Unit
                                    Else
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).nullFlavorSpecified = True
                                        DirectCast(obs.value(0), PQ).nullFlavor = "NI"
                                    End If
                                    obs.interpretationCode = New CE(0) {}
                                    obs.interpretationCode(0) = New CE()
                                    obs.interpretationCode(0).code = "N"
                                    obs.interpretationCode(0).codeSystem = "2.16.840.1.113883.5.83"
                                    obs.interpretationCode(0).codeSystemName = Nothing
                                    obs.interpretationCode(0).codeSystemVersion = Nothing
                                    obs.interpretationCode(0).displayName = Nothing
                                    organizer.component(_obscomponentindex).Item = obs
                                    If Not IsNothing(obs) Then
                                        obs = Nothing
                                    End If
                                    _obscomponentindex = _obscomponentindex + 1
                                End If
                                If dtvitalsview.Rows(j)(3) = "RespiratoryRate" Then
                                    organizer.component(_obscomponentindex) = New POCD_MT000040UV02Component4()
                                    Dim obs As New POCD_MT000040UV02Observation
                                    obs.classCode = ActClassObservation.OBS
                                    obs.moodCode = x_ActMoodDocumentObservation.EVN
                                    obs.moodCodeSpecified = True
                                    obs.templateId = New II(1) {}
                                    obs.templateId(0) = New II()
                                    obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    obs.templateId(0).extension = _DateExtension22
                                    obs.templateId(0).assigningAuthorityName = Nothing

                                    obs.templateId(1) = New II()
                                    obs.templateId(1).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    'Guid.NewGuid.ToString()
                                    obs.templateId(1).extension = Nothing
                                    obs.templateId(1).assigningAuthorityName = Nothing

                                    obs.id = New II(0) {}
                                    obs.id(0) = New II()
                                    obs.id(0).root = Guid.NewGuid.ToString()
                                    obs.id(0).extension = Nothing
                                    obs.id(0).assigningAuthorityName = Nothing
                                    codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Respiratory Rate")
                                    obs.code = New CD()
                                    obs.code.code = codesystemItem.Code
                                    obs.code.codeSystem = CodeSystem.LOINC
                                    obs.code.codeSystemName = codesystemItem.CodingSystemName
                                    obs.code.codeSystemVersion = Nothing
                                    obs.code.displayName = codesystemItem.Description

                                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                        obs.text = New ED()
                                        obs.text.reference = New TEL()
                                        vitalNo = vitalNo + 1
                                        obs.text.reference.value = "#Vit" & vitalNo
                                        obs.text.language = Nothing
                                        obs.text.reference.nullFlavor = Nothing
                                    End If


                                    obs.statusCode = New CS()
                                    obs.statusCode.code = "completed"
                                    obs.statusCode.codeSystem = Nothing
                                    obs.statusCode.codeSystemName = Nothing
                                    obs.statusCode.codeSystemVersion = Nothing
                                    obs.statusCode.displayName = Nothing


                                    obs.effectiveTime = New IVL_TS()
                                    'obs.effectiveTime.value = Format(CType(dtvitals.Rows(Vitals)(0), DateTime), "yyyyMMdd")
                                    obs.effectiveTime.value = CType(dtvitalsview.Rows(j)(5), Date).ToString("yyyyMMddHHmmss") & Replace(CType(dtvitalsview.Rows(j)(5), Date).ToString("zzzz"), ":", "")
                                    'If _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                    If Not IsNothing(dtvitalsview.Rows(j)(0)) AndAlso dtvitalsview.Rows(j)(0) <> 0 Then
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).value = dtvitalsview.Rows(j)(0)
                                        DirectCast(obs.value(0), PQ).unit = codesystemItem.Unit
                                    Else
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).nullFlavorSpecified = True
                                        DirectCast(obs.value(0), PQ).nullFlavor = "NI"
                                    End If
                                    'Else
                                    '    If Not IsNothing(dtvitals.Rows(Vitals)("dWeightinlbs")) AndAlso dtvitals.Rows(Vitals)("dWeightinlbs") <> 0 Then
                                    '        obs.value = New ANY(0) {}
                                    '        obs.value(0) = New PQ()
                                    '        DirectCast(obs.value(0), PQ).value = dtvitals.Rows(Vitals)("dWeightinlbs")
                                    '        DirectCast(obs.value(0), PQ).unit = "lbs"
                                    '    End If
                                    'End If


                                    obs.interpretationCode = New CE(0) {}
                                    obs.interpretationCode(0) = New CE()
                                    obs.interpretationCode(0).code = "N"
                                    obs.interpretationCode(0).codeSystem = "2.16.840.1.113883.5.83"
                                    obs.interpretationCode(0).codeSystemName = Nothing
                                    obs.interpretationCode(0).codeSystemVersion = Nothing
                                    obs.interpretationCode(0).displayName = Nothing

                                    organizer.component(_obscomponentindex).Item = obs
                                    If Not IsNothing(obs) Then
                                        obs = Nothing
                                    End If
                                    _obscomponentindex = _obscomponentindex + 1
                                End If
                                If dtvitalsview.Rows(j)(3) = "InhaledOxygenConcentration" Then
                                    organizer.component(_obscomponentindex) = New POCD_MT000040UV02Component4()
                                    Dim obs As New POCD_MT000040UV02Observation
                                    obs.classCode = ActClassObservation.OBS
                                    obs.moodCode = x_ActMoodDocumentObservation.EVN
                                    obs.moodCodeSpecified = True
                                    obs.templateId = New II(1) {}
                                    obs.templateId(0) = New II()
                                    obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    obs.templateId(0).extension = _DateExtension22
                                    obs.templateId(0).assigningAuthorityName = Nothing


                                    obs.templateId(1) = New II()
                                    obs.templateId(1).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    'Guid.NewGuid.ToString()
                                    obs.templateId(1).extension = Nothing
                                    obs.templateId(1).assigningAuthorityName = Nothing


                                    obs.id = New II(0) {}
                                    obs.id(0) = New II()
                                    obs.id(0).root = Guid.NewGuid.ToString()
                                    obs.id(0).extension = Nothing
                                    obs.id(0).assigningAuthorityName = Nothing
                                    codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Inhaled Oxygen Concentration")
                                    obs.code = New CD()
                                    obs.code.code = codesystemItem.Code
                                    obs.code.codeSystem = CodeSystem.LOINC
                                    obs.code.codeSystemName = codesystemItem.CodingSystemName
                                    obs.code.codeSystemVersion = Nothing
                                    obs.code.displayName = codesystemItem.Description

                                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                        obs.text = New ED()
                                        obs.text.reference = New TEL()
                                        vitalNo = vitalNo + 1
                                        obs.text.reference.value = "#Vit" & vitalNo
                                        obs.text.language = Nothing
                                        obs.text.reference.nullFlavor = Nothing
                                    End If


                                    obs.statusCode = New CS()
                                    obs.statusCode.code = "completed"
                                    obs.statusCode.codeSystem = Nothing
                                    obs.statusCode.codeSystemName = Nothing
                                    obs.statusCode.codeSystemVersion = Nothing
                                    obs.statusCode.displayName = Nothing


                                    obs.effectiveTime = New IVL_TS()
                                    'obs.effectiveTime.value = Format(CType(dtvitals.Rows(Vitals)(0), DateTime), "yyyyMMdd")
                                    obs.effectiveTime.value = CType(dtvitalsview.Rows(j)(5), Date).ToString("yyyyMMddHHmmss") & Replace(CType(dtvitalsview.Rows(j)(5), Date).ToString("zzzz"), ":", "")
                                    'If _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                    If IsDBNull(dtvitalsview.Rows(j)(0)) = False Then
                                        If Not IsNothing(dtvitalsview.Rows(j)(0)) AndAlso dtvitalsview.Rows(j)(0) <> 0 Then
                                            obs.value = New ANY(0) {}
                                            obs.value(0) = New PQ()
                                            DirectCast(obs.value(0), PQ).value = dtvitalsview.Rows(j)(0)
                                            DirectCast(obs.value(0), PQ).unit = codesystemItem.Unit
                                        Else
                                            obs.value = New ANY(0) {}
                                            obs.value(0) = New PQ()
                                            DirectCast(obs.value(0), PQ).nullFlavorSpecified = True
                                            DirectCast(obs.value(0), PQ).nullFlavor = "NI"
                                        End If
                                    Else
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).nullFlavorSpecified = True
                                        DirectCast(obs.value(0), PQ).nullFlavor = "NI"
                                    End If


                                    'Else
                                    '    If Not IsNothing(dtvitals.Rows(Vitals)("dWeightinlbs")) AndAlso dtvitals.Rows(Vitals)("dWeightinlbs") <> 0 Then
                                    '        obs.value = New ANY(0) {}
                                    '        obs.value(0) = New PQ()
                                    '        DirectCast(obs.value(0), PQ).value = dtvitals.Rows(Vitals)("dWeightinlbs")
                                    '        DirectCast(obs.value(0), PQ).unit = "lbs"
                                    '    End If
                                    'End If


                                    obs.interpretationCode = New CE(0) {}
                                    obs.interpretationCode(0) = New CE()
                                    obs.interpretationCode(0).code = "N"
                                    obs.interpretationCode(0).codeSystem = "2.16.840.1.113883.5.83"
                                    obs.interpretationCode(0).codeSystemName = Nothing
                                    obs.interpretationCode(0).codeSystemVersion = Nothing
                                    obs.interpretationCode(0).displayName = Nothing

                                    organizer.component(_obscomponentindex).Item = obs
                                    If Not IsNothing(obs) Then
                                        obs = Nothing
                                    End If
                                    _obscomponentindex = _obscomponentindex + 1
                                End If
                                If dtvitalsview.Rows(j)(3) = "BMI" Then
                                    organizer.component(_obscomponentindex) = New POCD_MT000040UV02Component4()
                                    Dim obs As New POCD_MT000040UV02Observation
                                    obs.classCode = ActClassObservation.OBS
                                    obs.moodCode = x_ActMoodDocumentObservation.EVN
                                    obs.moodCodeSpecified = True
                                    obs.templateId = New II(1) {}
                                    obs.templateId(0) = New II()
                                    obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    obs.templateId(0).extension = _DateExtension22
                                    obs.templateId(0).assigningAuthorityName = Nothing

                                    obs.templateId(1) = New II()
                                    obs.templateId(1).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    'Guid.NewGuid.ToString()
                                    obs.templateId(1).extension = Nothing
                                    obs.templateId(1).assigningAuthorityName = Nothing

                                    obs.id = New II(0) {}
                                    obs.id(0) = New II()
                                    obs.id(0).root = Guid.NewGuid.ToString()
                                    obs.id(0).extension = Nothing
                                    obs.id(0).assigningAuthorityName = Nothing

                                    obs.code = New CD()

                                    codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Body mass index")
                                    obs.code.code = codesystemItem.Code
                                    obs.code.codeSystem = CodeSystem.LOINC
                                    obs.code.codeSystemName = codesystemItem.CodingSystemName
                                    obs.code.codeSystemVersion = Nothing
                                    obs.code.displayName = codesystemItem.Description


                                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                        obs.text = New ED()
                                        obs.text.reference = New TEL()
                                        vitalNo = vitalNo + 1
                                        obs.text.reference.value = "#Vit" & vitalNo
                                        obs.text.language = Nothing
                                        obs.text.reference.nullFlavor = Nothing
                                    End If

                                    obs.statusCode = New CS()
                                    obs.statusCode.code = "completed"
                                    obs.statusCode.codeSystem = Nothing
                                    obs.statusCode.codeSystemName = Nothing
                                    obs.statusCode.codeSystemVersion = Nothing
                                    obs.statusCode.displayName = Nothing


                                    obs.effectiveTime = New IVL_TS()
                                    'obs.effectiveTime.value = Format(CType(dtvitals.Rows(Vitals)(0), Date), "yyyyMMdd")
                                    obs.effectiveTime.value = CType(dtvitalsview.Rows(j)(5), Date).ToString("yyyyMMddHHmmss") & Replace(CType(dtvitalsview.Rows(j)(5), Date).ToString("zzzz"), ":", "")
                                    If Not IsNothing(dtvitalsview.Rows(j)(0)) AndAlso dtvitalsview.Rows(j)(0) <> 0 Then
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).value = dtvitalsview.Rows(j)(0)
                                        DirectCast(obs.value(0), PQ).unit = codesystemItem.Unit
                                    Else
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).nullFlavorSpecified = True
                                        DirectCast(obs.value(0), PQ).nullFlavor = "NI"
                                    End If
                                    obs.interpretationCode = New CE(0) {}
                                    obs.interpretationCode(0) = New CE()
                                    obs.interpretationCode(0).code = "N"
                                    obs.interpretationCode(0).codeSystem = "2.16.840.1.113883.5.83"
                                    obs.interpretationCode(0).codeSystemName = Nothing
                                    obs.interpretationCode(0).codeSystemVersion = Nothing
                                    obs.interpretationCode(0).displayName = Nothing
                                    organizer.component(_obscomponentindex).Item = obs
                                    If Not IsNothing(obs) Then
                                        obs = Nothing
                                    End If
                                    _obscomponentindex = _obscomponentindex + 1
                                End If
                                If dtvitalsview.Rows(j)(3) = "BodySurfaceArea" Then
                                    organizer.component(_obscomponentindex) = New POCD_MT000040UV02Component4()
                                    Dim obs As New POCD_MT000040UV02Observation
                                    obs.classCode = ActClassObservation.OBS
                                    obs.moodCode = x_ActMoodDocumentObservation.EVN
                                    obs.moodCodeSpecified = True
                                    obs.templateId = New II(1) {}
                                    obs.templateId(0) = New II()
                                    obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    obs.templateId(0).extension = _DateExtension22
                                    obs.templateId(0).assigningAuthorityName = Nothing


                                    obs.templateId(1) = New II()
                                    obs.templateId(1).root = oTemplateIDMaster.GetEntryID("Vital Sign Observation")
                                    'Guid.NewGuid.ToString()
                                    obs.templateId(1).extension = Nothing
                                    obs.templateId(1).assigningAuthorityName = Nothing


                                    obs.id = New II(0) {}
                                    obs.id(0) = New II()
                                    obs.id(0).root = Guid.NewGuid.ToString()
                                    obs.id(0).extension = Nothing
                                    obs.id(0).assigningAuthorityName = Nothing

                                    obs.code = New CD()

                                    codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Body surface Area")
                                    obs.code.code = codesystemItem.Code
                                    obs.code.codeSystem = CodeSystem.LOINC
                                    obs.code.codeSystemName = codesystemItem.CodingSystemName
                                    obs.code.codeSystemVersion = Nothing
                                    obs.code.displayName = codesystemItem.Description


                                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                        obs.text = New ED()
                                        obs.text.reference = New TEL()
                                        vitalNo = vitalNo + 1
                                        obs.text.reference.value = "#Vit" & vitalNo
                                        obs.text.language = Nothing
                                        obs.text.reference.nullFlavor = Nothing
                                    End If

                                    obs.statusCode = New CS()
                                    obs.statusCode.code = "completed"
                                    obs.statusCode.codeSystem = Nothing
                                    obs.statusCode.codeSystemName = Nothing
                                    obs.statusCode.codeSystemVersion = Nothing
                                    obs.statusCode.displayName = Nothing


                                    obs.effectiveTime = New IVL_TS()
                                    'obs.effectiveTime.value = Format(CType(dtvitals.Rows(Vitals)(0), DateTime), "yyyyMMdd")
                                    obs.effectiveTime.value = CType(dtvitalsview.Rows(j)(5), Date).ToString("yyyyMMddHHmmss") & Replace(CType(dtvitalsview.Rows(j)(5), Date).ToString("zzzz"), ":", "")
                                    If Not IsNothing(dtvitalsview.Rows(j)(0)) AndAlso dtvitalsview.Rows(j)(0) <> 0 Then
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).value = dtvitalsview.Rows(j)(0)
                                        DirectCast(obs.value(0), PQ).unit = codesystemItem.Unit
                                    Else
                                        obs.value = New ANY(0) {}
                                        obs.value(0) = New PQ()
                                        DirectCast(obs.value(0), PQ).nullFlavorSpecified = True
                                        DirectCast(obs.value(0), PQ).nullFlavor = "NI"
                                    End If
                                    obs.interpretationCode = New CE(0) {}
                                    obs.interpretationCode(0) = New CE()
                                    obs.interpretationCode(0).code = "N"
                                    obs.interpretationCode(0).codeSystem = "2.16.840.1.113883.5.83"
                                    obs.interpretationCode(0).codeSystemName = Nothing
                                    obs.interpretationCode(0).codeSystemVersion = Nothing
                                    obs.interpretationCode(0).displayName = Nothing
                                    organizer.component(_obscomponentindex).Item = obs
                                    If Not IsNothing(obs) Then
                                        obs = Nothing
                                    End If
                                    _obscomponentindex = _obscomponentindex + 1
                                End If
                            Next
                        End If

                    End If



                Next


            Else
                _Vitals.section = NoInformationSection("Vital Signs Required", "Vital Signs", _DateExtension2015)

            End If

            Return _Vitals
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Vitals Section"
            Else
                _msgString = _msgString & vbNewLine & "Vitals Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            '  MessageBox.Show("Error:" & ex.ToString())
            Return Nothing
        Finally
            If Not IsNothing(section) Then
                section = Nothing
            End If
            If Not IsNothing(table) Then
                table = Nothing
            End If
            If Not IsNothing(organizer) Then
                organizer = Nothing
            End If
        End Try
    End Function
    Private Sub getCDAVitalsTest(ByRef table As StrucDocTable, ByVal i As Integer, ByVal j As Integer, ByVal text As String, Optional ByVal time As String = "", Optional ByVal loinccode As String = "")
        table.tbody(0).tr(i + 1).Items(j) = New StrucDocTd()
        table.tbody(0).tr(i + 1).Items(j + 1) = New StrucDocTd()

        table.tbody(0).tr(i + 1).Items(j + 2) = New StrucDocTd()
        'If Convert.ToString(dtvitals.Rows(j)(i)).StartsWith("0.") Or Convert.ToString(dtvitals.Rows(j)(i)) = "0" Then
        'If i <= dtvitalsview.Rows.Count - 1 Then
        'If dtvitalsview.Rows(i)(0) > 0 Then
        DirectCast(table.tbody(0).tr(i + 1).Items(j), StrucDocTd).Text = New String() {text}
        DirectCast(table.tbody(0).tr(i + 1).Items(j + 1), StrucDocTd).Text = New String() {time}
        DirectCast(table.tbody(0).tr(i + 1).Items(j + 2), StrucDocTd).Text = New String() {loinccode}
        'Else
        'DirectCast(table.tbody(0).tr(i + 1).Items(j + 1), StrucDocTd).Text = New String() {text}
        'End If
        ''Else
        'DirectCast(table.tbody(0).tr(i + 1).Items(j + 1), StrucDocTd).Text = New String() {text}
        'End If
    End Sub
    Private Function GetCDAMedicationComponent() As POCD_MT000040UV02Component3
        Dim _Medication As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim table As StrucDocTable = Nothing
        Dim sadmin As POCD_MT000040UV02SubstanceAdministration = Nothing
        Dim mat As POCD_MT000040UV02Material = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim _MedicationCount As Integer = 1
        Dim objCDADataExtraction As gloCDADataExtraction = Nothing
        Try


            _Medication = New POCD_MT000040UV02Component3

            _Medication.section = New POCD_MT000040UV02Section()
            section = _Medication.section
            'section.ID = Nothing
            section.classCodeSpecified = False
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            section.templateId = New II(1) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Medications")
            section.templateId(0).extension = _DateExtension22
            section.templateId(0).assigningAuthorityName = Nothing

            section.templateId(1) = New II()
            section.templateId(1).root = oTemplateIDMaster.GetSectionID("Medications")
            section.templateId(1).extension = Nothing
            section.templateId(1).assigningAuthorityName = Nothing


            section.code = New CE()
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Medication")
            If _CodeSysItem IsNot Nothing Then
                section.code.code = _CodeSysItem.Code
                section.code.codeSystem = CodeSystem.LOINC
                section.code.codeSystemName = _CodeSysItem.CodingSystemName
                section.code.codeSystemVersion = Nothing
                section.code.displayName = Nothing
            Else
                section.code = Nothing
            End If

            section.title = New ST()
            section.title.Text = New String() {"Medications"}
            section.title.language = Nothing
            section.text = New StrucDocText()
            section.text.ID = Nothing
            section.text.language = Nothing


            If Not IsNothing(mPatient.PatientMedications) AndAlso mPatient.PatientMedications.Count > 0 Then
                ''
                ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                If Not IsNothing(sconf.code) Then
                    section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''
                ''
                section.text.Items = New Object(0) {}
                section.text.Items(0) = New StrucDocTable()
                table = DirectCast(section.text.Items(0), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}
                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(9) {}
                table.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"RxNorm Code"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Drug Name"}
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Route"}
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(3) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Dose"}
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(4) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).Text = New String() {"Frequency"}
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(5) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).Text = New String() {"Date"}
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(6) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).Text = New String() {"Status"}
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(7) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(7), StrucDocTh).Text = New String() {"Generic Name"}
                DirectCast(table.thead.tr(0).Items(7), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(7), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(8) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(8), StrucDocTh).Text = New String() {"NDC Code"}
                DirectCast(table.thead.tr(0).Items(8), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(8), StrucDocTh).language = Nothing

                table.thead.tr(0).Items(9) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(9), StrucDocTh).Text = New String() {"Verified on"}
                DirectCast(table.thead.tr(0).Items(9), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(9), StrucDocTh).language = Nothing


                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing
                table.tbody(0).tr = New StrucDocTr(mPatient.PatientMedications.Count - 1) {}

                Dim medentry As Medication = Nothing
                For mi As Integer = 0 To mPatient.PatientMedications.Count - 1
                    medentry = mPatient.PatientMedications.Item(mi)
                    table.tbody(0).tr(mi) = New StrucDocTr()
                    table.tbody(0).tr(mi).ID = Nothing
                    table.tbody(0).tr(mi).language = Nothing
                    table.tbody(0).tr(mi).Items = New Object(9) {}
                    table.tbody(0).tr(mi).Items(0) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(0), StrucDocTd).Text = New String() {medentry.RxNormCode}
                    DirectCast(table.tbody(0).tr(mi).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(0), StrucDocTd).language = Nothing
                    table.tbody(0).tr(mi).Items(1) = New StrucDocTd()

                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                        DirectCast(table.tbody(0).tr(mi).Items(1), StrucDocTd).Items = New StrucDocContent(0) {}
                        DirectCast(table.tbody(0).tr(mi).Items(1), StrucDocTd).Items(0) = New StrucDocContent
                        DirectCast(DirectCast(table.tbody(0).tr(mi).Items(1), StrucDocTd).Items(0), StrucDocContent).ID = "Med" & mi
                        DirectCast(DirectCast(table.tbody(0).tr(mi).Items(1), StrucDocTd).Items(0), StrucDocContent).language = Nothing

                    End If

                    DirectCast(table.tbody(0).tr(mi).Items(1), StrucDocTd).Text = New String() {medentry.DrugName}
                    DirectCast(table.tbody(0).tr(mi).Items(1), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(1), StrucDocTd).language = Nothing
                    table.tbody(0).tr(mi).Items(2) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(2), StrucDocTd).Text = New String() {medentry.Route}
                    DirectCast(table.tbody(0).tr(mi).Items(2), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(2), StrucDocTd).language = Nothing
                    table.tbody(0).tr(mi).Items(3) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(3), StrucDocTd).Text = New String() {medentry.DrugQuantity + " " + medentry.DrugForm}
                    DirectCast(table.tbody(0).tr(mi).Items(3), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(3), StrucDocTd).language = Nothing
                    table.tbody(0).tr(mi).Items(4) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(4), StrucDocTd).Text = New String() {medentry.Frequency}
                    DirectCast(table.tbody(0).tr(mi).Items(4), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(4), StrucDocTd).language = Nothing
                    table.tbody(0).tr(mi).Items(5) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(5), StrucDocTd).Text = New String() {medentry.StartDate}
                    DirectCast(table.tbody(0).tr(mi).Items(5), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(5), StrucDocTd).language = Nothing
                    table.tbody(0).tr(mi).Items(6) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(6), StrucDocTd).Text = New String() {medentry.Status}
                    DirectCast(table.tbody(0).tr(mi).Items(6), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(6), StrucDocTd).language = Nothing
                    table.tbody(0).tr(mi).Items(7) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(7), StrucDocTd).Text = New String() {medentry.GenericName}
                    DirectCast(table.tbody(0).tr(mi).Items(7), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(7), StrucDocTd).language = Nothing
                    table.tbody(0).tr(mi).Items(8) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(8), StrucDocTd).Text = New String() {medentry.ProdCode}
                    DirectCast(table.tbody(0).tr(mi).Items(8), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(8), StrucDocTd).language = Nothing

                    table.tbody(0).tr(mi).Items(9) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(9), StrucDocTd).Text = New String() {medentry.MedicationDate}
                    DirectCast(table.tbody(0).tr(mi).Items(9), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(9), StrucDocTd).language = Nothing

                Next
                If Not IsNothing(medentry) Then
                    medentry.Dispose()
                    medentry = Nothing
                End If
            Else
                'section.text.Text = New String() {"No known medications for patient"}
                'If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                '    section.text.Items = New StrucDocContent(0) {}
                '    section.text.Items(0) = New StrucDocContent
                '    DirectCast(section.text.Items(0), StrucDocContent).ID = "Med" & 0
                '    DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                'End If
            End If

            If Not IsNothing(mPatient.PatientMedications) AndAlso mPatient.PatientMedications.Count > 0 Then
                objCDADataExtraction = New gloCDADataExtraction()
                _MedicationCount = mPatient.PatientMedications.Count


                section.entry = New POCD_MT000040UV02Entry(_MedicationCount - 1) {}
                Dim medentries As Medication = Nothing
                For mi As Integer = 0 To _MedicationCount - 1

                    section.entry(mi) = New POCD_MT000040UV02Entry()
                    section.entry(mi).typeCode = x_ActRelationshipEntry.DRIV
                    section.entry(mi).Item = New POCD_MT000040UV02SubstanceAdministration()
                    sadmin = DirectCast(section.entry(mi).Item, POCD_MT000040UV02SubstanceAdministration)
                    sadmin.moodCode = x_DocumentSubstanceMood.EVN
                    sadmin.moodCodeSpecified = True
                    If IsNothing(mPatient.PatientMedications) Then
                        sadmin.negationIndSpecified = True
                        sadmin.negationInd = True
                    End If

                    sadmin.templateId = New II(1) {}
                    sadmin.templateId(0) = New II()
                    sadmin.templateId(0).root = oTemplateIDMaster.GetEntryID("Medication Activity")
                    sadmin.templateId(0).extension = _DateExtension22
                    sadmin.templateId(0).assigningAuthorityName = Nothing


                    sadmin.templateId(1) = New II()
                    sadmin.templateId(1).root = oTemplateIDMaster.GetEntryID("Medication Activity")
                    sadmin.templateId(1).extension = Nothing
                    sadmin.templateId(1).assigningAuthorityName = Nothing


                    sadmin.id = New II(0) {}
                    sadmin.id(0) = New II()
                    sadmin.id(0).root = Guid.NewGuid().ToString()
                    sadmin.id(0).extension = Nothing
                    sadmin.id(0).assigningAuthorityName = Nothing

                    If Not IsNothing(mPatient.PatientMedications) AndAlso mPatient.PatientMedications.Count > 0 Then
                        medentries = mPatient.PatientMedications.Item(mi)
                    Else
                        medentries = New Medication
                    End If
                    medentries.GUID = sadmin.id(0).root
                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                        sadmin.text = New ED()
                        sadmin.text.language = Nothing
                        sadmin.text.mediaType = Nothing
                        sadmin.text.reference = New TEL()
                        sadmin.text.reference.value = "#Med" & mi

                    End If

                    sadmin.statusCode = New CS()
                    If IsNothing(mPatient.PatientMedications) Then
                        sadmin.statusCode.code = "active"
                    Else
                        sadmin.statusCode.code = If(medentries.Status IsNot Nothing AndAlso medentries.Status <> "", Convert.ToString(medentries.Status).ToLower, Nothing)
                    End If
                    sadmin.statusCode.codeSystem = Nothing
                    sadmin.statusCode.codeSystemName = Nothing
                    sadmin.statusCode.codeSystemVersion = Nothing
                    sadmin.statusCode.displayName = Nothing
                    'sadmin.effectiveTime = New IVL_TS(0) {}
                    sadmin.effectiveTime = New SXCM_TS(1) {}
                    sadmin.effectiveTime(0) = New IVL_TS()
                    sadmin.effectiveTime(0).value = Nothing
                    DirectCast(sadmin.effectiveTime(0), IVL_TS).ItemsElementName = New ItemsChoiceType2(1) {}
                    DirectCast(sadmin.effectiveTime(0), IVL_TS).ItemsElementName(0) = ItemsChoiceType2.low
                    DirectCast(sadmin.effectiveTime(0), IVL_TS).ItemsElementName(1) = ItemsChoiceType2.high
                    DirectCast(sadmin.effectiveTime(0), IVL_TS).Items = New QTY(1) {}
                    DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(0) = New IVXB_TS()
                    If IsNothing(mPatient.PatientMedications) Then
                        DirectCast(DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(0), IVXB_TS).value = Nothing
                        DirectCast(DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(0), IVXB_TS).nullFlavor = "NA"
                    Else

                        If medentries.StartDate IsNot Nothing AndAlso medentries.StartDate <> "" Then
                            DirectCast(DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(0), IVXB_TS).value = Format(CType(medentries.StartDate, Date), "yyyyMMdd")
                        Else
                            DirectCast(DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(0), IVXB_TS).value = Nothing
                            DirectCast(DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(0), IVXB_TS).nullFlavor = "UNK"
                        End If

                        DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(1) = New IVXB_TS()
                        If medentries.EndDate IsNot Nothing AndAlso medentries.EndDate <> "" Then
                            DirectCast(DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(1), IVXB_TS).value = Format(CType(medentries.EndDate, Date), "yyyyMMdd")
                        Else
                            DirectCast(DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(1), IVXB_TS).value = Nothing
                            DirectCast(DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(1), IVXB_TS).nullFlavor = "UNK"

                        End If
                    End If


                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                        'sadmin.effectiveTime = New PIVL_TS(1) {}

                        If Not IsNothing(medentries.FrequencyDesc) Then

                            Dim dtdetails As DataTable = objCDADataExtraction.GetFrequencyDetails(medentries.FrequencyDesc)
                            If Not IsNothing(dtdetails) Then
                                If dtdetails.Rows.Count > 0 Then
                                    If dtdetails.Rows(0)("sXsiType") IsNot Nothing AndAlso dtdetails.Rows(0)("sXsiType") <> "" Then
                                        If dtdetails.Rows(0)("sXsiType") = "PIVL_TS" Then
                                            sadmin.effectiveTime(1) = New PIVL_TS()
                                            sadmin.effectiveTime(1).value = Nothing
                                            sadmin.effectiveTime(1).operator = SetOperator.A
                                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).institutionSpecified1 = dtdetails.Rows(0)("binstitutionSpecified")

                                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()

                                            If dtdetails.Rows(0)("sValue") IsNot Nothing AndAlso dtdetails.Rows(0)("sValue") <> "" Then
                                                DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = dtdetails.Rows(0)("sValue")
                                            Else
                                                DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = "NI"
                                                DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing

                                            End If
                                            If dtdetails.Rows(0)("sUnit") IsNot Nothing AndAlso dtdetails.Rows(0)("sUnit") <> "" Then
                                                DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.unit = dtdetails.Rows(0)("sUnit")
                                            Else
                                                DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.unit = Nothing
                                            End If
                                        Else
                                            sadmin.effectiveTime(1) = New PIVL_TS()
                                            sadmin.effectiveTime(1).value = Nothing
                                            sadmin.effectiveTime(1).operator = SetOperator.A
                                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()
                                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = "NI"
                                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing

                                        End If
                                    Else
                                        sadmin.effectiveTime(1) = New PIVL_TS()
                                        sadmin.effectiveTime(1).value = Nothing
                                        sadmin.effectiveTime(1).operator = SetOperator.A
                                        DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()
                                        DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = "NI"
                                        DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing
                                    End If
                                Else
                                    sadmin.effectiveTime(1) = New PIVL_TS()
                                    sadmin.effectiveTime(1).value = Nothing
                                    sadmin.effectiveTime(1).operator = SetOperator.A
                                    DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()
                                    DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = "NI"
                                    DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing
                                End If
                            Else
                                sadmin.effectiveTime(1) = New PIVL_TS()
                                sadmin.effectiveTime(1).value = Nothing
                                sadmin.effectiveTime(1).operator = SetOperator.A
                                DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()
                                DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = "NI"
                                DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing
                            End If
                            If Not IsNothing(dtdetails) Then
                                dtdetails.Dispose()
                                dtdetails = Nothing
                            End If
                            'Else
                            '    sadmin.effectiveTime(1) = New PIVL_TS()
                            '    sadmin.effectiveTime(1).value = Nothing
                            '    sadmin.effectiveTime(1).operator = SetOperator.A
                            '    DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()
                            '    DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = NullFlavor.NI
                            '    DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing
                        End If

                    End If

                    If medentries.FDACode IsNot Nothing AndAlso medentries.FDACode <> "" Then
                        sadmin.routeCode = New CE()
                        sadmin.routeCode.code = medentries.FDACode
                        sadmin.routeCode.codeSystem = CodeSystem.FDARouteCode
                        sadmin.routeCode.codeSystemName = "NCI Thesaurus"
                        sadmin.routeCode.displayName = If(medentries.Route IsNot Nothing AndAlso medentries.Route <> "", medentries.Route, Nothing)
                        sadmin.routeCode.codeSystemVersion = Nothing
                    Else
                        sadmin.routeCode = Nothing
                    End If

                    sadmin.doseQuantity = New IVL_PQ()
                    sadmin.doseQuantity.unit = Nothing
                    If Not IsNothing(medentries.DrugQuantity) Then
                        Dim Quantity As String() = (medentries.DrugQuantity).Split(" ")
                        If Quantity.Length > 1 Then
                            If Quantity(0) IsNot Nothing AndAlso Quantity(0) <> "" Then
                                sadmin.doseQuantity.value = If(Quantity(0) IsNot Nothing AndAlso Quantity(0) <> "", Quantity(0), Nothing)
                            End If
                            If Quantity(1) IsNot Nothing AndAlso Quantity(1) <> "" Then
                                If Not IsNothing(objCDADataExtraction.CheckCodeInUCUM(Quantity(1))) AndAlso objCDADataExtraction.CheckCodeInUCUM(Quantity(1)) <> "" Then
                                    sadmin.doseQuantity.unit = If(Quantity(1) IsNot Nothing AndAlso Quantity(1) <> "", Quantity(1), Nothing)
                                End If
                            End If
                        ElseIf Quantity.Length > 0 Then
                            If Quantity(0) IsNot Nothing AndAlso Quantity(0) <> "" Then
                                sadmin.doseQuantity.value = If(Quantity(0) IsNot Nothing AndAlso Quantity(0) <> "", Quantity(0), Nothing)
                            End If
                        Else
                            sadmin.doseQuantity.value = Nothing
                        End If
                    Else
                        sadmin.doseQuantity.value = Nothing
                    End If

                    'If Not IsNothing(medentries.DrugForm) AndAlso medentries.DrugForm <> "" Then
                    '    sadmin.administrationUnitCode = New CE()
                    '    sadmin.administrationUnitCode.code = Nothing
                    '    sadmin.administrationUnitCode.displayName = If(medentries.DrugForm IsNot Nothing AndAlso medentries.DrugForm <> "", medentries.DrugForm, Nothing)
                    '    sadmin.administrationUnitCode.codeSystem = CodeSystem.FDARouteCode
                    '    sadmin.administrationUnitCode.codeSystemName = "NCI Thesaurus"
                    '    sadmin.administrationUnitCode.codeSystemVersion = Nothing
                    'Else
                    '    sadmin.administrationUnitCode = Nothing
                    'End If


                    sadmin.consumable = New POCD_MT000040UV02Consumable()
                    sadmin.consumable.typeCodeSpecified = False
                    sadmin.consumable.typeCode = Nothing
                    sadmin.consumable.manufacturedProduct = New POCD_MT000040UV02ManufacturedProduct()
                    sadmin.consumable.manufacturedProduct.classCodeSpecified = True
                    sadmin.consumable.manufacturedProduct.classCode = RoleClass.MANU
                    sadmin.consumable.manufacturedProduct.templateId = New II(1) {}
                    sadmin.consumable.manufacturedProduct.templateId(0) = New II()
                    sadmin.consumable.manufacturedProduct.templateId(0).root = oTemplateIDMaster.GetEntryID("Medication Information")
                    sadmin.consumable.manufacturedProduct.templateId(0).assigningAuthorityName = Nothing
                    sadmin.consumable.manufacturedProduct.templateId(0).extension = _DateExtension22

                    sadmin.consumable.manufacturedProduct.templateId(1) = New II()
                    sadmin.consumable.manufacturedProduct.templateId(1).root = oTemplateIDMaster.GetEntryID("Medication Information")
                    sadmin.consumable.manufacturedProduct.templateId(1).assigningAuthorityName = Nothing
                    sadmin.consumable.manufacturedProduct.templateId(1).extension = Nothing


                    sadmin.consumable.manufacturedProduct.Item = New POCD_MT000040UV02Material()
                    mat = DirectCast(sadmin.consumable.manufacturedProduct.Item, POCD_MT000040UV02Material)
                    mat.name = New EN()

                    If medentries.DrugName <> "" AndAlso medentries.DrugName <> Nothing Then
                        mat.name.Text = New String() {medentries.DrugName}
                    End If
                    mat.code = New CE()
                    If IsNothing(mPatient.PatientMedications) Then
                        mat.code.code = Nothing
                        mat.code.nullFlavorSpecified = True
                        mat.code.nullFlavor = "OTH"
                        mat.code.codeSystem = CodeSystem.RxNorm
                        mat.code.codeSystemName = Nothing
                        mat.code.displayName = Nothing
                        mat.code.codeSystemVersion = Nothing
                    Else

                        If Not IsNothing(medentries.RxNormCode) AndAlso medentries.RxNormCode <> "" Then
                            mat.code.code = medentries.RxNormCode
                            mat.code.codeSystem = CodeSystem.RxNorm
                            mat.code.codeSystemName = "RxNorm"
                            If medentries.DrugName <> "" AndAlso medentries.DrugName <> Nothing Then
                                mat.code.displayName = medentries.DrugName
                            Else
                                mat.code.displayName = Nothing
                            End If
                        Else
                            mat.code.nullFlavor = "UNK"
                            mat.code.codeSystem = Nothing
                            mat.code.codeSystemName = Nothing
                            mat.code.displayName = Nothing
                            mat.code.code = Nothing
                        End If
                        mat.code.codeSystemVersion = Nothing
                        If medentries.DrugName <> "" AndAlso medentries.DrugName <> Nothing Then
                            mat.code.displayName = medentries.DrugName
                        Else
                            mat.code.displayName = Nothing
                        End If
                    End If


                    mat.code.originalText = New ED()
                    mat.code.originalText.language = Nothing
                    mat.code.originalText.Text = New String() {If(medentries.DrugName IsNot Nothing, medentries.DrugName, medentries.GenericName)}
                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                        mat.code.originalText.reference = New TEL()
                        mat.code.originalText.reference.value = "#Med" & mi
                    End If
                    mat.code.translation = New CD(0) {}
                    mat.code.translation(0) = New CD()
                    If IsNothing(mPatient.PatientMedications) Then
                        _CodeSysItem = New CodeSystemItem
                        _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "drug or medication")
                        mat.code.translation(0).code = _CodeSysItem.Code
                        mat.code.translation(0).codeSystem = _CodeSysItem.CodingSystem
                        mat.code.translation(0).codeSystemName = _CodeSysItem.CodingSystemName
                        mat.code.translation(0).codeSystemVersion = Nothing
                        mat.code.translation(0).displayName = _CodeSysItem.Description
                    Else
                        mat.code.translation(0).codeSystem = CodeSystem.NDC
                        mat.code.translation(0).codeSystemName = "NDC"
                        mat.code.translation(0).codeSystemVersion = Nothing
                        If Not IsNothing(medentries.ProdCode) AndAlso medentries.ProdCode <> "" Then
                            mat.code.translation(0).code = medentries.ProdCode
                        Else
                            mat.code.translation(0).code = Nothing
                            mat.code.translation(0).nullFlavor = "UNK"
                        End If
                        If medentries.DrugName <> "" AndAlso medentries.DrugName <> Nothing Then
                            mat.code.translation(0).displayName = medentries.DrugName
                        Else
                            mat.code.translation(0).displayName = Nothing
                        End If
                    End If


                Next
                If Not IsNothing(medentries) Then
                    medentries.Dispose()
                    medentries = Nothing
                End If
            Else
                If IsNothing(mPatient.PatientMedications) OrElse mPatient.PatientMedications.Count = 0 Then
                    If Not IsNothing(dtsec) Then

                        Dim dr As DataRow() = dtsec.Select("sSectionName='Medications'")
                        If (dr.Length = 0) Then
                            _Medication.section = NoInformationSection("Medications", "Medications", _DateExtension22)
                            'getNoKnownMedication(section.entry) '' to uncomment
                            section.text.Text = New String() {"No Information for Patient"}
                        ElseIf dr(0)(1) = "0" Then
                            _Medication.section = NoInformationSection("Medications", "Medications", _DateExtension22)
                            'getNoKnownMedication(section.entry)
                            section.text.Text = New String() {"No Information for Patient"}
                        Else

                            section.text.Text = New String() {"No known medications for patient"}
                            If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                section.text.Items = New StrucDocContent(0) {}
                                section.text.Items(0) = New StrucDocContent
                                DirectCast(section.text.Items(0), StrucDocContent).ID = "Med" & 0
                                DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                            End If
                            getNoKnownMedication(section.entry) '' to uncomment
                        End If
                    Else
                        'getNoKnownMedication(section.entry)
                        section.text.Text = New String() {"No Information for Patient"}
                        _Medication.section = NoInformationSection("Medications", "Medications", _DateExtension22)
                    End If
                End If
            End If

            Return _Medication
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Medications Section"
            Else
                _msgString = _msgString & vbNewLine & "Medications Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            '  MessageBox.Show("Error:" & ex.ToString())
            Return Nothing
        Finally
            section = Nothing
            table = Nothing
            sadmin = Nothing
            mat = Nothing
            _CodeSysItem = Nothing
            If objCDADataExtraction IsNot Nothing Then
                objCDADataExtraction.Dispose()
                objCDADataExtraction = Nothing
            End If
        End Try
    End Function
    Private Function GetCDALabResultsComponent() As POCD_MT000040UV02Component3
        Dim _Results As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim table As StrucDocTable = Nothing
        Dim act As POCD_MT000040UV02Act = Nothing
        Dim org As POCD_MT000040UV02Organizer = Nothing
        Dim ob As POCD_MT000040UV02Observation = Nothing
        Dim _Labresultscnt As Integer = 1
        Dim _labcnt As Integer = 1
        Try

            _Results = New POCD_MT000040UV02Component3

            DirectCast(_Results, POCD_MT000040UV02Component3).section = New POCD_MT000040UV02Section()
            section = DirectCast(_Results, POCD_MT000040UV02Component3).section
            'section.ID = Nothing
            section.classCodeSpecified = False
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            section.templateId = New II(1) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Results")
            ' "2.16.840.1.113883.10.20.22.2.3.1"
            section.templateId(0).assigningAuthorityName = Nothing
            section.templateId(0).extension = _DateExtension2015

            section.templateId(1) = New II()
            section.templateId(1).root = oTemplateIDMaster.GetSectionID("Results")
            ' "2.16.840.1.113883.10.20.22.2.3.1"
            section.templateId(1).assigningAuthorityName = Nothing
            section.templateId(1).extension = Nothing

            section.code = New CE()
            section.code.code = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Results").Code
            '"30954-2"
            section.code.codeSystem = CodeSystem.LOINC
            section.code.codeSystemName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Results").CodingSystemName
            section.code.codeSystemVersion = Nothing
            section.code.displayName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Results").Description
            section.title = New ST()
            section.title.Text = New String() {"Order and Results"}

            section.title.language = Nothing

            section.text = New StrucDocText()
            section.text.mediaType = Nothing
            section.text.ID = Nothing
            section.text.language = Nothing


            Dim _rowCount As Integer = 0
            Dim ordercommentscount As Integer = 0


            If Not IsNothing(mPatient.Orders) AndAlso mPatient.Orders.Count > 0 Then
                ''
                ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                If Not IsNothing(sconf.code) Then
                    section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''
                ''
                section.text.Items = New Object(mPatient.Orders.Count * 2) {}
                Dim orderscount As Integer = 0
                Dim orderresultscount As Integer = 0
                Dim Resultidcount As Integer = 0
                For Each order As Order In mPatient.Orders
                    ordercommentscount = 0

                    For OrderComments As Integer = 0 To order.OrderComments.Count - 1
                        Dim ocomments As OrderComments = order.OrderComments.Item(OrderComments)
                        ordercommentscount = ordercommentscount + 1

                    Next
                    If ordercommentscount > 0 Then
                        ''''Order Display Section Starts Here
                        section.text.Items(orderscount) = New StrucDocTable()

                        table = DirectCast(section.text.Items(orderscount), StrucDocTable)
                        table.caption = New StrucDocCaption()
                        table.caption.ID = Nothing
                        table.caption.language = Nothing
                        table.caption.Text = New String() {"Acknowledgement Comments"}
                        table.ID = Nothing
                        table.language = Nothing
                        table.border = "1"
                        table.width = "100%"

                        table.thead = New StrucDocThead()
                        table.thead.ID = Nothing
                        table.thead.language = Nothing
                        table.thead.tr = New StrucDocTr(0) {}

                        table.thead.tr(0) = New StrucDocTr()
                        table.thead.tr(0).ID = Nothing
                        table.thead.tr(0).language = Nothing
                        table.thead.tr(0).Items = New Object(2) {}
                        table.thead.tr(0).Items(0) = New StrucDocTh()
                        DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Reviewed By"}
                        DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                        DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
                        table.thead.tr(0).Items(1) = New StrucDocTh()
                        DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Patient Notes"}
                        DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                        DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing


                        table.tbody = New StrucDocTbody(0) {}
                        table.tbody(0) = New StrucDocTbody()
                        table.tbody(0).ID = Nothing
                        table.tbody(0).language = Nothing
                        table.tbody(0).tr = New StrucDocTr(ordercommentscount) {}
                        orderscount += 1
                        For OrderComments As Integer = 0 To order.OrderComments.Count - 1
                            Dim ocomments As OrderComments = order.OrderComments.Item(OrderComments)
                            table.tbody(0).tr(OrderComments) = New StrucDocTr()
                            table.tbody(0).tr(OrderComments).Items = New Object(2) {}
                            table.tbody(0).tr(OrderComments).Items(0) = New StrucDocTd()
                            table.tbody(0).tr(OrderComments).ID = Nothing
                            table.tbody(0).tr(OrderComments).language = Nothing

                            DirectCast(table.tbody(0).tr(OrderComments).Items(0), StrucDocTd).Text = New String() {ocomments.ReviewedBy}
                            DirectCast(table.tbody(0).tr(OrderComments).Items(0), StrucDocTd).ID = Nothing
                            DirectCast(table.tbody(0).tr(OrderComments).Items(0), StrucDocTd).language = Nothing
                            table.tbody(0).tr(OrderComments).Items(1) = New StrucDocTd()
                            table.tbody(0).tr(OrderComments).ID = Nothing
                            table.tbody(0).tr(OrderComments).language = Nothing

                            DirectCast(table.tbody(0).tr(OrderComments).Items(1), StrucDocTd).Text = New String() {ocomments.Patientnote}
                            DirectCast(table.tbody(0).tr(OrderComments).Items(1), StrucDocTd).ID = Nothing
                            DirectCast(table.tbody(0).tr(OrderComments).Items(1), StrucDocTd).language = Nothing

                        Next
                    Else
                        '    section.text.Text = New String() {"No Comments found for this order"}
                    End If

                    For ordertest As Integer = 0 To order.OrderTests.Count - 1
                        If Not IsNothing(order.OrderTests) AndAlso order.OrderTests.Count > 0 Then
                            For Each oTest As LabTest In order.OrderTests
                                For oLabResults As Integer = 0 To oTest.LabResults.Count - 1
                                    Dim _oLabResults As LabResults = oTest.LabResults.Item(oLabResults)
                                    If (_oLabResults.ResultDate IsNot Nothing AndAlso _oLabResults.ResultDate <> "") OrElse _oLabResults.OrderStatusNo = 1007 Then
                                        _rowCount = _rowCount + oTest.LabResults.Count
                                    End If
                                Next
                            Next
                        End If
                    Next
                    ''''''Results Display Section Starts from here
                    If _rowCount > 0 Then

                        orderresultscount = orderscount
                        orderscount += 1
                        section.text.Items(orderresultscount) = New StrucDocTable()
                        table = DirectCast(section.text.Items(orderresultscount), StrucDocTable)
                        table.caption = New StrucDocCaption()
                        table.caption.ID = Nothing
                        table.caption.language = Nothing
                        table.caption.Text = New String() {"Results"}

                        table.ID = Nothing
                        table.language = Nothing
                        table.border = "1"
                        table.width = "100%"

                        table.thead = New StrucDocThead()
                        table.thead.ID = Nothing
                        table.thead.language = Nothing
                        table.thead.tr = New StrucDocTr(1) {}

                        'table.thead.tr(0) = New StrucDocTr()
                        'table.thead.tr(0).ID = Nothing
                        'table.thead.tr(0).language = Nothing
                        'table.thead.tr(0).Items = New Object(1) {}

                        table.thead.tr(1) = New StrucDocTr()
                        table.thead.tr(1).Items = New Object(10) {}
                        table.thead.tr(1).Items(0) = New StrucDocTh()
                        DirectCast(table.thead.tr(1).Items(0), StrucDocTh).Text = New String() {"Test Name"}
                        DirectCast(table.thead.tr(1).Items(0), StrucDocTh).ID = Nothing
                        DirectCast(table.thead.tr(1).Items(0), StrucDocTh).language = Nothing
                        table.thead.tr(1).Items(1) = New StrucDocTh()
                        DirectCast(table.thead.tr(1).Items(1), StrucDocTh).Text = New String() {"Test LOINC Code"}
                        DirectCast(table.thead.tr(1).Items(1), StrucDocTh).ID = Nothing
                        DirectCast(table.thead.tr(1).Items(1), StrucDocTh).language = Nothing
                        table.thead.tr(1).Items(2) = New StrucDocTh()
                        DirectCast(table.thead.tr(1).Items(2), StrucDocTh).Text = New String() {"Scheduled Date"}
                        DirectCast(table.thead.tr(1).Items(2), StrucDocTh).ID = Nothing
                        DirectCast(table.thead.tr(1).Items(2), StrucDocTh).language = Nothing
                        table.thead.tr(1).Items(3) = New StrucDocTh()
                        DirectCast(table.thead.tr(1).Items(3), StrucDocTh).Text = New String() {"Result Name"}
                        DirectCast(table.thead.tr(1).Items(3), StrucDocTh).ID = Nothing
                        DirectCast(table.thead.tr(1).Items(3), StrucDocTh).language = Nothing

                        table.thead.tr(1).Items(4) = New StrucDocTh()
                        DirectCast(table.thead.tr(1).Items(4), StrucDocTh).Text = New String() {"Result"}
                        DirectCast(table.thead.tr(1).Items(4), StrucDocTh).ID = Nothing
                        DirectCast(table.thead.tr(1).Items(4), StrucDocTh).language = Nothing

                        table.thead.tr(1).Items(5) = New StrucDocTh()
                        DirectCast(table.thead.tr(1).Items(5), StrucDocTh).Text = New String() {"Units"}
                        DirectCast(table.thead.tr(1).Items(5), StrucDocTh).ID = Nothing
                        DirectCast(table.thead.tr(1).Items(5), StrucDocTh).language = Nothing

                        table.thead.tr(1).Items(6) = New StrucDocTh()
                        DirectCast(table.thead.tr(1).Items(6), StrucDocTh).Text = New String() {"Ref Range"}
                        DirectCast(table.thead.tr(1).Items(6), StrucDocTh).ID = Nothing
                        DirectCast(table.thead.tr(1).Items(6), StrucDocTh).language = Nothing

                        table.thead.tr(1).Items(7) = New StrucDocTh()
                        DirectCast(table.thead.tr(1).Items(7), StrucDocTh).Text = New String() {"Result LOINC"}
                        DirectCast(table.thead.tr(1).Items(7), StrucDocTh).ID = Nothing
                        DirectCast(table.thead.tr(1).Items(7), StrucDocTh).language = Nothing
                        table.thead.tr(1).Items(8) = New StrucDocTh()
                        DirectCast(table.thead.tr(1).Items(8), StrucDocTh).Text = New String() {"Result Date"}
                        DirectCast(table.thead.tr(1).Items(8), StrucDocTh).ID = Nothing
                        DirectCast(table.thead.tr(1).Items(8), StrucDocTh).language = Nothing
                        table.thead.tr(1).Items(9) = New StrucDocTh()
                        DirectCast(table.thead.tr(1).Items(9), StrucDocTh).Text = New String() {"Specimen Collected Date"}
                        DirectCast(table.thead.tr(1).Items(9), StrucDocTh).ID = Nothing
                        DirectCast(table.thead.tr(1).Items(9), StrucDocTh).language = Nothing
                        table.thead.tr(1).Items(10) = New StrucDocTh()
                        DirectCast(table.thead.tr(1).Items(10), StrucDocTh).Text = New String() {"Interpretation"}
                        DirectCast(table.thead.tr(1).Items(10), StrucDocTh).ID = Nothing
                        DirectCast(table.thead.tr(1).Items(10), StrucDocTh).language = Nothing


                        table.tbody = New StrucDocTbody(0) {}
                        table.tbody(0) = New StrucDocTbody()
                        table.tbody(0).ID = Nothing
                        table.tbody(0).language = Nothing
                        table.tbody(0).tr = New StrucDocTr(_rowCount * 2) {}
                        orderresultscount += 1
                        _rowCount = 0

                        If Not IsNothing(order.OrderTests) AndAlso order.OrderTests.Count > 0 Then
                            For Each oTest As LabTest In order.OrderTests
                                If oTest.LabLocationDetails.LabLocationName <> "" Then

                                    Dim id As String = ""
                                    id = oTemplateIDMaster.GetEntryID("Organisation Lab")
                                    If (Not (id Is Nothing)) And (id.Trim() <> "") Then
                                        id = " [Id:" & id & "] "
                                    End If

                                    table.caption.Text = New String() {"Results" & "      " & "(  LabLocation : " & oTest.LabLocationDetails.LabLocationName & id & ", " & oTest.LabLocationDetails.LabLocationAdd1 & ", " & oTest.LabLocationDetails.LabCity & ", " & oTest.LabLocationDetails.LabState & "" & IIf(oTest.LabLocationDetails.LabZip <> "", "-" & oTest.LabLocationDetails.LabZip, "") & ", " & String.Format("{0:tel:+1(###) ###-####}", Long.Parse(oTest.LabLocationDetails.LabLocationTelephone)) & "  )"}

                                    'table.thead.tr(0).Items(0) = New StrucDocTd()
                                    'DirectCast(table.thead.tr(0).Items(0), StrucDocTd).Text = New String() {"LabLocation : " & oTest.LabLocationDetails.LabLocationName & " " & oTest.LabLocationDetails.LabLocationAdd1 & " " & oTest.LabLocationDetails.LabCity & " " & String.Format("{0:tel:+1(###) ###-####}", Long.Parse(oTest.LabLocationDetails.LabLocationTelephone))}
                                    'DirectCast(table.thead.tr(0).Items(0), StrucDocTd).ID = Nothing
                                    'DirectCast(table.thead.tr(0).Items(0), StrucDocTd).language = Nothing

                                    'DirectCast(table.thead.tr(0).Items(0), StrucDocTd).colspan = 9
                                End If
                                For oLabResults As Integer = 0 To oTest.LabResults.Count - 1
                                    Dim _oLabResults As LabResults = oTest.LabResults.Item(oLabResults)
                                    If _oLabResults.ResultDate IsNot Nothing AndAlso _oLabResults.ResultDate <> "" OrElse _oLabResults.OrderStatusNo = 1007 Then
                                        table.tbody(0).tr(_rowCount) = New StrucDocTr()
                                        table.tbody(0).tr(_rowCount).Items = New Object(11) {}
                                        table.tbody(0).tr(_rowCount).Items(0) = New StrucDocTd()
                                        table.tbody(0).tr(_rowCount).ID = Nothing
                                        table.tbody(0).tr(_rowCount).language = Nothing

                                        DirectCast(table.tbody(0).tr(_rowCount).Items(0), StrucDocTd).Text = New String() {_oLabResults.TestName}
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(0), StrucDocTd).ID = Nothing
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(0), StrucDocTd).language = Nothing
                                        table.tbody(0).tr(_rowCount).Items(1) = New StrucDocTd()
                                        If _oLabResults.TestLOINCID IsNot Nothing AndAlso _oLabResults.TestLOINCID <> "" Then
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(1), StrucDocTd).Text = New String() {_oLabResults.TestLOINCID}
                                        Else
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(1), StrucDocTd).Text = New String() {}
                                        End If

                                        DirectCast(table.tbody(0).tr(_rowCount).Items(1), StrucDocTd).ID = Nothing
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(1), StrucDocTd).language = Nothing

                                        table.tbody(0).tr(_rowCount).Items(2) = New StrucDocTd()
                                        If Not IsNothing(_oLabResults.ScheduleDate) AndAlso _oLabResults.ScheduleDate <> "" Then
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(2), StrucDocTd).Text = New String() {CType(_oLabResults.ScheduleDate, Date)}
                                        Else
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(2), StrucDocTd).Text = New String() {""}
                                        End If

                                        DirectCast(table.tbody(0).tr(_rowCount).Items(2), StrucDocTd).ID = Nothing
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(2), StrucDocTd).language = Nothing



                                        table.tbody(0).tr(_rowCount).Items(3) = New StrucDocTd()
                                        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(3), StrucDocTd).Items = New StrucDocContent(0) {}
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(3), StrucDocTd).Items(0) = New StrucDocContent
                                            DirectCast(DirectCast(table.tbody(0).tr(_rowCount).Items(3), StrucDocTd).Items(0), StrucDocContent).ID = "Result" & Resultidcount
                                            DirectCast(DirectCast(table.tbody(0).tr(_rowCount).Items(3), StrucDocTd).Items(0), StrucDocContent).language = Nothing

                                        End If
                                        If _oLabResults.ResultName IsNot Nothing AndAlso _oLabResults.ResultName <> "" Then
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(3), StrucDocTd).Text = New String() {_oLabResults.ResultName}
                                        Else
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(3), StrucDocTd).Text = New String() {"Not Available"}
                                        End If

                                        DirectCast(table.tbody(0).tr(_rowCount).Items(3), StrucDocTd).ID = Nothing
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(3), StrucDocTd).language = Nothing


                                        'table.tbody(0).tr(_rowCount).Items(3) = New StrucDocTd()
                                        'DirectCast(table.tbody(0).tr(_rowCount).Items(3), StrucDocTd).Text = New String() {_oLabResults.ResultName}
                                        'DirectCast(table.tbody(0).tr(_rowCount).Items(3), StrucDocTd).ID = Nothing
                                        'DirectCast(table.tbody(0).tr(_rowCount).Items(3), StrucDocTd).language = Nothing

                                        table.tbody(0).tr(_rowCount).Items(4) = New StrucDocTd()
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(4), StrucDocTd).Text = New String() {_oLabResults.ResultValue}
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(4), StrucDocTd).ID = Nothing
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(4), StrucDocTd).language = Nothing
                                        table.tbody(0).tr(_rowCount).Items(5) = New StrucDocTd()
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(5), StrucDocTd).Text = New String() {_oLabResults.ResultUnit}
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(5), StrucDocTd).ID = Nothing
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(5), StrucDocTd).language = Nothing
                                        table.tbody(0).tr(_rowCount).Items(6) = New StrucDocTd()
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(6), StrucDocTd).Text = New String() {_oLabResults.ResultRange}
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(6), StrucDocTd).ID = Nothing
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(6), StrucDocTd).language = Nothing




                                        table.tbody(0).tr(_rowCount).Items(7) = New StrucDocTd()
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(7), StrucDocTd).Text = New String() {_oLabResults.ResultLOINCID}
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(7), StrucDocTd).ID = Nothing
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(7), StrucDocTd).language = Nothing

                                        table.tbody(0).tr(_rowCount).Items(8) = New StrucDocTd()
                                        If Not IsNothing(_oLabResults.ResultDate) AndAlso _oLabResults.ResultDate <> "" Then
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(8), StrucDocTd).Text = New String() {CType(_oLabResults.ResultDate, Date)}
                                        Else
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(8), StrucDocTd).Text = New String() {""}
                                        End If
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(8), StrucDocTd).ID = Nothing
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(8), StrucDocTd).language = Nothing


                                        table.tbody(0).tr(_rowCount).Items(9) = New StrucDocTd()
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(9), StrucDocTd).Text = New String() {oTest.LabResults.Item(0).SpecimenDate}
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(9), StrucDocTd).ID = Nothing
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(9), StrucDocTd).language = Nothing


                                        Dim ObsInterpretation As String = ""
                                        If Not IsNothing(_oLabResults.AbnormalFlag) AndAlso _oLabResults.AbnormalFlag <> "" Then
                                            ObsInterpretation = oCodingSystemMaster.GetbyCode("2.16.840.1.113883.5.83", _oLabResults.AbnormalFlag).Description
                                        End If
                                        table.tbody(0).tr(_rowCount).Items(10) = New StrucDocTd()
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(10), StrucDocTd).Text = New String() {ObsInterpretation}
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(10), StrucDocTd).ID = Nothing
                                        DirectCast(table.tbody(0).tr(_rowCount).Items(10), StrucDocTd).language = Nothing


                                        If _oLabResults.ResultComment <> "" Then
                                            _rowCount += 1
                                            ''no need to increment this counter as we are using rowcount
                                            ' oLabResults = oLabResults + 1

                                            table.tbody(0).tr(_rowCount) = New StrucDocTr()
                                            table.tbody(0).tr(_rowCount).Items = New Object(1) {}

                                            table.tbody(0).tr(_rowCount).Items(0) = New StrucDocTd()
                                            table.tbody(0).tr(_rowCount).ID = Nothing
                                            table.tbody(0).tr(_rowCount).language = Nothing

                                            table.tbody(0).tr(_rowCount).Items(0) = New StrucDocTd()
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(0), StrucDocTd).Text = New String() {""}
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(0), StrucDocTd).ID = Nothing
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(0), StrucDocTd).language = Nothing

                                            table.tbody(0).tr(_rowCount).Items(1) = New StrucDocTd()
                                            table.tbody(0).tr(_rowCount).ID = Nothing
                                            table.tbody(0).tr(_rowCount).language = Nothing

                                            table.tbody(0).tr(_rowCount).Items(1) = New StrucDocTd()
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(1), StrucDocTd).Text = New String() {_oLabResults.ResultComment}
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(1), StrucDocTd).ID = Nothing
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(1), StrucDocTd).language = Nothing
                                            DirectCast(table.tbody(0).tr(_rowCount).Items(1), StrucDocTd).colspan = "8"
                                        End If
                                        _rowCount += 1
                                        If Not IsNothing(_oLabResults) Then
                                            _oLabResults.Dispose()
                                            _oLabResults = Nothing

                                        End If
                                    End If
                                    Resultidcount += 1
                                Next
                            Next
                        End If
                    Else
                        'section.text.Text = New String() {"No known results for patient"}
                        'If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                        '    section.text.Items = New StrucDocContent(0) {}
                        '    section.text.Items(0) = New StrucDocContent
                        '    DirectCast(section.text.Items(0), StrucDocContent).ID = "Result" & 0
                        '    DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                        'End If
                    End If



                Next
            Else

                'section.text.Text = New String() {"No known results for patient"}
                'If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                '    section.text.Items = New StrucDocContent(0) {}
                '    section.text.Items(0) = New StrucDocContent
                '    DirectCast(section.text.Items(0), StrucDocContent).ID = "Result" & 0
                '    DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                'End If
                _Results.section = NoInformationSection("Results", "Order and Results")
                Return _Results
            End If




            '''' entry section
            If Not IsNothing(mPatient.LabTests) AndAlso mPatient.LabTests.Count > 0 Then
                _Labresultscnt = mPatient.LabTests.Count

                section.entry = New POCD_MT000040UV02Entry(_Labresultscnt - 1) {}

                Dim oLabTest As LabTest = Nothing

                For _labtests As Integer = 0 To _Labresultscnt - 1

                    If Not IsNothing(mPatient.LabTests) AndAlso mPatient.LabTests.Count > 0 Then
                        oLabTest = mPatient.LabTests.Item(_labtests)
                    Else
                        oLabTest = New LabTest
                    End If

                    section.entry(_labtests) = New POCD_MT000040UV02Entry()
                    section.entry(_labtests).typeCode = x_ActRelationshipEntry.DRIV
                    section.entry(_labtests).Item = New POCD_MT000040UV02Organizer
                    org = DirectCast(section.entry(_labtests).Item, POCD_MT000040UV02Organizer)
                    org.classCode = x_ActClassDocumentEntryOrganizer.BATTERY
                    org.moodCode = "EVN"
                    org.moodCodeSpecified = True

                    org.templateId = New II(1) {}
                    org.templateId(0) = New II()
                    org.templateId(0).root = oTemplateIDMaster.GetEntryID("Result Organizer")
                    '"2.16.840.1.113883.10.20.22.4.1"
                    org.templateId(0).extension = _DateExtension2015
                    org.templateId(0).assigningAuthorityName = Nothing

                    org.templateId(1) = New II()
                    org.templateId(1).root = oTemplateIDMaster.GetEntryID("Result Organizer")
                    '"2.16.840.1.113883.10.20.22.4.1"
                    org.templateId(1).extension = Nothing
                    org.templateId(1).assigningAuthorityName = Nothing


                    org.id = New II(0) {}
                    org.id(0) = New II()
                    org.id(0).root = Guid.NewGuid().ToString()
                    org.id(0).extension = Nothing
                    org.id(0).assigningAuthorityName = Nothing

                    oLabTest.GUID = org.id(0).root

                    org.code = New CD()
                    If oLabTest.LabResults.Count > 0 Then
                        If Not IsNothing(oLabTest.LabResults.Item(0).TestLOINCID) AndAlso oLabTest.LabResults.Item(0).TestLOINCID.Trim <> "" AndAlso oLabTest.LabResults.Item(0).TestLOINCID.Trim <> "0" Then
                            org.code.code = oLabTest.LabResults.Item(0).TestLOINCID
                            org.code.codeSystem = CodeSystem.LOINC
                            org.code.codeSystemName = "LOINC"
                        Else
                            org.code.nullFlavorSpecified = True
                            org.code.nullFlavor = "NI"
                            org.code.code = Nothing
                            org.code.codeSystem = Nothing
                            org.code.codeSystemName = Nothing
                        End If
                    Else
                        org.code.nullFlavorSpecified = True
                        org.code.nullFlavor = "NI"
                        org.code.code = Nothing
                        org.code.codeSystem = Nothing
                        org.code.codeSystemName = Nothing
                    End If


                    'org.code.codeSystem = CodeSystem.LOINC
                    'org.code.codeSystemName = "LOINC"
                    org.code.codeSystemVersion = Nothing
                    If oLabTest.LabResults.Count > 0 Then
                        If Not IsNothing(oLabTest.LabResults.Item(0).TestName) AndAlso oLabTest.LabResults.Item(0).TestName <> "" Then
                            org.code.displayName = oLabTest.LabResults.Item(0).TestName
                        Else
                            org.code.displayName = Nothing
                        End If
                    Else
                        org.code.displayName = Nothing
                    End If




                    Dim _obscomponentindex As Integer = 0
                    If Not IsNothing(oLabTest.LabResults) AndAlso oLabTest.LabResults.Count > 0 Then
                        _labcnt = oLabTest.LabResults.Count
                    End If

                    org.component = New POCD_MT000040UV02Component4(_labcnt - 1) {}
                    Dim _oLabResults As LabResults = Nothing
                    Dim activestatusflag As Boolean = False
                    For oLabResults As Integer = 0 To _labcnt - 1
                        If Not IsNothing(oLabTest.LabResults) AndAlso oLabTest.LabResults.Count > 0 Then
                            _oLabResults = oLabTest.LabResults.Item(oLabResults)
                        Else
                            _oLabResults = New LabResults
                        End If

                        'For Each oLabResults As LabResults In oLabTest.LabResults
                        org.component(oLabResults) = New POCD_MT000040UV02Component4()
                        ob = New POCD_MT000040UV02Observation
                        ob.classCode = ActClassObservation.OBS
                        ob.moodCode = x_ActMoodDocumentObservation.EVN
                        ob.moodCodeSpecified = True

                        ob.templateId = New II(1) {}
                        ob.templateId(0) = New II()
                        ob.templateId(0).root = oTemplateIDMaster.GetEntryID("Result Observation")
                        '2.16.840.1.113883.10.20.22.4.2'
                        ob.templateId(0).extension = _DateExtension2015
                        ob.templateId(0).assigningAuthorityName = Nothing


                        ob.templateId(1) = New II()
                        ob.templateId(1).root = oTemplateIDMaster.GetEntryID("Result Observation")
                        '2.16.840.1.113883.10.20.22.4.2'
                        ob.templateId(1).extension = Nothing
                        ob.templateId(1).assigningAuthorityName = Nothing

                        ob.id = New II(0) {}
                        ob.id(0) = New II()
                        ob.id(0).root = Guid.NewGuid().ToString()
                        ob.id(0).assigningAuthorityName = Nothing
                        ob.id(0).extension = Nothing
                        ''need to add code

                        ob.code = New CD()
                        If Not IsDBNull(_oLabResults.ResultLOINCID) AndAlso _oLabResults.ResultLOINCID <> "" AndAlso _oLabResults.ResultLOINCID <> "0" Then
                            ob.code.code = _oLabResults.ResultLOINCID
                            ob.code.codeSystem = CodeSystem.LOINC
                            ob.code.codeSystemName = "LOINC"

                        Else
                            ob.code.code = Nothing
                            ob.code.codeSystem = Nothing
                            ob.code.codeSystemName = Nothing
                            ob.code.nullFlavorSpecified = True
                            ob.code.nullFlavor = "UNK"
                        End If
                        'ob.code.codeSystem = CodeSystem.LOINC
                        'ob.code.codeSystemName = "LOINC"
                        ob.code.codeSystemVersion = Nothing
                        If Not IsDBNull(_oLabResults.ResultName) AndAlso _oLabResults.ResultName <> "" Then
                            'Dim word As String = Regex.Replace(_oLabResults.ResultName,@
                            ob.code.displayName = Replace(Convert.ToString(_oLabResults.ResultName.Trim()), vbCrLf, "")
                        Else
                            ob.code.displayName = Nothing
                        End If
                        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                            ob.text = New ED()
                            ob.text.reference = New TEL()
                            ob.text.reference.value = "#Result" & oLabResults
                            ob.text.language = Nothing
                            ob.text.reference.nullFlavor = Nothing
                        End If
                        'ob.text = New ED()
                        'ob.text.reference = New TEL()
                        'ob.text.reference.value = Nothing
                        'ob.text.language = Nothing
                        'ob.text.reference.nullFlavor = Nothing


                        If _oLabResults.ResultType <> "" Then
                            ob.statusCode = New CS()
                            ob.statusCode.code = _oLabResults.ResultType
                            ob.statusCode.codeSystem = Nothing
                            ob.statusCode.codeSystemName = Nothing
                            ob.statusCode.codeSystemVersion = Nothing
                            ob.statusCode.displayName = Nothing
                            If _oLabResults.ResultType = "active" Then
                                activestatusflag = True
                            End If
                        Else
                            ob.statusCode = New CS()
                            ob.statusCode.code = "completed"
                            ob.statusCode.codeSystem = Nothing
                            ob.statusCode.codeSystemName = Nothing
                            ob.statusCode.codeSystemVersion = Nothing
                        End If



                        ob.effectiveTime = New IVL_TS()
                        If Not IsDBNull(_oLabResults.SpecimenDate) AndAlso _oLabResults.SpecimenDate <> "" Then
                            ob.effectiveTime.value = Format(CType(_oLabResults.SpecimenDate, Date), "yyyyMMdd")
                        Else
                            ob.effectiveTime.value = Now.Date.Year & Format(Now.Date.Month, "#00") & Format(Now.Date.Day, "#00") & "000000-0500" '& Now.Hour & Now.Minute
                        End If

                        ob.value = New ANY(0) {}
                        If Not IsNothing(_oLabResults.ResultValue) AndAlso _oLabResults.ResultValue <> "" Then
                            If _oLabResults.ResultValue.ToString.ToUpper.Contains("NEG") Then
                                ob.value(0) = New CO()
                                DirectCast(ob.value(0), CO).code = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Negative").Code
                                DirectCast(ob.value(0), CO).codeSystem = CodeSystem.SNOMED_CT
                                DirectCast(ob.value(0), CO).codeSystemName = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Negative").CodingSystemName
                                DirectCast(ob.value(0), CO).displayName = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Negative").Description
                            ElseIf _oLabResults.ResultValue.ToString.ToUpper.Contains("POS") Then
                                ob.value(0) = New CO()
                                DirectCast(ob.value(0), CO).code = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Positive").Code
                                DirectCast(ob.value(0), CO).codeSystem = CodeSystem.SNOMED_CT
                                DirectCast(ob.value(0), CO).codeSystemName = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Positive").CodingSystemName
                                DirectCast(ob.value(0), CO).displayName = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Positive").Description
                            ElseIf _oLabResults.ResultValue.Contains("+") Or IsNumeric(_oLabResults.ResultValue) = False Then
                                ob.value(0) = New ST()
                                DirectCast(ob.value(0), ST).Text = New String() {_oLabResults.ResultValue}
                                DirectCast(ob.value(0), ST).language = Nothing
                            Else
                                
                                If Not IsNothing(_oLabResults.ResultUnit) AndAlso _oLabResults.ResultUnit <> "" Then
                                    ob.value(0) = New PQ()
                                    DirectCast(ob.value(0), PQ).value = _oLabResults.ResultValue
                                    DirectCast(ob.value(0), PQ).unit = Convert.ToString(_oLabResults.ResultUnit.Replace("/ ", "/").Replace(" ", "")).Trim()
                                    'Else
                                    '    DirectCast(ob.value(0), PQ).unit = "%"
                                Else
                                    'If unit is not specified in test case then enter it as text 
                                    ob.value(0) = New ST()
                                    DirectCast(ob.value(0), ST).Text = New String() {_oLabResults.ResultValue}
                                    DirectCast(ob.value(0), ST).language = Nothing
                                End If
                            End If

                        Else
                            ob.value(0) = New ST()
                            DirectCast(ob.value(0), ST).nullFlavor = "NI"
                            'DirectCast(ob.value(0), ST).Text = New String() {"0"}
                            DirectCast(ob.value(0), ST).language = Nothing
                        End If
                        ''''
                        If Not IsNothing(_oLabResults.ResultRange) AndAlso _oLabResults.ResultRange <> "" Then


                            ob.referenceRange = New POCD_MT000040UV02ReferenceRange(0) {}
                            ob.referenceRange(0) = New POCD_MT000040UV02ReferenceRange
                            ob.referenceRange(0).observationRange = New POCD_MT000040UV02ObservationRange
                            ob.referenceRange(0).observationRange.code = Nothing
                            If _oLabResults.ResultRange.Contains("-") Then
                                Dim range() As String = _oLabResults.ResultRange.Split("-")
                                If range.Length > 0 Then
                                    ob.referenceRange(0).observationRange.value = New IVL_PQ()
                                    DirectCast(ob.referenceRange(0).observationRange.value, IVL_PQ).Items = New PQ(1) {}
                                    DirectCast(ob.referenceRange(0).observationRange.value, IVL_PQ).ItemsElementName = New ItemsChoiceType2(1) {}
                                    DirectCast(ob.referenceRange(0).observationRange.value, IVL_PQ).ItemsElementName(0) = ItemsChoiceType.low
                                    DirectCast(ob.referenceRange(0).observationRange.value, IVL_PQ).ItemsElementName(1) = ItemsChoiceType.high
                                    DirectCast(ob.referenceRange(0).observationRange.value, IVL_PQ).Items(0) = New IVXB_PQ
                                    DirectCast(ob.referenceRange(0).observationRange.value, IVL_PQ).Items(1) = New IVXB_PQ
                                    DirectCast(ob.referenceRange(0).observationRange.value, IVL_PQ).Items(0).value = range(0)
                                    DirectCast(ob.referenceRange(0).observationRange.value, IVL_PQ).Items(1).value = range(1)
                                    If _oLabResults.ResultUnit <> "" Then
                                        DirectCast(ob.referenceRange(0).observationRange.value, IVL_PQ).Items(0).unit = _oLabResults.ResultUnit
                                        DirectCast(ob.referenceRange(0).observationRange.value, IVL_PQ).Items(1).unit = _oLabResults.ResultUnit
                                    End If
                                End If
                            ElseIf _oLabResults.ResultRange.ToString.ToUpper.Contains("NEG") Then
                                ob.referenceRange(0).observationRange.value = New CO()
                                DirectCast(ob.referenceRange(0).observationRange.value, CO).code = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Negative").Code
                                DirectCast(ob.referenceRange(0).observationRange.value, CO).codeSystem = CodeSystem.SNOMED_CT
                                DirectCast(ob.referenceRange(0).observationRange.value, CO).codeSystemName = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Negative").CodingSystemName
                                DirectCast(ob.referenceRange(0).observationRange.value, CO).displayName = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Negative").Description
                            ElseIf _oLabResults.ResultRange.ToString.ToUpper.Contains("POS") Then
                                ob.referenceRange(0).observationRange.value = New CO()
                                DirectCast(ob.referenceRange(0).observationRange.value, CO).code = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Positive").Code
                                DirectCast(ob.referenceRange(0).observationRange.value, CO).codeSystem = CodeSystem.SNOMED_CT
                                DirectCast(ob.referenceRange(0).observationRange.value, CO).codeSystemName = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Positive").CodingSystemName
                                DirectCast(ob.referenceRange(0).observationRange.value, CO).displayName = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Positive").Description
                            Else
                                ob.referenceRange(0).observationRange.value = New ST()
                                DirectCast(ob.referenceRange(0).observationRange.value, ST).Text = New String() {_oLabResults.ResultRange}
                            End If



                            ob.referenceRange(0).observationRange.text = New ED()
                            ob.referenceRange(0).observationRange.text.Text = New String() {_oLabResults.ResultRange}
                            ob.referenceRange(0).observationRange.text.language = Nothing
                        End If
                        If _oLabResults.AbnormalFlag <> "" Then
                            ob.interpretationCode = New CE(0) {}
                            ob.interpretationCode(0) = New CE()
                            ob.interpretationCode(0).code = _oLabResults.AbnormalFlag
                            ob.interpretationCode(0).codeSystem = "2.16.840.1.113883.5.83"
                            ob.interpretationCode(0).codeSystemName = Nothing
                            ob.interpretationCode(0).codeSystemVersion = Nothing
                            ob.interpretationCode(0).displayName = Nothing
                        End If


                        org.component(oLabResults).Item = ob
                        If Not IsNothing(ob) Then
                            ob = Nothing
                        End If
                        _obscomponentindex = _obscomponentindex + 1

                        If Not IsNothing(_oLabResults) Then
                            _oLabResults.Dispose()
                            _oLabResults = Nothing

                        End If

                    Next
                    org.statusCode = New CS()
                    If activestatusflag = True Then
                        org.statusCode.code = "active"
                    Else
                        org.statusCode.code = "completed"
                    End If
                    org.statusCode.codeSystem = Nothing
                    org.statusCode.codeSystemName = Nothing
                    org.statusCode.codeSystemVersion = Nothing
                    org.statusCode.displayName = Nothing
                    If Not IsNothing(oLabTest) Then
                        If Not IsNothing(oLabTest.LabLocationDetails) Then
                            If oLabTest.LabLocationDetails.LabLocationName <> "" Then
                                getCDALabLocationDetails(org.author, oLabTest)
                            End If
                            If Not IsNothing(oLabTest) Then
                                oLabTest.Dispose()
                                oLabTest = Nothing

                            End If
                        End If

                    End If

                Next
            End If
            Return _Results
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Lab Results Section"
            Else
                _msgString = _msgString & vbNewLine & "Lab Results Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            '  MessageBox.Show("Error:" & ex.ToString())
            Return Nothing

        Finally
            If Not IsNothing(section) Then
                section = Nothing
            End If
            If Not IsNothing(table) Then
                table = Nothing
            End If
            If Not IsNothing(act) Then
                act = Nothing
            End If
            If Not IsNothing(ob) Then
                ob = Nothing
            End If
        End Try
    End Function
    Private Function GetCDASocialHistoryComponent() As POCD_MT000040UV02Component3
        Dim _SocialHistory As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim table As StrucDocTable = Nothing
        Dim act As POCD_MT000040UV02Act = Nothing
        Dim ob As POCD_MT000040UV02Observation = Nothing
        Dim _SocialCnt As Integer = 1
        Try


            _SocialHistory = New POCD_MT000040UV02Component3


            DirectCast(_SocialHistory, POCD_MT000040UV02Component3).section = New POCD_MT000040UV02Section()
            section = DirectCast(_SocialHistory, POCD_MT000040UV02Component3).section
            'section.ID = Nothing
            section.classCodeSpecified = False
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            section.templateId = New II(1) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Social History")
            '"2.16.840.1.113883.10.20.22.2.17
            section.templateId(0).assigningAuthorityName = Nothing
            section.templateId(0).extension = _DateExtension2015

            section.templateId(1) = New II()
            section.templateId(1).root = oTemplateIDMaster.GetSectionID("Social History")
            '"2.16.840.1.113883.10.20.22.2.17
            section.templateId(1).assigningAuthorityName = Nothing
            section.templateId(1).extension = Nothing

            section.code = New CE()
            ' section.code.nullFlavor = "NA"
            section.code.code = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Social History").Code
            '"29762-2"

            section.code.codeSystem = CodeSystem.LOINC
            section.code.codeSystemName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Social History").CodingSystemName
            section.code.codeSystemVersion = Nothing
            section.code.displayName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Social History").Description
            'nothing
            section.title = New ST()
            section.title.Text = New String() {"Social History"}

            section.title.language = Nothing
            section.text = New StrucDocText()
            section.text.mediaType = Nothing
            section.text.ID = Nothing
            section.text.language = Nothing


            If Not IsNothing(mPatient.PatientSocialHistory) AndAlso mPatient.PatientSocialHistory.Count > 0 Then
                ''
                ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                If Not IsNothing(sconf.code) Then
                    section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''
                ''
                section.text.Items = New Object(0) {}
                section.text.Items(0) = New StrucDocTable()
                table = DirectCast(section.text.Items(0), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}

                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(8) {}
                table.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Social History Observation"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Description"}
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"SNOMED Code"}
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(3) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Qualifiers"}
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(4) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).Text = New String() {"Comments"}
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(5) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).Text = New String() {"Date Reported"}
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(6) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).Text = New String() {"Category"}
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(7) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(7), StrucDocTh).Text = New String() {"Start Date"}
                DirectCast(table.thead.tr(0).Items(7), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(7), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(8) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(8), StrucDocTh).Text = New String() {"End Date"}
                DirectCast(table.thead.tr(0).Items(8), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(8), StrucDocTh).language = Nothing

                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing
                table.tbody(0).tr = New StrucDocTr(mPatient.PatientSocialHistory.Count - 1) {}
                section.entry = New POCD_MT000040UV02Entry(mPatient.PatientSocialHistory.Count - 1) {}
                For socialhistory As Integer = 0 To mPatient.PatientSocialHistory.Count - 1
                    Dim oSocial As SocialHistory = mPatient.PatientSocialHistory.Item(socialhistory)
                    table.tbody(0).tr(socialhistory) = New StrucDocTr()
                    table.tbody(0).tr(socialhistory).ID = Nothing
                    table.tbody(0).tr(socialhistory).language = Nothing
                    table.tbody(0).tr(socialhistory).Items = New Object(8) {}
                    table.tbody(0).tr(socialhistory).Items(0) = New StrucDocTd()

                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                        DirectCast(table.tbody(0).tr(socialhistory).Items(0), StrucDocTd).Items = New StrucDocContent(0) {}
                        DirectCast(table.tbody(0).tr(socialhistory).Items(0), StrucDocTd).Items(0) = New StrucDocContent
                        DirectCast(DirectCast(table.tbody(0).tr(socialhistory).Items(0), StrucDocTd).Items(0), StrucDocContent).ID = "Soc" & socialhistory
                        DirectCast(DirectCast(table.tbody(0).tr(socialhistory).Items(0), StrucDocTd).Items(0), StrucDocContent).language = Nothing

                    End If

                    DirectCast(table.tbody(0).tr(socialhistory).Items(0), StrucDocTd).Text = New String() {oSocial.SocialHxDescription}
                    DirectCast(table.tbody(0).tr(socialhistory).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(socialhistory).Items(0), StrucDocTd).language = Nothing

                    table.tbody(0).tr(socialhistory).Items(1) = New StrucDocTd()
                    If oSocial.SnomedDesc <> "" Then
                        DirectCast(table.tbody(0).tr(socialhistory).Items(1), StrucDocTd).Text = New String() {oSocial.SnomedDesc}
                    ElseIf oSocial.HistoricalStatusDesc <> "" Then
                        DirectCast(table.tbody(0).tr(socialhistory).Items(1), StrucDocTd).Text = New String() {oSocial.HistoricalStatusDesc}
                    Else
                        DirectCast(table.tbody(0).tr(socialhistory).Items(1), StrucDocTd).Text = New String() {""}
                    End If


                    DirectCast(table.tbody(0).tr(socialhistory).Items(1), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(socialhistory).Items(1), StrucDocTd).language = Nothing

                    table.tbody(0).tr(socialhistory).Items(2) = New StrucDocTd()
                    If oSocial.SocialHxConceptID <> "" Then
                        DirectCast(table.tbody(0).tr(socialhistory).Items(2), StrucDocTd).Text = New String() {oSocial.SocialHxConceptID}
                    ElseIf oSocial.TobaccoUseCode <> "" Then
                        DirectCast(table.tbody(0).tr(socialhistory).Items(2), StrucDocTd).Text = New String() {oSocial.TobaccoUseCode}
                    Else
                        DirectCast(table.tbody(0).tr(socialhistory).Items(2), StrucDocTd).Text = New String() {""}
                    End If
                    DirectCast(table.tbody(0).tr(socialhistory).Items(2), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(socialhistory).Items(2), StrucDocTd).language = Nothing

                    table.tbody(0).tr(socialhistory).Items(3) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(socialhistory).Items(3), StrucDocTd).Text = New String() {oSocial.SocialHxQualifiers}
                    DirectCast(table.tbody(0).tr(socialhistory).Items(3), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(socialhistory).Items(3), StrucDocTd).language = Nothing

                    table.tbody(0).tr(socialhistory).Items(4) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(socialhistory).Items(4), StrucDocTd).Text = New String() {oSocial.SocialHxComments}
                    DirectCast(table.tbody(0).tr(socialhistory).Items(4), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(socialhistory).Items(4), StrucDocTd).language = Nothing

                    table.tbody(0).tr(socialhistory).Items(5) = New StrucDocTd()
                    If Not IsNothing(oSocial.SocialHxDateReported) AndAlso oSocial.SocialHxDateReported <> "" Then
                        DirectCast(table.tbody(0).tr(socialhistory).Items(5), StrucDocTd).Text = New String() {CType(oSocial.SocialHxDateReported, Date).ToShortDateString()}
                    Else
                        DirectCast(table.tbody(0).tr(socialhistory).Items(5), StrucDocTd).Text = New String() {}
                    End If
                    DirectCast(table.tbody(0).tr(socialhistory).Items(5), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(socialhistory).Items(5), StrucDocTd).language = Nothing

                    table.tbody(0).tr(socialhistory).Items(6) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(socialhistory).Items(6), StrucDocTd).Text = New String() {oSocial.SocialHxCategory}
                    DirectCast(table.tbody(0).tr(socialhistory).Items(6), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(socialhistory).Items(6), StrucDocTd).language = Nothing

                    table.tbody(0).tr(socialhistory).Items(7) = New StrucDocTd()
                    If oSocial.SocialOnsetDate <> "" AndAlso oSocial.SocialOnsetDate <> "1/1/1900" AndAlso oSocial.SocialOnsetDate <> "01/01/1900" Then
                        DirectCast(table.tbody(0).tr(socialhistory).Items(7), StrucDocTd).Text = New String() {oSocial.SocialOnsetDate}
                    Else
                        DirectCast(table.tbody(0).tr(socialhistory).Items(7), StrucDocTd).Text = New String() {"-"}
                    End If

                    DirectCast(table.tbody(0).tr(socialhistory).Items(7), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(socialhistory).Items(7), StrucDocTd).language = Nothing

                    table.tbody(0).tr(socialhistory).Items(8) = New StrucDocTd()
                    If oSocial.SocialEndDate <> "" AndAlso oSocial.SocialEndDate <> "1/1/1900" AndAlso oSocial.SocialEndDate <> "01/01/1900" Then
                        DirectCast(table.tbody(0).tr(socialhistory).Items(8), StrucDocTd).Text = New String() {CType(oSocial.SocialEndDate, Date).ToShortDateString()}
                    Else
                        DirectCast(table.tbody(0).tr(socialhistory).Items(8), StrucDocTd).Text = New String() {"-"}
                    End If


                    DirectCast(table.tbody(0).tr(socialhistory).Items(8), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(socialhistory).Items(8), StrucDocTd).language = Nothing
                    If Not IsNothing(oSocial) Then
                        oSocial.Dispose()
                        oSocial = Nothing
                    End If
                Next
            Else
                'section.text.Text = New String() {"No known social history for patient"}
                'If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                '    section.text.Items = New StrucDocContent(0) {}
                '    section.text.Items(0) = New StrucDocContent
                '    DirectCast(section.text.Items(0), StrucDocContent).ID = "Soc" & 0
                '    DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                'End If
                section = NoInformationSection("Social History", "Social History", _DateExtension2015)
                _SocialHistory.section = section
                Return _SocialHistory
            End If
            If Not IsNothing(mPatient.PatientSocialHistory) AndAlso mPatient.PatientSocialHistory.Count > 0 Then
                _SocialCnt = mPatient.PatientSocialHistory.Count
                _SocialCnt = _SocialCnt * 2
                'extra entry object is created in collection to write no known smoking status if smoking status code is not present in collection
                _SocialCnt = _SocialCnt + 1
            End If
            If Not IsNothing(mPatient.PatientName.BirthSex) AndAlso mPatient.PatientName.BirthSex <> "" Then
                section.entry = New POCD_MT000040UV02Entry(_SocialCnt) {}
            Else
                section.entry = New POCD_MT000040UV02Entry(_SocialCnt - 1) {}
            End If

            'Dim oSocialHis As SocialHistory = Nothing
            Dim socCnt As Integer = 0






SmokingStatusLine:
            Dim SocialHistoryEntry As Integer = 0
            Dim socialhistitem As Integer = 0
            If Not IsNothing(mPatient.PatientSocialHistory) Then
                For Each oSocialHis As SocialHistory In mPatient.PatientSocialHistory

                    If Not IsNothing(mPatient.PatientSocialHistory) AndAlso mPatient.PatientSocialHistory.Count > 0 Then
                        oSocialHis = mPatient.PatientSocialHistory.Item(socialhistitem)
                        socialhistitem = socialhistitem + 1
                        'Else
                        '    oSocialHis = New SocialHistory
                    End If

                    If oSocialHis.SocialHxConceptID <> "" Then
                        If oCodingSystemMaster.GetbyCode(CodeSystem.SNOMED_CT, oSocialHis.SocialHxConceptID).CodingSystemName = "Smoking Status" Then
                            section.entry(SocialHistoryEntry) = New POCD_MT000040UV02Entry()
                            getCDASmokingStatusTemplate(section.entry(SocialHistoryEntry), oSocialHis)
                            SocialHistoryEntry = SocialHistoryEntry + 1
                            socCnt = socCnt + 1
                        Else
                            'For Mapping Other Codes with Snomed Ct'
                            ''Dim Smokingitem As SmokingStatusItem = oCodingSystemMaster.getSmokingStatusCode(oSocialHis.SocialHxConceptID)
                            ''If Not IsNothing(Smokingitem) Then
                            ''    If Smokingitem.SmokingStatusCode <> "" Then
                            ''        getCDASmokingStatusTemplate(section.entry(SocialHistoryEntry), oSocialHis, Smokingitem)
                            ''        SocialHistoryEntry = SocialHistoryEntry + 1
                            ''        socCnt = socCnt + 1
                            ''    End If
                            ''End If

                            'If oSocialHis.SocialHxConceptID <> "" And (oSocialHis.SocialOnsetDate <> "" And oSocialHis.SocialOnsetDate <> "1/1/1900") And (oSocialHis.TobaccoUseCode <> "") Then
                            '    section.entry(SocialHistoryEntry) = New POCD_MT000040UV02Entry()
                            '    'section.entry(SocialHistory + 1) = New POCD_MT000040UV02Entry()
                            '    getTobacoEntry(section.entry(SocialHistoryEntry), oSocialHis)
                            '    SocialHistoryEntry = SocialHistoryEntry + 1
                            '    'ElseIf oCodingSystemMaster.GetbyCode(CodeSystem.SNOMED_CT, oSocialHis.SocialHxConceptID).CodingSystemName = "Smoking Status" Then
                            '    '    getCDASmokingStatusTemplate(section.entry(SocialHistory), oSocialHis)

                            'End If

                        End If
                    End If


                    If oSocialHis.TobaccoUseCode <> "" And (oSocialHis.SocialOnsetDate <> "" AndAlso oSocialHis.SocialOnsetDate <> "1/1/1900" AndAlso oSocialHis.SocialOnsetDate <> "01/01/1900") Then
                        section.entry(SocialHistoryEntry) = New POCD_MT000040UV02Entry()
                        'section.entry(SocialHistory + 1) = New POCD_MT000040UV02Entry()
                        getTobacoEntry(section.entry(SocialHistoryEntry), oSocialHis)
                        SocialHistoryEntry = SocialHistoryEntry + 1
                        'ElseIf oCodingSystemMaster.GetbyCode(CodeSystem.SNOMED_CT, oSocialHis.SocialHxConceptID).CodingSystemName = "Smoking Status" Then
                        '    getCDASmokingStatusTemplate(section.entry(SocialHistory), oSocialHis)

                    End If

                    If oSocialHis.SocialHxCategory = "Social History" Then
                        section.entry(SocialHistoryEntry) = New POCD_MT000040UV02Entry()

                        section.entry(SocialHistoryEntry).typeCode = x_ActRelationshipEntry.DRIV
                        section.entry(SocialHistoryEntry).Item = New POCD_MT000040UV02Observation
                        ob = DirectCast(section.entry(SocialHistoryEntry).Item, POCD_MT000040UV02Observation)

                        ob.classCode = ActClassObservation.OBS
                        ob.moodCode = x_ActMoodDocumentObservation.EVN
                        ob.moodCodeSpecified = True
                        ob.templateId = New II(0) {}
                        ob.templateId(0) = New II()

                        If oSocialHis.SocialHxCategory = "Social History" Then
                            ob.templateId(0).root = oTemplateIDMaster.GetEntryID("Social History Observation")
                            'Else
                            '    ob.templateId(0).root = oTemplateIDMaster.GetEntryID("Smoking Status Observation")
                            '    socCnt = socCnt + 1
                        End If

                        '"2.16.840.1.113883.10.20.22.4.38
                        ob.templateId(0).extension = Nothing
                        ob.templateId(0).assigningAuthorityName = Nothing

                        ob.id = New II(0) {}
                        ob.id(0) = New II()
                        ob.id(0).root = Guid.NewGuid().ToString()
                        ob.id(0).extension = Nothing
                        ob.id(0).assigningAuthorityName = Nothing


                        ob.code = New CD()
                        If oSocialHis.SocialHxCategory = "Social History" Then
                            If Not IsNothing(oSocialHis.SocialHxConceptID) AndAlso oSocialHis.SocialHxConceptID <> "" Then
                                ob.code.code = oSocialHis.SocialHxConceptID
                            Else
                                ob.code.code = Nothing
                                ob.code.nullFlavor = "NI"
                            End If
                            If Not IsNothing(oSocialHis.SocialHxDescription) AndAlso oSocialHis.SocialHxDescription <> "" Then
                                ob.code.displayName = oSocialHis.SocialHxDescription
                            Else
                                ob.code.displayName = Nothing
                            End If
                            ob.code.codeSystem = CodeSystem.SNOMED_CT
                            ob.code.codeSystemName = "SNOMED CT"
                            'Else
                            '    ob.code.code = "ASSERTION"
                            '    ob.code.codeSystem = "2.16.840.1.113883.5.4"
                            '    ob.code.displayName = Nothing
                            '    ob.code.codeSystemName = Nothing
                        End If

                        ob.code.codeSystemVersion = Nothing

                        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                            ob.code.originalText = New ED()
                            ob.code.originalText.language = Nothing
                            ob.code.originalText.Text = New String() {}
                            If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                ob.code.originalText.reference = New TEL()
                                ob.code.originalText.reference.value = "#Soc" & SocialHistoryEntry
                            End If
                        End If

                        ob.statusCode = New CS()
                        ob.statusCode.code = "completed"
                        ob.statusCode.codeSystem = Nothing
                        ob.statusCode.codeSystemName = Nothing
                        ob.statusCode.codeSystemVersion = Nothing
                        ob.statusCode.displayName = Nothing

                        ob.effectiveTime = New IVL_TS()
                        ob.effectiveTime.value = Nothing
                        ob.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
                        ob.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
                        ob.effectiveTime.Items = New QTY(1) {}
                        ob.effectiveTime.Items(0) = New IVXB_TS()

                        If Not IsNothing(oSocialHis.SocialHxDateReported) AndAlso oSocialHis.SocialHxDateReported <> "" Then

                            DirectCast(ob.effectiveTime.Items(0), IVXB_TS).value = Format(CType(oSocialHis.SocialHxDateReported, Date), "yyyyMMdd")
                        Else
                            DirectCast(ob.effectiveTime.Items(0), IVXB_TS).value = Now.Date.Year & Format(Now.Date.Month, "#00") & Format(Now.Date.Day, "#00") & "000000-0500" '& Now.Hour & Now.Minute
                        End If

                        ob.value = New ANY(0) {}
                        ob.value(0) = New CD()
                        If Not IsNothing(oSocialHis.SocialHxConceptID) AndAlso oSocialHis.SocialHxConceptID <> "" Then
                            DirectCast(ob.value(0), CD).code = oSocialHis.SocialHxConceptID
                        Else
                            DirectCast(ob.value(0), CD).code = Nothing
                            DirectCast(ob.value(0), CD).nullFlavor = "NI"
                            '    DirectCast(ob.value(0), CD).code = Nothing
                        End If
                        DirectCast(ob.value(0), CD).codeSystem = CodeSystem.SNOMED_CT
                        DirectCast(ob.value(0), CD).codeSystemName = Nothing
                        DirectCast(ob.value(0), CD).codeSystemVersion = Nothing
                        If Not IsNothing(oSocialHis.SocialHxDescription) AndAlso oSocialHis.SocialHxDescription <> "" Then
                            DirectCast(ob.value(0), CD).displayName = oSocialHis.SocialHxDescription
                        Else
                            DirectCast(ob.value(0), CD).displayName = Nothing
                        End If
                        SocialHistoryEntry = SocialHistoryEntry + 1
                    End If



                    If Not IsNothing(oSocialHis) Then
                        oSocialHis.Dispose()
                        oSocialHis = Nothing
                    End If
                Next
            End If






            'For SocialHistory As Integer = 0 To _SocialCnt - 1


            'Next

            If Not IsNothing(mPatient.PatientName.BirthSex) AndAlso mPatient.PatientName.BirthSex <> "" Then
                Dim entrycount As Integer = 0
                entrycount = section.entry.Length
                section.entry(entrycount - 1) = New POCD_MT000040UV02Entry
                getCDABirthsexObservation(section.entry(entrycount - 1))
                SocialHistoryEntry = SocialHistoryEntry + 1
            End If


            If socCnt = 0 Then
                'Kept counter to check if Smoking Status template/section is added to CDA
                'if socCnt = 0, then we will make empty smoking status template
                '_SocialCnt = 1
                mPatient.PatientSocialHistory = Nothing
                section.entry(SocialHistoryEntry) = New POCD_MT000040UV02Entry
                getNoKnownSmokingStatus(section.entry(SocialHistoryEntry))

                'GoTo SmokingStatusLine
            End If
            Return _SocialHistory
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Social History Section"
            Else
                _msgString = _msgString & vbNewLine & "Social History Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            '  MessageBox.Show("Error:" & ex.ToString())
            Return Nothing


        Finally
            If Not IsNothing(section) Then
                section = Nothing
            End If
            If Not IsNothing(table) Then
                table = Nothing
            End If
            If Not IsNothing(act) Then
                act = Nothing
            End If
            If Not IsNothing(ob) Then
                ob = Nothing
            End If
        End Try
    End Function
    Private Sub getNoKnownSmokingStatus(ByRef entry As POCD_MT000040UV02Entry)
        Try
            Dim obs As POCD_MT000040UV02Observation
            entry.Item = New POCD_MT000040UV02Observation
            obs = DirectCast(entry.Item, POCD_MT000040UV02Observation)
            obs.classCodeSpecified = True
            obs.classCode = ActClassObservation.OBS
            obs.moodCodeSpecified = True
            obs.moodCode = x_ActMoodDocumentObservation.EVN
            obs.templateId = New II(1) {}
            obs.templateId(0) = New II
            obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Smoking Status Observation")
            obs.templateId(0).extension = _DateExtension22
            obs.templateId(0).assigningAuthorityName = Nothing

            obs.templateId(1) = New II
            obs.templateId(1).root = oTemplateIDMaster.GetEntryID("Smoking Status Observation")
            obs.templateId(1).extension = Nothing
            obs.templateId(1).assigningAuthorityName = Nothing

            obs.id = New II(0) {}
            obs.id(0) = New II
            obs.id(0).root = Guid.NewGuid.ToString()
            obs.code = New CD()
            Dim _codesystemItem As CodeSystemItem = Nothing
            _codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Tobacco smoking status NHIS")
            obs.code.code = _codesystemItem.Code
            obs.code.codeSystem = _codesystemItem.CodingSystem
            obs.code.codeSystemName = CodeSystem.LOINC
            obs.code.displayName = _codesystemItem.Description
            obs.statusCode = New CS
            obs.statusCode.code = "completed"
            obs.effectiveTime = New IVL_TS()
            obs.effectiveTime.value = DateTime.Now.ToString("yyyyMMddHHmm")
            obs.value = New ANY(1) {}
            obs.value(0) = New CD()
            _codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Unknown if ever smoked")
            DirectCast(obs.value(0), CD).code = _codesystemItem.Code
            DirectCast(obs.value(0), CD).codeSystem = CodeSystem.SNOMED_CT
            DirectCast(obs.value(0), CD).codeSystemName = "SNOMED CT"
            DirectCast(obs.value(0), CD).displayName = _codesystemItem.Description

        Catch ex As Exception

        End Try
    End Sub
    Private Sub getCDABirthsexObservation(ByRef entry As POCD_MT000040UV02Entry)
        Dim Obs As POCD_MT000040UV02Observation = Nothing
        entry.Item = New POCD_MT000040UV02Observation
        Obs = DirectCast(entry.Item, POCD_MT000040UV02Observation)
        Obs.classCodeSpecified = True
        Obs.classCode = ActClassObservation.OBS
        Obs.moodCodeSpecified = True
        Obs.moodCode = x_ActMoodDocumentObservation.EVN
        Obs.templateId = New II(1) {}
        Obs.templateId(0) = New II
        Obs.templateId(0).root = oTemplateIDMaster.GetEntryID("BirthSex")
        Obs.templateId(0).extension = "2016-06-01"
        Obs.code = New CD
        Dim CodesystemItem As CodeSystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Sex Assigned At Birth")
        Obs.code.code = CodesystemItem.Code
        Obs.code.codeSystem = CodesystemItem.CodingSystem
        Obs.code.codeSystemName = CodesystemItem.CodingSystemName
        Obs.code.codeSystemVersion = Nothing
        Obs.code.displayName = CodesystemItem.Description
        Obs.statusCode = New CS
        Obs.statusCode.code = "completed"
        Obs.value = New ANY(1) {}
        Obs.value(0) = New CD
        CodesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.AdministrativeGender, mPatient.PatientName.BirthSex)
        If mPatient.PatientName.BirthSex = "Male" Or mPatient.PatientName.BirthSex = "Female" Then
            If Not IsNothing(CodesystemItem) Then
                DirectCast(Obs.value(0), CD).code = CodesystemItem.Code
                DirectCast(Obs.value(0), CD).codeSystem = CodesystemItem.CodingSystem
                DirectCast(Obs.value(0), CD).codeSystemName = CodesystemItem.CodingSystemName
                DirectCast(Obs.value(0), CD).displayName = CodesystemItem.Description
            End If
        Else
            DirectCast(Obs.value(0), CD).nullFlavorSpecified = True
            DirectCast(Obs.value(0), CD).nullFlavor = "UNK"
        End If



    End Sub
    Private Sub getCDASmokingStatusTemplate(ByRef entry As POCD_MT000040UV02Entry, ByVal SocHistory As SocialHistory, Optional ByVal Smokingitem As SocialHistory = Nothing)
        Dim obs As POCD_MT000040UV02Observation
        entry.Item = New POCD_MT000040UV02Observation
        obs = DirectCast(entry.Item, POCD_MT000040UV02Observation)
        obs.classCodeSpecified = True
        obs.classCode = ActClassObservation.OBS
        obs.moodCodeSpecified = True
        obs.moodCode = x_ActMoodDocumentObservation.EVN
        obs.templateId = New II(1) {}
        obs.templateId(0) = New II
        obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Smoking Status Observation")
        obs.templateId(0).extension = _DateExtension22
        obs.templateId(0).assigningAuthorityName = Nothing

        obs.templateId(1) = New II
        obs.templateId(1).root = oTemplateIDMaster.GetEntryID("Smoking Status Observation")
        obs.templateId(1).extension = Nothing
        obs.templateId(1).assigningAuthorityName = Nothing

        obs.id = New II(0) {}
        obs.id(0) = New II
        obs.id(0).root = Guid.NewGuid.ToString()
        obs.code = New CD()
        Dim _codesystemItem As CodeSystemItem = Nothing
        _codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Tobacco smoking status NHIS")
        obs.code.code = _codesystemItem.Code
        obs.code.codeSystem = _codesystemItem.CodingSystem
        obs.code.codeSystemName = CodeSystem.LOINC
        obs.code.displayName = _codesystemItem.Description
        obs.statusCode = New CS
        obs.statusCode.code = "completed"
        obs.effectiveTime = New IVL_TS()

        '''' Below Lines Commented  to take the test data date instead of current time
        'If Not IsNothing(SocHistory.SocialHxDateReported) AndAlso (SocHistory.SocialHxDateReported) <> "" And SocHistory.SocialHxDateReported <> "1/1/1900" Then
        '    obs.effectiveTime.value = Format(CType(SocHistory.SocialHxDateReported, DateTime), "yyyyMMddHHmmss")
        'Else
        '    obs.effectiveTime.nullFlavorSpecified = True
        '    obs.effectiveTime.nullFlavor = "UNK"
        'End If


        If Not IsNothing(SocHistory.SocialOnsetDate) AndAlso (SocHistory.SocialOnsetDate) <> "" AndAlso SocHistory.SocialOnsetDate <> "1/1/1900" AndAlso SocHistory.SocialOnsetDate <> "01/01/1900" Then
            obs.effectiveTime.value = Format(CType(SocHistory.SocialOnsetDate, DateTime), "yyyyMMdd")
        ElseIf Not IsNothing(SocHistory.SocialHxDateReported) AndAlso (SocHistory.SocialHxDateReported) <> "" AndAlso SocHistory.SocialHxDateReported <> "1/1/1900" AndAlso SocHistory.SocialHxDateReported <> "01/01/1900" Then
            obs.effectiveTime.value = Format(CType(SocHistory.SocialHxDateReported, DateTime), "yyyyMMdd")
        Else
            obs.effectiveTime.nullFlavorSpecified = True
            obs.effectiveTime.nullFlavor = "UNK"
        End If


        'If Not IsNothing(SocHistory.SocialEndDate) AndAlso (SocHistory.SocialEndDate) <> "" Then
        '    obs.effectiveTime.Items(1) = New IVXB_TS()
        '    DirectCast(obs.effectiveTime.Items(1), IVXB_TS).value = Format(CType(SocHistory.SocialEndDate, Date), "yyyyMMdd")
        'End If
        obs.value = New ANY(1) {}
        obs.value(0) = New CD()
        If IsNothing(Smokingitem) = False Then
            '' DirectCast(obs.value(0), CD).code = Smokingitem.SmokingStatusCode
            DirectCast(obs.value(0), CD).codeSystem = CodeSystem.SNOMED_CT
            DirectCast(obs.value(0), CD).codeSystemName = "SNOMED CT"
            ''  DirectCast(obs.value(0), CD).displayName = Smokingitem.SmokingStatusDesc
        Else
            DirectCast(obs.value(0), CD).code = SocHistory.SocialHxConceptID
            DirectCast(obs.value(0), CD).codeSystem = CodeSystem.SNOMED_CT
            DirectCast(obs.value(0), CD).codeSystemName = "SNOMED CT"
            If Not IsNothing(SocHistory.SnomedDesc) And SocHistory.SnomedDesc <> "" Then
                DirectCast(obs.value(0), CD).displayName = SocHistory.SnomedDesc
            Else
                DirectCast(obs.value(0), CD).displayName = Nothing
            End If


        End If



    End Sub

    Private Function GetCDASocialHistoryComponent_New() As POCD_MT000040UV02Component3
        Dim _SocialHistory As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim table As StrucDocTable = Nothing
        Dim act As POCD_MT000040UV02Act = Nothing
        Dim ob As POCD_MT000040UV02Observation = Nothing
        Dim _SocialCnt As Integer = 1
        Try


            _SocialHistory = New POCD_MT000040UV02Component3


            DirectCast(_SocialHistory, POCD_MT000040UV02Component3).section = New POCD_MT000040UV02Section()
            section = DirectCast(_SocialHistory, POCD_MT000040UV02Component3).section
            'section.ID = Nothing
            section.classCodeSpecified = False
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            section.templateId = New II(0) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Social History")
            '"2.16.840.1.113883.10.20.22.2.17
            section.templateId(0).assigningAuthorityName = Nothing
            section.templateId(0).extension = Nothing

            section.code = New CE()
            ' section.code.nullFlavor = "NA"
            section.code.code = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Social History").Code
            '"29762-2"

            section.code.codeSystem = CodeSystem.LOINC
            section.code.codeSystemName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Social History").CodingSystemName
            section.code.codeSystemVersion = Nothing
            section.code.displayName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Social History").Description
            'nothing
            section.title = New ST()
            section.title.Text = New String() {"Social History"}

            section.title.language = Nothing
            section.text = New StrucDocText()
            section.text.mediaType = Nothing
            section.text.ID = Nothing
            section.text.language = Nothing


            If Not IsNothing(mPatient.PatientSocialHistory) AndAlso mPatient.PatientSocialHistory.Count > 0 Then
                ''
                ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                If Not IsNothing(sconf.code) Then
                    section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''
                ''

                section.text.Items = New Object(0) {}
                section.text.Items(0) = New StrucDocTable()
                table = DirectCast(section.text.Items(0), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}

                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(5) {}
                table.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Description"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"SNOMED Code"}
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Qualifiers"}
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(3) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Comments"}
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(4) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).Text = New String() {"Date Reported"}
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(5) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).Text = New String() {"Category"}
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).language = Nothing

                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing
                table.tbody(0).tr = New StrucDocTr(mPatient.PatientSocialHistory.Count - 1) {}
                section.entry = New POCD_MT000040UV02Entry(mPatient.PatientSocialHistory.Count - 1) {}
                For socialhistory As Integer = 0 To mPatient.PatientSocialHistory.Count - 1
                    Dim oSocial As SocialHistory = mPatient.PatientSocialHistory.Item(socialhistory)
                    table.tbody(0).tr(socialhistory) = New StrucDocTr()
                    table.tbody(0).tr(socialhistory).ID = Nothing
                    table.tbody(0).tr(socialhistory).language = Nothing
                    table.tbody(0).tr(socialhistory).Items = New Object(5) {}
                    table.tbody(0).tr(socialhistory).Items(0) = New StrucDocTd()

                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                        DirectCast(table.tbody(0).tr(socialhistory).Items(0), StrucDocTd).Items = New StrucDocContent(0) {}
                        DirectCast(table.tbody(0).tr(socialhistory).Items(0), StrucDocTd).Items(0) = New StrucDocContent
                        DirectCast(DirectCast(table.tbody(0).tr(socialhistory).Items(0), StrucDocTd).Items(0), StrucDocContent).ID = "Soc" & socialhistory
                        DirectCast(DirectCast(table.tbody(0).tr(socialhistory).Items(0), StrucDocTd).Items(0), StrucDocContent).language = Nothing

                    End If

                    DirectCast(table.tbody(0).tr(socialhistory).Items(0), StrucDocTd).Text = New String() {oSocial.SocialHxDescription}
                    DirectCast(table.tbody(0).tr(socialhistory).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(socialhistory).Items(0), StrucDocTd).language = Nothing
                    table.tbody(0).tr(socialhistory).Items(1) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(socialhistory).Items(1), StrucDocTd).Text = New String() {oSocial.SocialHxConceptID}
                    DirectCast(table.tbody(0).tr(socialhistory).Items(1), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(socialhistory).Items(1), StrucDocTd).language = Nothing
                    table.tbody(0).tr(socialhistory).Items(2) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(socialhistory).Items(2), StrucDocTd).Text = New String() {oSocial.SocialHxQualifiers}
                    DirectCast(table.tbody(0).tr(socialhistory).Items(2), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(socialhistory).Items(2), StrucDocTd).language = Nothing
                    table.tbody(0).tr(socialhistory).Items(3) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(socialhistory).Items(3), StrucDocTd).Text = New String() {oSocial.SocialHxComments}
                    DirectCast(table.tbody(0).tr(socialhistory).Items(3), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(socialhistory).Items(3), StrucDocTd).language = Nothing
                    table.tbody(0).tr(socialhistory).Items(4) = New StrucDocTd()
                    If Not IsNothing(oSocial.SocialHxDateReported) AndAlso oSocial.SocialHxDateReported <> "" Then
                        DirectCast(table.tbody(0).tr(socialhistory).Items(4), StrucDocTd).Text = New String() {CType(oSocial.SocialHxDateReported, Date).ToShortDateString()}
                    Else
                        DirectCast(table.tbody(0).tr(socialhistory).Items(4), StrucDocTd).Text = New String() {}
                    End If
                    DirectCast(table.tbody(0).tr(socialhistory).Items(4), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(socialhistory).Items(4), StrucDocTd).language = Nothing
                    table.tbody(0).tr(socialhistory).Items(5) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(socialhistory).Items(5), StrucDocTd).Text = New String() {oSocial.SocialHxCategory}
                    DirectCast(table.tbody(0).tr(socialhistory).Items(5), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(socialhistory).Items(5), StrucDocTd).language = Nothing
                    If Not IsNothing(oSocial) Then
                        oSocial.Dispose()
                        oSocial = Nothing
                    End If
                Next
            Else
                section.text.Text = New String() {"No known social history for patient"}
                If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                    section.text.Items = New StrucDocContent(0) {}
                    section.text.Items(0) = New StrucDocContent
                    DirectCast(section.text.Items(0), StrucDocContent).ID = "Soc" & 0
                    DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                End If
            End If
            If Not IsNothing(mPatient.PatientSocialHistory) AndAlso mPatient.PatientSocialHistory.Count > 0 Then
                _SocialCnt = mPatient.PatientSocialHistory.Count
            End If

            section.entry = New POCD_MT000040UV02Entry(_SocialCnt - 1) {}
            Dim oSocialHis As SocialHistory = Nothing
            Dim socCnt As Integer = 0

SmokingStatusLine:
            For SocialHistory As Integer = 0 To _SocialCnt - 1


                section.entry(SocialHistory) = New POCD_MT000040UV02Entry()
                section.entry(SocialHistory).typeCode = x_ActRelationshipEntry.DRIV
                section.entry(SocialHistory).Item = New POCD_MT000040UV02Observation
                ob = DirectCast(section.entry(SocialHistory).Item, POCD_MT000040UV02Observation)

                ob.classCode = ActClassObservation.OBS
                ob.moodCode = x_ActMoodDocumentObservation.EVN
                ob.moodCodeSpecified = True
                ob.templateId = New II(0) {}
                ob.templateId(0) = New II()
                If Not IsNothing(mPatient.PatientSocialHistory) AndAlso mPatient.PatientSocialHistory.Count > 0 Then
                    oSocialHis = mPatient.PatientSocialHistory.Item(SocialHistory)
                Else
                    oSocialHis = New SocialHistory
                End If

                'If oSocialHis.SocialHxCategory = "Social History" AndAlso oSocialHis.Then Then

                'End If

                If oSocialHis.SocialHxCategory = "Social History" Then
                    ob.templateId(0).root = oTemplateIDMaster.GetEntryID("Social History Observation")
                Else
                    ob.templateId(0).root = oTemplateIDMaster.GetEntryID("Smoking Status Observation")
                    socCnt = socCnt + 1
                End If

                '"2.16.840.1.113883.10.20.22.4.38
                ob.templateId(0).extension = Nothing
                ob.templateId(0).assigningAuthorityName = Nothing

                ob.id = New II(0) {}
                ob.id(0) = New II()
                ob.id(0).root = Guid.NewGuid().ToString()
                ob.id(0).extension = Nothing
                ob.id(0).assigningAuthorityName = Nothing


                ob.code = New CD()
                If oSocialHis.SocialHxCategory = "Social History" Then
                    If Not IsNothing(oSocialHis.SocialHxConceptID) AndAlso oSocialHis.SocialHxConceptID <> "" Then
                        ob.code.code = oSocialHis.SocialHxConceptID
                    Else
                        ob.code.code = Nothing
                        ob.code.nullFlavor = "NI"
                    End If
                    If Not IsNothing(oSocialHis.SocialHxDescription) AndAlso oSocialHis.SocialHxDescription <> "" Then
                        ob.code.displayName = oSocialHis.SocialHxDescription
                    Else
                        ob.code.displayName = Nothing
                    End If
                    ob.code.codeSystem = CodeSystem.SNOMED_CT
                    ob.code.codeSystemName = "SNOMED CT"
                Else
                    ob.code.code = "ASSERTION"
                    ob.code.codeSystem = "2.16.840.1.113883.5.4"
                    ob.code.displayName = Nothing
                    ob.code.codeSystemName = Nothing
                End If

                ob.code.codeSystemVersion = Nothing

                If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                    ob.code.originalText = New ED()
                    ob.code.originalText.language = Nothing
                    ob.code.originalText.Text = New String() {}
                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                        ob.code.originalText.reference = New TEL()
                        ob.code.originalText.reference.value = "#Soc" & SocialHistory
                    End If
                End If

                ob.statusCode = New CS()
                ob.statusCode.code = "completed"
                ob.statusCode.codeSystem = Nothing
                ob.statusCode.codeSystemName = Nothing
                ob.statusCode.codeSystemVersion = Nothing
                ob.statusCode.displayName = Nothing

                ob.effectiveTime = New IVL_TS()
                ob.effectiveTime.value = Nothing
                ob.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
                ob.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
                ob.effectiveTime.Items = New QTY(1) {}
                ob.effectiveTime.Items(0) = New IVXB_TS()

                If Not IsNothing(oSocialHis.SocialHxDateReported) AndAlso oSocialHis.SocialHxDateReported <> "" Then

                    DirectCast(ob.effectiveTime.Items(0), IVXB_TS).value = Format(CType(oSocialHis.SocialHxDateReported, Date), "yyyyMMdd")
                Else
                    DirectCast(ob.effectiveTime.Items(0), IVXB_TS).value = Now.Date.Year & Format(Now.Date.Month, "#00") & Format(Now.Date.Day, "#00") & "000000-0500" '& Now.Hour & Now.Minute
                End If

                ob.value = New ANY(0) {}
                ob.value(0) = New CD()
                If Not IsNothing(oSocialHis.SocialHxConceptID) AndAlso oSocialHis.SocialHxConceptID <> "" Then
                    DirectCast(ob.value(0), CD).code = oSocialHis.SocialHxConceptID
                Else
                    DirectCast(ob.value(0), CD).code = Nothing
                    DirectCast(ob.value(0), CD).nullFlavor = "NI"
                    '    DirectCast(ob.value(0), CD).code = Nothing
                End If
                DirectCast(ob.value(0), CD).codeSystem = CodeSystem.SNOMED_CT
                DirectCast(ob.value(0), CD).codeSystemName = Nothing
                DirectCast(ob.value(0), CD).codeSystemVersion = Nothing
                If Not IsNothing(oSocialHis.SocialHxDescription) AndAlso oSocialHis.SocialHxDescription <> "" Then
                    DirectCast(ob.value(0), CD).displayName = oSocialHis.SocialHxDescription
                Else
                    DirectCast(ob.value(0), CD).displayName = Nothing
                End If

                If Not IsNothing(oSocialHis) Then
                    oSocialHis.Dispose()
                    oSocialHis = Nothing
                End If
            Next

            If socCnt = 0 Then
                'Kept counter to check if Smoking Status template/section is added to CDA
                'if socCnt = 0, then we will make empty smoking status template
                _SocialCnt = 1
                mPatient.PatientSocialHistory = Nothing
                GoTo SmokingStatusLine
            End If
            Return _SocialHistory
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Social History Section"
            Else
                _msgString = _msgString & vbNewLine & "Social History Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            '  MessageBox.Show("Error:" & ex.ToString())
            Return Nothing


        Finally
            If Not IsNothing(section) Then
                section = Nothing
            End If
            If Not IsNothing(table) Then
                table = Nothing
            End If
            If Not IsNothing(act) Then
                act = Nothing
            End If
            If Not IsNothing(ob) Then
                ob = Nothing
            End If
        End Try
    End Function

    Private Sub getTobacoEntry(ByRef entry As POCD_MT000040UV02Entry, ByVal SocHistory As SocialHistory)
        'entry = New POCD_MT000040UV02Entry(1) {}
        'entry(0) = New POCD_MT000040UV02Entry
        Dim obs As POCD_MT000040UV02Observation
        entry.Item = New POCD_MT000040UV02Observation
        obs = DirectCast(entry.Item, POCD_MT000040UV02Observation)
        obs.classCodeSpecified = True
        obs.classCode = ActClassObservation.OBS
        obs.moodCodeSpecified = True
        obs.moodCode = x_ActMoodDocumentObservation.EVN
        obs.templateId = New II(1) {}
        obs.templateId(0) = New II
        obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Tobacco Use")
        obs.templateId(0).extension = _DateExtension22
        obs.templateId(0).assigningAuthorityName = Nothing

        obs.templateId(1) = New II
        obs.templateId(1).root = oTemplateIDMaster.GetEntryID("Tobacco Use")
        obs.templateId(1).extension = Nothing
        obs.templateId(1).assigningAuthorityName = Nothing


        obs.id = New II(0) {}
        obs.id(0) = New II
        obs.id(0).root = Guid.NewGuid.ToString()
        obs.code = New CD()
        Dim _codesystemItem As CodeSystemItem = Nothing
        _codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "History of tobacco use")
        obs.code.code = _codesystemItem.Code
        obs.code.codeSystem = _codesystemItem.CodingSystem
        obs.code.codeSystemName = CodeSystem.LOINC
        obs.code.displayName = _codesystemItem.Description
        obs.statusCode = New CS
        obs.statusCode.code = "completed"
        obs.effectiveTime = New IVL_TS()
        obs.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
        obs.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
        obs.effectiveTime.ItemsElementName(1) = ItemsChoiceType2.high
        obs.effectiveTime.Items() = New QTY(1) {}
        obs.effectiveTime.Items(0) = New IVXB_TS()
        If Not IsNothing(SocHistory.SocialOnsetDate) AndAlso (SocHistory.SocialOnsetDate) <> "" AndAlso SocHistory.SocialOnsetDate <> "1/1/1900" AndAlso SocHistory.SocialOnsetDate <> "01/01/1900" Then
            DirectCast(obs.effectiveTime.Items(0), IVXB_TS).value = Format(CType(SocHistory.SocialOnsetDate, Date), "yyyyMMdd")
        Else
            DirectCast(obs.effectiveTime.Items(0), IVXB_TS).nullFlavorSpecified = True
            DirectCast(obs.effectiveTime.Items(0), IVXB_TS).nullFlavor = "UNK"
        End If
        If Not IsNothing(SocHistory.SocialEndDate) AndAlso (SocHistory.SocialEndDate) <> "" AndAlso SocHistory.SocialEndDate <> "1/1/1900" AndAlso SocHistory.SocialEndDate <> "01/01/1900" Then
            obs.effectiveTime.Items(1) = New IVXB_TS()
            DirectCast(obs.effectiveTime.Items(1), IVXB_TS).value = Format(CType(SocHistory.SocialEndDate, Date), "yyyyMMdd")
        End If
        obs.value = New ANY(1) {}
        obs.value(0) = New CD()
        If SocHistory.TobaccoUseCode <> "" Then
            DirectCast(obs.value(0), CD).code = SocHistory.TobaccoUseCode
            DirectCast(obs.value(0), CD).codeSystem = CodeSystem.SNOMED_CT
            DirectCast(obs.value(0), CD).codeSystemName = "SNOMED CT"
            DirectCast(obs.value(0), CD).displayName = SocHistory.HistoricalStatusDesc
        ElseIf SocHistory.SocialHxConceptID <> "" Then
            DirectCast(obs.value(0), CD).code = SocHistory.SocialHxConceptID
            DirectCast(obs.value(0), CD).codeSystem = CodeSystem.SNOMED_CT
            DirectCast(obs.value(0), CD).codeSystemName = "SNOMED CT"
            DirectCast(obs.value(0), CD).displayName = Nothing

        End If











    End Sub
    Private Function GetCDAProceduresComponent() As POCD_MT000040UV02Component3
        Dim _Procedures As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim table As StrucDocTable = Nothing
        Dim pro As POCD_MT000040UV02Procedure = Nothing
        Dim ob As POCD_MT000040UV02Observation = Nothing
        Dim _Procedurescnt As Integer = 0
        Try


            _Procedures = New POCD_MT000040UV02Component3

            DirectCast(_Procedures, POCD_MT000040UV02Component3).section = New POCD_MT000040UV02Section()
            section = DirectCast(_Procedures, POCD_MT000040UV02Component3).section
            'section.ID = Nothing
            section.classCodeSpecified = False
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            section.templateId = New II(1) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Procedures")
            '2.16.840.1.113883.10.20.22.2.7
            section.templateId(0).assigningAuthorityName = Nothing
            section.templateId(0).extension = _DateExtension22


            section.templateId(1) = New II()
            section.templateId(1).root = oTemplateIDMaster.GetSectionID("Procedures")
            '2.16.840.1.113883.10.20.22.2.7
            section.templateId(1).assigningAuthorityName = Nothing
            section.templateId(1).extension = Nothing


            section.code = New CE()
            ' section.code.nullFlavor = "NA"
            section.code.code = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Procedures").Code
            '47519-4

            section.code.codeSystem = CodeSystem.LOINC
            section.code.codeSystemName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Procedures").CodingSystemName
            section.code.codeSystemVersion = Nothing
            section.code.displayName = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Procedures").Description
            'nothing
            section.title = New ST()
            section.title.Text = New String() {"Procedures"}

            section.title.language = Nothing
            section.text = New StrucDocText()
            section.text.mediaType = Nothing
            section.text.ID = Nothing
            section.text.language = Nothing



            If CDAWritingParams.Procedures = True Then
                If Not IsNothing(mPatient.PatientProcedures) AndAlso mPatient.PatientProcedures.Count > 0 Then
                    ''
                    ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                    ''
                    Dim sconf As CE
                    sconf = New CE()
                    sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                    If Not IsNothing(sconf.code) Then
                        section.confidentialityCode = sconf
                    End If
                    sconf = Nothing
                    ''
                    ''
                    section.text.Items = New Object(0) {}
                    section.text.Items(0) = New StrucDocTable()
                    table = DirectCast(section.text.Items(0), StrucDocTable)
                    table.ID = Nothing
                    table.language = Nothing
                    table.border = "1"
                    table.width = "100%"
                    table.thead = New StrucDocThead()
                    table.thead.ID = Nothing
                    table.thead.language = Nothing
                    table.thead.tr = New StrucDocTr(0) {}

                    table.thead.tr(0) = New StrucDocTr()
                    table.thead.tr(0).ID = Nothing
                    table.thead.tr(0).language = Nothing
                    table.thead.tr(0).Items = New Object(6) {}
                    table.thead.tr(0).Items(0) = New StrucDocTh()
                    DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Procedure Name"}
                    DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
                    table.thead.tr(0).Items(1) = New StrucDocTh()
                    DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"CPT Code"}
                    DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing
                    table.thead.tr(0).Items(2) = New StrucDocTh()
                    DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"SNOMED Code"}
                    DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing
                    table.thead.tr(0).Items(3) = New StrucDocTh()
                    DirectCast(table.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Diagnosis"}
                    DirectCast(table.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(3), StrucDocTh).language = Nothing
                    table.thead.tr(0).Items(4) = New StrucDocTh()
                    DirectCast(table.thead.tr(0).Items(4), StrucDocTh).Text = New String() {"Provider"}
                    DirectCast(table.thead.tr(0).Items(4), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(4), StrucDocTh).language = Nothing
                    table.thead.tr(0).Items(5) = New StrucDocTh()
                    DirectCast(table.thead.tr(0).Items(5), StrucDocTh).Text = New String() {"Service Date"}
                    DirectCast(table.thead.tr(0).Items(5), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(5), StrucDocTh).language = Nothing
                    table.thead.tr(0).Items(6) = New StrucDocTh()
                    DirectCast(table.thead.tr(0).Items(6), StrucDocTh).Text = New String() {"Status"}
                    DirectCast(table.thead.tr(0).Items(6), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(6), StrucDocTh).language = Nothing

                    table.tbody = New StrucDocTbody(0) {}
                    table.tbody(0) = New StrucDocTbody()
                    table.tbody(0).ID = Nothing
                    table.tbody(0).language = Nothing
                    table.tbody(0).tr = New StrucDocTr(mPatient.PatientProcedures.Count - 1) {}

                    For procs As Integer = 0 To mPatient.PatientProcedures.Count - 1
                        Dim oProcedure As Procedures = mPatient.PatientProcedures.Item(procs)
                        table.tbody(0).tr(procs) = New StrucDocTr()
                        table.tbody(0).tr(procs).Items = New Object(6) {}
                        table.tbody(0).tr(procs).Items(0) = New StrucDocTd()
                        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                            DirectCast(table.tbody(0).tr(procs).Items(0), StrucDocTd).Items = New StrucDocContent(0) {}
                            DirectCast(table.tbody(0).tr(procs).Items(0), StrucDocTd).Items(0) = New StrucDocContent
                            DirectCast(DirectCast(table.tbody(0).tr(procs).Items(0), StrucDocTd).Items(0), StrucDocContent).ID = "Proc" & procs + 1
                            DirectCast(DirectCast(table.tbody(0).tr(procs).Items(0), StrucDocTd).Items(0), StrucDocContent).language = Nothing

                        End If

                        table.tbody(0).tr(procs).ID = "PROCEDURESUMMARY_" & procs + 1 & ""
                        table.tbody(0).tr(procs).language = Nothing

                        DirectCast(table.tbody(0).tr(procs).Items(0), StrucDocTd).Text = New String() {oProcedure.CPTDescription}
                        DirectCast(table.tbody(0).tr(procs).Items(0), StrucDocTd).ID = Nothing
                        DirectCast(table.tbody(0).tr(procs).Items(0), StrucDocTd).language = Nothing
                        table.tbody(0).tr(procs).Items(1) = New StrucDocTd()
                        DirectCast(table.tbody(0).tr(procs).Items(1), StrucDocTd).Text = New String() {oProcedure.CPTCode}
                        DirectCast(table.tbody(0).tr(procs).Items(1), StrucDocTd).ID = Nothing
                        DirectCast(table.tbody(0).tr(procs).Items(1), StrucDocTd).language = Nothing
                        table.tbody(0).tr(procs).Items(2) = New StrucDocTd()
                        DirectCast(table.tbody(0).tr(procs).Items(2), StrucDocTd).Text = New String() {oProcedure.SnomedCode}
                        DirectCast(table.tbody(0).tr(procs).Items(2), StrucDocTd).ID = Nothing
                        DirectCast(table.tbody(0).tr(procs).Items(2), StrucDocTd).language = Nothing
                        table.tbody(0).tr(procs).Items(3) = New StrucDocTd()
                        DirectCast(table.tbody(0).tr(procs).Items(3), StrucDocTd).Text = New String() {oProcedure.ICD9Description}
                        DirectCast(table.tbody(0).tr(procs).Items(3), StrucDocTd).ID = Nothing
                        DirectCast(table.tbody(0).tr(procs).Items(3), StrucDocTd).language = Nothing
                        table.tbody(0).tr(procs).Items(4) = New StrucDocTd()
                        If Not IsNothing(oProcedure.ProviderSuffix) AndAlso oProcedure.ProviderSuffix <> "" Then
                            DirectCast(table.tbody(0).tr(procs).Items(4), StrucDocTd).Text = New String() {oProcedure.ProviderFirstName & " " & oProcedure.ProviderLastName & ", " & oProcedure.ProviderSuffix}
                        Else
                            DirectCast(table.tbody(0).tr(procs).Items(4), StrucDocTd).Text = New String() {oProcedure.ProviderFirstName & " " & oProcedure.ProviderLastName}
                        End If

                        DirectCast(table.tbody(0).tr(procs).Items(4), StrucDocTd).ID = Nothing
                        DirectCast(table.tbody(0).tr(procs).Items(4), StrucDocTd).language = Nothing
                        table.tbody(0).tr(procs).Items(5) = New StrucDocTd()
                        DirectCast(table.tbody(0).tr(procs).Items(5), StrucDocTd).Text = New String() {oProcedure.DateOfService}
                        DirectCast(table.tbody(0).tr(procs).Items(5), StrucDocTd).ID = Nothing
                        DirectCast(table.tbody(0).tr(procs).Items(5), StrucDocTd).language = Nothing

                        table.tbody(0).tr(procs).Items(6) = New StrucDocTd()
                        DirectCast(table.tbody(0).tr(procs).Items(6), StrucDocTd).Text = New String() {oProcedure.Status}
                        DirectCast(table.tbody(0).tr(procs).Items(6), StrucDocTd).ID = Nothing
                        DirectCast(table.tbody(0).tr(procs).Items(6), StrucDocTd).language = Nothing

                        If Not IsNothing(oProcedure) Then
                            oProcedure.Dispose()
                            oProcedure = Nothing
                        End If
                    Next
                Else
                    'section.text.Text = New String() {"No known procedures for patient"}
                    'If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                    '    section.text.Items = New StrucDocContent(0) {}
                    '    section.text.Items(0) = New StrucDocContent
                    '    DirectCast(section.text.Items(0), StrucDocContent).ID = "Proc" & 0
                    '    DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                    'End If
                End If
                If Not IsNothing(mPatient.PatientProcedures) AndAlso mPatient.PatientProcedures.Count > 0 Then
                    _Procedurescnt = mPatient.PatientProcedures.Count
                    section.entry = New POCD_MT000040UV02Entry(_Procedurescnt - 1) {}
                    Dim oProcedures As Procedures = Nothing
                    For procs As Integer = 0 To _Procedurescnt - 1


                        section.entry(procs) = New POCD_MT000040UV02Entry()
                        section.entry(procs).typeCodeSpecified = False
                        section.entry(procs).typeCode = Nothing
                        section.entry(procs).Item = New POCD_MT000040UV02Procedure
                        pro = DirectCast(section.entry(procs).Item, POCD_MT000040UV02Procedure)
                        pro.moodCode = x_DocumentProcedureMood.EVN
                        pro.moodCodeSpecified = True
                        pro.classCode = ActClassProcedure.PROC
                        pro.id = New II(0) {}
                        pro.id(0) = New II()
                        pro.id(0).root = Guid.NewGuid().ToString()
                        pro.id(0).extension = Nothing
                        pro.id(0).assigningAuthorityName = Nothing
                        pro.templateId = New II(1) {}
                        pro.templateId(0) = New II()
                        pro.templateId(0).root = oTemplateIDMaster.GetEntryID("Procedure Activity Procedure")
                        '2.16.840.1.113883.10.20.22.4.14
                        pro.templateId(0).extension = _DateExtension22
                        pro.templateId(0).assigningAuthorityName = Nothing

                        pro.templateId(1) = New II()
                        pro.templateId(1).root = oTemplateIDMaster.GetEntryID("Procedure Activity Procedure")
                        '2.16.840.1.113883.10.20.22.4.14
                        pro.templateId(1).extension = Nothing
                        pro.templateId(1).assigningAuthorityName = Nothing

                        pro.code = New CD()

                        pro.code.translation = New CD(2) {}
                        pro.code.translation(0) = New CD()
                        If Not IsNothing(mPatient.PatientProcedures) AndAlso mPatient.PatientProcedures.Count > 0 Then
                            oProcedures = mPatient.PatientProcedures.Item(procs)
                            'Else
                            '    oProcedures = New Procedures
                        End If
                        If Not IsNothing(oProcedures.SnomedCode) AndAlso oProcedures.SnomedCode <> "" Then
                            pro.code.code = oProcedures.SnomedCode
                            pro.code.codeSystem = CodeSystem.SNOMED_CT
                            pro.code.codeSystemName = "SNOMED CT"
                            pro.code.codeSystemVersion = Nothing
                            If Not IsNothing(oProcedures.SnomedDescription) AndAlso oProcedures.SnomedDescription <> "" Then
                                pro.code.displayName = oProcedures.SnomedDescription
                            Else
                                pro.code.displayName = Nothing
                            End If
                        Else
                            pro.code.nullFlavorSpecified = True
                            pro.code.nullFlavor = "NI"
                        End If
                     

                        pro.code.originalText = New ED()
                        pro.code.originalText.language = Nothing
                        'pro.code.originalText.reference = New TEL()
                        'pro.code.originalText.reference.value = Nothing

                        ''
                        If Not IsNothing(oProcedures.ICD9_code) AndAlso oProcedures.ICD9_code <> "" Then
                            pro.code.translation(0).code = oProcedures.ICD9_code
                            ''Added ICD10 revision-20140210
                            If Not IsNothing(oProcedures.ICDRevision) AndAlso oProcedures.ICDRevision <> 0 Then
                                If oProcedures.ICDRevision = 9 Then
                                    pro.code.translation(0).codeSystem = "2.16.840.1.113883.6.104"
                                    pro.code.translation(0).codeSystemName = Nothing
                                    pro.code.translation(0).displayName = Nothing
                                    pro.code.translation(0).codeSystemVersion = Nothing

                                ElseIf oProcedures.ICDRevision = 10 Then
                                    pro.code.translation(0).codeSystem = CodeSystem.ICD10
                                    pro.code.translation(0).codeSystemName = "ICD10CM"
                                    pro.code.translation(0).displayName = Nothing
                                    pro.code.translation(0).codeSystemVersion = Nothing


                                End If
                            Else
                                pro.code.translation(0).codeSystem = "2.16.840.1.113883.6.104"
                                pro.code.translation(0).codeSystemName = Nothing
                                pro.code.translation(0).displayName = Nothing
                                pro.code.translation(0).codeSystemVersion = Nothing
                            End If
                        Else
                            pro.code.translation(0).code = Nothing
                            pro.code.translation(0) = Nothing
                        End If



                        ''
                        pro.code.translation(1) = New CD()
                        If Not IsNothing(oProcedures.CPTCode) AndAlso oProcedures.CPTCode <> "" Then
                            pro.code.translation(1).code = oProcedures.CPTCode
                            pro.code.translation(1).codeSystem = CodeSystem.HCP
                            pro.code.translation(1).codeSystemName = "HCP"
                            pro.code.translation(1).displayName = Nothing
                            pro.code.translation(1).codeSystemVersion = Nothing
                        Else
                            pro.code.translation(1).code = Nothing
                            pro.code.translation(1) = Nothing
                        End If

                        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                            pro.code.originalText = New ED()
                            pro.code.originalText.Text = Nothing
                            pro.code.originalText.reference = New TEL()
                            pro.code.originalText.reference.value = "#Proc" & procs + 1
                            pro.code.originalText.language = Nothing

                        End If


                        pro.code.translation(2) = New CD()
                        If Not IsNothing(oProcedures.CPTCode) AndAlso oProcedures.CPTCode <> "" Then
                            pro.code.translation(2).code = oProcedures.CPTCode
                            pro.code.translation(2).codeSystem = CodeSystem.CPT
                            pro.code.translation(2).codeSystemName = "CPT-4"
                            If oProcedures.CPTDescription <> "" Then
                                pro.code.translation(2).displayName = oProcedures.CPTDescription
                            Else
                                pro.code.translation(2).displayName = Nothing
                            End If
                            pro.code.translation(2).codeSystemVersion = Nothing
                        Else
                            pro.code.translation(2).code = Nothing
                            pro.code.translation(2) = Nothing
                        End If


                        pro.text = New ED()
                        pro.text.reference = New TEL()
                        pro.text.reference.value = "#PROCEDURESUMMARY_" & procs + 1 & ""
                        pro.statusCode = New CS()
                        If IsNothing(mPatient.PatientProcedures) Then
                            pro.statusCode.code = "completed"
                        Else
                            If oProcedures.Status = "" Then
                                pro.statusCode.code = "active"
                            Else
                                pro.statusCode.code = oProcedures.Status
                            End If

                        End If
                        If oProcedures.Status = "" Then
                            pro.statusCode.code = "active"
                        Else
                            pro.statusCode.code = oProcedures.Status
                        End If

                        pro.statusCode.codeSystem = Nothing
                        pro.statusCode.codeSystemName = Nothing
                        pro.statusCode.codeSystemVersion = Nothing
                        pro.statusCode.displayName = Nothing

                        pro.effectiveTime = New IVL_TS()
                        pro.effectiveTime.value = Nothing
                        pro.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
                        pro.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
                        pro.effectiveTime.Items = New QTY(1) {}
                        pro.effectiveTime.Items(0) = New IVXB_TS()
                        If Not IsNothing(oProcedures.DateOfService) AndAlso oProcedures.DateOfService <> "" Then
                            DirectCast(pro.effectiveTime.Items(0), IVXB_TS).value = Format(CType(oProcedures.DateOfService, Date), "yyyyMMdd")
                        Else
                            DirectCast(pro.effectiveTime.Items(0), IVXB_TS).nullFlavor = "UNK"
                            DirectCast(pro.effectiveTime.Items(0), IVXB_TS).value = Nothing
                        End If
                        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                            pro.targetSiteCode = New CD(0) {}
                            pro.targetSiteCode(0) = New CD()
                            pro.targetSiteCode(0).nullFlavor = "NI"
                            pro.targetSiteCode(0).code = Nothing
                            pro.targetSiteCode(0).codeSystem = Nothing
                            pro.targetSiteCode(0).codeSystemName = Nothing
                            pro.targetSiteCode(0).codeSystemVersion = Nothing
                            pro.targetSiteCode(0).displayName = Nothing

                            'performer
                            pro.performer = New POCD_MT000040UV02Performer2(0) {}
                            pro.performer(0) = New POCD_MT000040UV02Performer2()
                            pro.performer(0).assignedEntity = New POCD_MT000040UV02AssignedEntity
                            pro.performer(0).assignedEntity.classCode = Nothing
                            pro.performer(0).assignedEntity.classCodeSpecified = False
                            pro.performer(0).assignedEntity.id = New II(0) {}
                            pro.performer(0).assignedEntity.id(0) = New II

                            pro.performer(0).assignedEntity.id(0).root = "2.16.840.1.113883.19.5"
                            pro.performer(0).assignedEntity.id(0).extension = "1234"
                            pro.performer(0).assignedEntity.id(0).assigningAuthorityName = Nothing





                            pro.performer(0).assignedEntity.addr = New AD(0) {}
                            pro.performer(0).assignedEntity.addr(0) = New AD()
                            pro.performer(0).assignedEntity.addr(0).nullFlavor = "UNK"



                            'pro.performer(0).assignedEntity.addr(0).Items = New ADXP(4) {}
                            'pro.performer(0).assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()
                            'pro.performer(0).assignedEntity.addr(0).Items(0).Text = Nothing
                            'pro.performer(0).assignedEntity.addr(0).Items(0).language = Nothing
                            'pro.performer(0).assignedEntity.addr(0).Items(0).partType = Nothing

                            'pro.performer(0).assignedEntity.addr(0).Items(1) = New adxpcity()
                            'pro.performer(0).assignedEntity.addr(0).Items(1).Text = Nothing
                            'pro.performer(0).assignedEntity.addr(0).Items(1).language = Nothing
                            'pro.performer(0).assignedEntity.addr(0).Items(1).partType = Nothing

                            'pro.performer(0).assignedEntity.addr(0).Items(2) = New adxpstate()
                            'pro.performer(0).assignedEntity.addr(0).Items(2).Text = Nothing
                            'pro.performer(0).assignedEntity.addr(0).Items(2).language = Nothing
                            'pro.performer(0).assignedEntity.addr(0).Items(2).partType = Nothing

                            'pro.performer(0).assignedEntity.addr(0).Items(3) = New adxppostalCode()
                            'pro.performer(0).assignedEntity.addr(0).Items(3).Text = Nothing
                            'pro.performer(0).assignedEntity.addr(0).Items(3).language = Nothing
                            'pro.performer(0).assignedEntity.addr(0).Items(3).partType = Nothing


                            pro.performer(0).assignedEntity.telecom = New TEL(0) {}
                            pro.performer(0).assignedEntity.telecom(0) = New TEL()
                            pro.performer(0).assignedEntity.telecom(0).nullFlavor = "NI"
                            pro.performer(0).assignedEntity.telecom(0).value = Nothing
                            pro.performer(0).assignedEntity.telecom(0).use = Nothing

                            'pro.performer(0).assignedEntity.assignedPerson = New POCD_MT000040UV02Person
                            'pro.performer(0).assignedEntity.assignedPerson.classCode = Nothing
                            'pro.performer(0).assignedEntity.assignedPerson.determinerCode = Nothing
                            'pro.performer(0).assignedEntity.assignedPerson.name = New PN(0) {}
                            'pro.performer(0).assignedEntity.assignedPerson.name(0) = New PN
                            'pro.performer(0).assignedEntity.assignedPerson.name(0).Items = New ENXP(2) {}
                            'pro.performer(0).assignedEntity.assignedPerson.name(0).Items(0) = New enfamily()
                            'pro.performer(0).assignedEntity.assignedPerson.name(0).Items(0).Text = Nothing
                            'pro.performer(0).assignedEntity.assignedPerson.name(0).Items(0).language = Nothing
                            'pro.performer(0).assignedEntity.assignedPerson.name(0).Items(0).partType = Nothing

                            'pro.performer(0).assignedEntity.assignedPerson.name(0).Items(1) = New engiven()
                            'pro.performer(0).assignedEntity.assignedPerson.name(0).Items(1).Text = Nothing
                            'pro.performer(0).assignedEntity.assignedPerson.name(0).Items(1).language = Nothing
                            'pro.performer(0).assignedEntity.assignedPerson.name(0).Items(1).partType = Nothing

                            'pro.performer(0).assignedEntity.assignedPerson.name(0).Items(2) = New ensuffix()
                            'pro.performer(0).assignedEntity.assignedPerson.name(0).Items(2).Text = Nothing
                            'pro.performer(0).assignedEntity.assignedPerson.name(0).Items(2).language = Nothing
                            'pro.performer(0).assignedEntity.assignedPerson.name(0).Items(2).partType = Nothing

                            pro.performer(0).assignedEntity.representedOrganization = New POCD_MT000040UV02Organization
                            pro.performer(0).assignedEntity.representedOrganization.classCode = Nothing
                            pro.performer(0).assignedEntity.representedOrganization.classCodeSpecified = False
                            pro.performer(0).assignedEntity.representedOrganization.determinerCode = Nothing
                            pro.performer(0).assignedEntity.representedOrganization.id = New II(0) {}
                            pro.performer(0).assignedEntity.representedOrganization.id(0) = New II
                            pro.performer(0).assignedEntity.representedOrganization.id(0).assigningAuthorityName = Nothing
                            pro.performer(0).assignedEntity.representedOrganization.id(0).root = "2.16.840.1.113883.19.5"
                            pro.performer(0).assignedEntity.representedOrganization.id(0).extension = Nothing
                            pro.performer(0).assignedEntity.representedOrganization.name = New [ON](0) {}
                            pro.performer(0).assignedEntity.representedOrganization.name(0) = New [ON]
                            pro.performer(0).assignedEntity.representedOrganization.name(0).Text = Nothing
                            pro.performer(0).assignedEntity.representedOrganization.name(0).use = Nothing
                            pro.performer(0).assignedEntity.representedOrganization.telecom = New TEL(0) {}
                            pro.performer(0).assignedEntity.representedOrganization.telecom(0) = New TEL
                            pro.performer(0).assignedEntity.representedOrganization.telecom(0).value = Nothing
                            pro.performer(0).assignedEntity.representedOrganization.telecom(0).use = Nothing
                            pro.performer(0).assignedEntity.representedOrganization.telecom(0).nullFlavor = "UNK"

                            pro.performer(0).assignedEntity.representedOrganization.addr = New AD(0) {}
                            pro.performer(0).assignedEntity.representedOrganization.addr(0) = New AD()
                            pro.performer(0).assignedEntity.representedOrganization.addr(0).nullFlavor = "UNK"

                            If Not IsNothing(oProcedures.ImplantDeviceId) AndAlso oProcedures.ImplantDeviceId <> 0 Then
                                If Not IsNothing(mPatient.ImplantCol) AndAlso mPatient.ImplantCol.implants.Count > 0 Then
                                    Dim ImplantList = mPatient.ImplantCol.implants.Where(Function(p) p.DeviceID = Convert.ToString(oProcedures.ImplantDeviceId)).ToList()
                                    If CType(ImplantList, List(Of Implant)).Count > 0 Then
                                        Dim _implant As Implant = CType(ImplantList, List(Of Implant)).Item(0)
                                        pro.participant = New POCD_MT000040UV02Participant3(1) {}
                                        pro.participant(0) = New POCD_MT000040UV02Participant3
                                        getImplantProductInstance(pro.participant(0), _implant, 0)
                                    End If

                                End If





                            End If



                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items = New ADXP(4) {}
                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items(0) = New adxpstreetAddressLine()
                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items(0).Text = Nothing
                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items(0).language = Nothing
                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items(0).partType = Nothing

                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items(1) = New adxpcity()
                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items(1).Text = Nothing
                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items(1).language = Nothing
                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items(1).partType = Nothing

                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items(2) = New adxpstate()
                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items(2).Text = Nothing
                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items(2).language = Nothing
                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items(2).partType = Nothing

                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items(3) = New adxppostalCode()
                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items(3).Text = Nothing
                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items(3).language = Nothing
                            'pro.performer(0).assignedEntity.representedOrganization.addr(0).Items(3).partType = Nothing
                        End If
                        If Not IsNothing(oProcedures) Then
                            oProcedures.Dispose()
                            oProcedures = Nothing
                        End If
                    Next
                Else
                    If Not IsNothing(dtsec) Then

                        Dim dr As DataRow() = dtsec.Select("sSectionName='Procedures'")
                        If (dr.Length = 0) Then
                            _Procedures.section = NoInformationSection("Procedures", "Procedures")
                            '  section.text.Text = New String() {"No Information for Patient"}
                        ElseIf dr(0)(1) = "0" Then
                            _Procedures.section = NoInformationSection("Procedures", "Procedures")
                            '   section.text.Text = New String() {"No Information for Patient"}
                        Else

                            section.text.Text = New String() {"No known procedures for patient"}
                            If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                section.text.Items = New StrucDocContent(0) {}
                                section.text.Items(0) = New StrucDocContent
                                DirectCast(section.text.Items(0), StrucDocContent).ID = "Proc" & 0
                                DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                            End If
                            getNoProcedure(_Procedures)
                        End If
                    Else
                        _Procedures.section = NoInformationSection("Procedures", "Procedures")
                    End If
                    Return _Procedures

                End If
            Else
                'section.text.Text = New String() {"No known procedures for patient"}
                'If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                '    section.text.Items = New StrucDocContent(0) {}
                '    section.text.Items(0) = New StrucDocContent
                '    DirectCast(section.text.Items(0), StrucDocContent).ID = "Proc" & 0
                '    DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                'End If
                'getNoProcedure(_Procedures)
                If Not IsNothing(dtsec) Then

                    Dim dr As DataRow() = dtsec.Select("sSectionName='Procedures'")
                    If (dr.Length = 0) Then
                        _Procedures.section = NoInformationSection("Procedures", "Procedures")
                        '  section.text.Text = New String() {"No Information for Patient"}
                    ElseIf dr(0)(1) = "0" Then
                        _Procedures.section = NoInformationSection("Procedures", "Procedures")
                        '  section.text.Text = New String() {"No Information for Patient"}
                    Else

                        section.text.Text = New String() {"No known procedures for patient"}
                        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                            section.text.Items = New StrucDocContent(0) {}
                            section.text.Items(0) = New StrucDocContent
                            DirectCast(section.text.Items(0), StrucDocContent).ID = "Proc" & 0
                            DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                        End If
                        getNoProcedure(_Procedures)
                    End If
                Else
                    _Procedures.section = NoInformationSection("Procedures", "Procedures")
                End If
                Return _Procedures
            End If









            Return _Procedures
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Procedures Section"
            Else
                _msgString = _msgString & vbNewLine & "Procedures Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            '  MessageBox.Show("Error:" & ex.ToString())
            Return Nothing


        Finally
            If Not IsNothing(section) Then
                section = Nothing
            End If
            If Not IsNothing(table) Then
                table = Nothing
            End If
            If Not IsNothing(pro) Then
                pro = Nothing
            End If
            If Not IsNothing(ob) Then
                ob = Nothing
            End If
        End Try
    End Function
    Private Function GetCDAImmunizationComponent() As POCD_MT000040UV02Component3
        Dim _Immunizations As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim table As StrucDocTable = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim sadmin As POCD_MT000040UV02SubstanceAdministration = Nothing
        Dim _Immcnt As Integer = 0
        Try
            _Immunizations = New POCD_MT000040UV02Component3()
            _Immunizations.section = New POCD_MT000040UV02Section()

            section = _Immunizations.section
            'section.ID = Nothing
            section.classCodeSpecified = False
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            section.templateId = New II(1) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Immunizations")
            section.templateId(0).extension = _DateExtension2015
            section.templateId(0).assigningAuthorityName = Nothing

            section.templateId(1) = New II()
            section.templateId(1).root = oTemplateIDMaster.GetSectionID("Immunizations")
            section.templateId(1).extension = Nothing
            section.templateId(1).assigningAuthorityName = Nothing

            section.code = New CE()
            'section.code.nullFlavor = "NA"
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Immunizations")
            If _CodeSysItem IsNot Nothing Then
                section.code.code = _CodeSysItem.Code
                section.code.codeSystem = CodeSystem.LOINC
                section.code.codeSystemName = _CodeSysItem.CodingSystemName
                section.code.codeSystemVersion = Nothing
                section.code.displayName = _CodeSysItem.Description
            Else
                section.code = Nothing
            End If

            section.title = New ST()
            If CDAWritingParams.CDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                section.title.Text = New String() {"Immunizations"}
            Else
                section.title.Text = New String() {_CodeSysItem.Description}
            End If

            section.title.language = Nothing
            section.text = New StrucDocText()
            section.text.ID = Nothing
            section.text.language = Nothing


            If Not IsNothing(mPatient.PatientImmunizations) AndAlso mPatient.PatientImmunizations.Count > 0 Then
                ''
                ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                If Not IsNothing(sconf.code) Then
                    section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''
                ''

                section.text.Items = New Object(0) {}
                section.text.Items(0) = New StrucDocTable()
                table = DirectCast(section.text.Items(0), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}
                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(9) {}
                table.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Vaccine"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"CVX"}
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Route"}
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(3) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Route Code"}
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(4) = New StrucDocTh()
                If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Then
                    DirectCast(table.thead.tr(0).Items(4), StrucDocTh).Text = New String() {"Administered/Reported Date"}
                Else
                    DirectCast(table.thead.tr(0).Items(4), StrucDocTh).Text = New String() {"Administered Date"}
                End If
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).language = Nothing

                table.thead.tr(0).Items(5) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).Text = New String() {"Status"}
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).language = Nothing

                table.thead.tr(0).Items(6) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).Text = New String() {"Additional Notes"}
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).language = Nothing

                table.thead.tr(0).Items(7) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(7), StrucDocTh).Text = New String() {"Lot Number"}
                DirectCast(table.thead.tr(0).Items(7), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(7), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(8) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(8), StrucDocTh).Text = New String() {"Manufacturer"}
                DirectCast(table.thead.tr(0).Items(8), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(8), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(9) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(9), StrucDocTh).Text = New String() {"NDC Code"}
                DirectCast(table.thead.tr(0).Items(9), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(9), StrucDocTh).language = Nothing


                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing
                table.tbody(0).tr = New StrucDocTr(mPatient.PatientImmunizations.Count - 1) {}
                Dim Vaccinentry As Immunization = Nothing
                For ai As Integer = 0 To mPatient.PatientImmunizations.Count - 1
                    Vaccinentry = mPatient.PatientImmunizations.Item(ai)
                    table.tbody(0).tr(ai) = New StrucDocTr()
                    table.tbody(0).tr(ai).ID = Nothing
                    table.tbody(0).tr(ai).language = Nothing
                    table.tbody(0).tr(ai).Items = New Object(9) {}
                    table.tbody(0).tr(ai).Items(0) = New StrucDocTd()
                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                        DirectCast(table.tbody(0).tr(ai).Items(0), StrucDocTd).Items = New StrucDocContent(0) {}
                        DirectCast(table.tbody(0).tr(ai).Items(0), StrucDocTd).Items(0) = New StrucDocContent
                        DirectCast(DirectCast(table.tbody(0).tr(ai).Items(0), StrucDocTd).Items(0), StrucDocContent).ID = "ImmunizationProduct_" & ai + 1
                        DirectCast(DirectCast(table.tbody(0).tr(ai).Items(0), StrucDocTd).Items(0), StrucDocContent).language = Nothing
                    End If
                    table.tbody(0).tr(ai).ID = "Immu" & ai + 1 & ""
                    DirectCast(table.tbody(0).tr(ai).Items(0), StrucDocTd).Text = New String() {Vaccinentry.VaccineName}
                    DirectCast(table.tbody(0).tr(ai).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(0), StrucDocTd).language = Nothing
                    table.tbody(0).tr(ai).Items(1) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(1), StrucDocTd).Text = New String() {Vaccinentry.VaccineCode}
                    DirectCast(table.tbody(0).tr(ai).Items(1), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(1), StrucDocTd).language = Nothing
                    table.tbody(0).tr(ai).Items(2) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(2), StrucDocTd).Text = New String() {Vaccinentry.Route}
                    DirectCast(table.tbody(0).tr(ai).Items(2), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(2), StrucDocTd).language = Nothing
                    table.tbody(0).tr(ai).Items(3) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(3), StrucDocTd).Text = New String() {Vaccinentry.RouteCode}
                    DirectCast(table.tbody(0).tr(ai).Items(3), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(3), StrucDocTd).language = Nothing
                    table.tbody(0).tr(ai).Items(4) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(4), StrucDocTd).Text = New String() {Vaccinentry.ImmunizationDate.ToString()}
                    DirectCast(table.tbody(0).tr(ai).Items(4), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(4), StrucDocTd).language = Nothing
                    table.tbody(0).tr(ai).Items(5) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(5), StrucDocTd).Text = New String() {Vaccinentry.ImmunizationStatus}
                    DirectCast(table.tbody(0).tr(ai).Items(5), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(5), StrucDocTd).language = Nothing
                    table.tbody(0).tr(ai).Items(6) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(6), StrucDocTd).Text = New String() {Vaccinentry.ImmunizationNotes}
                    DirectCast(table.tbody(0).tr(ai).Items(6), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(6), StrucDocTd).language = Nothing
                    table.tbody(0).tr(ai).Items(7) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(7), StrucDocTd).Text = New String() {Vaccinentry.LotNumber}
                    DirectCast(table.tbody(0).tr(ai).Items(7), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(7), StrucDocTd).language = Nothing
                    table.tbody(0).tr(ai).Items(8) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(8), StrucDocTd).Text = New String() {Vaccinentry.Manufacture}
                    DirectCast(table.tbody(0).tr(ai).Items(8), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(8), StrucDocTd).language = Nothing

                    table.tbody(0).tr(ai).Items(9) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(9), StrucDocTd).Text = New String() {Vaccinentry.NDCCODE}
                    DirectCast(table.tbody(0).tr(ai).Items(9), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(9), StrucDocTd).language = Nothing
                Next
                If Not IsNothing(Vaccinentry) Then
                    Vaccinentry.Dispose()
                    Vaccinentry = Nothing
                End If
            Else
                ' section.text.Text = New String() {"No known immunization history"}
                'If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                '    section.text.Items = New StrucDocContent(0) {}
                '    section.text.Items(0) = New StrucDocContent
                '    'DirectCast(section.text.Items(0), StrucDocContent).ID = "Immu" & 1
                '    DirectCast(section.text.Items(0), StrucDocContent).ID = Nothing
                '    DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                'End If
            End If

            If Not IsNothing(mPatient.PatientImmunizations) AndAlso mPatient.PatientImmunizations.Count > 0 Then
                _Immcnt = mPatient.PatientImmunizations.Count
                section.entry = New POCD_MT000040UV02Entry(_Immcnt - 1) {}
                Dim Vaccineentry As Immunization = Nothing
                For cnt As Integer = 0 To _Immcnt - 1
                    If Not IsNothing(mPatient.PatientImmunizations) AndAlso mPatient.PatientImmunizations.Count > 0 Then
                        Vaccineentry = mPatient.PatientImmunizations.Item(cnt)
                        'Else
                        '    Vaccineentry = New Immunization
                    End If


                    section.entry(cnt) = New POCD_MT000040UV02Entry()
                    section.entry(cnt).typeCode = x_ActRelationshipEntry.DRIV
                    section.entry(cnt).Item = New POCD_MT000040UV02SubstanceAdministration()
                    sadmin = section.entry(cnt).Item
                    sadmin.moodCode = x_DocumentSubstanceMood.EVN
                    sadmin.moodCodeSpecified = True
                    sadmin.classCode = ActClass.SBADM
                    If String.Equals(Vaccineentry.ImmunizationStatus, "Cancelled", StringComparison.OrdinalIgnoreCase) Then
                        sadmin.negationInd = True
                        sadmin.negationIndSpecified = Boolean.TrueString
                    Else
                        sadmin.negationInd = False
                        sadmin.negationIndSpecified = True
                    End If
                    sadmin.templateId = New II(1) {}
                    sadmin.templateId(0) = New II()
                    sadmin.templateId(0).root = oTemplateIDMaster.GetEntryID("Immunization Activity")
                    sadmin.templateId(0).assigningAuthorityName = Nothing
                    sadmin.templateId(0).extension = _DateExtension2015

                    sadmin.templateId(1) = New II()
                    sadmin.templateId(1).root = oTemplateIDMaster.GetEntryID("Immunization Activity")
                    sadmin.templateId(1).assigningAuthorityName = Nothing
                    sadmin.templateId(1).extension = Nothing

                    sadmin.id = New II(0) {}
                    sadmin.id(0) = New II()
                    sadmin.id(0).root = Guid.NewGuid().ToString()
                    'getImmunization root Id
                    Vaccineentry.GUID = sadmin.id(0).root
                    sadmin.id(0).extension = Nothing
                    sadmin.id(0).assigningAuthorityName = Nothing
                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                        sadmin.text = New ED()
                        sadmin.text.language = Nothing
                        sadmin.text.mediaType = Nothing
                        sadmin.text.reference = New TEL()
                        sadmin.text.reference.value = "#Immu" & cnt + 1
                    End If
                    sadmin.statusCode = New CS()
                    'If Vaccineentry.ImmunizationStatus <> "" AndAlso Vaccineentry.ImmunizationStatus <> "Cancelled" Then
                    '    sadmin.statusCode.code = Convert.ToString(Vaccineentry.ImmunizationStatus).ToLower()
                    'Else
                    '    sadmin.statusCode.code = "completed"
                    'End If

                    'commented above code to insert whatever status is given in test data. If only completed is required instead of cancelled then comment below and uncomment above code
                    If Vaccineentry.ImmunizationStatus <> "" Then
                        sadmin.statusCode.code = Convert.ToString(Vaccineentry.ImmunizationStatus).ToLower()
                    Else
                        sadmin.statusCode.code = "completed"
                    End If
                    sadmin.statusCode.codeSystem = Nothing
                    sadmin.statusCode.codeSystemName = Nothing
                    sadmin.statusCode.codeSystemVersion = Nothing
                    sadmin.statusCode.displayName = Nothing
                    sadmin.effectiveTime = New SXCM_TS(0) {}
                    sadmin.effectiveTime(0) = New SXCM_TS()
                    If Vaccineentry.ImmunizationDate IsNot Nothing AndAlso Vaccineentry.ImmunizationDate <> "" Then
                        sadmin.effectiveTime(0).value = Format(CType(Vaccineentry.ImmunizationDate, Date), "yyyyMMdd")
                    Else
                        sadmin.effectiveTime(0).value = Nothing
                    End If
                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                        sadmin.doseQuantity = New IVL_PQ()
                        sadmin.doseQuantity.nullFlavor = "NI"
                        sadmin.doseQuantity.value = Nothing
                    End If
                    sadmin.consumable = New POCD_MT000040UV02Consumable()
                    sadmin.consumable.manufacturedProduct = New POCD_MT000040UV02ManufacturedProduct()
                    sadmin.consumable.manufacturedProduct.classCode = RoleClass.MANU
                    sadmin.consumable.manufacturedProduct.templateId = New II(1) {}
                    sadmin.consumable.manufacturedProduct.templateId(0) = New II()
                    sadmin.consumable.manufacturedProduct.templateId(0).root = oTemplateIDMaster.GetEntryID("Immunization Medication Information")
                    sadmin.consumable.manufacturedProduct.templateId(0).extension = _DateExtension22
                    sadmin.consumable.manufacturedProduct.templateId(0).assigningAuthorityName = Nothing

                    sadmin.consumable.manufacturedProduct.templateId(1) = New II()
                    sadmin.consumable.manufacturedProduct.templateId(1).root = oTemplateIDMaster.GetEntryID("Immunization Medication Information")
                    sadmin.consumable.manufacturedProduct.templateId(1).extension = Nothing
                    sadmin.consumable.manufacturedProduct.templateId(1).assigningAuthorityName = Nothing


                    sadmin.consumable.manufacturedProduct.Item = New POCD_MT000040UV02Material()
                    Dim mat As POCD_MT000040UV02Material = DirectCast(sadmin.consumable.manufacturedProduct.Item, POCD_MT000040UV02Material)
                    If Vaccineentry.VaccineCode IsNot Nothing AndAlso Vaccineentry.VaccineCode <> "" Then
                        mat.code = New CE()
                        mat.code.code = If(Vaccineentry.VaccineCode IsNot Nothing AndAlso Vaccineentry.VaccineCode <> "", Vaccineentry.VaccineCode, Nothing)
                        mat.code.codeSystem = CodeSystem.CVXCode
                        mat.code.codeSystemName = "Vaccines administered (CVX)"
                        mat.code.codeSystemVersion = Nothing
                        mat.code.displayName = If(Vaccineentry.VaccineName IsNot Nothing AndAlso Vaccineentry.VaccineName <> "", Vaccineentry.VaccineName, Nothing)
                        If Vaccineentry.NDCCODE <> "" Then
                            mat.code.translation = New CD(0) {}
                            mat.code.translation(0) = New CD
                            mat.code.translation(0).code = Vaccineentry.NDCCODE
                            mat.code.translation(0).codeSystem = CodeSystem.NDC
                            mat.code.translation(0).codeSystemName = "NDC"
                            mat.code.translation(0).codeSystemVersion = Nothing
                        End If

                        If Vaccineentry.VaccineName IsNot Nothing AndAlso Vaccineentry.VaccineName <> "" Then
                            mat.code.originalText = New ED()
                            mat.code.originalText.language = Nothing
                            If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                mat.code.originalText.mediaType = Nothing
                                mat.code.originalText.reference = New TEL()
                                mat.code.originalText.reference.value = "#ImmunizationProduct_" & cnt + 1
                            Else
                                mat.code.originalText.Text = New String() {Vaccineentry.VaccineName}
                            End If
                        Else
                            mat.code.originalText = Nothing
                        End If
                    Else
                        mat.code = New CE()
                        mat.code.nullFlavor = "NI"
                        mat.code.code = Nothing
                        mat.code.codeSystem = Nothing
                        mat.code.codeSystemName = Nothing
                        mat.code.codeSystemVersion = Nothing
                        mat.code.displayName = Nothing
                        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                            mat.code.originalText = New ED()
                            mat.code.originalText.language = Nothing
                            mat.code.originalText.mediaType = Nothing
                            mat.code.originalText.reference = New TEL()
                            mat.code.originalText.reference.value = "#ImmunizationProduct_" & cnt + 1
                        End If
                    End If
                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                        mat.lotNumberText = New ST()
                        mat.lotNumberText.language = Nothing
                        mat.lotNumberText.mediaType = Nothing
                        If Vaccineentry.LotNumber <> "" Then
                            mat.lotNumberText.Text = New String() {Vaccineentry.LotNumber}
                        Else
                            mat.lotNumberText.nullFlavor = "NI"
                        End If


                        sadmin.consumable.manufacturedProduct.manufacturerOrganization = New POCD_MT000040UV02Organization()
                        If Vaccineentry.Manufacture <> "" Then
                            sadmin.consumable.manufacturedProduct.manufacturerOrganization.name = New [ON](1) {}
                            sadmin.consumable.manufacturedProduct.manufacturerOrganization.name(0) = New [ON]
                            sadmin.consumable.manufacturedProduct.manufacturerOrganization.name(0).Text = New String() {Vaccineentry.Manufacture}
                        Else
                            sadmin.consumable.manufacturedProduct.manufacturerOrganization.nullFlavor = "NI"
                        End If

                        sadmin.consumable.manufacturedProduct.manufacturerOrganization.classCode = Nothing
                        sadmin.consumable.manufacturedProduct.manufacturerOrganization.classCodeSpecified = False
                        sadmin.consumable.manufacturedProduct.manufacturerOrganization.determinerCode = Nothing

                        sadmin.performer = New POCD_MT000040UV02Performer2(0) {}
                        sadmin.performer(0) = New POCD_MT000040UV02Performer2()

                        sadmin.performer(0).assignedEntity = New POCD_MT000040UV02AssignedEntity()
                        sadmin.performer(0).assignedEntity.classCode = Nothing
                        sadmin.performer(0).assignedEntity.classCodeSpecified = False
                        sadmin.performer(0).assignedEntity.id = New II(0) {}
                        sadmin.performer(0).assignedEntity.id(0) = New II()
                        sadmin.performer(0).assignedEntity.id(0).root = "2.16.840.1.113883.19.5.9999.456"
                        sadmin.performer(0).assignedEntity.id(0).extension = Nothing
                        sadmin.performer(0).assignedEntity.id(0).assigningAuthorityName = Nothing
                        sadmin.performer(0).assignedEntity.addr = New AD(0) {}
                        sadmin.performer(0).assignedEntity.addr(0) = New AD()
                        sadmin.performer(0).assignedEntity.addr(0).nullFlavor = "NI"
                        sadmin.performer(0).assignedEntity.telecom = New TEL(0) {}
                        sadmin.performer(0).assignedEntity.telecom(0) = New TEL()
                        sadmin.performer(0).assignedEntity.telecom(0).nullFlavor = "NI"
                        sadmin.performer(0).assignedEntity.telecom(0).value = Nothing
                        If String.Equals(Vaccineentry.ImmunizationStatus, "Cancelled", StringComparison.OrdinalIgnoreCase) Then
                            sadmin.entryRelationship = New POCD_MT000040UV02EntryRelationship(1) {}
                            sadmin.entryRelationship(0) = New POCD_MT000040UV02EntryRelationship()
                            sadmin.entryRelationship(0).typeCodeSpecified = True
                            sadmin.entryRelationship(0).typeCode = ActRelationshipType.RSON
                            Dim obs As New POCD_MT000040UV02Observation()
                            sadmin.entryRelationship(0).Item = New POCD_MT000040UV02Observation()
                            obs = DirectCast(sadmin.entryRelationship(0).Item, POCD_MT000040UV02Observation)
                            obs.classCodeSpecified = True
                            obs.classCode = ActClassObservation.OBS
                            obs.moodCodeSpecified = True
                            obs.moodCode = x_ActMoodDocumentObservation.EVN
                            obs.templateId = New II(1) {}
                            obs.templateId(0) = New II()
                            obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Immunization Refused")
                            obs.id = New II(1) {}
                            obs.id(0) = New II()
                            obs.id(0).root = Guid.NewGuid.ToString()
                            obs.code = New CD()
                            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.NoImmunizationReason, "Patient Objection")
                            If Not IsNothing(_CodeSysItem) Then
                                obs.code.code = _CodeSysItem.Code
                                obs.code.codeSystem = _CodeSysItem.CodingSystem
                                obs.code.codeSystemName = _CodeSysItem.CodingSystemName
                                obs.code.displayName = _CodeSysItem.Description
                            Else
                                obs.code.nullFlavorSpecified = True
                                obs.code.nullFlavor = "UNK"
                            End If
                            obs.statusCode = New CS()
                            obs.statusCode.code = "completed"
                        End If
                    End If

                    If Not IsNothing(Vaccineentry) Then
                        Vaccineentry.Dispose()
                        Vaccineentry = Nothing
                    End If
                Next
            Else
                ''  getNoKnownImmunization(section.entry)
                Dim title As String = String.Empty
                If CDAWritingParams.CDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                    title = "Immunizations"
                Else
                    title = _CodeSysItem.Description
                End If
                If Not IsNothing(dtsec) Then


                    Dim dr As DataRow() = dtsec.Select("sSectionName='Immunizations'")
                    If (dr.Length = 0) Then
                        _Immunizations.section = NoInformationSection("Immunizations", title)
                        '  section.text.Text = New String() {"No Information for Patient"}
                    ElseIf dr(0)(1) = "0" Then
                        _Immunizations.section = NoInformationSection("Immunizations", title)
                        ' section.text.Text = New String() {"No Information for Patient"}
                    Else

                        section.text.Text = New String() {"No known immunization history"}
                        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                            section.text.Items = New StrucDocContent(0) {}
                            section.text.Items(0) = New StrucDocContent
                            'DirectCast(section.text.Items(0), StrucDocContent).ID = "Immu" & 1
                            DirectCast(section.text.Items(0), StrucDocContent).ID = Nothing
                            DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                        End If
                        getNoKnownImmunization(section.entry)
                    End If
                Else
                    _Immunizations.section = NoInformationSection("Immunizations", title)
                End If
            End If


            Return _Immunizations
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Immunization Section"
            Else
                _msgString = _msgString & vbNewLine & "Immunization Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            section = Nothing
            table = Nothing
            _CodeSysItem = Nothing
            sadmin = Nothing
        End Try
    End Function
    Private Sub getNoKnownImmunization(ByRef entry As POCD_MT000040UV02Entry())
        entry = New POCD_MT000040UV02Entry(0) {}
        entry(0) = New POCD_MT000040UV02Entry
        entry(0).typeCode = x_ActRelationshipEntry.DRIV
        Dim sadmin As POCD_MT000040UV02SubstanceAdministration
        entry(0).Item = New POCD_MT000040UV02SubstanceAdministration()
        sadmin = entry(0).Item
        sadmin.moodCode = x_DocumentSubstanceMood.EVN
        sadmin.moodCodeSpecified = True
        sadmin.classCode = ActClass.SBADM
        sadmin.negationInd = True
        sadmin.negationIndSpecified = True

        sadmin.templateId = New II(1) {}
        sadmin.templateId(0) = New II()
        sadmin.templateId(0).root = oTemplateIDMaster.GetEntryID("Immunization Activity")
        sadmin.templateId(0).assigningAuthorityName = Nothing
        sadmin.templateId(0).extension = _DateExtension2015

        sadmin.templateId(1) = New II()
        sadmin.templateId(1).root = oTemplateIDMaster.GetEntryID("Immunization Activity")
        sadmin.templateId(1).assigningAuthorityName = Nothing
        sadmin.templateId(1).extension = Nothing

        sadmin.id = New II(0) {}
        sadmin.id(0) = New II()
        sadmin.id(0).root = Guid.NewGuid().ToString()
        sadmin.id(0).extension = Nothing
        sadmin.id(0).assigningAuthorityName = Nothing
        'If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
        '    sadmin.text = New ED()
        '    sadmin.text.language = Nothing
        '    sadmin.text.mediaType = Nothing
        '    sadmin.text.reference = New TEL()
        '    sadmin.text.reference.value = "#Immu1"
        'End If
        sadmin.statusCode = New CS()
        sadmin.statusCode.code = "active"
        sadmin.statusCode.codeSystem = Nothing
        sadmin.statusCode.codeSystemName = Nothing
        sadmin.statusCode.codeSystemVersion = Nothing
        sadmin.statusCode.displayName = Nothing
        sadmin.effectiveTime = New SXCM_TS(0) {}
        sadmin.effectiveTime(0) = New SXCM_TS()
        sadmin.effectiveTime(0).nullFlavorSpecified = True
        sadmin.effectiveTime(0).nullFlavor = "NA"
        sadmin.consumable = New POCD_MT000040UV02Consumable()
        sadmin.consumable.manufacturedProduct = New POCD_MT000040UV02ManufacturedProduct()
        sadmin.consumable.manufacturedProduct.classCode = RoleClass.MANU
        sadmin.consumable.manufacturedProduct.templateId = New II(1) {}
        sadmin.consumable.manufacturedProduct.templateId(0) = New II()
        sadmin.consumable.manufacturedProduct.templateId(0).root = oTemplateIDMaster.GetEntryID("Immunization Medication Information")
        sadmin.consumable.manufacturedProduct.templateId(0).extension = _DateExtension22
        sadmin.consumable.manufacturedProduct.templateId(0).assigningAuthorityName = Nothing


        sadmin.consumable.manufacturedProduct.templateId(1) = New II()
        sadmin.consumable.manufacturedProduct.templateId(1).root = oTemplateIDMaster.GetEntryID("Immunization Medication Information")
        sadmin.consumable.manufacturedProduct.templateId(1).extension = Nothing
        sadmin.consumable.manufacturedProduct.templateId(1).assigningAuthorityName = Nothing


        sadmin.consumable.manufacturedProduct.Item = New POCD_MT000040UV02Material()
        Dim mat As POCD_MT000040UV02Material = DirectCast(sadmin.consumable.manufacturedProduct.Item, POCD_MT000040UV02Material)
        mat.code = New CE()
        mat.code.nullFlavorSpecified = True
        mat.code.nullFlavor = "OTH"
        mat.code.originalText = New ED()
        mat.code.originalText.language = Nothing
        mat.code.originalText.Text = New String() {"Vaccination"}
        mat.code.translation = New CD(1) {}
        mat.code.translation(0) = New CD
        Dim CodesystemItem As New CodeSystemItem
        CodesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "vaccine")
        mat.code.translation(0).code = CodesystemItem.Code
        mat.code.translation(0).codeSystem = CodesystemItem.CodingSystem
        mat.code.translation(0).codeSystemName = CodesystemItem.CodingSystemName
        mat.code.translation(0).displayName = CodesystemItem.Description
        If Not IsNothing(CodesystemItem) Then
            CodesystemItem = Nothing
        End If
        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
            mat.lotNumberText = New ST()
            mat.lotNumberText.language = Nothing
            mat.lotNumberText.mediaType = Nothing
            mat.lotNumberText.nullFlavor = "NA"
        End If
    End Sub
    Private Function GetCDAReasonForVisitComponent() As POCD_MT000040UV02Component3
        Dim _ReasonForVisit As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim table As StrucDocTable = Nothing
        Try
            _ReasonForVisit = New POCD_MT000040UV02Component3
            _ReasonForVisit.section = New POCD_MT000040UV02Section

            section = _ReasonForVisit.section
            section.classCodeSpecified = False
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            'section.ID = Nothing
            section.templateId = New II(0) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Reason For Visit")
            section.templateId(0).extension = Nothing
            section.templateId(0).assigningAuthorityName = Nothing
            section.code = New CE()
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Reason For Visit")
            If _CodeSysItem IsNot Nothing Then
                section.code.code = _CodeSysItem.Code
                section.code.codeSystem = CodeSystem.LOINC
                section.code.codeSystemName = _CodeSysItem.CodingSystemName
                section.code.codeSystemVersion = Nothing
                section.code.displayName = Nothing
            Else
                section.code = Nothing
            End If

            section.title = New ST()
            section.title.Text = New String() {"Reason for visit"}
            section.title.language = Nothing
            section.text = New StrucDocText()
            section.text.mediaType = Nothing
            section.text.ID = Nothing
            section.text.language = Nothing

           

            If mPatient.Chiefcomplaint IsNot Nothing AndAlso mPatient.Chiefcomplaint <> "" Then
                ''
                ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                If Not IsNothing(sconf.code) Then
                    section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''
                ''
                section.text.Items = New Object(0) {}
                section.text.Items(0) = New StrucDocTable
                table = DirectCast(section.text.Items(0), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}
                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(0) {}
                table.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Reason for visit"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing
                table.tbody(0).tr = New StrucDocTr(0) {}
                table.tbody(0).tr(0) = New StrucDocTr()
                table.tbody(0).tr(0).ID = Nothing
                table.tbody(0).tr(0).language = Nothing
                table.tbody(0).tr(0).Items = New Object(0) {}
                table.tbody(0).tr(0).Items(0) = New StrucDocTd()
                DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
                DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing

                DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).Text = New String() {mPatient.Chiefcomplaint}

            Else
                'section.text.Text = New String() {"No known Reason for visit"}
                _ReasonForVisit.section = NoInformationSection("Reason For Visit", "Reason for visit")
            End If
            Return _ReasonForVisit
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Reason For Visit Section"
            Else
                _msgString = _msgString & vbNewLine & "Reason For Visit Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            section = Nothing
            _CodeSysItem = Nothing
            table = Nothing
        End Try
    End Function
    Private Function GetCDAAssessments() As POCD_MT000040UV02Component3
        Dim _Assessment As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim table As StrucDocTable = Nothing
        Try
            _Assessment = New POCD_MT000040UV02Component3
            _Assessment.section = New POCD_MT000040UV02Section

            section = _Assessment.section
            section.classCodeSpecified = False
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            'section.ID = Nothing
            section.templateId = New II(0) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Assessments")
            section.templateId(0).extension = Nothing
            section.templateId(0).assigningAuthorityName = Nothing
            section.code = New CE()
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Assessments")
            If _CodeSysItem IsNot Nothing Then
                section.code.code = _CodeSysItem.Code
                section.code.codeSystem = CodeSystem.LOINC
                section.code.codeSystemName = _CodeSysItem.CodingSystemName
                section.code.codeSystemVersion = Nothing
                section.code.displayName = Nothing
            Else
                section.code = Nothing
            End If



            section.title = New ST()
            section.title.Text = New String() {"Assessments"}
            section.title.language = Nothing
            section.text = New StrucDocText()
            section.text.mediaType = Nothing
            section.text.ID = Nothing
            section.text.language = Nothing
            If mPatient.Assessment IsNot Nothing AndAlso Convert.ToString(mPatient.Assessment) <> "" Then
                section.text.Text = New String() {mPatient.Assessment}
                ''
                ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                If Not IsNothing(sconf.code) Then
                    section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''
                ''
            Else
                _Assessment.section = NoInformationSection("Assessments", "Assessments")
            End If
            Return _Assessment
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Assessment Section"
            Else
                _msgString = _msgString & vbNewLine & "Assessment Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            section = Nothing
            _CodeSysItem = Nothing
            table = Nothing
        End Try
    End Function
    Private Function GetCDAClinicalInstructionsComponent() As POCD_MT000040UV02Component3
        Dim _ClinicalInstructions As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim act As POCD_MT000040UV02Act = Nothing
        Dim Entry As POCD_MT000040UV02Entry() = Nothing
        Dim table As StrucDocTable = Nothing
        Try
            _ClinicalInstructions = New POCD_MT000040UV02Component3
            _ClinicalInstructions.section = New POCD_MT000040UV02Section

            section = _ClinicalInstructions.section
            section.classCodeSpecified = False
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            'section.ID = Nothing
            section.templateId = New II(0) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Instructions")
            section.templateId(0).extension = Nothing
            section.templateId(0).assigningAuthorityName = Nothing

            section.code = New CE()
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Instructions")
            If _CodeSysItem IsNot Nothing Then
                section.code.code = _CodeSysItem.Code
                section.code.codeSystem = CodeSystem.LOINC
                section.code.codeSystemName = _CodeSysItem.CodingSystemName
                section.code.codeSystemVersion = Nothing
                section.code.displayName = Nothing
            Else
                section.code = Nothing
            End If

            section.title = New ST()
            section.title.Text = New String() {_CodeSysItem.Description}
            section.title.language = Nothing
            section.text = New StrucDocText()
            section.text.mediaType = Nothing
            section.text.ID = Nothing
            section.text.language = Nothing

            section.text.Items = New Object(2) {}



            If mPatient.ClinicalInstruction IsNot Nothing AndAlso mPatient.ClinicalInstruction.Count > 0 Then
                ''
                ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                If Not IsNothing(sconf.code) Then
                    section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''
                ''
                section.text.Items(0) = New StrucDocTable
                table = DirectCast(section.text.Items(0), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}
                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(0) {}
                table.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Clinical Instructions"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = "instructions"
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
                table.tbody = New StrucDocTbody(0) {}

                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing
                table.tbody(0).tr = New StrucDocTr(mPatient.ClinicalInstruction.Count - 1) {}
                For cnt As Integer = 0 To mPatient.ClinicalInstruction.Count - 1
                    If Not IsNothing(mPatient.ClinicalInstruction.Item(cnt)) AndAlso Not IsNothing(mPatient.ClinicalInstruction.Item(cnt).Instructions) Then



                        table.tbody(0).tr(cnt) = New StrucDocTr()
                        table.tbody(0).tr(cnt).ID = Nothing
                        table.tbody(0).tr(cnt).language = Nothing
                        table.tbody(0).tr(cnt).Items = New Object(0) {}
                        table.tbody(0).tr(cnt).Items(0) = New StrucDocTd()
                        DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).ID = Nothing
                        DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).language = Nothing

                        DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Text = New String() {mPatient.ClinicalInstruction.Item(cnt).Instructions}

                    End If
                Next
            Else
                section.text.Items(0) = New StrucDocContent()
                DirectCast(section.text.Items(0), StrucDocContent).Text = New String() {"No known clinical instructions"}
                DirectCast(section.text.Items(0), StrucDocContent).ID = "instructions"
                DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
            End If

            section.text.Items(1) = New StrucDocParagraph
            DirectCast(section.text.Items(1), StrucDocParagraph).ID = Nothing
            DirectCast(section.text.Items(1), StrucDocParagraph).language = Nothing
            DirectCast(section.text.Items(1), StrucDocParagraph).Text = New String() {}

            If mPatient.PatientEducation IsNot Nothing AndAlso mPatient.PatientEducation.Count > 0 Then
                Entry = New POCD_MT000040UV02Entry(mPatient.PatientEducation.Count) {}
            Else
                Entry = New POCD_MT000040UV02Entry(0) {}
            End If
            section.entry = Entry
            section.entry(0) = New POCD_MT000040UV02Entry()
            section.entry(0).typeCode = x_ActRelationshipEntry.DRIV
            section.entry(0).Item = New POCD_MT000040UV02Act()
            act = DirectCast(section.entry(0).Item, POCD_MT000040UV02Act)
            act.classCode = x_ActClassDocumentEntryAct.ACT
            act.classCodeSpecified = True
            act.moodCode = x_DocumentActMood.INT
            act.moodCodeSpecified = True
            act.id = New II(0) {}
            act.id(0) = New II()
            act.id(0).root = Guid.NewGuid().ToString()
            act.id(0).extension = Nothing
            act.id(0).assigningAuthorityName = Nothing
            act.templateId = New II(0) {}
            act.templateId(0) = New II()
            act.templateId(0).root = oTemplateIDMaster.GetEntryID("Instructions")
            act.templateId(0).assigningAuthorityName = Nothing
            act.templateId(0).extension = Nothing
            act.code = New CD()
            'Education (409073007)
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Clinical Instructions")
            If _CodeSysItem IsNot Nothing Then
                act.code.code = _CodeSysItem.Code
                act.code.nullFlavor = Nothing
                act.code.codeSystemName = _CodeSysItem.CodingSystemName
                act.code.codeSystem = CodeSystem.SNOMED_CT
                act.code.displayName = _CodeSysItem.Description
                act.code.codeSystemVersion = Nothing
            Else
                act.code = Nothing
            End If

            'If mPatient.ClinicalInstruction IsNot Nothing AndAlso mPatient.ClinicalInstruction <> "" Then
            act.text = New ED
            act.text.Text = Nothing
            act.text.reference = New TEL
            act.text.reference.value = "#instructions"
            act.text.language = Nothing
            'End If

            act.statusCode = New CS()
            act.statusCode.code = "completed"
            act.statusCode.codeSystem = Nothing
            act.statusCode.codeSystemName = Nothing
            act.statusCode.codeSystemVersion = Nothing
            act.statusCode.displayName = Nothing
            If mPatient.PatientEducation IsNot Nothing AndAlso mPatient.PatientEducation.Count > 0 Then

                'Recommended Patient decision aids
                section.text.Items(2) = New StrucDocTable
                table = DirectCast(section.text.Items(2), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}
                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(0) {}
                table.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Recommended Patient decision aids"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing


                table.tbody(0).tr = New StrucDocTr(mPatient.PatientEducation.Count - 1) {}
                For i As Integer = 1 To mPatient.PatientEducation.Count
                    table.tbody(0).tr(i - 1) = New StrucDocTr()
                    table.tbody(0).tr(i - 1).ID = Nothing
                    table.tbody(0).tr(i - 1).language = Nothing
                    table.tbody(0).tr(i - 1).Items = New Object(0) {}
                    table.tbody(0).tr(i - 1).Items(0) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(i - 1).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(i - 1).Items(0), StrucDocTd).language = Nothing

                    section.entry(i) = New POCD_MT000040UV02Entry()
                    section.entry(i).typeCode = x_ActRelationshipEntry.DRIV
                    section.entry(i).Item = New POCD_MT000040UV02Act()
                    act = DirectCast(section.entry(i).Item, POCD_MT000040UV02Act)
                    act.moodCode = x_DocumentActMood.INT
                    act.id = New II(0) {}
                    act.id(0) = New II()
                    act.id(0).root = Guid.NewGuid().ToString()
                    act.id(0).extension = Nothing
                    act.id(0).assigningAuthorityName = Nothing
                    act.templateId = New II(0) {}
                    act.templateId(0) = New II()
                    act.templateId(0).root = oTemplateIDMaster.GetEntryID("Instructions")
                    act.templateId(0).assigningAuthorityName = Nothing
                    act.templateId(0).extension = Nothing
                    act.code = New CD()
                    _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Patient education")
                    If _CodeSysItem IsNot Nothing Then
                        act.code.code = _CodeSysItem.Code
                        act.code.nullFlavor = Nothing
                        act.code.codeSystemName = _CodeSysItem.CodingSystemName
                        act.code.codeSystem = CodeSystem.SNOMED_CT
                        act.code.displayName = _CodeSysItem.Description
                        act.code.codeSystemVersion = Nothing
                    Else
                        act.code = Nothing
                    End If

                    act.text = New ED
                    act.text.language = Nothing
                    act.text.reference = New TEL
                    act.text.reference.value = "#instructions"
                    If mPatient.PatientEducation.Item(i - 1).TemplateName IsNot Nothing AndAlso mPatient.PatientEducation.Item(i - 1).TemplateName <> "" Then
                        DirectCast(table.tbody(0).tr(i - 1).Items(0), StrucDocTd).Text = New String() {mPatient.PatientEducation.Item(i - 1).TemplateName}

                        act.text.Text = New String() {mPatient.PatientEducation.Item(i - 1).TemplateName}
                    Else
                        act.text.nullFlavor = "NI"
                        DirectCast(table.tbody(0).tr(i - 1).Items(0), StrucDocTd).Text = Nothing
                    End If

                    act.statusCode = New CS()
                    act.statusCode.code = "completed"
                    act.statusCode.codeSystem = Nothing
                    act.statusCode.codeSystemName = Nothing
                    act.statusCode.codeSystemVersion = Nothing
                    act.statusCode.displayName = Nothing
                Next
            Else
                section.text.Items(2) = New StrucDocParagraph()
                DirectCast(section.text.Items(2), StrucDocParagraph).Text = New String() {"No known recommended patient decision aids"}
                DirectCast(section.text.Items(2), StrucDocParagraph).ID = Nothing
                DirectCast(section.text.Items(2), StrucDocParagraph).language = Nothing
                'table.tbody(0).tr = New StrucDocTr(0) {}
                'table.tbody(0).tr(0) = New StrucDocTr()
                'table.tbody(0).tr(0).ID = Nothing
                'table.tbody(0).tr(0).language = Nothing
                'table.tbody(0).tr(0).Items = New Object(0) {}
                'table.tbody(0).tr(0).Items(0) = New StrucDocTd()
                'DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
                'DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing
                'DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).Text = New String() {"No known recommended patient decision aids"}
            End If
            Return _ClinicalInstructions
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Instructions Section"
            Else
                _msgString = _msgString & vbNewLine & "Instructions Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            section = Nothing
            _CodeSysItem = Nothing
            act = Nothing
            table = Nothing
        End Try
    End Function
    Private Function GetCDAMedicationAdministeredComponent() As POCD_MT000040UV02Component3
        Dim _Medication As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim table As StrucDocTable = Nothing
        Dim sadmin As POCD_MT000040UV02SubstanceAdministration = Nothing
        Dim mat As POCD_MT000040UV02Material = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim _MedicationCount As Integer = 1
        Dim objCDADataExtraction As gloCDADataExtraction = Nothing

        Try

            _Medication = New POCD_MT000040UV02Component3

            _Medication.section = New POCD_MT000040UV02Section()
            section = _Medication.section
            'section.ID = Nothing
            section.classCodeSpecified = False
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            section.templateId = New II(1) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Medications Administered")
            section.templateId(0).extension = _DateExtension22
            section.templateId(0).assigningAuthorityName = Nothing

            section.templateId(1) = New II()
            section.templateId(1).root = oTemplateIDMaster.GetSectionID("Medications Administered")
            section.templateId(1).extension = Nothing
            section.templateId(1).assigningAuthorityName = Nothing


            section.code = New CE()
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Medications Administered")
            If _CodeSysItem IsNot Nothing Then
                section.code.code = _CodeSysItem.Code
                section.code.codeSystem = CodeSystem.LOINC
                section.code.codeSystemName = _CodeSysItem.CodingSystemName
                section.code.codeSystemVersion = Nothing
                section.code.displayName = Nothing
            Else
                section.code = Nothing
            End If

            section.title = New ST()
            section.title.Text = New String() {"Medications Administered during Visit"}
            section.title.language = Nothing
            section.text = New StrucDocText()
            section.text.ID = Nothing
            section.text.language = Nothing
            section.text.mediaType = Nothing

            If Not IsNothing(mPatient.PatientMedicationsAdmin) AndAlso mPatient.PatientMedicationsAdmin.Count > 0 Then
                ''
                ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                If Not IsNothing(sconf.code) Then
                    section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''
                ''
                section.text.Items = New Object(0) {}
                section.text.Items(0) = New StrucDocTable()
                table = DirectCast(section.text.Items(0), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}
                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(8) {}
                table.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"RxNorm Code"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Drug Name"}
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Route"}
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(3) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Dose"}
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(4) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).Text = New String() {"Frequency"}
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(5) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).Text = New String() {"Date"}
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(6) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).Text = New String() {"Status"}
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(7) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(7), StrucDocTh).Text = New String() {"Generic Name"}
                DirectCast(table.thead.tr(0).Items(7), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(7), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(8) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(8), StrucDocTh).Text = New String() {"NDC Code"}
                DirectCast(table.thead.tr(0).Items(8), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(8), StrucDocTh).language = Nothing
                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing
                table.tbody(0).tr = New StrucDocTr(mPatient.PatientMedicationsAdmin.Count - 1) {}

                Dim medentry As Medication = Nothing
                For mi As Integer = 0 To mPatient.PatientMedicationsAdmin.Count - 1
                    medentry = mPatient.PatientMedicationsAdmin.Item(mi)
                    table.tbody(0).tr(mi) = New StrucDocTr()
                    table.tbody(0).tr(mi).ID = Nothing
                    table.tbody(0).tr(mi).language = Nothing
                    table.tbody(0).tr(mi).Items = New Object(8) {}
                    table.tbody(0).tr(mi).Items(0) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(0), StrucDocTd).Text = New String() {medentry.RxNormCode}
                    DirectCast(table.tbody(0).tr(mi).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(0), StrucDocTd).language = Nothing
                    table.tbody(0).tr(mi).Items(1) = New StrucDocTd()
                    ''

                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                        DirectCast(table.tbody(0).tr(mi).Items(1), StrucDocTd).Items = New StrucDocContent(0) {}
                        DirectCast(table.tbody(0).tr(mi).Items(1), StrucDocTd).Items(0) = New StrucDocContent
                        DirectCast(DirectCast(table.tbody(0).tr(mi).Items(1), StrucDocTd).Items(0), StrucDocContent).ID = "MedA" & mi
                        DirectCast(DirectCast(table.tbody(0).tr(mi).Items(1), StrucDocTd).Items(0), StrucDocContent).language = Nothing

                    End If
                    ''
                    DirectCast(table.tbody(0).tr(mi).Items(1), StrucDocTd).Text = New String() {medentry.DrugName}
                    DirectCast(table.tbody(0).tr(mi).Items(1), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(1), StrucDocTd).language = Nothing
                    table.tbody(0).tr(mi).Items(2) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(2), StrucDocTd).Text = New String() {medentry.Route}
                    DirectCast(table.tbody(0).tr(mi).Items(2), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(2), StrucDocTd).language = Nothing
                    table.tbody(0).tr(mi).Items(3) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(3), StrucDocTd).Text = New String() {medentry.DrugQuantity + " " + medentry.DrugForm}
                    DirectCast(table.tbody(0).tr(mi).Items(3), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(3), StrucDocTd).language = Nothing
                    table.tbody(0).tr(mi).Items(4) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(4), StrucDocTd).Text = New String() {medentry.Frequency}
                    DirectCast(table.tbody(0).tr(mi).Items(4), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(4), StrucDocTd).language = Nothing
                    table.tbody(0).tr(mi).Items(5) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(5), StrucDocTd).Text = New String() {medentry.MedicationDate}
                    DirectCast(table.tbody(0).tr(mi).Items(5), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(5), StrucDocTd).language = Nothing
                    table.tbody(0).tr(mi).Items(6) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(6), StrucDocTd).Text = New String() {medentry.Status}
                    DirectCast(table.tbody(0).tr(mi).Items(6), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(6), StrucDocTd).language = Nothing
                    table.tbody(0).tr(mi).Items(7) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(7), StrucDocTd).Text = New String() {medentry.GenericName}
                    DirectCast(table.tbody(0).tr(mi).Items(7), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(7), StrucDocTd).language = Nothing
                    table.tbody(0).tr(mi).Items(8) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(mi).Items(8), StrucDocTd).Text = New String() {medentry.ProdCode}
                    DirectCast(table.tbody(0).tr(mi).Items(8), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(mi).Items(8), StrucDocTd).language = Nothing

                Next
                If Not IsNothing(medentry) Then
                    medentry.Dispose()
                    medentry = Nothing
                End If
            Else
                section.text.Text = New String() {"No known medication administered for patient"}
                If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                    section.text.Items = New StrucDocContent(0) {}
                    section.text.Items(0) = New StrucDocContent
                    DirectCast(section.text.Items(0), StrucDocContent).ID = "MedA" & 0
                    DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                End If
            End If

            If Not IsNothing(mPatient.PatientMedicationsAdmin) AndAlso mPatient.PatientMedicationsAdmin.Count > 0 Then
                _MedicationCount = mPatient.PatientMedicationsAdmin.Count
            End If

            section.entry = New POCD_MT000040UV02Entry(_MedicationCount - 1) {}
            Dim medentries As Medication = Nothing
            For mi As Integer = 0 To _MedicationCount - 1

                section.entry(mi) = New POCD_MT000040UV02Entry()
                section.entry(mi).typeCode = x_ActRelationshipEntry.DRIV
                section.entry(mi).Item = New POCD_MT000040UV02SubstanceAdministration()
                sadmin = DirectCast(section.entry(mi).Item, POCD_MT000040UV02SubstanceAdministration)
                sadmin.moodCode = x_DocumentSubstanceMood.EVN
                sadmin.moodCodespecified = True
                sadmin.templateId = New II(0) {}
                sadmin.templateId(0) = New II()
                sadmin.templateId(0).root = oTemplateIDMaster.GetEntryID("Medication Activity")
                sadmin.templateId(0).extension = Nothing
                sadmin.templateId(0).assigningAuthorityName = Nothing
                sadmin.id = New II(0) {}
                sadmin.id(0) = New II()
                sadmin.id(0).root = Guid.NewGuid().ToString()
                sadmin.id(0).extension = Nothing
                sadmin.id(0).assigningAuthorityName = Nothing

                If Not IsNothing(mPatient.PatientMedicationsAdmin) AndAlso mPatient.PatientMedicationsAdmin.Count > 0 Then
                    medentries = mPatient.PatientMedicationsAdmin.Item(mi)
                Else
                    medentries = New Medication
                End If

                If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                    sadmin.text = New ED()
                    sadmin.text.language = Nothing
                    sadmin.text.mediaType = Nothing
                    sadmin.text.reference = New TEL()
                    sadmin.text.reference.value = "#MedA" & mi

                End If


                sadmin.statusCode = New CS()
                sadmin.statusCode.code = If(medentries.Status IsNot Nothing AndAlso medentries.Status <> "", medentries.Status, Nothing)
                sadmin.statusCode.codeSystem = Nothing
                sadmin.statusCode.codeSystemName = Nothing
                sadmin.statusCode.codeSystemVersion = Nothing
                sadmin.statusCode.displayName = Nothing
                ' sadmin.effectiveTime = New IVL_TS(0) {}
                sadmin.effectiveTime = New SXCM_TS(1) {}


                sadmin.effectiveTime(0) = New IVL_TS()
                sadmin.effectiveTime(0).value = Nothing
                DirectCast(sadmin.effectiveTime(0), IVL_TS).ItemsElementName = New ItemsChoiceType2(1) {}
                DirectCast(sadmin.effectiveTime(0), IVL_TS).ItemsElementName(0) = ItemsChoiceType2.low
                DirectCast(sadmin.effectiveTime(0), IVL_TS).ItemsElementName(1) = ItemsChoiceType2.high
                DirectCast(sadmin.effectiveTime(0), IVL_TS).Items = New QTY(1) {}
                DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(0) = New IVXB_TS()
                If medentries.StartDate IsNot Nothing AndAlso medentries.StartDate <> "" Then
                    DirectCast(DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(0), IVXB_TS).value = Format(CType(medentries.StartDate, Date), "yyyyMMdd")
                Else
                    DirectCast(DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(0), IVXB_TS).value = Nothing
                    DirectCast(DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(0), IVXB_TS).nullFlavor = "UNK"
                End If

                DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(1) = New IVXB_TS()
                If medentries.EndDate IsNot Nothing AndAlso medentries.EndDate <> "" Then
                    DirectCast(DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(1), IVXB_TS).value = Format(CType(medentries.EndDate, Date), "yyyyMMdd")
                Else
                    DirectCast(DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(1), IVXB_TS).value = Nothing
                    DirectCast(DirectCast(sadmin.effectiveTime(0), IVL_TS).Items(1), IVXB_TS).nullFlavor = "UNK"

                End If

                If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                    'sadmin.effectiveTime = New PIVL_TS(1) {}

                    If Not IsNothing(medentries.FrequencyDesc) Then
                        objCDADataExtraction = New gloCDADataExtraction()
                        Dim dtdetails As DataTable = objCDADataExtraction.GetFrequencyDetails(medentries.FrequencyDesc)
                        If Not IsNothing(dtdetails) Then
                            If dtdetails.Rows.Count > 0 Then
                                If dtdetails.Rows(0)("sXsiType") IsNot Nothing AndAlso dtdetails.Rows(0)("sXsiType") <> "" Then
                                    If dtdetails.Rows(0)("sXsiType") = "PIVL_TS" Then
                                        sadmin.effectiveTime(1) = New PIVL_TS()
                                        sadmin.effectiveTime(1).value = Nothing
                                        sadmin.effectiveTime(1).operator = SetOperator.A
                                        DirectCast(sadmin.effectiveTime(1), PIVL_TS).institutionSpecified1 = dtdetails.Rows(0)("binstitutionSpecified")

                                        DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()

                                        If dtdetails.Rows(0)("sValue") IsNot Nothing AndAlso dtdetails.Rows(0)("sValue") <> "" Then
                                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = dtdetails.Rows(0)("sValue")
                                        Else
                                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = "NI"
                                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing

                                        End If
                                        If dtdetails.Rows(0)("sUnit") IsNot Nothing AndAlso dtdetails.Rows(0)("sUnit") <> "" Then
                                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.unit = dtdetails.Rows(0)("sUnit")
                                        Else
                                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.unit = Nothing
                                        End If
                                    Else
                                        sadmin.effectiveTime(1) = New PIVL_TS()
                                        sadmin.effectiveTime(1).value = Nothing
                                        sadmin.effectiveTime(1).operator = SetOperator.A
                                        DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()
                                        DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = "NI"
                                        DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing

                                    End If
                                Else
                                    sadmin.effectiveTime(1) = New PIVL_TS()
                                    sadmin.effectiveTime(1).value = Nothing
                                    sadmin.effectiveTime(1).operator = SetOperator.A
                                    DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()
                                    DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = "NI"
                                    DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing
                                End If
                            Else
                                sadmin.effectiveTime(1) = New PIVL_TS()
                                sadmin.effectiveTime(1).value = Nothing
                                sadmin.effectiveTime(1).operator = SetOperator.A
                                DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()
                                DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = "NI"
                                DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing
                            End If
                        Else
                            sadmin.effectiveTime(1) = New PIVL_TS()
                            sadmin.effectiveTime(1).value = Nothing
                            sadmin.effectiveTime(1).operator = SetOperator.A
                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()
                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = "NI"
                            DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing
                        End If
                        If Not IsNothing(dtdetails) Then
                            dtdetails.Dispose()
                            dtdetails = Nothing
                        End If
                    Else
                        sadmin.effectiveTime(1) = New PIVL_TS()
                        sadmin.effectiveTime(1).value = Nothing
                        sadmin.effectiveTime(1).operator = SetOperator.A
                        DirectCast(sadmin.effectiveTime(1), PIVL_TS).period = New PQ()
                        DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.nullFlavor = "NI"
                        DirectCast(sadmin.effectiveTime(1), PIVL_TS).period.value = Nothing
                    End If
                End If

                If medentries.FDACode IsNot Nothing AndAlso medentries.FDACode <> "" Then
                    sadmin.routeCode = New CE()
                    sadmin.routeCode.code = medentries.FDACode
                    sadmin.routeCode.codeSystem = CodeSystem.FDARouteCode
                    sadmin.routeCode.codeSystemName = "NCI Thesaurus"
                    sadmin.routeCode.displayName = If(medentries.Route IsNot Nothing AndAlso medentries.Route <> "", medentries.Route, Nothing)
                    sadmin.routeCode.codeSystemVersion = Nothing
                Else
                    sadmin.routeCode = Nothing
                End If

                sadmin.doseQuantity = New IVL_PQ()
                sadmin.doseQuantity.unit = Nothing
                If Not IsNothing(medentries.DrugQuantity) Then
                    Dim Quantity As String() = (medentries.DrugQuantity).Split(" ")
                    If Quantity.Length > 0 Then
                        sadmin.doseQuantity.value = If(Quantity(0) IsNot Nothing AndAlso Quantity(0) <> "", Quantity(0), Nothing)
                    Else
                        sadmin.doseQuantity.value = Nothing
                    End If
                Else
                    sadmin.doseQuantity.value = Nothing
                End If

                'below code is commenetd as code was set to nothing
                'sadmin.administrationUnitCode = New CE()
                'sadmin.administrationUnitCode.code = Nothing
                'sadmin.administrationUnitCode.displayName = If(medentries.DrugForm IsNot Nothing AndAlso medentries.DrugForm <> "", medentries.DrugForm, Nothing)
                'sadmin.administrationUnitCode.codeSystem = CodeSystem.FDARouteCode
                'sadmin.administrationUnitCode.codeSystemName = "NCI Thesaurus"
                'sadmin.administrationUnitCode.codeSystemVersion = Nothing

                sadmin.consumable = New POCD_MT000040UV02Consumable()
                sadmin.consumable.typeCodeSpecified = False
                sadmin.consumable.typeCode = Nothing
                sadmin.consumable.manufacturedProduct = New POCD_MT000040UV02ManufacturedProduct()
                sadmin.consumable.manufacturedProduct.classCodeSpecified = True
                sadmin.consumable.manufacturedProduct.classCode = RoleClass.MANU
                sadmin.consumable.manufacturedProduct.templateId = New II(0) {}
                sadmin.consumable.manufacturedProduct.templateId(0) = New II()
                sadmin.consumable.manufacturedProduct.templateId(0).root = oTemplateIDMaster.GetEntryID("Medication Information")
                sadmin.consumable.manufacturedProduct.templateId(0).assigningAuthorityName = Nothing
                sadmin.consumable.manufacturedProduct.templateId(0).extension = Nothing
                sadmin.consumable.manufacturedProduct.Item = New POCD_MT000040UV02Material()
                mat = DirectCast(sadmin.consumable.manufacturedProduct.Item, POCD_MT000040UV02Material)
                mat.name = New EN()

                If medentries.DrugName <> "" AndAlso medentries.DrugName <> Nothing Then
                    mat.name.Text = New String() {medentries.DrugName}
                End If
                mat.code = New CE()
                If Not IsNothing(medentries.RxNormCode) AndAlso medentries.RxNormCode <> "" Then
                    mat.code.code = medentries.RxNormCode
                    mat.code.codeSystem = CodeSystem.RxNorm
                    mat.code.codeSystemName = "RxNorm"
                    If medentries.DrugName <> "" AndAlso medentries.DrugName <> Nothing Then
                        mat.code.displayName = medentries.DrugName
                    Else
                        mat.code.displayName = Nothing
                    End If
                Else
                    mat.code.nullFlavor = "UNK"
                    mat.code.codeSystem = Nothing
                    mat.code.codeSystemName = Nothing
                    mat.code.displayName = Nothing
                    mat.code.code = Nothing
                End If
                mat.code.codeSystemVersion = Nothing
                If medentries.DrugName <> "" AndAlso medentries.DrugName <> Nothing Then
                    mat.code.displayName = medentries.DrugName
                Else
                    mat.code.displayName = Nothing
                End If

                If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                    mat.code.originalText = New ED()
                    mat.code.originalText.language = Nothing
                    mat.code.originalText.Text = New String() {If(medentries.DrugName IsNot Nothing, medentries.DrugName, medentries.GenericName)}
                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                        mat.code.originalText.reference = New TEL()
                        mat.code.originalText.reference.value = "#Med" & mi
                    End If
                End If

                mat.code.translation = New CD(0) {}
                mat.code.translation(0) = New CD()
                mat.code.translation(0).codeSystem = CodeSystem.NDC
                mat.code.translation(0).codeSystemName = "NDC"
                mat.code.translation(0).codeSystemVersion = Nothing
                If Not IsNothing(medentries.ProdCode) AndAlso medentries.ProdCode <> "" Then
                    mat.code.translation(0).code = medentries.ProdCode
                Else
                    mat.code.translation(0).code = Nothing
                    mat.code.translation(0).nullFlavor = "UNK"
                End If
                If medentries.DrugName <> "" AndAlso medentries.DrugName <> Nothing Then
                    mat.code.translation(0).displayName = medentries.DrugName
                Else
                    mat.code.translation(0).displayName = Nothing
                End If
            Next
            If Not IsNothing(medentries) Then
                medentries.Dispose()
                medentries = Nothing
            End If

            Return _Medication
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Medications Administered Section"
            Else
                _msgString = _msgString & vbNewLine & "Medications Administered Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            '  MessageBox.Show("Error:" & ex.ToString())
            Return Nothing
        Finally
            section = Nothing
            _CodeSysItem = Nothing
            sadmin = Nothing
            mat = Nothing
            table = Nothing
        End Try
    End Function
    'Private Function GetCDAPlanofCareComponent() As POCD_MT000040UV02Component3
    '    Dim _PlanofCare As POCD_MT000040UV02Component3 = Nothing
    '    Dim section As POCD_MT000040UV02Section = Nothing
    '    Dim _CodeSysItem As CodeSystemItem = Nothing
    '    Dim _entryList As New List(Of POCD_MT000040UV02Entry)
    '    Dim _entryData As POCD_MT000040UV02Entry()
    '    Dim _PlanofCareEntry As POCD_MT000040UV02Entry()
    '    Try
    '        _PlanofCare = New POCD_MT000040UV02Component3
    '        _PlanofCare.section = New POCD_MT000040UV02Section

    '        section = _PlanofCare.section
    '        section.classCodeSpecified = False
    '        section.classCodeSpecified = False
    '        section.moodCode = Nothing
    '        section.moodCodeSpecified = False
    '        'section.ID = Nothing
    '        section.templateId = New II(0) {}
    '        section.templateId(0) = New II()
    '        section.templateId(0).root = oTemplateIDMaster.GetSectionID("PlanofCare")
    '        section.templateId(0).extension = Nothing
    '        section.templateId(0).assigningAuthorityName = Nothing
    '        section.code = New CE()
    '        _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Plan of care")
    '        If _CodeSysItem IsNot Nothing Then
    '            section.code.code = _CodeSysItem.Code
    '            section.code.codeSystem = CodeSystem.LOINC
    '            section.code.codeSystemName = _CodeSysItem.CodingSystemName
    '            section.code.codeSystemVersion = Nothing
    '            section.code.displayName = Nothing
    '        Else
    '            section.code = Nothing
    '        End If

    '        section.title = New ST()
    '        section.title.Text = New String() {"Plan of care"}
    '        section.title.language = Nothing

    '        section.text = GetPlanofCareText()

    '        '
    '        'section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
    '        '

    '        If CDAWritingParams.CarePlan_GoalsAndInstructions Then
    '            'Add goals data
    '            _entryData = GetPlanofCareGoalentry()
    '            If Not IsNothing(_entryData) Then
    '                For Each oEntry As POCD_MT000040UV02Entry In _entryData
    '                    _entryList.Add(oEntry)
    '                Next
    '            End If
    '            _entryData = Nothing
    '        End If
    '        'Add Future schedule appointment data
    '        If CDAWritingParams.FutureAppointments Then

    '            _entryData = GetPlanofCareFutureAppointmententry()
    '            If Not IsNothing(_entryData) Then
    '                For Each oEntry As POCD_MT000040UV02Entry In _entryData
    '                    _entryList.Add(oEntry)
    '                Next
    '            End If
    '            _entryData = Nothing
    '        End If
    '        If CDAWritingParams.ReferralsToOtherProviders Then

    '            'Add Referrals to other Provider data
    '            _entryData = GetPlanofCareReferralstoProviderentry()
    '            If Not IsNothing(_entryData) Then
    '                For Each oEntry As POCD_MT000040UV02Entry In _entryData
    '                    _entryList.Add(oEntry)
    '                Next
    '            End If
    '            _entryData = Nothing
    '        End If
    '        If CDAWritingParams.FutureScheduledTests Then

    '            'Add Future Schedule Test data
    '            _entryData = GetPlanofCareFutureScheduleEntry()
    '            If Not IsNothing(_entryData) Then
    '                For Each oEntry As POCD_MT000040UV02Entry In _entryData
    '                    _entryList.Add(oEntry)
    '                Next
    '            End If
    '            _entryData = Nothing
    '        End If
    '        If CDAWritingParams.DiagnosticTestsPending Then

    '            'Add Diagnostic Pending Tests data
    '            _entryData = GetPlanofCareDiagnosticPendingTestsEntry()
    '            If Not IsNothing(_entryData) Then
    '                For Each oEntry As POCD_MT000040UV02Entry In _entryData
    '                    _entryList.Add(oEntry)
    '                Next
    '            End If
    '            _entryData = Nothing
    '        End If
    '        If CDAWritingParams.LaboratoryTest AndAlso CDAWritingParams.CDAFileType <> CDAFileTypeEnum.ClinicalSummary Then
    '            'Add LaboratoryTest data
    '            _entryData = GetPlanofCareDiagnosticPendingTestsEntry()
    '            If Not IsNothing(_entryData) Then
    '                For Each oEntry As POCD_MT000040UV02Entry In _entryData
    '                    _entryList.Add(oEntry)
    '                Next
    '            End If
    '            _entryData = Nothing
    '        End If



    '        'Declare POCD_MT000040UV02Entry array and Copy list to array
    '        _PlanofCareEntry = New POCD_MT000040UV02Entry(_entryList.Count) {}
    '        _entryList.CopyTo(_PlanofCareEntry)

    '        If Not IsNothing(_PlanofCareEntry) AndAlso _PlanofCareEntry.Length > 0 Then
    '            section.entry = New POCD_MT000040UV02Entry(_PlanofCareEntry.Length - 1) {}
    '            section.entry = _PlanofCareEntry
    '        End If

    '        Return _PlanofCare
    '    Catch ex As Exception
    '        If _msgString = "" Then

    '            _msgString = vbNewLine & _errormsg & vbNewLine & "Plan of care Section"
    '        Else
    '            _msgString = _msgString & vbNewLine & "Plan of care Section"
    '        End If
    '        gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
    '        ex = Nothing
    '        Return Nothing
    '    Finally
    '        section = Nothing
    '        _CodeSysItem = Nothing
    '        _entryList = Nothing
    '        _entryData = Nothing
    '        _PlanofCareEntry = Nothing
    '    End Try
    'End Function
    'Public Function GetPlanofCareGoalentry() As POCD_MT000040UV02Entry()
    '    Dim entry As POCD_MT000040UV02Entry() = Nothing
    '    Dim _CodeSysItem As CodeSystemItem = Nothing
    '    Dim obs As POCD_MT000040UV02Observation = Nothing
    '    Dim act As POCD_MT000040UV02Act = Nothing
    '    Try
    '        If mPatient.PatientCarePlan IsNot Nothing AndAlso mPatient.PatientCarePlan.Count > 0 Then
    '            entry = New POCD_MT000040UV02Entry(mPatient.PatientCarePlan.Count - 1) {}
    '            For i As Integer = 0 To mPatient.PatientCarePlan.Count - 1
    '                entry(i) = New POCD_MT000040UV02Entry()
    '                entry(i).typeCode = x_ActRelationshipEntry.DRIV
    '                entry(i).Item = New POCD_MT000040UV02Observation()
    '                obs = DirectCast(entry(i).Item, POCD_MT000040UV02Observation)
    '                obs.classCode = ActClassObservation.OBS
    '                obs.moodCode = x_ActMoodDocumentObservation.GOL
    '                obs.moodCodespecified = True
    '                obs.id = New II(0) {}
    '                obs.id(0) = New II()
    '                obs.id(0).root = Guid.NewGuid().ToString()
    '                obs.id(0).extension = Nothing
    '                obs.id(0).assigningAuthorityName = Nothing
    '                obs.templateId = New II(0) {}
    '                obs.templateId(0) = New II()
    '                obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Plan of Care Activity Observation")
    '                obs.templateId(0).assigningAuthorityName = Nothing
    '                obs.templateId(0).extension = Nothing
    '                obs.code = New CD()
    '                obs.code.code = Nothing
    '                obs.code.nullFlavor = "NA"
    '                obs.code.codeSystemName = Nothing
    '                obs.code.codeSystem = Nothing
    '                obs.code.displayName = Nothing
    '                obs.code.codeSystemVersion = Nothing

    '                If mPatient.PatientCarePlan.Item(i).Goal IsNot Nothing AndAlso mPatient.PatientCarePlan.Item(i).Goal <> "" Then
    '                    obs.text = New ED
    '                    obs.text.Text = New String() {mPatient.PatientCarePlan.Item(i).Goal}
    '                    obs.text.language = Nothing
    '                End If

    '                obs.statusCode = New CS()
    '                obs.statusCode.code = "active"
    '                obs.statusCode.codeSystem = Nothing
    '                obs.statusCode.codeSystemName = Nothing
    '                obs.statusCode.codeSystemVersion = Nothing
    '                obs.statusCode.displayName = Nothing

    '                obs.entryRelationship = New POCD_MT000040UV02EntryRelationship(0) {}
    '                obs.entryRelationship(0) = New POCD_MT000040UV02EntryRelationship
    '                obs.entryRelationship(0).inversionIndSpecified = True
    '                obs.entryRelationship(0).inversionInd = True
    '                obs.entryRelationship(0).typeCode = ActRelationshipType.SUBJ
    '                obs.entryRelationship(0).Item = New POCD_MT000040UV02Act

    '                act = DirectCast(obs.entryRelationship(0).Item, POCD_MT000040UV02Act)
    '                act.moodCode = x_DocumentActMood.INT
    '                act.moodCodeSpecified = True
    '                act.classCode = x_ActClassDocumentEntryAct.ACT
    '                act.templateId = New II(0) {}
    '                act.templateId(0) = New II()
    '                act.templateId(0).root = oTemplateIDMaster.GetEntryID("Instructions")
    '                act.templateId(0).assigningAuthorityName = Nothing
    '                act.templateId(0).extension = Nothing
    '                act.code = New CD()

    '                _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Clinical Instructions")
    '                If _CodeSysItem IsNot Nothing Then
    '                    act.code.code = _CodeSysItem.Code
    '                    act.code.nullFlavor = Nothing
    '                    act.code.codeSystemName = _CodeSysItem.CodingSystemName
    '                    act.code.codeSystem = CodeSystem.SNOMED_CT
    '                    act.code.displayName = _CodeSysItem.Description
    '                    act.code.codeSystemVersion = Nothing
    '                Else
    '                    act.code = Nothing
    '                End If

    '                If mPatient.PatientCarePlan.Item(i).Instructions IsNot Nothing AndAlso mPatient.PatientCarePlan.Item(i).Instructions <> "" Then
    '                    act.text = New ED
    '                    act.text.Text = New String() {mPatient.PatientCarePlan.Item(i).Instructions}
    '                    act.text.language = Nothing
    '                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
    '                        act.text.reference = New TEL()
    '                        act.text.reference.value = "#Plan" & 0

    '                    End If
    '                Else
    '                    act.text = Nothing
    '                End If
    '                'act.text.reference = New TEL()
    '                'act.text.reference.value = "#Plan" & 0
    '                act.statusCode = New CS()
    '                act.statusCode.code = "completed"
    '                act.statusCode.codeSystem = Nothing
    '                act.statusCode.codeSystemName = Nothing
    '                act.statusCode.codeSystemVersion = Nothing
    '                act.statusCode.displayName = Nothing

    '            Next
    '        End If
    '        Return entry
    '    Catch ex As Exception
    '        If _msgString = "" Then

    '            _msgString = vbNewLine & _errormsg & vbNewLine & "Plan Of Care Goal Section"
    '        Else
    '            _msgString = _msgString & vbNewLine & "Plan Of Care Goal Section"
    '        End If
    '        gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
    '        ex = Nothing
    '        Return Nothing
    '    Finally
    '        _CodeSysItem = Nothing
    '        obs = Nothing
    '        act = Nothing
    '    End Try
    'End Function
    Public Function GetPlanofCareFutureAppointmententry() As POCD_MT000040UV02Entry()
        Dim entry As POCD_MT000040UV02Entry() = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim encounter As POCD_MT000040UV02Encounter = Nothing
        Dim act As POCD_MT000040UV02Act = Nothing
        Try
            If mPatient.FutureScheduleApt IsNot Nothing AndAlso mPatient.FutureScheduleApt.Count > 0 Then
                entry = New POCD_MT000040UV02Entry(mPatient.FutureScheduleApt.Count - 1) {}
                For i As Integer = 0 To mPatient.FutureScheduleApt.Count - 1
                    entry(i) = New POCD_MT000040UV02Entry()
                    entry(i).typeCodeSpecified = False
                    entry(i).typeCode = Nothing
                    entry(i).Item = New POCD_MT000040UV02Encounter()
                    encounter = DirectCast(entry(i).Item, POCD_MT000040UV02Encounter)
                    encounter.classCode = ActClass.ENC
                    encounter.moodCode = x_DocumentEncounterMood.INT
                    encounter.moodCodeSpecified = True
                    encounter.id = New II(0) {}
                    encounter.id(0) = New II()
                    encounter.id(0).root = Guid.NewGuid().ToString()
                    encounter.id(0).extension = Nothing
                    encounter.id(0).assigningAuthorityName = Nothing
                    encounter.templateId = New II(0) {}
                    encounter.templateId(0) = New II()
                    encounter.templateId(0).root = oTemplateIDMaster.GetEntryID("Plan of Care Activity Encounter")
                    encounter.templateId(0).assigningAuthorityName = Nothing
                    encounter.templateId(0).extension = Nothing
                    encounter.code = New CE()
                    _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.CPT, "Future Schedule Appointment")
                    If _CodeSysItem IsNot Nothing Then
                        encounter.code.code = _CodeSysItem.Code
                        encounter.code.codeSystem = CodeSystem.CPT
                        encounter.code.codeSystemName = _CodeSysItem.CodingSystemName
                        If mPatient.FutureScheduleApt.Item(i).Duration IsNot Nothing AndAlso mPatient.FutureScheduleApt.Item(i).Duration <> "" Then
                            encounter.code.displayName = _CodeSysItem.Description & "- " & mPatient.FutureScheduleApt.Item(i).Duration & " minutes"
                        Else
                            encounter.code.displayName = _CodeSysItem.Description
                        End If

                    Else
                        encounter.code.code = Nothing
                        encounter.code.codeSystem = Nothing
                        encounter.code.codeSystemName = Nothing
                        encounter.code.nullFlavor = "NI"
                        encounter.code.displayName = Nothing
                    End If
                    encounter.code.codeSystemVersion = Nothing

                    encounter.effectiveTime = New IVL_TS()
                    encounter.effectiveTime.value = Nothing
                    DirectCast(encounter.effectiveTime, IVL_TS).ItemsElementName = New ItemsChoiceType2(0) {}
                    DirectCast(encounter.effectiveTime, IVL_TS).ItemsElementName(0) = ItemsChoiceType2.center
                    DirectCast(encounter.effectiveTime, IVL_TS).Items = New QTY(0) {}
                    DirectCast(encounter.effectiveTime, IVL_TS).Items(0) = New IVXB_TS()
                    If mPatient.FutureScheduleApt.Item(i).StartDate IsNot Nothing AndAlso mPatient.FutureScheduleApt.Item(i).StartDate <> "" Then
                        DirectCast(DirectCast(encounter.effectiveTime, IVL_TS).Items(0), IVXB_TS).value = mPatient.FutureScheduleApt.Item(i).StartDate
                    Else
                        DirectCast(DirectCast(encounter.effectiveTime, IVL_TS).Items(0), IVXB_TS).nullFlavor = "UNK"
                        DirectCast(DirectCast(encounter.effectiveTime, IVL_TS).Items(0), IVXB_TS).value = Nothing
                    End If

                    encounter.entryRelationship = New POCD_MT000040UV02EntryRelationship(0) {}
                    encounter.entryRelationship(0) = New POCD_MT000040UV02EntryRelationship
                    encounter.entryRelationship(0).inversionIndSpecified = True
                    encounter.entryRelationship(0).inversionInd = True
                    encounter.entryRelationship(0).typeCode = ActRelationshipType.SUBJ
                    encounter.entryRelationship(0).Item = New POCD_MT000040UV02Act

                    act = DirectCast(encounter.entryRelationship(0).Item, POCD_MT000040UV02Act)
                    act.moodCode = x_DocumentActMood.INT
                    act.moodCodeSpecified = True
                    act.classCode = x_ActClassDocumentEntryAct.ACT
                    act.templateId = New II(0) {}
                    act.templateId(0) = New II()
                    act.templateId(0).root = oTemplateIDMaster.GetEntryID("Instructions")
                    act.templateId(0).assigningAuthorityName = Nothing
                    act.templateId(0).extension = Nothing
                    act.code = New CD()

                    _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Clinical Instructions")
                    If _CodeSysItem IsNot Nothing Then
                        act.code.code = _CodeSysItem.Code
                        act.code.nullFlavor = Nothing
                        act.code.codeSystemName = _CodeSysItem.CodingSystemName
                        act.code.codeSystem = CodeSystem.SNOMED_CT
                        act.code.displayName = _CodeSysItem.Description
                        act.code.codeSystemVersion = Nothing
                    Else
                        act.code = Nothing
                    End If

                    If mPatient.FutureScheduleApt.Item(i).Provider IsNot Nothing AndAlso mPatient.FutureScheduleApt.Item(i).Provider <> "" Then
                        Dim _text As String = mPatient.FutureScheduleApt.Item(i).Provider
                        ''Commented on 20131022 as per discussion with Kanchan,we need to show appointment location details
                        'If mPatient.Clinic.PersonContactAddress.Street IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.Street <> "" Then
                        '    _text = _text & " at " & mPatient.Clinic.PersonContactAddress.Street & "," & mPatient.Clinic.PersonContactAddress.City
                        '    Dim provider As System.Globalization.CultureInfo = System.Globalization.CultureInfo.CreateSpecificCulture("en-UK")
                        '    Dim result As Date = DateTime.ParseExact(mPatient.FutureScheduleApt.Item(i).StartDate, "yyyyMMdd", provider)
                        '    If Not IsNothing(result) Then
                        '        _text = _text & " on " & result.ToString("MM/dd/yyyy")
                        '    End If
                        'End If
                        If mPatient.FutureScheduleApt.Item(i).AppStreet IsNot Nothing AndAlso mPatient.FutureScheduleApt.Item(i).AppStreet <> "" Then
                            _text = _text & " at " & mPatient.FutureScheduleApt.Item(i).AppStreet & "," & mPatient.FutureScheduleApt.Item(i).AppCity
                            Dim provider As System.Globalization.CultureInfo = System.Globalization.CultureInfo.CreateSpecificCulture("en-UK")
                            Dim result As Date = DateTime.ParseExact(mPatient.FutureScheduleApt.Item(i).StartDate, "yyyyMMdd", provider)
                            If Not IsNothing(result) Then
                                _text = _text & " on " & result.ToString("MM/dd/yyyy")
                            End If
                        End If
                        act.text = New ED
                        act.text.Text = New String() {_text}
                        act.text.language = Nothing
                        If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                            'If mPatient.FutureScheduleApt IsNot Nothing AndAlso mPatient.FutureScheduleApt.Count > 0 Then
                            act.text.reference = New TEL()
                            act.text.reference.value = "#Plan" & 0
                            'Else
                            '    act.text.reference = New TEL()
                            '    act.text.reference.value = "#Plan" & 0 ''mPatient.PatientCarePlan.Count + 1
                            'End If

                        End If
                        _text = Nothing
                    End If

                    act.statusCode = New CS()
                    act.statusCode.code = "completed"
                    act.statusCode.codeSystem = Nothing
                    act.statusCode.codeSystemName = Nothing
                    act.statusCode.codeSystemVersion = Nothing
                    act.statusCode.displayName = Nothing

                Next
            End If
            Return entry
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Future Appointment Section"
            Else
                _msgString = _msgString & vbNewLine & "Future Appointment Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            _CodeSysItem = Nothing
            encounter = Nothing
            act = Nothing
        End Try
    End Function
    Public Function GetPlanofCareReferralstoProviderentry() As POCD_MT000040UV02Entry()
        Dim entry As POCD_MT000040UV02Entry() = Nothing
        Dim act As POCD_MT000040UV02Act = Nothing
        Dim oTeamMember As PatientSupport = Nothing
        Try
            If mPatient.ReferralstoProvider IsNot Nothing AndAlso mPatient.ReferralstoProvider.Count > 0 Then
                entry = New POCD_MT000040UV02Entry(0) {}
                entry(0) = New POCD_MT000040UV02Entry()
                entry(0).typeCode = x_ActRelationshipEntry.DRIV
                entry(0).Item = New POCD_MT000040UV02Act()
                act = DirectCast(entry(0).Item, POCD_MT000040UV02Act)

                act.moodCode = x_DocumentActMood.INT
                act.moodCodeSpecified = True
                act.classCode = x_ActClassDocumentEntryAct.ACT
                act.templateId = New II(0) {}
                act.templateId(0) = New II()
                act.templateId(0).root = oTemplateIDMaster.GetEntryID("Plan of Care Activity Act")
                act.templateId(0).assigningAuthorityName = Nothing
                act.templateId(0).extension = Nothing
                act.id = New II(0) {}
                act.id(0) = New II()
                act.id(0).root = Guid.NewGuid().ToString()
                act.id(0).extension = Nothing
                act.id(0).assigningAuthorityName = Nothing
                act.code = New CD()
                act.code.code = Nothing
                act.code.nullFlavor = "NI"
                act.code.codeSystemName = Nothing
                act.code.codeSystem = Nothing
                act.code.displayName = Nothing
                act.code.codeSystemVersion = Nothing

                act.statusCode = New CS()
                act.statusCode.code = "new"
                act.statusCode.codeSystem = Nothing
                act.statusCode.codeSystemName = Nothing
                act.statusCode.codeSystemVersion = Nothing
                act.statusCode.displayName = Nothing

                act.effectiveTime = New IVL_TS()
                act.effectiveTime.value = Nothing
                DirectCast(act.effectiveTime, IVL_TS).ItemsElementName = New ItemsChoiceType2(0) {}
                DirectCast(act.effectiveTime, IVL_TS).ItemsElementName(0) = ItemsChoiceType2.center
                DirectCast(act.effectiveTime, IVL_TS).Items = New QTY(0) {}
                DirectCast(act.effectiveTime, IVL_TS).Items(0) = New IVXB_TS()
                DirectCast(DirectCast(act.effectiveTime, IVL_TS).Items(0), IVXB_TS).nullFlavor = "UNK"
                DirectCast(DirectCast(act.effectiveTime, IVL_TS).Items(0), IVXB_TS).value = Nothing

                act.performer = New POCD_MT000040UV02Performer2(mPatient.ReferralstoProvider.Count) {}
                For i As Integer = 0 To mPatient.ReferralstoProvider.Count - 1
                    oTeamMember = mPatient.ReferralstoProvider.Item(i)
                    act.performer(i) = New POCD_MT000040UV02Performer2()   'Provider
                    act.performer(i).typeCodeSpecified = False
                    act.performer(i).typeCode = Nothing
                    act.performer(i).assignedEntity = New POCD_MT000040UV02AssignedEntity()
                    act.performer(i).assignedEntity.classCode = Nothing
                    act.performer(i).assignedEntity.classCodeSpecified = False
                    act.performer(i).assignedEntity.id = New II(0) {}
                    act.performer(i).assignedEntity.id(0) = New II()
                    act.performer(i).assignedEntity.id(0).nullFlavor = Nothing
                    act.performer(i).assignedEntity.id(0).root = "2.16.840.1.113883.4.6"
                    act.performer(i).assignedEntity.id(0).extension = i + 1
                    act.performer(i).assignedEntity.id(0).assigningAuthorityName = Nothing
                    act.performer(i).assignedEntity.addr = New AD(0) {}
                    act.performer(i).assignedEntity.addr(0) = New AD()
                    act.performer(i).assignedEntity.addr(0).Items = New ADXP(3) {}
                    If oTeamMember.PersonContactAddress.Street IsNot Nothing AndAlso oTeamMember.PersonContactAddress.Street <> "" Then
                        act.performer(i).assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()
                        act.performer(i).assignedEntity.addr(0).Items(0).Text = New String() {(oTeamMember.PersonContactAddress.Street).Trim()}
                        act.performer(i).assignedEntity.addr(0).Items(0).language = Nothing
                        act.performer(i).assignedEntity.addr(0).Items(0).partType = Nothing
                    Else
                        act.performer(i).assignedEntity.addr(0).Items(0) = Nothing
                    End If
                    If oTeamMember.PersonContactAddress.City IsNot Nothing AndAlso oTeamMember.PersonContactAddress.City <> "" Then
                        act.performer(i).assignedEntity.addr(0).Items(1) = New adxpcity()
                        act.performer(i).assignedEntity.addr(0).Items(1).Text = New String() {(oTeamMember.PersonContactAddress.City).Trim()}
                        act.performer(i).assignedEntity.addr(0).Items(1).language = Nothing
                        act.performer(i).assignedEntity.addr(0).Items(1).partType = Nothing
                    Else
                        act.performer(i).assignedEntity.addr(0).Items(1) = Nothing
                    End If
                    If oTeamMember.PersonContactAddress.State IsNot Nothing AndAlso oTeamMember.PersonContactAddress.State <> "" Then
                        act.performer(i).assignedEntity.addr(0).Items(2) = New adxpstate()
                        act.performer(i).assignedEntity.addr(0).Items(2).Text = New String() {(oTeamMember.PersonContactAddress.State).Trim()}
                        act.performer(i).assignedEntity.addr(0).Items(2).language = Nothing
                        act.performer(i).assignedEntity.addr(0).Items(2).partType = Nothing
                    Else
                        act.performer(i).assignedEntity.addr(0).Items(2) = Nothing
                    End If
                    If oTeamMember.PersonContactAddress.Zip IsNot Nothing AndAlso oTeamMember.PersonContactAddress.Zip <> "" Then
                        act.performer(i).assignedEntity.addr(0).Items(3) = New adxppostalCode()
                        act.performer(i).assignedEntity.addr(0).Items(3).Text = New String() {(oTeamMember.PersonContactAddress.Zip).Trim()}
                        act.performer(i).assignedEntity.addr(0).Items(3).language = Nothing
                        act.performer(i).assignedEntity.addr(0).Items(3).partType = Nothing
                    Else
                        act.performer(i).assignedEntity.addr(0).Items(3) = Nothing
                    End If

                    act.performer(i).assignedEntity.telecom = New TEL(0) {}
                    act.performer(i).assignedEntity.telecom(0) = New TEL()
                    If oTeamMember.PersonContactPhone.Phone IsNot Nothing AndAlso oTeamMember.PersonContactPhone.Phone <> "" Then
                        act.performer(i).assignedEntity.telecom(0).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(oTeamMember.PersonContactPhone.Phone))
                    Else
                        act.performer(i).assignedEntity.telecom(0).value = Nothing
                        act.performer(i).assignedEntity.telecom(0).nullFlavor = "UNK"
                    End If
                    act.performer(i).assignedEntity.telecom(0).use = New TelecommunicationAddressUse(0) {}
                    act.performer(i).assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.WP
                    act.performer(i).assignedEntity.assignedPerson = New POCD_MT000040UV02Person()
                    act.performer(i).assignedEntity.assignedPerson.classCode = Nothing
                    act.performer(i).assignedEntity.assignedPerson.classCodeSpecified = False
                    act.performer(i).assignedEntity.assignedPerson.determinerCode = Nothing
                    act.performer(i).assignedEntity.assignedPerson.name = New PN(0) {}
                    act.performer(i).assignedEntity.assignedPerson.name(0) = New PN()
                    act.performer(i).assignedEntity.assignedPerson.name(0).Items = New ENXP(3) {}

                    If oTeamMember.PersonName.FirstName IsNot Nothing AndAlso oTeamMember.PersonName.FirstName <> "" Then
                        act.performer(i).assignedEntity.assignedPerson.name(0).Items(0) = New engiven()
                        act.performer(i).assignedEntity.assignedPerson.name(0).Items(0).Text = New String() {oTeamMember.PersonName.FirstName}
                        act.performer(i).assignedEntity.assignedPerson.name(0).Items(0).language = Nothing
                        act.performer(i).assignedEntity.assignedPerson.name(0).Items(0).partType = Nothing
                    Else
                        act.performer(i).assignedEntity.assignedPerson.name(0).Items(0) = Nothing
                    End If

                    If oTeamMember.PersonName.MiddleName IsNot Nothing AndAlso oTeamMember.PersonName.MiddleName <> "" Then
                        act.performer(i).assignedEntity.assignedPerson.name(0).Items(1) = New engiven()
                        act.performer(i).assignedEntity.assignedPerson.name(0).Items(1).Text = New String() {oTeamMember.PersonName.MiddleName}
                        act.performer(i).assignedEntity.assignedPerson.name(0).Items(1).language = Nothing
                        act.performer(i).assignedEntity.assignedPerson.name(0).Items(1).partType = Nothing
                    Else
                        act.performer(i).assignedEntity.assignedPerson.name(0).Items(1) = Nothing
                    End If

                    If oTeamMember.PersonName.LastName IsNot Nothing AndAlso oTeamMember.PersonName.LastName <> "" Then
                        act.performer(i).assignedEntity.assignedPerson.name(0).Items(2) = New enfamily()
                        act.performer(i).assignedEntity.assignedPerson.name(0).Items(2).Text = New String() {oTeamMember.PersonName.LastName}
                        act.performer(i).assignedEntity.assignedPerson.name(0).Items(2).language = Nothing
                        act.performer(i).assignedEntity.assignedPerson.name(0).Items(2).partType = Nothing
                    Else
                        act.performer(i).assignedEntity.assignedPerson.name(0).Items(2) = Nothing
                    End If

                Next

            End If
            Return entry
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Referrals to provider Section"
            Else
                _msgString = _msgString & vbNewLine & "Referrals to provider Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            oTeamMember = Nothing
            act = Nothing
        End Try
    End Function
    Public Function GetPlanofCareFutureScheduleEntry() As POCD_MT000040UV02Entry()
        Dim entry As POCD_MT000040UV02Entry() = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim obs As POCD_MT000040UV02Observation = Nothing
        Try
            If mPatient.FutureScheduleTests IsNot Nothing AndAlso mPatient.FutureScheduleTests.Count > 0 Then
                entry = New POCD_MT000040UV02Entry(mPatient.FutureScheduleTests.Count - 1) {}
                For i As Integer = 0 To mPatient.FutureScheduleTests.Count - 1
                    entry(i) = New POCD_MT000040UV02Entry()
                    entry(i).typeCode = x_ActRelationshipEntry.DRIV
                    entry(i).Item = New POCD_MT000040UV02Observation()
                    obs = DirectCast(entry(i).Item, POCD_MT000040UV02Observation)
                    obs.classCode = ActClassObservation.OBS
                    obs.moodCode = x_ActMoodDocumentObservation.RQO
                    obs.moodCodespecified = True
                    obs.id = New II(0) {}
                    obs.id(0) = New II()
                    obs.id(0).root = Guid.NewGuid().ToString()
                    obs.id(0).extension = Nothing
                    obs.id(0).assigningAuthorityName = Nothing
                    obs.templateId = New II(0) {}
                    obs.templateId(0) = New II()
                    obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Plan of Care Activity Observation")
                    obs.templateId(0).assigningAuthorityName = Nothing
                    obs.templateId(0).extension = Nothing
                    obs.code = New CD()
                    If mPatient.FutureScheduleTests.Item(i).TestLOINCcode IsNot Nothing AndAlso mPatient.FutureScheduleTests.Item(i).TestLOINCcode.Trim() <> "" AndAlso mPatient.FutureScheduleTests.Item(i).TestLOINCcode <> "0" Then
                        obs.code.code = mPatient.FutureScheduleTests.Item(i).TestLOINCcode
                    Else
                        obs.code.code = Nothing
                        obs.code.nullFlavor = "NA"
                    End If
                    obs.code.codeSystemName = CodeSystem.LOINC
                    If mPatient.FutureScheduleTests.Item(i).TestName IsNot Nothing AndAlso mPatient.FutureScheduleTests.Item(i).TestName <> "" Then
                        obs.code.displayName = mPatient.FutureScheduleTests.Item(i).TestName
                    Else
                        obs.code.displayName = Nothing
                    End If
                    obs.code.codeSystem = "LOINC"
                    obs.code.codeSystemVersion = Nothing

                    obs.code.translation = New CD(0) {}
                    obs.code.translation(0) = New CD()
                    obs.code.translation(0).codeSystem = CodeSystem.CPT
                    obs.code.translation(0).codeSystemName = "CPT"
                    obs.code.translation(0).codeSystemVersion = Nothing
                    If Not IsNothing(mPatient.FutureScheduleTests.Item(i).CPTCode) AndAlso mPatient.FutureScheduleTests.Item(i).CPTCode <> "" Then
                        obs.code.translation(0).code = mPatient.FutureScheduleTests.Item(i).CPTCode
                    Else
                        obs.code.translation(0).code = Nothing
                        obs.code.translation(0).nullFlavor = "UNK"
                    End If
                    If mPatient.FutureScheduleTests.Item(i).CPTCode <> "" AndAlso mPatient.FutureScheduleTests.Item(i).CPTCode IsNot Nothing Then
                        obs.code.translation(0).displayName = mPatient.FutureScheduleTests.Item(i).TestName
                    Else
                        obs.code.translation(0).displayName = Nothing
                    End If

                    obs.text = New ED
                    obs.text.Text = New String() {}
                    obs.text.language = Nothing
                    obs.text.reference = New TEL
                    obs.text.reference.value = "#plan1"

                    obs.statusCode = New CS()
                    obs.statusCode.code = "active"
                    obs.statusCode.codeSystem = Nothing
                    obs.statusCode.codeSystemName = Nothing
                    obs.statusCode.codeSystemVersion = Nothing
                    obs.statusCode.displayName = Nothing

                    obs.effectiveTime = New IVL_TS()
                    obs.effectiveTime.value = Nothing
                    DirectCast(obs.effectiveTime, IVL_TS).ItemsElementName = New ItemsChoiceType2(0) {}
                    DirectCast(obs.effectiveTime, IVL_TS).ItemsElementName(0) = ItemsChoiceType2.center
                    DirectCast(obs.effectiveTime, IVL_TS).Items = New QTY(0) {}
                    DirectCast(obs.effectiveTime, IVL_TS).Items(0) = New IVXB_TS()
                    If mPatient.FutureScheduleTests.Item(i).ScheduledDateTime IsNot Nothing AndAlso mPatient.FutureScheduleTests.Item(i).ScheduledDateTime <> "" Then
                        DirectCast(DirectCast(obs.effectiveTime, IVL_TS).Items(0), IVXB_TS).value = (Convert.ToDateTime(mPatient.FutureScheduleTests.Item(i).ScheduledDateTime)).ToString("yyyyMMdd")
                    Else
                        DirectCast(DirectCast(obs.effectiveTime, IVL_TS).Items(0), IVXB_TS).nullFlavor = "UNK"
                        DirectCast(DirectCast(obs.effectiveTime, IVL_TS).Items(0), IVXB_TS).value = Nothing
                    End If

                Next
            End If
            Return entry
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Future Schedule Tests Section"
            Else
                _msgString = _msgString & vbNewLine & "Future Schedule Tests Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            _CodeSysItem = Nothing
            obs = Nothing
        End Try
    End Function
    Public Function GetPlanofCareDiagnosticPendingTestsEntry() As POCD_MT000040UV02Entry()
        Dim entry As POCD_MT000040UV02Entry() = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim obs As POCD_MT000040UV02Observation = Nothing
        Try
            If mPatient.PendingTests IsNot Nothing AndAlso mPatient.PendingTests.Count > 0 Then
                entry = New POCD_MT000040UV02Entry(mPatient.PendingTests.Count - 1) {}
                For i As Integer = 0 To mPatient.PendingTests.Count - 1
                    entry(i) = New POCD_MT000040UV02Entry()
                    entry(i).typeCode = x_ActRelationshipEntry.DRIV
                    entry(i).Item = New POCD_MT000040UV02Observation()
                    obs = DirectCast(entry(i).Item, POCD_MT000040UV02Observation)
                    obs.classCode = ActClassObservation.OBS
                    obs.moodCode = x_ActMoodDocumentObservation.RQO
                    obs.id = New II(0) {}
                    obs.id(0) = New II()
                    obs.id(0).root = Guid.NewGuid().ToString()
                    obs.id(0).extension = Nothing
                    obs.id(0).assigningAuthorityName = Nothing
                    obs.templateId = New II(0) {}
                    obs.templateId(0) = New II()
                    obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Plan of Care Activity Observation")
                    obs.templateId(0).assigningAuthorityName = Nothing
                    obs.templateId(0).extension = Nothing
                    obs.code = New CD()
                    If mPatient.PendingTests.Item(i).TestLOINCcode IsNot Nothing AndAlso mPatient.PendingTests.Item(i).TestLOINCcode.Trim() <> "" AndAlso mPatient.PendingTests.Item(i).TestLOINCcode <> "0" Then
                        obs.code.code = mPatient.PendingTests.Item(i).TestLOINCcode
                    Else
                        obs.code.code = Nothing
                        obs.code.nullFlavor = "NA"
                    End If
                    obs.code.codeSystemName = CodeSystem.LOINC
                    If mPatient.PendingTests.Item(i).TestName IsNot Nothing AndAlso mPatient.PendingTests.Item(i).TestName.Trim() <> "" Then
                        obs.code.displayName = mPatient.PendingTests.Item(i).TestName
                    Else
                        obs.code.displayName = Nothing
                    End If
                    obs.code.codeSystem = "LOINC"
                    obs.code.codeSystemVersion = Nothing
                    obs.text = New ED
                    obs.text.Text = New String() {}
                    obs.text.language = Nothing
                    obs.text.reference = New TEL
                    obs.text.reference.value = "#plan1"

                    obs.statusCode = New CS()
                    obs.statusCode.code = "active"
                    obs.statusCode.codeSystem = Nothing
                    obs.statusCode.codeSystemName = Nothing
                    obs.statusCode.codeSystemVersion = Nothing
                    obs.statusCode.displayName = Nothing

                    obs.effectiveTime = New IVL_TS()
                    obs.effectiveTime.value = Nothing
                    DirectCast(obs.effectiveTime, IVL_TS).ItemsElementName = New ItemsChoiceType2(0) {}
                    DirectCast(obs.effectiveTime, IVL_TS).ItemsElementName(0) = ItemsChoiceType2.center
                    DirectCast(obs.effectiveTime, IVL_TS).Items = New QTY(0) {}
                    DirectCast(obs.effectiveTime, IVL_TS).Items(0) = New IVXB_TS()
                    If mPatient.PendingTests.Item(i).ScheduledDateTime IsNot Nothing AndAlso mPatient.PendingTests.Item(i).ScheduledDateTime <> "" Then
                        DirectCast(DirectCast(obs.effectiveTime, IVL_TS).Items(0), IVXB_TS).value = (Convert.ToDateTime(mPatient.PendingTests.Item(i).ScheduledDateTime)).ToString("yyyyMMdd")
                    Else
                        DirectCast(DirectCast(obs.effectiveTime, IVL_TS).Items(0), IVXB_TS).nullFlavor = "UNK"
                        DirectCast(DirectCast(obs.effectiveTime, IVL_TS).Items(0), IVXB_TS).value = Nothing
                    End If

                Next
            End If
            Return entry
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Diagnostic Pending Tests Section"
            Else
                _msgString = _msgString & vbNewLine & "Diagnostic Pending Tests Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            _CodeSysItem = Nothing
            obs = Nothing
        End Try
    End Function
    'Public Function GetPlanofCareText() As StrucDocText
    '    Dim table As StrucDocTable = Nothing
    '    Dim _text As StrucDocText = Nothing
    '    Dim PlanOfCareCnt As Integer = 1

    '    Try
    '        _text = New StrucDocText()
    '        _text.mediaType = Nothing
    '        _text.ID = Nothing
    '        _text.language = Nothing
    '        _text.Items = New Object(8) {}
    '        If mPatient.PatientCarePlan IsNot Nothing AndAlso mPatient.PatientCarePlan.Count > 0 Then

    '            _text.Items(0) = New StrucDocTable()
    '            table = DirectCast(_text.Items(0), StrucDocTable)
    '            table.ID = Nothing
    '            table.language = Nothing
    '            table.border = "1"
    '            table.width = "100%"
    '            table.thead = New StrucDocThead()
    '            table.thead.ID = Nothing
    '            table.thead.language = Nothing
    '            table.thead.tr = New StrucDocTr(0) {}
    '            table.thead.tr(0) = New StrucDocTr()
    '            table.thead.tr(0).ID = Nothing
    '            table.thead.tr(0).language = Nothing
    '            table.thead.tr(0).Items = New Object(1) {}
    '            table.thead.tr(0).Items(0) = New StrucDocTh()
    '            DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Goals"}
    '            DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
    '            DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
    '            table.thead.tr(0).Items(1) = New StrucDocTh()
    '            DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Instructions"}
    '            DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
    '            DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing

    '            table.tbody = New StrucDocTbody(0) {}
    '            table.tbody(0) = New StrucDocTbody()
    '            table.tbody(0).ID = Nothing
    '            table.tbody(0).language = Nothing



    '            table.tbody(0).tr = New StrucDocTr(mPatient.PatientCarePlan.Count - 1) {}
    '            For cnt As Integer = 0 To mPatient.PatientCarePlan.Count - 1
    '                Dim obj As PatientCarePlan = mPatient.PatientCarePlan.Item(cnt)

    '                table.tbody(0).tr(cnt) = New StrucDocTr()
    '                table.tbody(0).tr(cnt).Items = New Object(1) {}
    '                table.tbody(0).tr(cnt).Items(0) = New StrucDocTd()
    '                table.tbody(0).tr(cnt).ID = Nothing
    '                table.tbody(0).tr(cnt).language = Nothing
    '                DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Text = New String() {obj.Goal}
    '                DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).ID = Nothing
    '                DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).language = Nothing
    '                table.tbody(0).tr(cnt).Items(1) = New StrucDocTd()
    '                If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
    '                    DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).Items = New StrucDocContent(0) {}
    '                    DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).Items(0) = New StrucDocContent
    '                    DirectCast(DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).Items(0), StrucDocContent).ID = "Plan" & cnt
    '                    DirectCast(DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).Items(0), StrucDocContent).language = Nothing

    '                End If
    '                DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).Text = New String() {obj.Instructions}
    '                DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).ID = Nothing
    '                DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).language = Nothing
    '            Next
    '        Else
    '            _text.Items(0) = New StrucDocContent()
    '            DirectCast(_text.Items(0), StrucDocContent).Text = New String() {"No known Goals and Instructions"}
    '            DirectCast(_text.Items(0), StrucDocContent).ID = Nothing
    '            DirectCast(_text.Items(0), StrucDocContent).language = Nothing
    '            'table.tbody(0).tr = New StrucDocTr(0) {}
    '            'table.tbody(0).tr(0) = New StrucDocTr()
    '            'table.tbody(0).tr(0).Items = New Object(0) {}
    '            'table.tbody(0).tr(0).Items(0) = New StrucDocTd()
    '            'table.tbody(0).tr(0).ID = Nothing
    '            'table.tbody(0).tr(0).language = Nothing

    '        End If
    '        If mPatient.PendingTests IsNot Nothing AndAlso mPatient.PendingTests.Count > 0 Then
    '            _text.Items(1) = New StrucDocParagraph
    '            DirectCast(_text.Items(1), StrucDocParagraph).ID = Nothing
    '            DirectCast(_text.Items(1), StrucDocParagraph).language = Nothing
    '            DirectCast(_text.Items(1), StrucDocParagraph).Text = New String() {}

    '            _text.Items(2) = New StrucDocTable()
    '            table = DirectCast(_text.Items(2), StrucDocTable)
    '            table.ID = Nothing
    '            table.language = Nothing
    '            table.border = "1"
    '            table.width = "100%"
    '            table.thead = New StrucDocThead()
    '            table.thead.ID = Nothing
    '            table.thead.language = Nothing
    '            table.thead.tr = New StrucDocTr(0) {}
    '            table.thead.tr(0) = New StrucDocTr()
    '            table.thead.tr(0).ID = Nothing
    '            table.thead.tr(0).language = Nothing
    '            table.thead.tr(0).Items = New Object(2) {}
    '            table.thead.tr(0).Items(0) = New StrucDocTh()
    '            If CDAWritingParams.CDAFileType = CDAFileTypeEnum.ClinicalSummary Then
    '                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Diagnostic test pending"}
    '            Else
    '                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Laboratory Test"}
    '            End If

    '            DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
    '            DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
    '            table.thead.tr(0).Items(1) = New StrucDocTh()
    '            DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"LOINC code"}
    '            DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
    '            DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing
    '            table.thead.tr(0).Items(2) = New StrucDocTh()
    '            DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Test Date"}
    '            DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
    '            DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing

    '            table.tbody = New StrucDocTbody(0) {}
    '            table.tbody(0) = New StrucDocTbody()
    '            table.tbody(0).ID = Nothing
    '            table.tbody(0).language = Nothing



    '            table.tbody(0).tr = New StrucDocTr(mPatient.PendingTests.Count - 1) {}
    '            For cnt As Integer = 0 To mPatient.PendingTests.Count - 1
    '                Dim obj As LabTest = mPatient.PendingTests.Item(cnt)
    '                table.tbody(0).tr(cnt) = New StrucDocTr()
    '                table.tbody(0).tr(cnt).ID = Nothing
    '                table.tbody(0).tr(cnt).language = Nothing
    '                table.tbody(0).tr(cnt).Items = New Object(2) {}
    '                table.tbody(0).tr(cnt).Items(0) = New StrucDocTd()
    '                DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Text = New String() {obj.TestName}
    '                DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).ID = Nothing
    '                DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).language = Nothing
    '                table.tbody(0).tr(cnt).Items(1) = New StrucDocTd()
    '                DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).Text = New String() {obj.TestLOINCcode}
    '                DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).ID = Nothing
    '                DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).language = Nothing
    '                table.tbody(0).tr(cnt).Items(2) = New StrucDocTd()
    '                DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).Text = New String() {obj.ScheduledDateTime}
    '                DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).ID = Nothing
    '                DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).language = Nothing
    '            Next
    '        Else
    '            _text.Items(2) = New StrucDocParagraph()
    '            If CDAWritingParams.CDAFileType = CDAFileTypeEnum.ClinicalSummary Then

    '                DirectCast(_text.Items(2), StrucDocParagraph).Text = New String() {"No known Diagnostic test pending"}
    '            Else
    '                DirectCast(_text.Items(2), StrucDocParagraph).Text = New String() {"No known Laboratory Tests"}

    '            End If


    '            DirectCast(_text.Items(2), StrucDocParagraph).ID = Nothing
    '            DirectCast(_text.Items(2), StrucDocParagraph).language = Nothing
    '            'table.tbody(0).tr = New StrucDocTr(0) {}
    '            'table.tbody(0).tr(0) = New StrucDocTr()
    '            'table.tbody(0).tr(0).Items = New Object(0) {}
    '            'table.tbody(0).tr(0).Items(0) = New StrucDocTd()
    '            'table.tbody(0).tr(0).ID = Nothing
    '            'table.tbody(0).tr(0).language = Nothing
    '            'DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).Text = New String() {"No Known Laboratory Tests"}

    '            'DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
    '            'DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing
    '        End If

    '        If CDAWritingParams.CDAFileType = CDAFileTypeEnum.ClinicalSummary Then
    '            If mPatient.FutureScheduleApt IsNot Nothing AndAlso mPatient.FutureScheduleApt.Count > 0 Then
    '                _text.Items(3) = New StrucDocParagraph
    '                DirectCast(_text.Items(3), StrucDocParagraph).ID = Nothing
    '                DirectCast(_text.Items(3), StrucDocParagraph).language = Nothing
    '                DirectCast(_text.Items(3), StrucDocParagraph).Text = New String() {}

    '                _text.Items(4) = New StrucDocTable()
    '                table = DirectCast(_text.Items(4), StrucDocTable)
    '                table.ID = Nothing
    '                table.language = Nothing
    '                table.border = "1"
    '                table.width = "100%"
    '                table.thead = New StrucDocThead()
    '                table.thead.ID = Nothing
    '                table.thead.language = Nothing
    '                table.thead.tr = New StrucDocTr(0) {}
    '                table.thead.tr(0) = New StrucDocTr()
    '                table.thead.tr(0).ID = Nothing
    '                table.thead.tr(0).language = Nothing
    '                table.thead.tr(0).Items = New Object(0) {}
    '                table.thead.tr(0).Items(0) = New StrucDocTh()
    '                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Future schedule appointment "}
    '                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
    '                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing

    '                table.tbody = New StrucDocTbody(0) {}
    '                table.tbody(0) = New StrucDocTbody()
    '                table.tbody(0).ID = Nothing
    '                table.tbody(0).language = Nothing


    '                table.tbody(0).tr = New StrucDocTr(mPatient.FutureScheduleApt.Count - 1) {}
    '                For cnt As Integer = 0 To mPatient.FutureScheduleApt.Count - 1
    '                    Dim obj As Appointment = mPatient.FutureScheduleApt.Item(cnt)
    '                    table.tbody(0).tr(cnt) = New StrucDocTr()
    '                    table.tbody(0).tr(cnt).ID = Nothing
    '                    table.tbody(0).tr(cnt).Items = New Object(0) {}
    '                    table.tbody(0).tr(cnt).Items(0) = New StrucDocTd()
    '                    If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
    '                        DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Items = New StrucDocContent(0) {}
    '                        DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Items(0) = New StrucDocContent
    '                        If mPatient.PatientCarePlan IsNot Nothing AndAlso mPatient.PatientCarePlan.Count > 0 Then
    '                            DirectCast(DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Items(0), StrucDocContent).ID = "Plan" & mPatient.PatientCarePlan.Count + cnt
    '                        Else
    '                            DirectCast(DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Items(0), StrucDocContent).ID = "Plan" & cnt
    '                        End If

    '                        DirectCast(DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Items(0), StrucDocContent).language = Nothing

    '                    End If
    '                    table.tbody(0).tr(cnt).language = Nothing
    '                    If obj.Provider IsNot Nothing AndAlso obj.Provider <> "" Then
    '                        Dim _strtext As String = obj.Provider
    '                        'If mPatient.Clinic.PersonContactAddress.Street IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress.Street <> "" Then
    '                        '    _strtext = _strtext & " at " & mPatient.Clinic.PersonContactAddress.Street & "," & mPatient.Clinic.PersonContactAddress.City
    '                        '    Dim provider As System.Globalization.CultureInfo = System.Globalization.CultureInfo.CreateSpecificCulture("en-UK")
    '                        '    Dim result As Date = DateTime.ParseExact(obj.StartDate, "yyyyMMdd", provider)
    '                        '    If Not IsNothing(result) Then
    '                        '        _strtext = _strtext & " on " & result.ToString("MM/dd/yyyy")
    '                        '    End If

    '                        'End If

    '                        If obj.AppStreet IsNot Nothing AndAlso obj.AppStreet <> "" Then
    '                            _strtext = _strtext & ", " & obj.AppStreet
    '                        End If


    '                        If obj.AppCity IsNot Nothing AndAlso obj.AppCity <> "" Then
    '                            _strtext = _strtext & ", " & obj.AppCity
    '                        End If
    '                        If obj.AppState IsNot Nothing AndAlso obj.AppState <> "" Then
    '                            _strtext = _strtext & ", " & obj.AppState
    '                        End If
    '                        If obj.AppZip IsNot Nothing AndAlso obj.AppZip <> "" Then
    '                            _strtext = _strtext & " " & obj.AppZip
    '                        End If
    '                        Dim provider As System.Globalization.CultureInfo = System.Globalization.CultureInfo.CreateSpecificCulture("en-UK")
    '                        Dim result As Date = DateTime.ParseExact(obj.StartDate, "yyyyMMdd", provider)
    '                        If Not IsNothing(result) Then
    '                            _strtext = _strtext & " on " & result.ToString("MM/dd/yyyy")
    '                        End If


    '                        DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Text = New String() {_strtext}
    '                        _strtext = String.Empty
    '                    Else
    '                        DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Text = Nothing
    '                    End If
    '                    DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).ID = Nothing
    '                    DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).language = Nothing
    '                Next
    '            Else
    '                _text.Items(4) = New StrucDocParagraph()
    '                DirectCast(_text.Items(4), StrucDocParagraph).Text = New String() {"No known Future schedule appointments"}
    '                DirectCast(_text.Items(4), StrucDocParagraph).ID = Nothing
    '                DirectCast(_text.Items(4), StrucDocParagraph).language = Nothing
    '                'table.tbody(0).tr = New StrucDocTr(0) {}
    '                'table.tbody(0).tr(0) = New StrucDocTr()
    '                'table.tbody(0).tr(0).Items = New Object(0) {}
    '                'table.tbody(0).tr(0).Items(0) = New StrucDocTd()
    '                'table.tbody(0).tr(0).ID = Nothing
    '                'table.tbody(0).tr(0).language = Nothing
    '                'DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).Text = New String() {"No Known Future schedule appointment"}

    '                'DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
    '                'DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing
    '            End If
    '            If mPatient.FutureScheduleTests IsNot Nothing AndAlso mPatient.FutureScheduleTests.Count > 0 Then
    '                _text.Items(5) = New StrucDocParagraph
    '                DirectCast(_text.Items(5), StrucDocParagraph).ID = Nothing
    '                DirectCast(_text.Items(5), StrucDocParagraph).language = Nothing
    '                DirectCast(_text.Items(5), StrucDocParagraph).Text = New String() {}

    '                _text.Items(6) = New StrucDocTable()
    '                table = DirectCast(_text.Items(6), StrucDocTable)
    '                table.ID = Nothing
    '                table.language = Nothing
    '                table.border = "1"
    '                table.width = "100%"
    '                table.thead = New StrucDocThead()
    '                table.thead.ID = Nothing
    '                table.thead.language = Nothing
    '                table.thead.tr = New StrucDocTr(0) {}
    '                table.thead.tr(0) = New StrucDocTr()
    '                table.thead.tr(0).ID = Nothing
    '                table.thead.tr(0).language = Nothing
    '                table.thead.tr(0).Items = New Object(3) {}
    '                table.thead.tr(0).Items(0) = New StrucDocTh()
    '                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Future Scheduled Tests"}
    '                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
    '                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
    '                table.thead.tr(0).Items(1) = New StrucDocTh()
    '                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"LOINC code"}
    '                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
    '                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing
    '                table.thead.tr(0).Items(2) = New StrucDocTh()
    '                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Schedule Date"}
    '                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
    '                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing
    '                table.thead.tr(0).Items(3) = New StrucDocTh()
    '                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"CPT Code"}
    '                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
    '                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).language = Nothing


    '                table.tbody = New StrucDocTbody(0) {}
    '                table.tbody(0) = New StrucDocTbody()
    '                table.tbody(0).ID = Nothing
    '                table.tbody(0).language = Nothing



    '                table.tbody(0).tr = New StrucDocTr(mPatient.FutureScheduleTests.Count - 1) {}
    '                For cnt As Integer = 0 To mPatient.FutureScheduleTests.Count - 1
    '                    Dim obj As LabTest = mPatient.FutureScheduleTests.Item(cnt)
    '                    table.tbody(0).tr(cnt) = New StrucDocTr()
    '                    table.tbody(0).tr(cnt).ID = Nothing
    '                    table.tbody(0).tr(cnt).language = Nothing
    '                    table.tbody(0).tr(cnt).Items = New Object(3) {}
    '                    table.tbody(0).tr(cnt).Items(0) = New StrucDocTd()
    '                    DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Text = New String() {obj.TestName}
    '                    DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).ID = Nothing
    '                    DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).language = Nothing
    '                    table.tbody(0).tr(cnt).Items(1) = New StrucDocTd()
    '                    DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).Text = New String() {obj.TestLOINCcode}
    '                    DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).ID = Nothing
    '                    DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).language = Nothing
    '                    table.tbody(0).tr(cnt).Items(2) = New StrucDocTd()
    '                    DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).Text = New String() {obj.ScheduledDateTime}
    '                    DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).ID = Nothing
    '                    DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).language = Nothing
    '                    table.tbody(0).tr(cnt).Items(3) = New StrucDocTd()
    '                    DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).Text = New String() {obj.CPTCode}
    '                    DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).ID = Nothing
    '                    DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).language = Nothing
    '                Next
    '            Else
    '                _text.Items(6) = New StrucDocParagraph()
    '                DirectCast(_text.Items(6), StrucDocParagraph).Text = New String() {"No known Future Scheduled Tests"}
    '                DirectCast(_text.Items(6), StrucDocParagraph).ID = Nothing
    '                DirectCast(_text.Items(6), StrucDocParagraph).language = Nothing
    '                'table.tbody(0).tr = New StrucDocTr(0) {}
    '                'table.tbody(0).tr(0) = New StrucDocTr()
    '                'table.tbody(0).tr(0).Items = New Object(0) {}
    '                'table.tbody(0).tr(0).Items(0) = New StrucDocTd()
    '                'table.tbody(0).tr(0).ID = Nothing
    '                'table.tbody(0).tr(0).language = Nothing
    '                'DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).Text = New String() {"No Known Future Scheduled Tests"}

    '                'DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
    '                'DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing
    '            End If
    '            If mPatient.ReferralstoProvider IsNot Nothing AndAlso mPatient.ReferralstoProvider.Count > 0 Then
    '                _text.Items(7) = New StrucDocParagraph
    '                DirectCast(_text.Items(7), StrucDocParagraph).ID = Nothing
    '                DirectCast(_text.Items(7), StrucDocParagraph).language = Nothing
    '                DirectCast(_text.Items(7), StrucDocParagraph).Text = New String() {}

    '                _text.Items(8) = New StrucDocTable()
    '                table = DirectCast(_text.Items(8), StrucDocTable)
    '                table.ID = Nothing
    '                table.language = Nothing
    '                table.border = "1"
    '                table.width = "100%"
    '                table.thead = New StrucDocThead()
    '                table.thead.ID = Nothing
    '                table.thead.language = Nothing
    '                table.thead.tr = New StrucDocTr(0) {}
    '                table.thead.tr(0) = New StrucDocTr()
    '                table.thead.tr(0).ID = Nothing
    '                table.thead.tr(0).language = Nothing
    '                table.thead.tr(0).Items = New Object(0) {}
    '                table.thead.tr(0).Items(0) = New StrucDocTh()
    '                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Referrals to Other Providers"}
    '                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
    '                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing

    '                table.tbody = New StrucDocTbody(0) {}
    '                table.tbody(0) = New StrucDocTbody()
    '                table.tbody(0).ID = Nothing
    '                table.tbody(0).language = Nothing



    '                table.tbody(0).tr = New StrucDocTr(mPatient.ReferralstoProvider.Count - 1) {}
    '                For cnt As Integer = 0 To mPatient.ReferralstoProvider.Count - 1
    '                    Dim obj As PatientSupport = mPatient.ReferralstoProvider.Item(cnt)
    '                    table.tbody(0).tr(cnt) = New StrucDocTr()
    '                    table.tbody(0).tr(cnt).ID = Nothing
    '                    table.tbody(0).tr(cnt).language = Nothing
    '                    table.tbody(0).tr(cnt).Items = New Object(0) {}
    '                    table.tbody(0).tr(cnt).Items(0) = New StrucDocTd()
    '                    Dim _strtext As String = ""
    '                    If obj.PersonName.FirstName IsNot Nothing AndAlso obj.PersonName.FirstName <> "" Then
    '                        If obj.PersonName.Prefix IsNot Nothing AndAlso obj.PersonName.Prefix <> "" Then
    '                            _strtext = _strtext & obj.PersonName.Prefix & "."
    '                        End If
    '                        _strtext = _strtext & " " & obj.PersonName.FirstName
    '                        If obj.PersonName.LastName IsNot Nothing AndAlso obj.PersonName.LastName <> "" Then
    '                            _strtext = _strtext & " " & obj.PersonName.LastName
    '                        End If
    '                        If obj.PersonContactPhone.Phone IsNot Nothing AndAlso obj.PersonContactPhone.Phone <> "" Then

    '                            _strtext = _strtext & ", " & String.Format("{0:###-###-####}", Long.Parse(obj.PersonContactPhone.Phone))


    '                        End If
    '                        If obj.PersonContactAddress.Street IsNot Nothing AndAlso obj.PersonContactAddress.Street <> "" Then
    '                            _strtext = _strtext & ", " & obj.PersonContactAddress.Street
    '                        End If
    '                        If obj.PersonContactAddress.City IsNot Nothing AndAlso obj.PersonContactAddress.City <> "" Then
    '                            _strtext = _strtext & ", " & obj.PersonContactAddress.City
    '                        End If
    '                        If obj.PersonContactAddress.State IsNot Nothing AndAlso obj.PersonContactAddress.State <> "" Then
    '                            _strtext = _strtext & ", " & obj.PersonContactAddress.State
    '                        End If
    '                        If obj.PersonContactAddress.Zip IsNot Nothing AndAlso obj.PersonContactAddress.Zip <> "" Then
    '                            _strtext = _strtext & " " & obj.PersonContactAddress.Zip
    '                        End If
    '                        If obj.Comments IsNot Nothing AndAlso obj.Comments <> "" Then
    '                            _strtext = _strtext & " " & obj.Comments
    '                        End If
    '                    End If

    '                    DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Text = New String() {_strtext}
    '                    DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).ID = Nothing
    '                    DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).language = Nothing
    '                    _strtext = String.Empty
    '                Next
    '            Else
    '                _text.Items(8) = New StrucDocParagraph()
    '                DirectCast(_text.Items(8), StrucDocParagraph).Text = New String() {"No known Referrals to Other Providers"}
    '                DirectCast(_text.Items(8), StrucDocParagraph).ID = Nothing
    '                DirectCast(_text.Items(8), StrucDocParagraph).language = Nothing

    '                'table.tbody(0).tr = New StrucDocTr(0) {}
    '                'table.tbody(0).tr(0) = New StrucDocTr()
    '                'table.tbody(0).tr(0).Items = New Object(0) {}
    '                'table.tbody(0).tr(0).Items(0) = New StrucDocTd()
    '                'table.tbody(0).tr(0).ID = Nothing
    '                'table.tbody(0).tr(0).language = Nothing
    '                'DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).Text = New String() {"No Known Referrals to Other Providers"}

    '                'DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
    '                'DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing
    '            End If
    '        End If
    '        Return _text
    '    Catch ex As Exception
    '        If _msgString = "" Then

    '            _msgString = vbNewLine & _errormsg & vbNewLine & "Plan Of Care Text Section"
    '        Else
    '            _msgString = _msgString & vbNewLine & "Plan Of Care Text Section"
    '        End If
    '        gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
    '        ex = Nothing
    '        Return Nothing
    '    Finally
    '        table = Nothing
    '    End Try
    'End Function

    Private Function GetCDAFunctionalStatusComponent() As POCD_MT000040UV02Component3

        Dim _FunctionalStatus As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim table As StrucDocTable = Nothing
        Try

            Dim obj As New gloCDADataExtraction
            ' Dim _dtDate As String = obj.GetPatientCognitiveStatusDate(mPatient.PatientName.Code)
            _FunctionalStatus = New POCD_MT000040UV02Component3
            _FunctionalStatus.section = New POCD_MT000040UV02Section

            section = _FunctionalStatus.section
            section.classCodeSpecified = False
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            'section.ID = Nothing
            section.templateId = New II(1) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Functional Status")
            section.templateId(0).extension = _DateExtension22
            section.templateId(0).assigningAuthorityName = Nothing

            section.templateId(1) = New II()
            section.templateId(1).root = oTemplateIDMaster.GetSectionID("Functional Status")
            section.templateId(1).extension = Nothing
            section.templateId(1).assigningAuthorityName = Nothing


            section.code = New CE()
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Functional Status")

            If _CodeSysItem IsNot Nothing Then
                section.code.code = _CodeSysItem.Code
                section.code.codeSystem = CodeSystem.LOINC
                section.code.codeSystemName = _CodeSysItem.CodingSystemName
                section.code.codeSystemVersion = Nothing
                section.code.displayName = Nothing
            Else
                section.code = Nothing
            End If

            section.title = New ST()
            section.title.Text = New String() {"Functional status"}
            section.title.language = Nothing
            section.text = New StrucDocText()
            section.text.mediaType = Nothing
            section.text.ID = Nothing
            section.text.language = Nothing
            If mPatient.FunctionalStatus IsNot Nothing AndAlso mPatient.FunctionalStatus.Count > 0 Then
                ''
                ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                If Not IsNothing(sconf.code) Then
                    section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''
                ''
                section.text.Items = New Object(0) {}
                section.text.Items(0) = New StrucDocTable
                table = DirectCast(section.text.Items(0), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}
                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(3) {}


                table.thead.tr(0).Items(0) = New StrucDocTh()
                'DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Functional and Cognitive Status"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Functional Status"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing

                table.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"SNOMED Code"}
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing


                table.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Date"}
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing

                'table.thead.tr(0).Items(3) = New StrucDocTh()
                'DirectCast(table.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Status"}
                'DirectCast(table.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                'DirectCast(table.thead.tr(0).Items(3), StrucDocTh).language = Nothing

                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing
                table.tbody(0).tr = New StrucDocTr(0) {}
                table.tbody(0).tr(0) = New StrucDocTr()
                table.tbody(0).tr(0).ID = Nothing
                table.tbody(0).tr(0).language = Nothing
                table.tbody(0).tr(0).Items = New Object(2) {}
                table.tbody(0).tr(0).Items(0) = New StrucDocTd()
                DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
                DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing

                table.tbody(0).tr = New StrucDocTr(mPatient.FunctionalStatus.Count - 1) {}
                For cnt As Integer = 0 To mPatient.FunctionalStatus.Count - 1
                    Dim oStatus As Allergies = mPatient.FunctionalStatus.Item(cnt)
                    table.tbody(0).tr(cnt) = New StrucDocTr()
                    table.tbody(0).tr(cnt).ID = Nothing
                    table.tbody(0).tr(cnt).language = Nothing
                    table.tbody(0).tr(cnt).Items = New Object(3) {}
                    table.tbody(0).tr(cnt).Items(0) = New StrucDocTd()

                    DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).language = Nothing

                    If oStatus.ProductName IsNot Nothing AndAlso oStatus.ProductName <> "" Then
                        DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).ID = "FUNC" & cnt + 1
                        DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Text = New String() {oStatus.ProductName}
                    Else
                        DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Text = Nothing
                    End If

                    table.tbody(0).tr(cnt).Items(1) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).language = Nothing
                    If oStatus.ConceptID IsNot Nothing AndAlso oStatus.ConceptID <> "" Then
                        DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).Text = New String() {oStatus.ConceptID}
                    Else
                        DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).Text = Nothing
                    End If


                    table.tbody(0).tr(cnt).Items(2) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).language = Nothing
                    If oStatus.EffectiveStartTime IsNot Nothing AndAlso oStatus.EffectiveStartTime <> "" Then
                        DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).Text = New String() {oStatus.EffectiveStartTime}
                    Else
                        DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).Text = Nothing
                    End If

                    'table.tbody(0).tr(cnt).Items(3) = New StrucDocTd()
                    'DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).ID = Nothing
                    'DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).language = Nothing
                    'If oStatus.Status IsNot Nothing AndAlso oStatus.Status <> "" Then
                    '    DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).Text = New String() {oStatus.Status}
                    'Else
                    '    DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).Text = Nothing
                    'End If

                    section.entry = New POCD_MT000040UV02Entry(mPatient.FunctionalStatus.Count - 1) {}


                    'Dim org As POCD_MT000040UV02Organizer

                    'section.entry(cnt) = New POCD_MT000040UV02Entry
                    'section.entry(cnt).Item = New POCD_MT000040UV02Organizer
                    'org = DirectCast(section.entry(cnt).Item, POCD_MT000040UV02Organizer)
                    'org.classCode = x_ActClassDocumentEntryOrganizer.CLUSTER
                    'org.moodCodeSpecified = True
                    'org.moodCode = "EVN"
                    'org.templateId = New II(2) {}
                    'org.templateId(0) = New II
                    'org.templateId(0).root = "2.16.840.1.113883.10.20.22.4.66"
                    'org.templateId(0).extension = _DateExtension22
                    'org.templateId(1) = New II
                    'org.templateId(1).root = "2.16.840.1.113883.10.20.22.4.66"
                    'org.id = New II(1) {}
                    'org.id(0) = New II
                    'org.id(0).root = Guid.NewGuid().ToString()
                    'org.code = New CD
                    'org.code.nullFlavorSpecified = True
                    'org.code.nullFlavor = "NA"
                    'org.statusCode = New CS
                    'org.statusCode.code = "completed"
                    'org.component = New POCD_MT000040UV02Component4(2) {}
                    'org.component(0) = New POCD_MT000040UV02Component4
                    'org.component(0).Item = New POCD_MT000040UV02Observation()
                    'Dim obs As New POCD_MT000040UV02Observation()
                    'obs = DirectCast(org.component(0).Item, POCD_MT000040UV02Observation)
                    'obs.classCodeSpecified = True
                    'obs.classCode = ActClassObservation.OBS
                    'obs.moodCodeSpecified = True
                    'obs.moodCode = x_ActMoodDocumentObservation.EVN
                    'obs.templateId = New II(2) {}
                    'obs.templateId(0) = New II
                    'obs.templateId(0).root = "2.16.840.1.113883.10.20.22.4.67"
                    'obs.templateId(0).extension = _DateExtension22
                    'obs.templateId(1) = New II
                    'obs.templateId(1).root = "2.16.840.1.113883.10.20.22.4.67"
                    'obs.id = New II(1) {}
                    'obs.id(0) = New II
                    'obs.id(0).root = Guid.NewGuid.ToString()
                    'obs.code = New CD
                    'obs.code.code = "54522-8"
                    'obs.code.displayName = "Functional status"
                    'obs.code.codeSystem = "2.16.840.1.113883.6.1"
                    'obs.code.codeSystemName = "LOINC"
                    'obs.statusCode = New CS
                    'obs.statusCode.code = "completed"
                    'obs.effectiveTime = New IVL_TS
                    'obs.effectiveTime.value = Format(CType(oStatus.EffectiveStartTime, Date), "yyyyMMdd")
                    'obs.value = New ANY(0) {}
                    'obs.value(0) = New CD()
                    'Dim Code As New CD
                    'Code = DirectCast(obs.value(0), CD)
                    'Code.code = oStatus.ConceptID
                    'Code.codeSystem = CodeSystem.SNOMED_CT
                    'Code.codeSystemName = "SNOMED CT"
                    'Code.displayName = oStatus.ProductName
                    'org.component(1) = New POCD_MT000040UV02Component4
                    'org.component(1).Item = New POCD_MT000040UV02Observation()
                    'Dim obs1 As New POCD_MT000040UV02Observation()
                    'obs1 = DirectCast(org.component(1).Item, POCD_MT000040UV02Observation)
                    'obs1.classCodeSpecified = True
                    'obs1.classCode = ActClassObservation.OBS
                    'obs1.moodCodeSpecified = True
                    'obs1.moodCode = x_ActMoodDocumentObservation.EVN
                    'obs1.templateId = New II(2) {}
                    'obs1.templateId(0) = New II
                    'obs1.templateId(0).root = "2.16.840.1.113883.10.20.22.4.128"
                    'obs1.id = New II(1) {}
                    'obs1.id(0) = New II
                    'obs1.id(0).root = Guid.NewGuid.ToString()
                    'obs1.code = New CD
                    'obs1.code.nullFlavor = "NA"
                    'obs1.statusCode = New CS
                    'obs1.statusCode.code = "completed"
                    'obs1.effectiveTime = New IVL_TS
                    'obs1.effectiveTime.nullFlavor = "NA"
                    'obs1.effectiveTime.nullFlavorSpecified = True
                    ''obs1.effectiveTime.value = Format(CType(oStatus.EffectiveStartTime, Date), "yyyyMMdd")
                    'obs1.value = New ANY(0) {}
                    'obs1.value(0) = New CD()
                    'obs1.value(0).nullFlavorSpecified = True
                    'obs1.value(0).nullFlavor = "NA"
                    'Dim CodeSELFCARE As New CD
                    'CodeSELFCARE = DirectCast(obs1.value(0), CD)
                    'CodeSELFCARE.code = Nothing
                    'CodeSELFCARE.codeSystem = Nothing
                    'CodeSELFCARE.codeSystemName = Nothing
                    'CodeSELFCARE.displayName = Nothing

                    section.entry(cnt) = New POCD_MT000040UV02Entry
                    section.entry(cnt).Item = New POCD_MT000040UV02Observation
                    Dim FUNCOBS As POCD_MT000040UV02Observation
                    FUNCOBS = DirectCast(section.entry(cnt).Item, POCD_MT000040UV02Observation)
                    FUNCOBS.classCodeSpecified = True
                    FUNCOBS.classCode = ActClassObservation.OBS
                    FUNCOBS.moodCodeSpecified = True
                    FUNCOBS.moodCode = x_ActMoodDocumentObservation.EVN
                    FUNCOBS.templateId = New II(3) {}
                    FUNCOBS.templateId(0) = New II
                    FUNCOBS.templateId(0).root = "2.16.840.1.113883.10.20.22.4.67"
                    FUNCOBS.templateId(0).extension = _DateExtension22
                    FUNCOBS.templateId(0).assigningAuthorityName = Nothing

                    FUNCOBS.templateId(2) = New II
                    FUNCOBS.templateId(2).root = "2.16.840.1.113883.10.20.22.4.67"
                    FUNCOBS.templateId(2).extension = Nothing
                    FUNCOBS.templateId(2).assigningAuthorityName = Nothing

                    FUNCOBS.templateId(1) = New II
                    FUNCOBS.templateId(1).root = "2.16.840.1.113883.10.20.22.4.67"
                    FUNCOBS.templateId(1).assigningAuthorityName = Nothing
                    FUNCOBS.templateId(1).extension = Nothing

                    FUNCOBS.id = New II(1) {}
                    FUNCOBS.id(0) = New II
                    FUNCOBS.id(0).root = Guid.NewGuid.ToString()
                    FUNCOBS.code = New CD
                    _CodeSysItem = Nothing
                    _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Functional Status LOINC")
                    FUNCOBS.code.code = _CodeSysItem.Code
                    FUNCOBS.code.displayName = "Functional status"
                    FUNCOBS.code.codeSystem = _CodeSysItem.CodingSystem
                    FUNCOBS.code.codeSystemName = _CodeSysItem.CodingSystemName
                    FUNCOBS.text = New ED()
                    FUNCOBS.text.reference = New TEL()
                    FUNCOBS.text.reference.value = "#FUNC" & cnt + 1
                    FUNCOBS.statusCode = New CS
                    FUNCOBS.statusCode.code = "completed"
                    FUNCOBS.effectiveTime = New IVL_TS
                    FUNCOBS.effectiveTime.value = Format(CType(oStatus.EffectiveStartTime, Date), "yyyyMMdd")
                    FUNCOBS.value = New ANY(0) {}
                    FUNCOBS.value(0) = New CD()
                    Dim Code As New CD
                    Code = DirectCast(FUNCOBS.value(0), CD)
                    Code.code = oStatus.ConceptID
                    Code.codeSystem = CodeSystem.SNOMED_CT
                    Code.codeSystemName = "SNOMED CT"
                    Code.displayName = oStatus.ProductName
                Next
            Else
                '   section.text.Text = New String() {"No known Functional Ability"}
                _FunctionalStatus.section = NoInformationSection("Functional Status", "Functional status")
            End If

            Return _FunctionalStatus
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Functional Status Section"
            Else
                _msgString = _msgString & vbNewLine & "Functional Status Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            section = Nothing
            _CodeSysItem = Nothing
            table = Nothing
        End Try
    End Function
    Private Function getCDAMentalStatusComponent() As POCD_MT000040UV02Component3
        Dim _MentalStatus As POCD_MT000040UV02Component3 = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim table As StrucDocTable = Nothing
        Try
            _MentalStatus = New POCD_MT000040UV02Component3
            _MentalStatus.section = New POCD_MT000040UV02Section
            _MentalStatus.section.templateId = New II(1) {}
            _MentalStatus.section.templateId(0) = New II()
            _MentalStatus.section.templateId(0).root = oTemplateIDMaster.GetSectionID("Mental Status")
            _MentalStatus.section.templateId(0).extension = _DateExtension2015
            _MentalStatus.section.templateId(0).assigningAuthorityName = Nothing

            _MentalStatus.section.templateId(1) = New II()
            _MentalStatus.section.templateId(1).root = oTemplateIDMaster.GetSectionID("Mental Status")
            _MentalStatus.section.templateId(1).extension = Nothing
            _MentalStatus.section.templateId(1).assigningAuthorityName = Nothing

            _MentalStatus.section.code = New CE()
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Mental Status")
            _MentalStatus.section.code.code = _CodeSysItem.Code
            _MentalStatus.section.code.codeSystem = _CodeSysItem.CodingSystem
            _MentalStatus.section.code.codeSystemName = _CodeSysItem.CodingSystemName
            _MentalStatus.section.code.displayName = _CodeSysItem.Description
            _MentalStatus.section.title = New ST()
            _MentalStatus.section.title.Text = New String() {"Cognitive Status"}
            _MentalStatus.section.title.language = Nothing
            _MentalStatus.section.text = New StrucDocText()
            _MentalStatus.section.text.mediaType = Nothing
            _MentalStatus.section.text.ID = Nothing
            _MentalStatus.section.text.language = Nothing


            If IsNothing(mPatient.MentalStatus) = False AndAlso mPatient.MentalStatus.Count > 0 Then
                ''
                ''_MentalStatus.section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, _MentalStatus.section)
                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, _MentalStatus.section)
                ''
                If Not IsNothing(sconf.code) Then
                    _MentalStatus.section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''
                ''
                _MentalStatus.section.text.Items = New Object(0) {}
                _MentalStatus.section.text.Items(0) = New StrucDocTable
                table = DirectCast(_MentalStatus.section.text.Items(0), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}
                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(3) {}


                table.thead.tr(0).Items(0) = New StrucDocTh()
                'DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Functional and Cognitive Status"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Cognitive Status"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing

                table.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"SNOMED Code"}
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing


                table.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Date"}
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing

                'table.thead.tr(0).Items(3) = New StrucDocTh()
                'DirectCast(table.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Status"}
                'DirectCast(table.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                'DirectCast(table.thead.tr(0).Items(3), StrucDocTh).language = Nothing

                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing
                table.tbody(0).tr = New StrucDocTr(0) {}
                table.tbody(0).tr(0) = New StrucDocTr()
                table.tbody(0).tr(0).ID = Nothing
                table.tbody(0).tr(0).language = Nothing
                table.tbody(0).tr(0).Items = New Object(2) {}
                table.tbody(0).tr(0).Items(0) = New StrucDocTd()
                DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
                DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing

                table.tbody(0).tr = New StrucDocTr(mPatient.MentalStatus.Count - 1) {}
                For cnt As Integer = 0 To mPatient.MentalStatus.Count - 1
                    Dim oStatus As Allergies = mPatient.MentalStatus.Item(cnt)
                    table.tbody(0).tr(cnt) = New StrucDocTr()
                    table.tbody(0).tr(cnt).ID = Nothing
                    table.tbody(0).tr(cnt).language = Nothing
                    table.tbody(0).tr(cnt).Items = New Object(3) {}
                    table.tbody(0).tr(cnt).Items(0) = New StrucDocTd()

                    DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).language = Nothing
                    If oStatus.ProductName IsNot Nothing AndAlso oStatus.ProductName <> "" Then
                        DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Text = New String() {oStatus.ProductName}
                    Else
                        DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Text = Nothing
                    End If

                    table.tbody(0).tr(cnt).Items(1) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).language = Nothing
                    If oStatus.ConceptID IsNot Nothing AndAlso oStatus.ConceptID <> "" Then
                        DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).Text = New String() {oStatus.ConceptID}
                    Else
                        DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).Text = Nothing
                    End If


                    table.tbody(0).tr(cnt).Items(2) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).language = Nothing
                    If oStatus.EffectiveStartTime IsNot Nothing AndAlso oStatus.EffectiveStartTime <> "" Then
                        DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).Text = New String() {oStatus.EffectiveStartTime}
                    Else
                        DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).Text = Nothing
                    End If

                    'table.tbody(0).tr(cnt).Items(3) = New StrucDocTd()
                    'DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).ID = Nothing
                    'DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).language = Nothing
                    'If oStatus.Status IsNot Nothing AndAlso oStatus.Status <> "" Then
                    '    DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).Text = New String() {oStatus.Status}
                    'Else
                    '    DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).Text = Nothing
                    'End If
                    'Dim org As POCD_MT000040UV02Organizer
                    _MentalStatus.section.entry = New POCD_MT000040UV02Entry(mPatient.MentalStatus.Count - 1) {}
                    _MentalStatus.section.entry(cnt) = New POCD_MT000040UV02Entry
                    Dim obs As POCD_MT000040UV02Observation
                    obs = New POCD_MT000040UV02Observation
                    _MentalStatus.section.entry(cnt).Item = New POCD_MT000040UV02Observation
                    obs = DirectCast(_MentalStatus.section.entry(cnt).Item, POCD_MT000040UV02Observation)
                    obs.classCodeSpecified = True
                    obs.classCode = Convert.ToString(ActClassObservation.OBS)
                    obs.moodCodeSpecified = True
                    obs.moodCode = Convert.ToString(x_ActMoodDocumentObservation.EVN)
                    obs.templateId = New II(2) {}
                    obs.templateId(0) = New II
                    obs.templateId(0).root = "2.16.840.1.113883.10.20.22.4.74"
                    obs.templateId(0).extension = _DateExtension2015
                    obs.templateId(0).assigningAuthorityName = Nothing
                    obs.templateId(1) = New II
                    obs.templateId(1).root = "2.16.840.1.113883.10.20.22.4.74"
                    obs.templateId(1).extension = Nothing
                    obs.templateId(1).assigningAuthorityName = Nothing
                    obs.id = New II(1) {}
                    obs.id(0) = New II
                    obs.id(0).root = Guid.NewGuid.ToString()
                    obs.code = New CD()
                    _CodeSysItem = Nothing
                    _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Cognitive Function")
                    obs.code.code = _CodeSysItem.Code
                    obs.code.codeSystem = _CodeSysItem.CodingSystem
                    obs.code.codeSystemName = _CodeSysItem.CodingSystemName
                    obs.code.displayName = _CodeSysItem.Description
                    _CodeSysItem = Nothing
                    _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Cognitive Function LOINC")
                    obs.code.translation = New CD(1) {}
                    obs.code.translation(0) = New CD
                    obs.code.translation(0).code = _CodeSysItem.Code
                    obs.code.translation(0).codeSystem = _CodeSysItem.CodingSystem
                    obs.code.translation(0).codeSystemName = _CodeSysItem.CodingSystemName
                    obs.code.translation(0).displayName = "Cognitive Function"
                    obs.statusCode = New CS()
                    obs.statusCode.code = "completed"

                    obs.effectiveTime = New IVL_TS()
                    obs.effectiveTime.value = Nothing
                    obs.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
                    obs.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
                    obs.effectiveTime.ItemsElementName(1) = ItemsChoiceType2.high
                    obs.effectiveTime.Items = New QTY(1) {}

                    obs.effectiveTime.Items(0) = New IVXB_TS()
                    obs.effectiveTime.Items(1) = New IVXB_TS()
                    If oStatus.EffectiveStartTime <> "" Then
                        DirectCast(obs.effectiveTime.Items(0), IVXB_TS).value = Format(CType(oStatus.EffectiveStartTime, Date), "yyyyMMdd")
                    Else
                        DirectCast(obs.effectiveTime.Items(0), IVXB_TS).nullFlavor = "UNK"
                    End If

                    If oStatus.EffectiveEndTime <> "" Then
                        DirectCast(obs.effectiveTime.Items(1), IVXB_TS).value = Format(CType(oStatus.EffectiveEndTime, Date), "yyyyMMdd")
                    Else
                        DirectCast(obs.effectiveTime.Items(1), IVXB_TS).nullFlavor = "UNK"
                    End If




                    obs.value = New ANY(0) {}
                    obs.value(0) = New CD()
                    Dim Code As New CD
                    Code = DirectCast(obs.value(0), CD)
                    Code.code = oStatus.ConceptID
                    Code.codeSystem = CodeSystem.SNOMED_CT
                    Code.codeSystemName = "SNOMED CT"
                    Code.displayName = oStatus.ProductName


                    '_MentalStatus.section.entry(cnt).Item = New POCD_MT000040UV02Organizer
                    'org = DirectCast(_MentalStatus.section.entry(cnt).Item, POCD_MT000040UV02Organizer)
                    'org.classCode = x_ActClassDocumentEntryOrganizer.CLUSTER
                    'org.moodCodeSpecified = True
                    'org.moodCode = x_DocumentActMood.EVN
                    'org.templateId = New II(2) {}
                    'org.templateId(0) = New II
                    'org.templateId(0).root = "2.16.840.1.113883.10.20.22.4.66"
                    'org.templateId(0).extension = _DateExtension22
                    'org.templateId(1) = New II
                    'org.templateId(1).root = "2.16.840.1.113883.10.20.22.4.66"
                    'org.id = New II(1) {}
                    'org.id(0) = New II
                    'org.id(0).root = Guid.NewGuid().ToString()
                    'org.code = New CD
                    'org.statusCode = New CS
                    'org.statusCode.code = "completed"
                    'org.component = New POCD_MT000040UV02Component4(2) {}
                    'org.component(0) = New POCD_MT000040UV02Component4
                    'org.component(0).Item = New POCD_MT000040UV02Observation()
                    'Dim obs As New POCD_MT000040UV02Observation()
                    'obs = DirectCast(org.component(0).Item, POCD_MT000040UV02Observation)
                    'obs.classCodeSpecified = True
                    'obs.classCode = ActClassObservation.OBS
                    'obs.moodCodeSpecified = True
                    'obs.moodCode = x_ActMoodDocumentObservation.EVN
                    'obs.templateId = New II(2) {}
                    'obs.templateId(0) = New II
                    'obs.templateId(0).root = "2.16.840.1.113883.10.20.22.4.67"
                    'obs.templateId(0).extension = _DateExtension22
                    'obs.templateId(1) = New II
                    'obs.templateId(1).root = "2.16.840.1.113883.10.20.22.4.67"
                    'obs.id = New II(1) {}
                    'obs.id(0) = New II
                    'obs.id(0).root = Guid.NewGuid.ToString()
                    'obs.code = New CD
                    'obs.code.code = "54522-8"
                    'obs.code.displayName = "Functional status"
                    'obs.code.codeSystem = "2.16.840.1.113883.6.1"
                    'obs.code.codeSystemName = "LOINC"
                    'obs.statusCode = New CS
                    'obs.statusCode.code = "completed"
                    'obs.effectiveTime = New IVL_TS
                    'obs.effectiveTime.value = gloDateMaster.gloDate.DateTimeAsNumber(oStatus.EffectiveStartTime)
                    'obs.value = New ANY(0) {}
                    'obs.value(0) = New CD()
                    'Dim Code As New CD
                    'Code = DirectCast(obs.value(0), CD)
                    'Code.code = oStatus.ConceptID
                    'Code.codeSystem = CodeSystem.SNOMED_CT
                    'Code.codeSystemName = "SNOMED CT"
                    'Code.displayName = oStatus.Status
                Next
            Else
                '      _MentalStatus.section.text.Text = New String() {"No Information"}  ''added for bugid 108733
                _MentalStatus.section = NoInformationSection("Mental Status", "Mental status")

            End If


            Return _MentalStatus
        Catch ex As Exception
            Return Nothing
        End Try
    End Function
    Private Function GetCDAReasonForReferralComponent() As POCD_MT000040UV02Component3
        Dim _ReasonForReferral As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim table As StrucDocTable = Nothing
        Try
            _ReasonForReferral = New POCD_MT000040UV02Component3
            _ReasonForReferral.section = New POCD_MT000040UV02Section

            section = _ReasonForReferral.section
            section.classCodeSpecified = False
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            'section.ID = Nothing
            section.templateId = New II(1) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Reason for Referral")
            section.templateId(0).extension = _DateExtension22
            section.templateId(0).assigningAuthorityName = Nothing

            section.templateId(1) = New II()
            section.templateId(1).root = oTemplateIDMaster.GetSectionID("Reason for Referral")
            section.templateId(1).extension = Nothing
            section.templateId(1).assigningAuthorityName = Nothing


            section.code = New CE()
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Reason for Referral")
            If _CodeSysItem IsNot Nothing Then
                section.code.code = _CodeSysItem.Code
                section.code.codeSystem = CodeSystem.LOINC
                section.code.codeSystemName = _CodeSysItem.CodingSystemName
                section.code.codeSystemVersion = Nothing
                section.code.displayName = Nothing
            Else
                section.code = Nothing
            End If

            section.title = New ST()
            section.title.Text = New String() {_CodeSysItem.Description}
            section.title.language = Nothing
            section.text = New StrucDocText()
            section.text.mediaType = Nothing
            section.text.ID = Nothing
            section.text.language = Nothing

            If mPatient.ReasonForReferral IsNot Nothing AndAlso mPatient.ReasonForReferral <> "" Then
                ''
                ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                If Not IsNothing(sconf.code) Then
                    section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''
                ''
                section.text.Items = New Object(0) {}
                section.text.Items(0) = New StrucDocTable
                table = DirectCast(section.text.Items(0), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}
                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(0) {}
                table.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Reason for Referral"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing

                If mPatient.ReasonForReferral.EndsWith("~") Then
                    mPatient.ReasonForReferral = mPatient.ReasonForReferral.Remove(mPatient.ReasonForReferral.Length - 1)
                End If

                Dim _rsn As String() = mPatient.ReasonForReferral.Split("~")
                If _rsn IsNot Nothing AndAlso _rsn.Length > 0 Then
                    table.tbody(0).tr = New StrucDocTr(_rsn.Length - 1) {}

                    For i As Int32 = 0 To _rsn.Length - 1
                        table.tbody(0).tr(i) = New StrucDocTr()
                        table.tbody(0).tr(i).ID = Nothing
                        table.tbody(0).tr(i).language = Nothing
                        table.tbody(0).tr(i).Items = New Object(0) {}
                        table.tbody(0).tr(i).Items(0) = New StrucDocTd()
                        DirectCast(table.tbody(0).tr(i).Items(0), StrucDocTd).ID = Nothing
                        DirectCast(table.tbody(0).tr(i).Items(0), StrucDocTd).language = Nothing
                        DirectCast(table.tbody(0).tr(i).Items(0), StrucDocTd).Text = New String() {_rsn(i)}
                    Next

                Else
                    'section.text.Items(0) = Nothing
                    'section.text.Text = New String() {"No known Reason for referral"}
                    _ReasonForReferral.section = NoInformationSection("Reason for Referral", _CodeSysItem.Description)

                End If


                'If mPatient.ReasonForReferral IsNot Nothing AndAlso mPatient.ReasonForReferral <> "" Then

                'Else
                '    DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).Text = New String() {"No known Reason for referral"}
                'End If
            Else
                '   section.text.Text = New String() {"No known Reason for referral"}
                _ReasonForReferral.section = NoInformationSection("Reason for Referral", _CodeSysItem.Description)

            End If
            Return _ReasonForReferral
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Reason for Referral Section"
            Else
                _msgString = _msgString & vbNewLine & "Reason for Referral Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            section = Nothing
            _CodeSysItem = Nothing
            table = Nothing
        End Try
    End Function
    Private Function GetCDAEncounterdiagnosisComponent() As POCD_MT000040UV02Component3
        Dim _Encounterdiagnosis As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim table As StrucDocTable = Nothing
        Dim encounter As POCD_MT000040UV02Encounter = Nothing
        Dim act As POCD_MT000040UV02Act = Nothing
        Dim ob As POCD_MT000040UV02Observation = Nothing
        Dim _ProblemCount As Integer = 1
        Try
            _Encounterdiagnosis = New POCD_MT000040UV02Component3
            _Encounterdiagnosis.section = New POCD_MT000040UV02Section

            section = _Encounterdiagnosis.section
            section.classCodeSpecified = False
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            'section.ID = Nothing
            section.templateId = New II(1) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Encounters")
            section.templateId(0).extension = _DateExtension2015
            section.templateId(0).assigningAuthorityName = Nothing


            section.templateId(1) = New II()
            section.templateId(1).root = oTemplateIDMaster.GetSectionID("Encounters")
            section.templateId(1).extension = Nothing
            section.templateId(1).assigningAuthorityName = Nothing


            section.code = New CE()

            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Encounters")
            If _CodeSysItem IsNot Nothing Then
                section.code.code = _CodeSysItem.Code
                section.code.codeSystem = CodeSystem.LOINC
                section.code.codeSystemName = _CodeSysItem.CodingSystemName
                section.code.codeSystemVersion = Nothing
                section.code.displayName = Nothing
            Else
                section.code = Nothing
            End If

            section.title = New ST()
            section.title.Text = New String() {_CodeSysItem.Description}
            section.title.language = Nothing
            section.text = New StrucDocText()
            section.text.mediaType = Nothing
            section.text.ID = Nothing
            section.text.language = Nothing

            If Not IsNothing(mPatient.EncounterDiagnosis) AndAlso mPatient.EncounterDiagnosis.Count > 0 Then
                ''
                ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                If Not IsNothing(sconf.code) Then
                    section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''
                ''
                section.text.Items = New Object(0) {}
                section.text.Items(0) = New StrucDocTable()
                table = DirectCast(section.text.Items(0), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}

                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(5) {}
                table.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Condition"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Effective Dates"}
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Condition Status"}
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(3) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Problem Type"}
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(4) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).Text = New String() {"SNOMED Code"}
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(5) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).Text = New String() {"ICD9/10 Code"}
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).language = Nothing

                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing

                table.tbody(0).tr = New StrucDocTr(mPatient.EncounterDiagnosis.Count - 1) {}
                section.entry = New POCD_MT000040UV02Entry(mPatient.EncounterDiagnosis.Count - 1) {}
                For probs As Integer = 0 To mPatient.EncounterDiagnosis.Count - 1
                    Dim oEncounterDx As Problems = mPatient.EncounterDiagnosis.Item(probs)
                    table.tbody(0).tr(probs) = New StrucDocTr()
                    table.tbody(0).tr(probs).Items = New Object(5) {}
                    table.tbody(0).tr(probs).Items(0) = New StrucDocTd()
                    table.tbody(0).tr(probs).ID = Nothing
                    table.tbody(0).tr(probs).language = Nothing

                    DirectCast(table.tbody(0).tr(probs).Items(0), StrucDocTd).Text = New String() {oEncounterDx.Condition}
                    DirectCast(table.tbody(0).tr(probs).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(probs).Items(0), StrucDocTd).language = Nothing
                    table.tbody(0).tr(probs).Items(1) = New StrucDocTd()

                    DirectCast(table.tbody(0).tr(probs).Items(1), StrucDocTd).Items = New StrucDocContent(0) {}
                    DirectCast(table.tbody(0).tr(probs).Items(1), StrucDocTd).Items(0) = New StrucDocContent
                    DirectCast(DirectCast(table.tbody(0).tr(probs).Items(1), StrucDocTd).Items(0), StrucDocContent).ID = "Encounter" & probs
                    DirectCast(DirectCast(table.tbody(0).tr(probs).Items(1), StrucDocTd).Items(0), StrucDocContent).language = Nothing



                    DirectCast(table.tbody(0).tr(probs).Items(1), StrucDocTd).Text = New String() {oEncounterDx.DateOfService.ToString()}
                    DirectCast(table.tbody(0).tr(probs).Items(1), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(probs).Items(1), StrucDocTd).language = Nothing
                    table.tbody(0).tr(probs).Items(2) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(probs).Items(2), StrucDocTd).Text = New String() {oEncounterDx.ConditionStatus}
                    DirectCast(table.tbody(0).tr(probs).Items(2), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(probs).Items(2), StrucDocTd).language = Nothing
                    table.tbody(0).tr(probs).Items(3) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(probs).Items(3), StrucDocTd).Text = New String() {oEncounterDx.ProblemType}
                    DirectCast(table.tbody(0).tr(probs).Items(3), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(probs).Items(3), StrucDocTd).language = Nothing
                    table.tbody(0).tr(probs).Items(4) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(probs).Items(4), StrucDocTd).Text = New String() {oEncounterDx.ConceptID}
                    DirectCast(table.tbody(0).tr(probs).Items(4), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(probs).Items(4), StrucDocTd).language = Nothing
                    table.tbody(0).tr(probs).Items(5) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(probs).Items(5), StrucDocTd).Text = New String() {oEncounterDx.ICD9Code}
                    DirectCast(table.tbody(0).tr(probs).Items(5), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(probs).Items(5), StrucDocTd).language = Nothing
                    If Not IsNothing(oEncounterDx) Then
                        oEncounterDx.Dispose()
                        oEncounterDx = Nothing
                    End If
                Next
            Else
                'section.text.Text = New String() {"No known Encounter diagnosis for patient"}
                'If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                '    section.text.Items = New StrucDocContent(0) {}
                '    section.text.Items(0) = New StrucDocContent
                '    DirectCast(section.text.Items(0), StrucDocContent).ID = "Encounter" & 0
                '    DirectCast(section.text.Items(0), StrucDocContent).language = Nothing
                'End If
            End If

            If Not IsNothing(mPatient.EncounterDiagnosis) AndAlso mPatient.EncounterDiagnosis.Count > 0 Then
                _ProblemCount = mPatient.EncounterDiagnosis.Count

                section.entry = New POCD_MT000040UV02Entry(_ProblemCount - 1) {}
                Dim oProblems As Problems = Nothing
                '   If mPatient.EncounterDiagnosis IsNot Nothing AndAlso mPatient.EncounterDiagnosis.Count > 0 Then
                ' section.entry = New POCD_MT000040UV02Entry(mPatient.EncounterDiagnosis.Count - 1) {}

                For i As Integer = 0 To _ProblemCount - 1
                    ''
                    If Not IsNothing(mPatient.EncounterDiagnosis) AndAlso mPatient.EncounterDiagnosis.Count > 0 Then
                        oProblems = mPatient.EncounterDiagnosis.Item(i)
                    Else
                        oProblems = New Problems
                    End If
                    section.entry(i) = New POCD_MT000040UV02Entry()
                    section.entry(i).typeCodeSpecified = False
                    section.entry(i).typeCode = Nothing
                    section.entry(i).Item = New POCD_MT000040UV02Encounter()
                    encounter = DirectCast(section.entry(i).Item, POCD_MT000040UV02Encounter)
                    encounter.classCode = ActClass.ENC
                    encounter.moodCode = x_DocumentEncounterMood.EVN
                    encounter.moodCodeSpecified = True
                    encounter.id = New II(0) {}
                    encounter.id(0) = New II()
                    encounter.id(0).root = Guid.NewGuid().ToString()
                    encounter.id(0).extension = Nothing
                    encounter.id(0).assigningAuthorityName = Nothing
                    encounter.templateId = New II(1) {}
                    encounter.templateId(0) = New II()
                    encounter.templateId(0).root = oTemplateIDMaster.GetEntryID("Encounter Activities")
                    encounter.templateId(0).assigningAuthorityName = Nothing
                    encounter.templateId(0).extension = _DateExtension2015

                    encounter.templateId(1) = New II()
                    encounter.templateId(1).root = oTemplateIDMaster.GetEntryID("Encounter Activities")
                    encounter.templateId(1).assigningAuthorityName = Nothing
                    encounter.templateId(1).extension = Nothing

                    encounter.code = New CE()
                    _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.CPT, "Future Schedule Appointment")
                    If _CodeSysItem IsNot Nothing Then
                        If oProblems.EncounterTypeCode <> "" Then
                            encounter.code.code = oProblems.EncounterTypeCode
                            encounter.code.codeSystem = CodeSystem.CPT
                            encounter.code.codeSystemName = _CodeSysItem.CodingSystemName
                            encounter.code.displayName = Nothing
                        Else
                            encounter.code.code = _CodeSysItem.Code
                            encounter.code.codeSystem = CodeSystem.CPT
                            encounter.code.codeSystemName = _CodeSysItem.CodingSystemName
                            encounter.code.displayName = _CodeSysItem.Description
                        End If



                    Else
                        encounter.code.code = Nothing
                        encounter.code.codeSystem = Nothing
                        encounter.code.codeSystemName = Nothing
                        encounter.code.nullFlavor = "NI"
                        encounter.code.displayName = Nothing
                    End If
                    encounter.code.codeSystemVersion = Nothing

                    encounter.effectiveTime = New IVL_TS()
                    encounter.effectiveTime.value = Nothing
                    encounter.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
                    encounter.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
                    encounter.effectiveTime.Items = New QTY(1) {}
                    encounter.effectiveTime.Items(0) = New IVXB_TS()
                    If Not IsNothing(oProblems.DateOfService) AndAlso oProblems.DateOfService <> "" Then
                        DirectCast(encounter.effectiveTime.Items(0), IVXB_TS).value = Format(CType(oProblems.DateOfService, Date), "yyyyMMdd")
                    Else
                        DirectCast(encounter.effectiveTime.Items(0), IVXB_TS).nullFlavor = "UNK"
                        DirectCast(encounter.effectiveTime.Items(0), IVXB_TS).value = Nothing
                    End If

                    encounter.entryRelationship = New POCD_MT000040UV02EntryRelationship(0) {}
                    encounter.entryRelationship(0) = New POCD_MT000040UV02EntryRelationship
                    encounter.entryRelationship(0).inversionIndSpecified = True
                    encounter.entryRelationship(0).inversionInd = False
                    encounter.entryRelationship(0).typeCode = ActRelationshipType.SUBJ
                    encounter.entryRelationship(0).Item = New POCD_MT000040UV02Act

                    act = DirectCast(encounter.entryRelationship(0).Item, POCD_MT000040UV02Act)
                    act.moodCode = x_DocumentActMood.EVN
                    act.moodCodeSpecified = True
                    act.classCode = x_ActClassDocumentEntryAct.ACT
                    act.templateId = New II(1) {}
                    act.templateId(0) = New II()
                    act.templateId(0).root = oTemplateIDMaster.GetEntryID("Encounter diagnosis act")
                    act.templateId(0).assigningAuthorityName = Nothing
                    act.templateId(0).extension = _DateExtension2015
                    act.templateId(1) = New II()
                    act.templateId(1).root = oTemplateIDMaster.GetEntryID("Encounter diagnosis act")
                    act.templateId(1).assigningAuthorityName = Nothing
                    act.templateId(1).extension = Nothing
                    'act.templateId(1) = New II()
                    'act.templateId(1).root = oTemplateIDMaster.GetEntryID("Encounter diagnosis act")
                    'act.templateId(1).assigningAuthorityName = Nothing
                    'act.templateId(1).extension = Nothing
                    act.code = New CD()

                    _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Encounter diagnosis")
                    If _CodeSysItem IsNot Nothing Then
                        act.code.code = _CodeSysItem.Code
                        act.code.nullFlavor = Nothing
                        act.code.codeSystemName = _CodeSysItem.CodingSystemName
                        act.code.codeSystem = CodeSystem.LOINC
                        act.code.displayName = _CodeSysItem.Description
                        act.code.codeSystemVersion = Nothing
                    Else
                        act.code = Nothing
                    End If

                    act.statusCode = New CS()
                    act.statusCode.code = "active"
                    act.statusCode.codeSystem = Nothing
                    act.statusCode.codeSystemName = Nothing
                    act.statusCode.codeSystemVersion = Nothing
                    act.statusCode.displayName = Nothing

                    act.effectiveTime = New IVL_TS()
                    act.effectiveTime.value = Nothing
                    act.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
                    act.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
                    act.effectiveTime.Items = New QTY(1) {}
                    act.effectiveTime.Items(0) = New IVXB_TS()
                    If Not IsNothing(oProblems.DateOfService) AndAlso oProblems.DateOfService <> "" Then
                        DirectCast(act.effectiveTime.Items(0), IVXB_TS).value = Format(CType(oProblems.DateOfService, Date), "yyyyMMdd")
                    Else
                        DirectCast(act.effectiveTime.Items(0), IVXB_TS).nullFlavor = "UNK"
                        DirectCast(act.effectiveTime.Items(0), IVXB_TS).value = Nothing
                    End If

                    act.entryRelationship = New POCD_MT000040UV02EntryRelationship(0) {}
                    act.entryRelationship(0) = New POCD_MT000040UV02EntryRelationship()
                    act.entryRelationship(0).typeCode = ActRelationshipType.SUBJ
                    act.entryRelationship(0).Item = New POCD_MT000040UV02Observation()
                    ob = DirectCast(act.entryRelationship(0).Item, POCD_MT000040UV02Observation)

                    ob.classCode = ActClassObservation.OBS
                    ob.moodCode = x_ActMoodDocumentObservation.EVN
                    ob.moodCodeSpecified = True
                    ob.templateId = New II(1) {}
                    ob.templateId(0) = New II()
                    ob.templateId(0).root = oTemplateIDMaster.GetEntryID("Problem Observation")

                    ob.templateId(0).extension = _DateExtension2015
                    ob.templateId(0).assigningAuthorityName = Nothing


                    ob.templateId(1) = New II()
                    ob.templateId(1).root = oTemplateIDMaster.GetEntryID("Problem Observation")

                    ob.templateId(1).extension = Nothing
                    ob.templateId(1).assigningAuthorityName = Nothing
                    ob.code = New CD()
                    ob.code.code = "404684003"
                    ob.code.codeSystem = CodeSystem.SNOMED_CT
                    ob.code.codeSystemName = "SNOMED CT"
                    ob.code.codeSystemVersion = Nothing
                    ob.code.displayName = "Finding"

                    ob.code.translation = New CD(0) {}
                    ob.code.translation(0) = New CD()
                    ob.code.translation(0).code = "75321-0"
                    ob.code.translation(0).displayName = "Clinical finding"
                    ob.code.translation(0).codeSystemName = CodeSystem.LOINC
                    ob.code.translation(0).codeSystemVersion = Nothing
                    ob.code.translation(0).codeSystem = "LOINC"
                    ob.id = New II(0) {}
                    ob.id(0) = New II()
                    ob.id(0).root = Guid.NewGuid().ToString()
                    oProblems.GUID = ob.id(0).root
                    ob.id(0).assigningAuthorityName = Nothing
                    ob.id(0).extension = Nothing

                    ob.statusCode = New CS()
                    ob.statusCode.code = "completed"
                    ob.statusCode.codeSystem = Nothing
                    ob.statusCode.codeSystemName = Nothing
                    ob.statusCode.codeSystemVersion = Nothing
                    ob.statusCode.displayName = Nothing
                    ''''effective time

                    ob.effectiveTime = New IVL_TS()
                    ob.effectiveTime.value = Nothing
                    ob.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
                    ob.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
                    'ob.effectiveTime.ItemsElementName(1) = ItemsChoiceType2.high

                    ob.effectiveTime.Items = New QTY(1) {}
                    ob.effectiveTime.Items(0) = New IVXB_TS()
                    If Not IsNothing(oProblems.DateOfService) AndAlso oProblems.DateOfService <> "" Then
                        DirectCast(ob.effectiveTime.Items(0), IVXB_TS).value = Format(CType(oProblems.DateOfService, Date), "yyyyMMdd")
                    Else
                        DirectCast(ob.effectiveTime.Items(0), IVXB_TS).nullFlavor = "UNK"
                        DirectCast(ob.effectiveTime.Items(0), IVXB_TS).value = Nothing
                    End If

                    ob.value = New ANY(0) {}
                    ob.value(0) = New CD()

                    If Not IsNothing(oProblems.Condition) AndAlso oProblems.Condition <> "" Then
                        DirectCast(ob.value(0), CD).displayName = oProblems.Condition.ToString()
                    Else
                        DirectCast(ob.value(0), CD).displayName = Nothing
                    End If

                    If Not IsNothing(oProblems.ConceptID) AndAlso oProblems.ConceptID <> "" Then
                        DirectCast(ob.value(0), CD).code = oProblems.ConceptID
                        DirectCast(ob.value(0), CD).codeSystem = CodeSystem.SNOMED_CT
                        DirectCast(ob.value(0), CD).codeSystemName = "SNOMED CT"
                    Else
                        DirectCast(ob.value(0), CD).nullFlavorSpecified = True
                        DirectCast(ob.value(0), CD).nullFlavor = "UNK"
                        DirectCast(ob.value(0), CD).codeSystem = Nothing
                        DirectCast(ob.value(0), CD).codeSystemName = Nothing
                    End If


                    DirectCast(ob.value(0), CD).codeSystemVersion = Nothing
                    ''
                    DirectCast(ob.value(0), CD).translation = New CD(0) {}
                    DirectCast(ob.value(0), CD).translation(0) = New CD()


                    If Not IsNothing(oProblems.ICD9) AndAlso oProblems.ICD9 <> "" Then
                        DirectCast(ob.value(0), CD).translation(0).displayName = oProblems.ICD9.ToString()
                    Else
                        DirectCast(ob.value(0), CD).translation(0).displayName = Nothing
                    End If

                    If Not IsNothing(oProblems.ICD9Code) AndAlso oProblems.ICD9Code <> "" Then
                        DirectCast(ob.value(0), CD).translation(0).code = oProblems.ICD9Code
                    Else
                        DirectCast(ob.value(0), CD).translation(0).code = Nothing
                    End If

                    ''Added ICD10 revision-20140210
                    If Not IsNothing(oProblems.ICDRevision) AndAlso oProblems.ICDRevision <> 0 Then
                        If oProblems.ICDRevision = 9 Then
                            DirectCast(ob.value(0), CD).translation(0).codeSystem = CodeSystem.ICD9
                            DirectCast(ob.value(0), CD).translation(0).codeSystemName = "ICD-9-CM"
                            DirectCast(ob.value(0), CD).translation(0).codeSystemVersion = Nothing
                        ElseIf oProblems.ICDRevision = 10 Then
                            DirectCast(ob.value(0), CD).translation(0).codeSystem = CodeSystem.ICD10
                            DirectCast(ob.value(0), CD).translation(0).codeSystemName = "ICD10CM"
                            DirectCast(ob.value(0), CD).translation(0).codeSystemVersion = Nothing
                        End If
                    Else
                        DirectCast(ob.value(0), CD).translation(0).codeSystem = CodeSystem.ICD9
                        DirectCast(ob.value(0), CD).translation(0).codeSystemName = "ICD-9-CM"
                        DirectCast(ob.value(0), CD).translation(0).codeSystemVersion = Nothing
                    End If


                Next
            Else
                _Encounterdiagnosis.section = NoInformationSection("Encounters", _CodeSysItem.Description)
            End If


            Return _Encounterdiagnosis
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Encounter diagnosis Section"
            Else
                _msgString = _msgString & vbNewLine & "Encounter diagnosis Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            section = Nothing
            _CodeSysItem = Nothing
            table = Nothing
            encounter = Nothing
            act = Nothing
            ob = Nothing
        End Try
    End Function
    Private Function GetCDAFamilyHistoryComponent() As POCD_MT000040UV02Component3
        Dim _FamilyHistory As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section
        Dim table As StrucDocTable
        Dim org As POCD_MT000040UV02Organizer
        Dim ob As POCD_MT000040UV02Observation
        Dim _FamilyCnt As Integer = 1
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Try

            _FamilyHistory = New POCD_MT000040UV02Component3

            DirectCast(_FamilyHistory, POCD_MT000040UV02Component3).section = New POCD_MT000040UV02Section()
            section = DirectCast(_FamilyHistory, POCD_MT000040UV02Component3).section
            'section.ID = Nothing
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            section.templateId = New II(1) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Family History")
            section.templateId(0).assigningAuthorityName = Nothing
            section.templateId(0).extension = _DateExtension2015


            section.templateId(1) = New II()
            section.templateId(1).root = oTemplateIDMaster.GetSectionID("Family History")
            section.templateId(1).assigningAuthorityName = Nothing
            section.templateId(1).extension = Nothing

            section.code = New CE()
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Family History")
            If _CodeSysItem IsNot Nothing Then
                section.code.code = _CodeSysItem.Code
                section.code.codeSystem = _CodeSysItem.CodingSystem
                section.code.codeSystemName = _CodeSysItem.CodingSystemName
                section.code.codeSystemVersion = Nothing
                section.code.displayName = Nothing
            Else
                section.code = Nothing
            End If

            section.title = New ST()
            section.title.Text = New String() {"Family History"}

            section.title.language = Nothing
            section.text = New StrucDocText()
            section.text.mediaType = Nothing
            section.text.ID = Nothing
            section.text.language = Nothing

            If Not IsNothing(mPatient.PatientFamilyHistory) AndAlso mPatient.PatientFamilyHistory.Count > 0 Then
                ''
                ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                If Not IsNothing(sconf.code) Then
                    section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''
                ''
                section.text.Items = New Object(0) {}
                section.text.Items(0) = New StrucDocTable()
                table = DirectCast(section.text.Items(0), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}

                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(5) {}
                table.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Description"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"SNOMED Code"}
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Relation"}
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(3) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Comments"}
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(4) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).Text = New String() {"Date Reported"}
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(5) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).Text = New String() {"Occur Date"}
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).language = Nothing


                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing
                table.tbody(0).tr = New StrucDocTr(mPatient.PatientFamilyHistory.Count - 1) {}
                section.entry = New POCD_MT000040UV02Entry(mPatient.PatientFamilyHistory.Count - 1) {}
                For Fhcnt As Integer = 0 To mPatient.PatientFamilyHistory.Count - 1
                    Dim oFamily As FamilyHistory = mPatient.PatientFamilyHistory.Item(Fhcnt)
                    table.tbody(0).tr(Fhcnt) = New StrucDocTr()
                    table.tbody(0).tr(Fhcnt).Items = New Object(5) {}
                    table.tbody(0).tr(Fhcnt).Items(0) = New StrucDocTd()
                    table.tbody(0).tr(Fhcnt).ID = Nothing
                    table.tbody(0).tr(Fhcnt).language = Nothing

                    DirectCast(table.tbody(0).tr(Fhcnt).Items(0), StrucDocTd).Text = New String() {oFamily.FmlyHxDescription}
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(0), StrucDocTd).language = Nothing
                    table.tbody(0).tr(Fhcnt).Items(1) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(1), StrucDocTd).Text = New String() {oFamily.FmlyHxConceptID}
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(1), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(1), StrucDocTd).language = Nothing
                    table.tbody(0).tr(Fhcnt).Items(2) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(2), StrucDocTd).Text = New String() {oFamily.FmlyHxRelation}
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(2), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(2), StrucDocTd).language = Nothing
                    table.tbody(0).tr(Fhcnt).Items(3) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(3), StrucDocTd).Text = New String() {oFamily.FmlyHxComments}
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(3), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(3), StrucDocTd).language = Nothing
                    table.tbody(0).tr(Fhcnt).Items(4) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(4), StrucDocTd).Text = New String() {If(oFamily.FmlyHxDateReported IsNot Nothing, CType(oFamily.FmlyHxDateReported, Date).ToShortDateString(), "")}
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(4), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(4), StrucDocTd).language = Nothing
                    table.tbody(0).tr(Fhcnt).Items(5) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(5), StrucDocTd).Text = New String() {If(oFamily.OccurDate IsNot Nothing AndAlso oFamily.OccurDate <> "", CType(oFamily.OccurDate, Date).ToShortDateString(), "")}
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(5), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(Fhcnt).Items(5), StrucDocTd).language = Nothing
                    If Not IsNothing(oFamily) Then
                        oFamily.Dispose()
                        oFamily = Nothing
                    End If
                Next
            Else
                '   section.text.Text = New String() {"No known family history for patient"}
            End If
            If Not IsNothing(mPatient.PatientFamilyHistory) AndAlso mPatient.PatientFamilyHistory.Count > 0 Then
                _FamilyCnt = mPatient.PatientFamilyHistory.Count


                section.entry = New POCD_MT000040UV02Entry(_FamilyCnt - 1) {}
                Dim oFamilyHis As FamilyHistory = Nothing
                For FHcnt As Integer = 0 To _FamilyCnt - 1


                    section.entry(FHcnt) = New POCD_MT000040UV02Entry()
                    section.entry(FHcnt).typeCode = x_ActRelationshipEntry.DRIV
                    section.entry(FHcnt).Item = New POCD_MT000040UV02Organizer
                    org = DirectCast(section.entry(FHcnt).Item, POCD_MT000040UV02Organizer)

                    org.classCode = x_ActClassDocumentEntryOrganizer.CLUSTER
                    org.moodCode = "EVN"
                    org.moodCodeSpecified = True
                    org.templateId = New II(1) {}
                    org.templateId(0) = New II()
                    If Not IsNothing(mPatient.PatientFamilyHistory) AndAlso mPatient.PatientFamilyHistory.Count > 0 Then
                        oFamilyHis = mPatient.PatientFamilyHistory.Item(FHcnt)
                    Else
                        oFamilyHis = New FamilyHistory
                    End If
                    org.templateId(0).root = oTemplateIDMaster.GetEntryID("Family History Organizer")
                    org.templateId(0).extension = _DateExtension2015
                    org.templateId(0).assigningAuthorityName = Nothing

                    org.templateId(1) = New II()
                    org.templateId(1).root = oTemplateIDMaster.GetEntryID("Family History Organizer")
                    org.templateId(1).extension = Nothing
                    org.templateId(1).assigningAuthorityName = Nothing

                    org.id = New II(1) {}
                    org.id(0) = New II
                    org.id(0).extension = Nothing
                    org.id(0).assigningAuthorityName = Nothing
                    org.id(0).root = Guid.NewGuid().ToString()


                    org.statusCode = New CS()
                    org.statusCode.code = "completed"
                    org.statusCode.codeSystem = Nothing
                    org.statusCode.codeSystemName = Nothing
                    org.statusCode.codeSystemVersion = Nothing
                    org.statusCode.displayName = Nothing

                    org.subject = New POCD_MT000040UV02Subject()
                    org.subject.contextControlCode = Nothing
                    org.subject.relatedSubject = New POCD_MT000040UV02RelatedSubject()
                    'org.subject.relatedSubject.classCode = x_DocumentSubject.PRS
                    org.subject.relatedSubject.code = New CE()
                    org.subject.relatedSubject.code.displayName = If(oFamilyHis.FmlyHxRelation <> "", oFamilyHis.FmlyHxRelation, Nothing)
                    If oFamilyHis.FmlyMemberCode <> "" AndAlso Not IsNothing(oFamilyHis.FmlyMemberCode) Then
                        org.subject.relatedSubject.code.code = oFamilyHis.FmlyMemberCode
                    Else
                        org.subject.relatedSubject.code.nullFlavor = "NI"
                        org.subject.relatedSubject.code.code = Nothing
                        org.subject.relatedSubject.code.codeSystem = Nothing
                        org.subject.relatedSubject.code.codeSystemName = Nothing
                        org.subject.relatedSubject.code.codeSystemVersion = Nothing
                    End If
                    

                    'org.subject.relatedSubject.subject = New POCD_MT000040UV02SubjectPerson()
                    'org.subject.relatedSubject.subject.classCode = Nothing
                    'org.subject.relatedSubject.subject.classCodeSpecified = False
                    'org.subject.relatedSubject.subject.determinerCode = Nothing
                    'org.subject.relatedSubject.subject.id = New II(0) {}
                    'org.subject.relatedSubject.subject.id(0) = New II()
                    'org.subject.relatedSubject.subject.id(0).root = "2.16.840.1.113883.19.5.99999.2"
                    'org.subject.relatedSubject.subject.id(0).extension = "99999999"
                    'org.subject.relatedSubject.subject.id(0).assigningAuthorityName = Nothing

                    'org.subject.relatedSubject.subject.administrativeGenderCode = New CE()
                    'org.subject.relatedSubject.subject.administrativeGenderCode.nullFlavor = "UNK"
                    'org.subject.relatedSubject.subject.administrativeGenderCode.code = Nothing
                    'org.subject.relatedSubject.subject.administrativeGenderCode.codeSystem = Nothing
                    'org.subject.relatedSubject.subject.administrativeGenderCode.codeSystemName = Nothing
                    'org.subject.relatedSubject.subject.administrativeGenderCode.codeSystemVersion = Nothing
                    'org.subject.relatedSubject.subject.administrativeGenderCode.displayName = Nothing

                    'org.subject.relatedSubject.subject.birthTime = New TS()
                    'org.subject.relatedSubject.subject.birthTime.value = Nothing
                    'org.subject.relatedSubject.subject.birthTime.nullFlavor = "UNK"

                    'org.subject.relatedSubject.subject.deceasedInd = New BL()
                    'org.subject.relatedSubject.subject.deceasedInd.nullFlavor = "UNK"

                    'org.subject.relatedSubject.subject.deceasedTime = New TS()
                    'org.subject.relatedSubject.subject.deceasedTime.value = Nothing
                    'org.subject.relatedSubject.subject.deceasedTime.nullFlavor = "UNK"

                    org.component = New POCD_MT000040UV02Component4(0) {}
                    org.component(0) = New POCD_MT000040UV02Component4()
                    DirectCast(org.component(0), POCD_MT000040UV02Component4).Item = New POCD_MT000040UV02Observation()
                    ob = DirectCast(org.component(0), POCD_MT000040UV02Component4).Item

                    ob.classCode = ActClassObservation.OBS
                    ob.moodCode = x_ActMoodDocumentObservation.EVN
                    ob.moodCodeSpecified = True

                    ob.templateId = New II(1) {}
                    ob.templateId(0) = New II()
                    ob.templateId(0).root = oTemplateIDMaster.GetEntryID("Family History Observation")
                    ob.templateId(0).extension = _DateExtension2015
                    ob.templateId(0).assigningAuthorityName = Nothing


                    ob.templateId(1) = New II()
                    ob.templateId(1).root = oTemplateIDMaster.GetEntryID("Family History Observation")
                    ob.templateId(1).extension = Nothing
                    ob.templateId(1).assigningAuthorityName = Nothing


                    ob.id = New II(0) {}
                    ob.id(0) = New II()
                    ob.id(0).extension = Nothing
                    ob.id(0).assigningAuthorityName = Nothing
                    ob.id(0).root = Guid.NewGuid().ToString()

                    ob.code = New CD()
                    ob.code.code = "64572001"
                    ob.code.codeSystemName = "SNOMED CT"
                    ob.code.codeSystemVersion = Nothing
                    ob.code.displayName = "Condition"
                    ob.code.codeSystem = CodeSystem.SNOMED_CT

                    ob.code.translation = New CD(0) {}
                    ob.code.translation(0) = New CD()
                    ob.code.translation(0).code = "75315-2"
                    ob.code.translation(0).codeSystem = CodeSystem.LOINC
                    ob.code.translation(0).codeSystemName = "LOINC"
                    ob.code.translation(0).codeSystemVersion = Nothing


                    ob.statusCode = New CS()
                    ob.statusCode.code = "completed"
                    ob.statusCode.codeSystem = Nothing
                    ob.statusCode.codeSystemName = Nothing
                    ob.statusCode.codeSystemVersion = Nothing
                    ob.statusCode.displayName = Nothing

                    ob.effectiveTime = New IVL_TS()
                    If Not IsNothing(oFamilyHis.OccurDate) AndAlso oFamilyHis.OccurDate <> "" Then
                        ob.effectiveTime.value = Format(CType(oFamilyHis.OccurDate, Date), "yyyyMMdd")
                    Else
                        ob.effectiveTime.value = Nothing
                        ob.effectiveTime.nullFlavor = "UNK"
                    End If

                    ob.value = New ANY(0) {}
                    ob.value(0) = New CD()
                    If IsNothing(oFamilyHis.FmlyHxDescription) OrElse oFamilyHis.FmlyHxDescription = "" Then
                        DirectCast(ob.value(0), CD).displayName = Nothing
                        DirectCast(ob.value(0), CD).code = Nothing
                        DirectCast(ob.value(0), CD).codeSystemName = Nothing
                        DirectCast(ob.value(0), CD).codeSystemVersion = Nothing
                        DirectCast(ob.value(0), CD).codeSystem = Nothing
                        DirectCast(ob.value(0), CD).nullFlavor = "UNK"
                    Else
                        DirectCast(ob.value(0), CD).displayName = oFamilyHis.FmlyHxDescription
                        If oFamilyHis.FmlyHxConceptID IsNot Nothing AndAlso oFamilyHis.FmlyHxConceptID <> "" Then
                            DirectCast(ob.value(0), CD).code = oFamilyHis.FmlyHxConceptID
                        Else
                            DirectCast(ob.value(0), CD).code = Nothing
                            DirectCast(ob.value(0), CD).nullFlavor = "UNK"
                        End If

                        DirectCast(ob.value(0), CD).codeSystemName = "SNOMED CT"
                        DirectCast(ob.value(0), CD).codeSystemVersion = Nothing
                        DirectCast(ob.value(0), CD).codeSystem = CodeSystem.SNOMED_CT
                    End If

                    If Not IsNothing(oFamilyHis) Then
                        oFamilyHis.Dispose()
                        oFamilyHis = Nothing
                    End If
                Next
            Else
                _FamilyHistory.section = NoInformationSection("Family History", "Family History")

            End If
            Return _FamilyHistory
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Family History Section"
            Else
                _msgString = _msgString & vbNewLine & "Family History Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            '  MessageBox.Show("Error:" & ex.ToString())
            ex = Nothing
            Return Nothing


        Finally
            section = Nothing
            table = Nothing
            org = Nothing
            ob = Nothing
            _CodeSysItem = Nothing
        End Try
    End Function

    'added by manoj jadhav on 20150127 to share patient insurance in CDA file V8040
    Private Function GetCDAInsuranceComponent() As POCD_MT000040UV02Component3
        Dim _Insurances As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim table As StrucDocTable = Nothing
        Dim act As POCD_MT000040UV02Act = Nothing
        Dim act1 As POCD_MT000040UV02Act = Nothing
        Dim act2 As POCD_MT000040UV02Act = Nothing
        Dim procedure As POCD_MT000040UV02Procedure = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim _PInsuranceCount As Integer = 0
        Dim PlayingEntity As POCD_MT000040UV02PlayingEntity = Nothing
        Dim PayerActivityAct As String = String.Empty
        Dim PayerParticipantCov As String = String.Empty
        Dim PayerParticipantHld As String = String.Empty
        Dim PolicyActivityact As String = String.Empty
        Dim AuthorizationActivity As String = String.Empty
        Dim pInsurance As Insurance = Nothing
        Try

            _Insurances = New POCD_MT000040UV02Component3
            _Insurances.section = New POCD_MT000040UV02Section()

            section = _Insurances.section
            'section.ID = Nothing
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            section.templateId = New II(1) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID("Payers") '"2.16.840.1.113883.10.20.22.2.18.2"
            section.templateId(0).extension = _DateExtension2015
            section.templateId(0).assigningAuthorityName = Nothing

            section.templateId(1) = New II()
            section.templateId(1).root = oTemplateIDMaster.GetSectionID("Payers") '"2.16.840.1.113883.10.20.22.2.18.2"
            section.templateId(1).extension = Nothing
            section.templateId(1).assigningAuthorityName = Nothing

            section.code = New CE()
            section.code.nullFlavor = "NA"
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Payers")
            If _CodeSysItem IsNot Nothing Then
                section.code.code = _CodeSysItem.Code '48768-6
                section.code.codeSystem = CodeSystem.LOINC
                section.code.codeSystemName = _CodeSysItem.CodingSystemName
                section.code.codeSystemVersion = Nothing
                section.code.displayName = Nothing
            Else
                section.code = Nothing
            End If


            section.title = New ST()
            section.title.Text = New String() {"Insurance"}
            section.title.language = Nothing
            section.text = New StrucDocText()
            section.text.ID = Nothing
            section.text.language = Nothing


            If Not IsNothing(mPatient.PatientInsurances) AndAlso mPatient.PatientInsurances.Count > 0 Then
                ''
                ''section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
                ''
                If Not IsNothing(sconf.code) Then
                    section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''
                ''
                section.text.Items = New StrucDocTable(0) {}
                section.text.Items(0) = New StrucDocTable()
                table = DirectCast(section.text.Items(0), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}
                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New StrucDocTh(6) {}
                table.thead.tr(0).Items(0) = New StrucDocTh()

                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Insurance Plan Name"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Insurance ID"}
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Group #"}
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(3) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Subscriber Name"}
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(3), StrucDocTh).language = Nothing
                table.thead.tr(0).Items(4) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).Text = New String() {"Relation"}
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(4), StrucDocTh).language = Nothing

                table.thead.tr(0).Items(5) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).Text = New String() {"Start and End Dates"}
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(5), StrucDocTh).language = Nothing

                table.thead.tr(0).Items(6) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).Text = New String() {"Insurance Type"}
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(6), StrucDocTh).language = Nothing


                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing


                If Not IsNothing(mPatient.PatientInsurances) AndAlso mPatient.PatientInsurances.Count > 0 Then
                    _PInsuranceCount = mPatient.PatientInsurances.Count - 1
                    PayerActivityAct = oTemplateIDMaster.GetEntryID("Payer Activity Act")
                    PayerParticipantCov = oTemplateIDMaster.GetEntryID("Payer Participant Cov")
                    PayerParticipantHld = oTemplateIDMaster.GetEntryID("Payer Participant Hld")
                    PolicyActivityact = oTemplateIDMaster.GetEntryID("Policy Activity")
                    AuthorizationActivity = oTemplateIDMaster.GetEntryID("Authorization Activity Act")
                End If

                table.tbody(0).tr = New StrucDocTr(_PInsuranceCount) {}

                For ai As Integer = 0 To _PInsuranceCount

                    pInsurance = mPatient.PatientInsurances.Item(ai)
                    table.tbody(0).tr(ai) = New StrucDocTr()
                    table.tbody(0).tr(ai).ID = Nothing
                    table.tbody(0).tr(ai).language = Nothing
                    table.tbody(0).tr(ai).Items = New StrucDocTd(6) {}

                    table.tbody(0).tr(ai).Items(0) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(0), StrucDocTd).Text = New String() {pInsurance.InsuranceName}
                    DirectCast(table.tbody(0).tr(ai).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(0), StrucDocTd).language = Nothing

                    table.tbody(0).tr(ai).Items(1) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(1), StrucDocTd).Text = New String() {pInsurance.InsuranceId}
                    DirectCast(table.tbody(0).tr(ai).Items(1), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(1), StrucDocTd).language = Nothing

                    table.tbody(0).tr(ai).Items(2) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(2), StrucDocTd).Text = New String() {pInsurance.GroupNo}
                    DirectCast(table.tbody(0).tr(ai).Items(2), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(2), StrucDocTd).language = Nothing

                    table.tbody(0).tr(ai).Items(3) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(3), StrucDocTd).Text = New String() {pInsurance.InsuranceSubscriber1.FirstName & If(pInsurance.InsuranceSubscriber1.MiddleName.Length <= 0, "", " " & pInsurance.InsuranceSubscriber1.MiddleName) & If(pInsurance.InsuranceSubscriber1.LastName.Length <= 0, "", " " & pInsurance.InsuranceSubscriber1.LastName)}
                    DirectCast(table.tbody(0).tr(ai).Items(3), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(3), StrucDocTd).language = Nothing

                    table.tbody(0).tr(ai).Items(4) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(4), StrucDocTd).Text = New String() {pInsurance.InsRelation}
                    DirectCast(table.tbody(0).tr(ai).Items(4), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(4), StrucDocTd).language = Nothing

                    table.tbody(0).tr(ai).Items(5) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(5), StrucDocTd).Text = New String() {Convert.ToString(pInsurance.InsStartdate) + " - " + Convert.ToString(pInsurance.InsEndDate)}
                    DirectCast(table.tbody(0).tr(ai).Items(5), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(5), StrucDocTd).language = Nothing

                    table.tbody(0).tr(ai).Items(6) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(ai).Items(6), StrucDocTd).Text = New String() {pInsurance.InsuranceType}
                    DirectCast(table.tbody(0).tr(ai).Items(6), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(ai).Items(6), StrucDocTd).language = Nothing

                    pInsurance.Dispose()
                    pInsurance = Nothing

                Next

            Else
                'section.text.Text = New String() {"No known Insurance for patient"}
                'Return _Insurances
            End If

            If Not IsNothing(mPatient.PatientInsurances) AndAlso mPatient.PatientInsurances.Count > 0 Then
                section.entry = New POCD_MT000040UV02Entry(_PInsuranceCount) {}


                For ai As Integer = 0 To _PInsuranceCount

                    pInsurance = mPatient.PatientInsurances.Item(ai)


                    section.entry(ai) = New POCD_MT000040UV02Entry()
                    section.entry(ai).typeCode = x_ActRelationshipEntry.DRIV
                    section.entry(ai).Item = New POCD_MT000040UV02Act()
                    act = DirectCast(section.entry(ai).Item, POCD_MT000040UV02Act)
                    act.moodCode = x_DocumentActMood.EVN
                    act.moodCodeSpecified = True
                    act.classCode = x_ActClassDocumentEntryAct.ACT
                    '<!--Coverage entry template-->
                    act.templateId = New II(0) {}
                    act.templateId(0) = New II()
                    act.templateId(0).root = PayerActivityAct
                    act.templateId(0).assigningAuthorityName = Nothing
                    act.templateId(0).extension = Nothing

                    act.id = New II(0) {}
                    act.id(0) = New II()
                    act.id(0).root = Guid.NewGuid().ToString()
                    act.id(0).extension = Nothing
                    act.id(0).assigningAuthorityName = Nothing

                    _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Payers")
                    If _CodeSysItem IsNot Nothing Then
                        act.code = New CD()
                        act.code.code = _CodeSysItem.Code '48768-6
                        act.code.nullFlavor = Nothing
                        act.code.codeSystemName = _CodeSysItem.CodingSystemName
                        act.code.codeSystem = CodeSystem.LOINC
                        act.code.displayName = _CodeSysItem.Description 'Payment sources
                        act.code.codeSystemVersion = Nothing
                    Else
                        act.code = Nothing
                    End If

                    act.statusCode = New CS()
                    act.statusCode.code = "completed"
                    act.statusCode.codeSystem = Nothing
                    act.statusCode.codeSystemName = Nothing
                    act.statusCode.codeSystemVersion = Nothing
                    act.statusCode.displayName = Nothing
                    act.effectiveTime = Nothing

                    act.entryRelationship = New POCD_MT000040UV02EntryRelationship(0) {}
                    act.entryRelationship(0) = New POCD_MT000040UV02EntryRelationship()
                    act.entryRelationship(0).typeCode = ActRelationshipType.COMP

                    act.entryRelationship(0).sequenceNumber = New INT()
                    act.entryRelationship(0).sequenceNumber.value = ai + 1

                    act.entryRelationship(0).Item = New POCD_MT000040UV02Act()
                    act1 = DirectCast(act.entryRelationship(0).Item, POCD_MT000040UV02Act)

                    act1.classCode = x_ActClassDocumentEntryAct.ACT
                    act1.moodCode = x_DocumentActMood.EVN
                    act1.moodCodeSpecified = True
                    '<!--  ******** Policy Activity template   ******** -->
                    act1.templateId = New II(0) {}
                    act1.templateId(0) = New II()
                    act1.templateId(0).root = PolicyActivityact
                    act1.templateId(0).extension = Nothing
                    act1.templateId(0).assigningAuthorityName = Nothing

                    act1.id = New II(0) {}
                    act1.id(0) = New II()
                    act1.id(0).extension = Nothing
                    act1.id(0).assigningAuthorityName = Nothing
                    act1.id(0).root = Guid.NewGuid().ToString()

                    act1.code = New CD()
                    act1.code.code = pInsurance.InsTypeCode
                    act1.code.codeSystemName = "HealthInsuranceTypeValueSet"
                    act1.code.codeSystemVersion = Nothing
                    act1.code.displayName = pInsurance.InsuranceType
                    act1.code.codeSystem = "2.16.840.1.113883.3.88.12.3221.5.2"

                    act1.statusCode = New CS()
                    act1.statusCode.code = "completed"
                    act1.statusCode.codeSystem = Nothing
                    act1.statusCode.codeSystemName = Nothing
                    act1.statusCode.codeSystemVersion = Nothing
                    act1.statusCode.displayName = Nothing

                    act1.performer = New POCD_MT000040UV02Performer2(1) {}
                    act1.performer(0) = New POCD_MT000040UV02Performer2()
                    act1.performer(0).typeCodeSpecified = True

                    act1.performer(0).typeCode = ParticipationType.PRF

                    act1.performer(0).templateId = New II(0) {}
                    act1.performer(0).templateId(0) = New II()
                    act1.performer(0).templateId(0).root = "2.16.840.1.113883.10.20.22.4.87"
                    act1.performer(0).templateId(0).extension = Nothing
                    act1.performer(0).templateId(0).assigningAuthorityName = Nothing
                    ''2.16.840.1.113883.10.20.22.4.87

                    act1.performer(0).time = New IVL_TS()
                    act1.performer(0).time.nullFlavor = "UNK"
                    act1.performer(0).time.value = Nothing
                    act1.performer(0).time.Items = Nothing
                    act1.performer(0).time.operator = Nothing


                    act1.performer(0).assignedEntity = New POCD_MT000040UV02AssignedEntity()
                    act1.performer(0).assignedEntity.classCode = Nothing
                    act1.performer(0).assignedEntity.classCodeSpecified = False
                    act1.performer(0).assignedEntity.id = New II(0) {}
                    act1.performer(0).assignedEntity.id(0) = New II()
                    act1.performer(0).assignedEntity.id(0).root = Guid.NewGuid().ToString()
                    act1.performer(0).assignedEntity.id(0).nullFlavor = Nothing
                    act1.performer(0).assignedEntity.id(0).extension = Nothing
                    act1.performer(0).assignedEntity.id(0).assigningAuthorityName = Nothing


                    act1.performer(0).assignedEntity.code = New CE()
                    act1.performer(0).assignedEntity.code.code = "PAYOR"
                    act1.performer(0).assignedEntity.code.codeSystem = "2.16.840.1.113883.5.110"
                    act1.performer(0).assignedEntity.code.codeSystemName = "HL7 RoleClassRelationship"
                    act1.performer(0).assignedEntity.code.codeSystemVersion = Nothing
                    act1.performer(0).assignedEntity.code.displayName = Nothing

                    act1.performer(0).assignedEntity.addr = New AD(0) {}
                    act1.performer(0).assignedEntity.addr(0) = New AD()
                    act1.performer(0).assignedEntity.addr(0).use = New PostalAddressUse(0) {}
                    act1.performer(0).assignedEntity.addr(0).use(0) = PostalAddressUse.WP
                    act1.performer(0).assignedEntity.addr(0).Items = New ADXP(4) {}

                    ' act1.performer(0).assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()


                    act1.performer(0).assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()
                    If Not String.IsNullOrEmpty(pInsurance.InsSubsAddressLine1) Then
                        act1.performer(0).assignedEntity.addr(0).Items(0).Text = New String() {If(String.IsNullOrEmpty(pInsurance.InsSubsAddressLine1), "", pInsurance.InsSubsAddressLine1 & " ") & pInsurance.InsSubsAddressLine2}
                    Else
                        act1.performer(0).assignedEntity.addr(0).Items(0).Text = Nothing
                        act1.performer(0).assignedEntity.addr(0).Items(0).nullFlavor = "NA"
                    End If
                    act1.performer(0).assignedEntity.addr(0).Items(0).language = Nothing
                    act1.performer(0).assignedEntity.addr(0).Items(0).partType = Nothing

                    'City
                    act1.performer(0).assignedEntity.addr(0).Items(1) = New adxpcity()
                    If Not String.IsNullOrEmpty(pInsurance.InsSubsCity) Then
                        act1.performer(0).assignedEntity.addr(0).Items(1).Text = New String() {pInsurance.InsSubsCity}
                    Else
                        act1.performer(0).assignedEntity.addr(0).Items(1).Text = Nothing
                        act1.performer(0).assignedEntity.addr(0).Items(1).nullFlavor = "NA"
                    End If
                    act1.performer(0).assignedEntity.addr(0).Items(1).language = Nothing
                    act1.performer(0).assignedEntity.addr(0).Items(1).partType = Nothing

                    'State
                    act1.performer(0).assignedEntity.addr(0).Items(2) = New adxpstate()
                    If Not String.IsNullOrEmpty(pInsurance.InsSubsState) Then
                        act1.performer(0).assignedEntity.addr(0).Items(2).Text = New String() {pInsurance.InsSubsState}
                    Else
                        act1.performer(0).assignedEntity.addr(0).Items(2).Text = Nothing
                        act1.performer(0).assignedEntity.addr(0).Items(2).nullFlavor = "NA"
                    End If
                    act1.performer(0).assignedEntity.addr(0).Items(2).language = Nothing
                    act1.performer(0).assignedEntity.addr(0).Items(2).partType = Nothing

                    'Zip Code
                    act1.performer(0).assignedEntity.addr(0).Items(3) = New adxppostalCode()

                    If Not String.IsNullOrEmpty(pInsurance.InsSubsZip) Then
                        act1.performer(0).assignedEntity.addr(0).Items(3).Text = New String() {pInsurance.InsSubsZip}
                    Else
                        act1.performer(0).assignedEntity.addr(0).Items(3).Text = Nothing
                        act1.performer(0).assignedEntity.addr(0).Items(3).nullFlavor = "NA"
                    End If
                    act1.performer(0).assignedEntity.addr(0).Items(3).language = Nothing
                    act1.performer(0).assignedEntity.addr(0).Items(3).partType = Nothing

                    'country
                    act1.performer(0).assignedEntity.addr(0).Items(4) = New adxpcountry()
                    act1.performer(0).assignedEntity.addr(0).Items(4).Text = Nothing
                    act1.performer(0).assignedEntity.addr(0).Items(4).nullFlavor = "NA"
                    act1.performer(0).assignedEntity.addr(0).Items(4).language = Nothing
                    act1.performer(0).assignedEntity.addr(0).Items(4).partType = Nothing


                    'telephone no
                    act1.performer(0).assignedEntity.telecom = New TEL(0) {}
                    act1.performer(0).assignedEntity.telecom(0) = New TEL()
                    If Not String.IsNullOrEmpty(pInsurance.InsCompanyPhoneNumber) Then
                        act1.performer(0).assignedEntity.telecom(0).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(pInsurance.InsCompanyPhoneNumber))
                        act1.performer(0).assignedEntity.telecom(0).use = New TelecommunicationAddressUse(0) {}
                        act1.performer(0).assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.WP
                    Else
                        act1.performer(0).assignedEntity.telecom(0).nullFlavor = "NI"
                        act1.performer(0).assignedEntity.telecom(0).value = Nothing
                    End If
                    act1.performer(0).assignedEntity.telecom(0).use = New TelecommunicationAddressUse(0) {}
                    act1.performer(0).assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.WP


                    act1.performer(0).assignedEntity.representedOrganization = New POCD_MT000040UV02Organization
                    act1.performer(0).assignedEntity.representedOrganization.classCode = Nothing
                    act1.performer(0).assignedEntity.representedOrganization.classCodeSpecified = False
                    act1.performer(0).assignedEntity.representedOrganization.determinerCode = Nothing
                    act1.performer(0).assignedEntity.representedOrganization.id = Nothing
                    act1.performer(0).assignedEntity.representedOrganization.name = New [ON](0) {}
                    act1.performer(0).assignedEntity.representedOrganization.name(0) = New [ON]
                    act1.performer(0).assignedEntity.representedOrganization.name(0).Text = New String() {pInsurance.InsCompanyName}
                    act1.performer(0).assignedEntity.representedOrganization.name(0).use = Nothing
                    act1.performer(0).assignedEntity.representedOrganization.telecom = New TEL(0) {}
                    act1.performer(0).assignedEntity.representedOrganization.telecom(0) = New TEL
                    act1.performer(0).assignedEntity.representedOrganization.telecom(0).value = Nothing
                    act1.performer(0).assignedEntity.representedOrganization.telecom(0).use = Nothing
                    act1.performer(0).assignedEntity.representedOrganization.telecom(0).nullFlavor = "NI"


                    act1.performer(0).assignedEntity.representedOrganization.addr = New AD(0) {}
                    act1.performer(0).assignedEntity.representedOrganization.addr(0) = New AD()
                    act1.performer(0).assignedEntity.representedOrganization.addr(0).nullFlavor = Nothing
                    act1.performer(0).assignedEntity.representedOrganization.addr(0).Text = Nothing


                    'Adding another performer


                    act1.performer(1) = New POCD_MT000040UV02Performer2()
                    act1.performer(1).typeCodeSpecified = True
                    act1.performer(1).typeCode = ParticipationType.PRF

                    act1.performer(1).templateId = New II(0) {}
                    act1.performer(1).templateId(0) = New II()
                    act1.performer(1).templateId(0).root = "2.16.840.1.113883.10.20.22.4.88"
                    act1.performer(1).templateId(0).extension = Nothing
                    act1.performer(1).templateId(0).assigningAuthorityName = Nothing


                    act1.performer(1).time = New IVL_TS()
                    act1.performer(1).time.nullFlavor = "UNK"
                    act1.performer(1).time.value = Nothing
                    act1.performer(1).time.Items = Nothing
                    act1.performer(1).time.operator = Nothing

                    act1.performer(1).assignedEntity = New POCD_MT000040UV02AssignedEntity()
                    act1.performer(1).assignedEntity.classCode = Nothing
                    act1.performer(1).assignedEntity.classCodeSpecified = False
                    act1.performer(1).assignedEntity.id = New II(0) {}
                    act1.performer(1).assignedEntity.id(0) = New II()
                    act1.performer(1).assignedEntity.id(0).root = Guid.NewGuid().ToString()
                    act1.performer(1).assignedEntity.id(0).nullFlavor = Nothing
                    act1.performer(1).assignedEntity.id(0).extension = Nothing
                    act1.performer(1).assignedEntity.id(0).assigningAuthorityName = Nothing

                    act1.performer(1).assignedEntity.code = New CE()
                    act1.performer(1).assignedEntity.code.nullFlavor = "NA"
                    act1.performer(1).assignedEntity.code.code = Nothing
                    act1.performer(1).assignedEntity.code.codeSystem = Nothing
                    act1.performer(1).assignedEntity.code.codeSystemName = Nothing
                    act1.performer(1).assignedEntity.code.codeSystemVersion = Nothing
                    act1.performer(1).assignedEntity.code.displayName = Nothing

                    act1.performer(1).assignedEntity.addr = New AD(0) {}
                    act1.performer(1).assignedEntity.addr(0) = New AD()
                    act1.performer(1).assignedEntity.addr(0).use = New PostalAddressUse(0) {}
                    act1.performer(1).assignedEntity.addr(0).use(0) = PostalAddressUse.HP
                    act1.performer(1).assignedEntity.addr(0).Items = New ADXP(5) {}

                    ' act1.performer(0).assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()


                    act1.performer(1).assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()
                    'If Not String.IsNullOrEmpty(pInsurance.InsSubsAddressLine1) Then
                    '    act1.performer(1).assignedEntity.addr(0).Items(0).Text = New String() {IIf(String.IsNullOrEmpty(pInsurance.InsSubsAddressLine1), "", pInsurance.InsSubsAddressLine1 & " ") & pInsurance.InsSubsAddressLine2}
                    'Else
                    act1.performer(1).assignedEntity.addr(0).Items(0).Text = Nothing
                    act1.performer(1).assignedEntity.addr(0).Items(0).nullFlavor = "NA"
                    'End If
                    act1.performer(1).assignedEntity.addr(0).Items(0).language = Nothing
                    act1.performer(1).assignedEntity.addr(0).Items(0).partType = Nothing

                    'City
                    act1.performer(1).assignedEntity.addr(0).Items(1) = New adxpcity()
                    'If Not String.IsNullOrEmpty(pInsurance.InsSubsCity) Then
                    '    act1.performer(1).assignedEntity.addr(0).Items(1).Text = New String() {pInsurance.InsSubsCity}
                    'Else
                    act1.performer(1).assignedEntity.addr(0).Items(1).Text = Nothing
                    act1.performer(1).assignedEntity.addr(0).Items(1).nullFlavor = "NA"
                    'End If
                    act1.performer(1).assignedEntity.addr(0).Items(1).language = Nothing
                    act1.performer(1).assignedEntity.addr(0).Items(1).partType = Nothing

                    'State
                    act1.performer(1).assignedEntity.addr(0).Items(2) = New adxpstate()
                    'If Not String.IsNullOrEmpty(pInsurance.InsSubsState) Then
                    '    act1.performer(1).assignedEntity.addr(0).Items(2).Text = New String() {pInsurance.InsSubsState}
                    'Else
                    act1.performer(1).assignedEntity.addr(0).Items(2).Text = Nothing
                    act1.performer(1).assignedEntity.addr(0).Items(2).nullFlavor = "NA"
                    'End If
                    act1.performer(1).assignedEntity.addr(0).Items(2).language = Nothing
                    act1.performer(1).assignedEntity.addr(0).Items(2).partType = Nothing

                    'Zip Code
                    act1.performer(1).assignedEntity.addr(0).Items(3) = New adxppostalCode()

                    'If Not String.IsNullOrEmpty(pInsurance.InsSubsZip) Then
                    '    act1.performer(1).assignedEntity.addr(0).Items(3).Text = New String() {pInsurance.InsSubsZip}
                    'Else
                    act1.performer(1).assignedEntity.addr(0).Items(3).Text = Nothing
                    act1.performer(1).assignedEntity.addr(0).Items(3).nullFlavor = "NA"
                    'End If
                    act1.performer(1).assignedEntity.addr(0).Items(3).language = Nothing
                    act1.performer(1).assignedEntity.addr(0).Items(3).partType = Nothing

                    'country
                    act1.performer(1).assignedEntity.addr(0).Items(4) = New adxpcountry()
                    act1.performer(1).assignedEntity.addr(0).Items(4).Text = Nothing
                    act1.performer(1).assignedEntity.addr(0).Items(4).nullFlavor = "NA"
                    act1.performer(1).assignedEntity.addr(0).Items(4).language = Nothing
                    act1.performer(1).assignedEntity.addr(0).Items(4).partType = Nothing


                    'telephone no
                    act1.performer(1).assignedEntity.telecom = New TEL(0) {}
                    act1.performer(1).assignedEntity.telecom(0) = New TEL()
                    'If Not String.IsNullOrEmpty(pInsurance.InsCompanyPhoneNumber) Then
                    '    act1.performer(1).assignedEntity.telecom(0).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(pInsurance.InsCompanyPhoneNumber))
                    '    act1.performer(1).assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.HP
                    'Else
                    act1.performer(1).assignedEntity.telecom(0).nullFlavor = "NI"
                    act1.performer(1).assignedEntity.telecom(0).value = Nothing
                    'End If
                    act1.performer(1).assignedEntity.telecom(0).use = New TelecommunicationAddressUse(0) {}
                    act1.performer(1).assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.HP

                    act1.performer(1).assignedEntity.assignedPerson = New POCD_MT000040UV02Person()
                    act1.performer(1).assignedEntity.assignedPerson.nullFlavor = "NA"
                    act1.performer(1).assignedEntity.assignedPerson.classCode = Nothing
                    act1.performer(1).assignedEntity.assignedPerson.classCodeSpecified = False
                    act1.performer(1).assignedEntity.assignedPerson.determinerCode = Nothing
                    act1.performer(1).assignedEntity.assignedPerson.name = New PN(0) {}
                    act1.performer(1).assignedEntity.assignedPerson.name(0) = New PN()
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items = New ENXP(4) {}

                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(0) = New enprefix()
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(0).Text = New String() {""}
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(0).nullFlavor = "NA"
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(0).language = Nothing
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(0).partType = Nothing

                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(1) = New engiven()
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(1).Text = New String() {""}
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(1).nullFlavor = "NA"
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(1).language = Nothing
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(1).partType = Nothing

                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(2) = New engiven()
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(2).Text = New String() {""}
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(2).nullFlavor = "NA"
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(2).language = Nothing
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(2).partType = Nothing

                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(3) = New enfamily()
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(3).Text = New String() {""}
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(3).nullFlavor = "NA"
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(3).language = Nothing
                    act1.performer(1).assignedEntity.assignedPerson.name(0).Items(3).partType = Nothing




                    '<!-- Covered party -->
                    '<!--When the Subscriber is the patient, the participant element describing the subscriber SHALL NOT be present-->
                    act1.participant = New POCD_MT000040UV02Participant3(1) {}

                    'Coverage participant
                    act1.participant(0) = New POCD_MT000040UV02Participant3()
                    act1.participant(0).typeCode = ParticipationType.COV

                    act1.participant(0).templateId = New II(0) {}
                    act1.participant(0).templateId(0) = New II()
                    act1.participant(0).templateId(0).root = PayerParticipantCov
                    act1.participant(0).templateId(0).extension = Nothing
                    act1.participant(0).templateId(0).assigningAuthorityName = Nothing

                    act1.participant(0).time = New IVL_TS()
                    ' act1.participant(0).time.nullFlavor = "UNK"
                    act1.participant(0).time.value = Nothing
                    act1.participant(0).time.operator = Nothing
                    act1.participant(0).time.ItemsElementName = New ItemsChoiceType2(1) {}

                    act1.participant(0).time.ItemsElementName(0) = ItemsChoiceType2.low

                    act1.participant(0).time.ItemsElementName(1) = ItemsChoiceType2.high
                    Dim _currentDate As System.DateTime = System.DateTime.Now
                    act1.participant(0).time.Items = New QTY(1) {}
                    act1.participant(0).time.Items(0) = New IVXB_TS()
                    DirectCast(act1.participant(0).time.Items(0), IVXB_TS).value = Nothing
                    DirectCast(act1.participant(0).time.Items(0), IVXB_TS).nullFlavor = "UNK"
                    act1.participant(0).time.Items(1) = New IVXB_TS()
                    DirectCast(act1.participant(0).time.Items(1), IVXB_TS).nullFlavor = "UNK"
                    DirectCast(act1.participant(0).time.Items(1), IVXB_TS).value = Nothing


                    act1.participant(0).participantRole = New POCD_MT000040UV02ParticipantRole()
                    act1.participant(0).participantRole.classCode = RoleClassRoot.PAT

                    act1.participant(0).participantRole.id = New II(0) {}
                    act1.participant(0).participantRole.id(0) = New II()
                    act1.participant(0).participantRole.id(0).extension = pInsurance.InsuranceId '<!-- Health plan ID for patient. -->
                    act1.participant(0).participantRole.id(0).root = Guid.NewGuid.ToString()
                    act1.participant(0).participantRole.id(0).assigningAuthorityName = Nothing

                    _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.CoverageRoleType, Convert.ToString(pInsurance.InsRelation).ToUpper)
                    If Not IsNothing(_CodeSysItem) Then
                        act1.participant(0).participantRole.code = New CE()
                        act1.participant(0).participantRole.code.code = _CodeSysItem.Code
                        act1.participant(0).participantRole.code.codeSystem = CodeSystem.CoverageRoleType
                        act1.participant(0).participantRole.code.codeSystemName = _CodeSysItem.CodingSystemName
                        act1.participant(0).participantRole.code.codeSystemVersion = _CodeSysItem.Code
                        act1.participant(0).participantRole.code.displayName = Nothing
                    Else
                        act1.participant(0).participantRole.code = Nothing
                    End If


                    act1.participant(0).participantRole.addr = New AD(0) {}
                    act1.participant(0).participantRole.addr(0) = New AD()
                    act1.participant(0).participantRole.addr(0).use = New PostalAddressUse(0) {}
                    act1.participant(0).participantRole.addr(0).use(0) = PostalAddressUse.HP
                    act1.participant(0).participantRole.addr(0).Items = New ADXP(4) {}

                    If Not String.IsNullOrEmpty(mPatient.PatientName.PersonContactAddress.Street) Then
                        act1.participant(0).participantRole.addr(0).Items(0) = New adxpstreetAddressLine()
                        act1.participant(0).participantRole.addr(0).Items(0).Text = New String() {(mPatient.PatientName.PersonContactAddress.Street & " " & mPatient.PatientName.PersonContactAddress.AddressLine2).Trim()}
                        act1.participant(0).participantRole.addr(0).Items(0).language = Nothing
                        act1.participant(0).participantRole.addr(0).Items(0).partType = Nothing
                    Else
                        act1.participant(0).participantRole.addr(0).Items(0) = Nothing
                    End If
                    If Not String.IsNullOrEmpty(mPatient.PatientName.PersonContactAddress.City) Then
                        act1.participant(0).participantRole.addr(0).Items(1) = New adxpcity()
                        act1.participant(0).participantRole.addr(0).Items(1).Text = New String() {(mPatient.PatientName.PersonContactAddress.City).Trim()}
                        act1.participant(0).participantRole.addr(0).Items(1).language = Nothing
                        act1.participant(0).participantRole.addr(0).Items(1).partType = Nothing
                    Else
                        act1.participant(0).participantRole.addr(0).Items(1) = Nothing
                    End If
                    If Not String.IsNullOrEmpty(mPatient.PatientName.PersonContactAddress.State) Then
                        act1.participant(0).participantRole.addr(0).Items(2) = New adxpstate()
                        act1.participant(0).participantRole.addr(0).Items(2).Text = New String() {(mPatient.PatientName.PersonContactAddress.State).Trim()}
                        act1.participant(0).participantRole.addr(0).Items(2).language = Nothing
                        act1.participant(0).participantRole.addr(0).Items(2).partType = Nothing
                    Else
                        act1.participant(0).participantRole.addr(0).Items(2) = Nothing
                    End If
                    If Not String.IsNullOrEmpty(mPatient.PatientName.PersonContactAddress.Zip) Then
                        act1.participant(0).participantRole.addr(0).Items(3) = New adxppostalCode()
                        act1.participant(0).participantRole.addr(0).Items(3).Text = New String() {(mPatient.PatientName.PersonContactAddress.Zip).Trim()}
                        act1.participant(0).participantRole.addr(0).Items(3).language = Nothing
                        act1.participant(0).participantRole.addr(0).Items(3).partType = Nothing
                    Else
                        act1.participant(0).participantRole.addr(0).Items(3) = Nothing
                    End If

                    If Not String.IsNullOrEmpty(mPatient.PatientName.PersonContactAddress.Country) Then
                        act1.participant(0).participantRole.addr(0).Items(4) = New adxpcountry()
                        act1.participant(0).participantRole.addr(0).Items(4).Text = New String() {(mPatient.PatientName.PersonContactAddress.Country).Trim()}
                        act1.participant(0).participantRole.addr(0).Items(4).language = Nothing
                        act1.participant(0).participantRole.addr(0).Items(4).partType = Nothing
                    Else
                        act1.participant(0).participantRole.addr(0).Items(4) = Nothing
                    End If

                    act1.participant(0).participantRole.Item = New POCD_MT000040UV02PlayingEntity()
                    PlayingEntity = act1.participant(0).participantRole.Item
                    PlayingEntity.classCode = Nothing
                    PlayingEntity.classCodeSpecified = False

                    PlayingEntity.name = New PN(0) {} '<!-- Name is needed if different than health plan name. -->
                    PlayingEntity.name(0) = New PN()
                    PlayingEntity.name(0).Items = New ENXP(4) {}

                    If Not String.IsNullOrEmpty(mPatient.PatientName.Prefix) Then
                        PlayingEntity.name(0).Items(0) = New enprefix()
                        PlayingEntity.name(0).Items(0).Text = New String() {mPatient.PatientName.Prefix}
                        PlayingEntity.name(0).Items(0).language = Nothing
                        PlayingEntity.name(0).Items(0).partType = Nothing
                    Else
                        PlayingEntity.name(0).Items(0) = Nothing
                    End If


                    If Not String.IsNullOrEmpty(mPatient.PatientName.FirstName) Then
                        PlayingEntity.name(0).Items(1) = New engiven()
                        PlayingEntity.name(0).Items(1).Text = New String() {mPatient.PatientName.FirstName}
                        PlayingEntity.name(0).Items(1).language = Nothing
                        PlayingEntity.name(0).Items(1).partType = Nothing
                    Else
                        PlayingEntity.name(0).Items(1) = Nothing
                    End If

                    If Not String.IsNullOrEmpty(mPatient.PatientName.MiddleName) Then
                        PlayingEntity.name(0).Items(2) = New engiven()
                        PlayingEntity.name(0).Items(2).Text = New String() {mPatient.PatientName.MiddleName}
                        PlayingEntity.name(0).Items(2).language = Nothing
                        PlayingEntity.name(0).Items(2).partType = Nothing
                    Else
                        PlayingEntity.name(0).Items(2) = Nothing
                    End If

                    If Not String.IsNullOrEmpty(mPatient.PatientName.LastName) Then
                        PlayingEntity.name(0).Items(3) = New enfamily()
                        PlayingEntity.name(0).Items(3).Text = New String() {mPatient.PatientName.LastName}
                        PlayingEntity.name(0).Items(3).language = Nothing
                        PlayingEntity.name(0).Items(3).partType = Nothing
                    Else
                        PlayingEntity.name(0).Items(3) = Nothing
                    End If

                    If Not String.IsNullOrEmpty(mPatient.PatientName.Suffix) Then
                        PlayingEntity.name(0).Items(4) = New ensuffix()
                        PlayingEntity.name(0).Items(4).Text = New String() {mPatient.PatientName.Suffix}
                        PlayingEntity.name(0).Items(4).language = Nothing
                        PlayingEntity.name(0).Items(4).partType = Nothing
                    Else
                        PlayingEntity.name(0).Items(4) = Nothing
                    End If

                    ''Patient DOB '<birthTime value="19470501" xmlns="urn:hl7-org:sdtc" />
                    'PlayingEntity.birthTime = New TS()
                    'If pInsurance.InsuranceSubscriber1.DOB IsNot Nothing AndAlso pInsurance.InsuranceSubscriber1.DOB <> "" Then
                    '    PlayingEntity.birthTime.value = (Convert.ToDateTime(pInsurance.InsuranceSubscriber1.DOB)).ToString("yyyyMMdd")
                    'Else
                    '    PlayingEntity.birthTime.value = Nothing
                    'End If

                    '<patient itself a subscriber then ignore holder tag>
                    If String.Compare(pInsurance.InsRelation, "SELF", True) = 0 Then
                        act1.participant(1) = Nothing
                    Else

                        act1.participant(1) = New POCD_MT000040UV02Participant3()
                        act1.participant(1).typeCode = ParticipationType.HLD

                        act1.participant(1).templateId = New II(0) {}
                        act1.participant(1).templateId(0) = New II()
                        act1.participant(1).templateId(0).root = PayerParticipantHld
                        act1.participant(1).templateId(0).extension = Nothing
                        act1.participant(1).templateId(0).assigningAuthorityName = Nothing

                        act1.participant(1).participantRole = New POCD_MT000040UV02ParticipantRole()
                        act1.participant(1).participantRole.classCode = Nothing
                        act1.participant(1).participantRole.classCodeSpecified = False


                        act1.participant(1).participantRole.id = New II(0) {}
                        act1.participant(1).participantRole.id(0) = New II()
                        act1.participant(1).participantRole.id(0).extension = pInsurance.InsuranceId
                        act1.participant(1).participantRole.id(0).root = "2.16.840.1.113883.19"
                        act1.participant(1).participantRole.id(0).assigningAuthorityName = Nothing

                        act1.participant(1).participantRole.addr = New AD(0) {}
                        act1.participant(1).participantRole.addr(0) = New AD()
                        act1.participant(1).participantRole.addr(0).use = New PostalAddressUse(0) {}
                        act1.participant(1).participantRole.addr(0).use(0) = PostalAddressUse.HP
                        act1.participant(1).participantRole.addr(0).Items = New ADXP(4) {}

                        If pInsurance.InsuranceSubscriber1.PersonContactAddress.Street IsNot Nothing AndAlso pInsurance.InsuranceSubscriber1.PersonContactAddress.Street <> "" Then
                            act1.participant(1).participantRole.addr(0).Items(0) = New adxpstreetAddressLine()
                            act1.participant(1).participantRole.addr(0).Items(0).Text = New String() {(pInsurance.InsuranceSubscriber1.PersonContactAddress.Street + " " + pInsurance.InsuranceSubscriber1.PersonContactAddress.AddressLine2).Trim()}
                            act1.participant(1).participantRole.addr(0).Items(0).language = Nothing
                            act1.participant(1).participantRole.addr(0).Items(0).partType = Nothing
                        Else
                            act1.participant(1).participantRole.addr(0).Items(0) = Nothing
                        End If
                        If pInsurance.InsuranceSubscriber1.PersonContactAddress.City IsNot Nothing AndAlso pInsurance.InsuranceSubscriber1.PersonContactAddress.City <> "" Then
                            act1.participant(1).participantRole.addr(0).Items(1) = New adxpcity()
                            act1.participant(1).participantRole.addr(0).Items(1).Text = New String() {(pInsurance.InsuranceSubscriber1.PersonContactAddress.City).Trim()}
                            act1.participant(1).participantRole.addr(0).Items(1).language = Nothing
                            act1.participant(1).participantRole.addr(0).Items(1).partType = Nothing
                        Else
                            act1.participant(1).participantRole.addr(0).Items(1) = Nothing
                        End If
                        If pInsurance.InsuranceSubscriber1.PersonContactAddress.State IsNot Nothing AndAlso pInsurance.InsuranceSubscriber1.PersonContactAddress.State <> "" Then
                            act1.participant(1).participantRole.addr(0).Items(2) = New adxpstate()
                            act1.participant(1).participantRole.addr(0).Items(2).Text = New String() {(pInsurance.InsuranceSubscriber1.PersonContactAddress.State).Trim()}
                            act1.participant(1).participantRole.addr(0).Items(2).language = Nothing
                            act1.participant(1).participantRole.addr(0).Items(2).partType = Nothing
                        Else
                            act1.participant(1).participantRole.addr(0).Items(2) = Nothing
                        End If
                        If pInsurance.InsuranceSubscriber1.PersonContactAddress.Zip IsNot Nothing AndAlso pInsurance.InsuranceSubscriber1.PersonContactAddress.Zip <> "" Then
                            act1.participant(1).participantRole.addr(0).Items(3) = New adxppostalCode()
                            act1.participant(1).participantRole.addr(0).Items(3).Text = New String() {(pInsurance.InsuranceSubscriber1.PersonContactAddress.Zip).Trim()}
                            act1.participant(1).participantRole.addr(0).Items(3).language = Nothing
                            act1.participant(1).participantRole.addr(0).Items(3).partType = Nothing
                        Else
                            act1.participant(1).participantRole.addr(0).Items(3) = Nothing
                        End If

                        If pInsurance.InsuranceSubscriber1.PersonContactAddress.Country IsNot Nothing AndAlso pInsurance.InsuranceSubscriber1.PersonContactAddress.Country <> "" Then
                            act1.participant(1).participantRole.addr(0).Items(4) = New adxpcountry()
                            act1.participant(1).participantRole.addr(0).Items(4).Text = New String() {(pInsurance.InsuranceSubscriber1.PersonContactAddress.Country).Trim()}
                            act1.participant(1).participantRole.addr(0).Items(4).language = Nothing
                            act1.participant(1).participantRole.addr(0).Items(4).partType = Nothing
                        Else
                            act1.participant(1).participantRole.addr(0).Items(4) = Nothing
                        End If

                        act1.participant(1).participantRole.Item = New POCD_MT000040UV02PlayingEntity()
                        PlayingEntity = act1.participant(1).participantRole.Item
                        PlayingEntity.classCode = Nothing
                        PlayingEntity.classCodeSpecified = False

                        PlayingEntity.name = New PN(0) {}
                        PlayingEntity.name(0) = New PN()
                        PlayingEntity.name(0).Items = New ENXP(4) {}

                        If Not String.IsNullOrEmpty(pInsurance.InsuranceSubscriber1.FirstName) Then
                            PlayingEntity.name(0).Items(1) = New engiven()
                            PlayingEntity.name(0).Items(1).Text = New String() {pInsurance.InsuranceSubscriber1.FirstName}
                            PlayingEntity.name(0).Items(1).language = Nothing
                            PlayingEntity.name(0).Items(1).partType = Nothing
                        Else
                            PlayingEntity.name(0).Items(1) = Nothing
                        End If

                        If Not String.IsNullOrEmpty(pInsurance.InsuranceSubscriber1.MiddleName) Then
                            PlayingEntity.name(0).Items(2) = New engiven()
                            PlayingEntity.name(0).Items(2).Text = New String() {pInsurance.InsuranceSubscriber1.MiddleName}
                            PlayingEntity.name(0).Items(2).language = Nothing
                            PlayingEntity.name(0).Items(2).partType = Nothing
                        Else
                            PlayingEntity.name(0).Items(2) = Nothing
                        End If

                        If Not String.IsNullOrEmpty(pInsurance.InsuranceSubscriber1.LastName) Then
                            PlayingEntity.name(0).Items(3) = New enfamily()
                            PlayingEntity.name(0).Items(3).Text = New String() {pInsurance.InsuranceSubscriber1.LastName}
                            PlayingEntity.name(0).Items(3).language = Nothing
                            PlayingEntity.name(0).Items(3).partType = Nothing
                        Else
                            PlayingEntity.name(0).Items(3) = Nothing
                        End If
                    End If

                    act1.entryRelationship = New POCD_MT000040UV02EntryRelationship(0) {}
                    act1.entryRelationship(0) = New POCD_MT000040UV02EntryRelationship()
                    act1.entryRelationship(0).typeCode = ActRelationshipType.REFR
                    act1.entryRelationship(0).Item = New POCD_MT000040UV02Act()
                    act2 = DirectCast(act1.entryRelationship(0).Item, POCD_MT000040UV02Act)
                    act2.classCode = x_ActClassDocumentEntryAct.ACT
                    act2.moodCode = x_DocumentActMood.EVN
                    act2.moodCodeSpecified = True

                    '<!--  ******** Authorization Activity template   ******** -->
                    act2.templateId = New II(0) {}
                    act2.templateId(0) = New II()
                    act2.templateId(0).root = AuthorizationActivity
                    act2.templateId(0).assigningAuthorityName = Nothing
                    act2.templateId(0).extension = Nothing

                    act2.id = New II(0) {}
                    act2.id(0) = New II()
                    act2.id(0).root = Guid.NewGuid().ToString()
                    act2.id(0).extension = Nothing
                    act2.id(0).assigningAuthorityName = Nothing
                    act2.code = New CD()
                    act2.code.nullFlavor = "NA"
                    act2.code.code = Nothing
                    act2.code.codeSystem = Nothing
                    act2.code.codeSystemName = Nothing
                    act2.code.codeSystemVersion = Nothing
                    act2.code.displayName = Nothing

                    act2.entryRelationship = New POCD_MT000040UV02EntryRelationship(0) {}
                    act2.entryRelationship(0) = New POCD_MT000040UV02EntryRelationship()
                    act2.entryRelationship(0).typeCode = ActRelationshipType.SUBJ
                    act2.entryRelationship(0).Item = New POCD_MT000040UV02Procedure()
                    procedure = DirectCast(act2.entryRelationship(0).Item, POCD_MT000040UV02Procedure)

                    procedure.classCode = ActClassProcedure.PROC
                    procedure.moodCode = x_DocumentProcedureMood.PRMS
                    procedure.moodCodeSpecified = True
                    procedure.code = New CD()
                    procedure.code.nullFlavor = "NA"

                    procedure.code.code = Nothing
                    procedure.code.codeSystem = Nothing
                    procedure.code.codeSystemName = Nothing
                    procedure.code.codeSystemVersion = Nothing
                    procedure.code.displayName = Nothing

                    If Not IsNothing(pInsurance) Then
                        pInsurance.Dispose()
                        pInsurance = Nothing
                    End If
                Next
            Else
                'section.text.Text = New String() {"No known Insurance for patient"}
                'Return _Insurances
                _Insurances.section = NoInformationSection("Payers", "Insurance")
                'section.title = New ST()
                'section.title.Text = New String() {"Insurance"}
                'section.title.language = Nothing
                'section.text = New StrucDocText()
                'section.text.Text = New String() {"No Insurance for patient"}
                'section.text.ID = Nothing
                'section.text.language = Nothing
                '_Insurances.section = section
                'MedicalComponent.section = NoInformationSection("Implants")
                'MedicalComponent.section.text = New StrucDocText()
                'MedicalComponent.section.text.Text = New String() {"No Information for Patient"}
                'MedicalComponent.section.title = New ST()
                'MedicalComponent.section.title.Text = New String() {"Implants"}
            End If
            Return _Insurances
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Insurance Section"
            Else
                _msgString = _msgString & vbNewLine & "Insurance Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            _Insurances = Nothing
            section = Nothing
            table = Nothing
            act = Nothing
            act1 = Nothing
            _CodeSysItem = Nothing
            PlayingEntity = Nothing
            PayerActivityAct = String.Empty
            PayerParticipantCov = String.Empty
            PayerParticipantHld = String.Empty

            If Not IsNothing(pInsurance) Then
                pInsurance.Dispose()
                pInsurance = Nothing
            End If
        End Try
    End Function

    Private Function GetCDAPurposeOfUseComponent() As POCD_MT000040UV02Component3
        '' Added by Ujwala for certification criteria - 170.315(b)(7) Data Segmentation for Privacy – Send - Start
        Dim _sPrivacy As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim sVal As String = Nothing

        Try

            _sPrivacy = New POCD_MT000040UV02Component3
            _sPrivacy.section = New POCD_MT000040UV02Section()
            ''DirectCast(_Problems, POCD_MT000040UV02Component3).section = New POCD_MT000040UV02Section()
            ''section = DirectCast(_Problems, POCD_MT000040UV02Component3).section
            If gloLibCCDGeneral.sConfidentialityCode.ToLower = "restricted" Then
                section = _sPrivacy.section
                'section.ID = Nothing
                section.classCodeSpecified = False
                section.moodCode = Nothing
                section.moodCodeSpecified = False

                If gloLibCCDGeneral.dvCCDAPatientPurposeofUse.Count > 0 Then
                    sVal = gloLibCCDGeneral.dvCCDAPatientPurposeofUse.Table(0)(0).ToString()
                Else
                    sVal = "Treatment"
                End If
                section.text = New StrucDocText()
                section.text.ID = Nothing
                section.text.language = Nothing
                'section.text.Text = _sText
                section.text.mediaType = Nothing
                section.text.Items = New Object(1) {}
                section.text.Items(0) = New StrucDocParagraph
                DirectCast(section.text.Items(0), StrucDocParagraph).ID = Nothing
                DirectCast(section.text.Items(0), StrucDocParagraph).language = Nothing
                DirectCast(section.text.Items(0), StrucDocParagraph).Text = New String() {"Purpose Of Use: " & sVal}





            End If

            Return _sPrivacy
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "GetCDAPurposeOfUseComponent"
            Else
                _msgString = _msgString & vbNewLine & "GetCDAPurposeOfUseComponent"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            _sPrivacy = Nothing
            section = Nothing
            sVal = Nothing
        End Try
        '' Added by Ujwala for certification criteria - 170.315(b)(7) Data Segmentation for Privacy – Send - Start
    End Function


    Private Function GetCDAPrivacyComponent() As POCD_MT000040UV02Component3
        '' Added by Ujwala for certification criteria - 170.315(b)(7) Data Segmentation for Privacy – Send - Start
        Dim _sPrivacy As POCD_MT000040UV02Component3 = Nothing
        Dim _component2 As POCD_MT000040UV02Component3 = Nothing
        Dim section As POCD_MT000040UV02Section = Nothing
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim _sText(1000) As String
        Dim org As POCD_MT000040UV02Organizer = Nothing
        Dim ob As POCD_MT000040UV02Observation
        Dim _AuthorNm As String = Nothing
        ''Dim br As New HtmlGenericControl("br")

        Try

            _sPrivacy = New POCD_MT000040UV02Component3
            _sPrivacy.section = New POCD_MT000040UV02Section()

            section = _sPrivacy.section
            'section.ID = Nothing
            section.classCodeSpecified = False
            section.moodCode = Nothing
            section.moodCodeSpecified = False
            section.templateId = GetCDAPrivacyTemplateID(CodeSystem.sectiontemplateIdroot, Nothing, Nothing, Nothing, Nothing, section)

            section.code = New CE()
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Privacy")
            section.code.code = "57017-6" ''_CodeSysItem.Code '48768-6
            section.code.codeSystem = "2.16.840.1.113883.6.1" ''CodeSystem.LOINC
            section.code.codeSystemName = "LOINC" '' _CodeSysItem.CodingSystemName
            section.code.codeSystemVersion = Nothing
            section.code.displayName = "Privacy policy Organization"

            'author
            section.author = New POCD_MT000040UV02Author(0) {}
            section.author(0) = GetCDAPrivacyAuthor()

            _AuthorNm = DirectCast(DirectCast(section.author(0).assignedAuthor.Item, POCD_MT000040UV02Person).name(0).Items(1), engiven).Text(0) & " " & DirectCast(DirectCast(section.author(0).assignedAuthor.Item, POCD_MT000040UV02Person).name(0).Items(3), enfamily).Text(0) & ", " & mPatient.Clinic.ClinicName

            If Not IsNothing(DirectCast(DirectCast(section.author(0).assignedAuthor.Item, POCD_MT000040UV02Person).name(0).Items(0), enprefix)) Then
                _AuthorNm = DirectCast(DirectCast(section.author(0).assignedAuthor.Item, POCD_MT000040UV02Person).name(0).Items(0), enprefix).Text(0) & " " & _AuthorNm
            End If
            ''    mPatient.Author.PersonName.Prefix & " " & mPatient.Author.PersonName.FirstName & " " & mPatient.Author.PersonName.LastName
            _sText(0) = "Section Author: " & _AuthorNm & " "
            Dim stext As String = ""
            Dim sVal As String = ""

            If gloLibCCDGeneral.bIncludePrivacyText Then
                If gloLibCCDGeneral.dvCCDAPatientPrivacyText.Count > 0 Then
                    If gloLibCCDGeneral.dvCCDAPatientPrivacyText.Table(0)(0).ToString() <> "" Then
                        stext = gloLibCCDGeneral.dvCCDAPatientPrivacyText.Table(0)(0).ToString()
                    End If
                End If
                If stext = "" Then
                    stext = gloLibCCDGeneral.sCDAPrivacyText
                End If

                If gloLibCCDGeneral.dvCCDAPatientPurposeofUse.Count > 0 Then
                    sVal = gloLibCCDGeneral.dvCCDAPatientPurposeofUse.Table(0)(0).ToString()
                Else
                    sVal = "Treatment"
                End If
                sVal = "Purpose Of Use: " & sVal
                ''stext = stext & vbNewLine & sVal
                ''_sText(0) = _sText(0) & vbNewLine & vbTab & stext
                '_sText(0) = _sText(0) & vbNewLine & vbTab & gloLibCCDGeneral.sCDAPrivacyTitle & vbNewLine & vbTab & stext
            End If
            'stext = ""
            ''   "PROHIBITION ON REDISCLOSURE OF CONFIDENTIAL INFORMATION:" & " <BR/> " & "This notice accompanies a disclosure of information concerning a client in alcohol/drug treatment, made to you with the consent of such client. This information has been disclosed to you from records protected by federal confidentiality rules (42 C.F.R. Part 2). The federal rules prohibit you from making any further disclosure of this information unless further disclosure is expressly permitted by the written consent of the person to whom it pertains or as otherwise permitted by 42 C.F.R. Part 2. A general authorization for the release of medical or other information is NOT sufficient for this purpose. The federal rules restrict any use of the information to criminally investigate or prosecute any alcohol or drug abuse patient."
            _AuthorNm = Nothing

            ''section.author
            section.title = New ST()
            section.title.Text = New String() {"Security and Privacy Prohibitions"}
            section.title.language = Nothing
            section.title.mediaType = Nothing
            section.text = New StrucDocText()
            section.text.ID = Nothing
            section.text.language = Nothing
            'section.text.Text = _sText
            section.text.mediaType = Nothing

            If gloLibCCDGeneral.bIncludePrivacyText Then
                section.text.Items = New Object(3) {}
                section.text.Items(0) = New StrucDocParagraph
                DirectCast(section.text.Items(0), StrucDocParagraph).ID = Nothing
                DirectCast(section.text.Items(0), StrucDocParagraph).language = Nothing
                DirectCast(section.text.Items(0), StrucDocParagraph).Text = New String() {_sText(0)}
                section.text.Items(1) = New StrucDocParagraph
                DirectCast(section.text.Items(1), StrucDocParagraph).ID = Nothing
                DirectCast(section.text.Items(1), StrucDocParagraph).language = Nothing
                DirectCast(section.text.Items(1), StrucDocParagraph).Text = New String() {gloLibCCDGeneral.sCDAPrivacyTitle}
                section.text.Items(2) = New StrucDocParagraph
                DirectCast(section.text.Items(2), StrucDocParagraph).ID = Nothing
                DirectCast(section.text.Items(2), StrucDocParagraph).language = Nothing
                DirectCast(section.text.Items(2), StrucDocParagraph).Text = New String() {stext}
                ''section.text.Items(3) = New StrucDocParagraph
                ''DirectCast(section.text.Items(3), StrucDocParagraph).ID = Nothing
                ''DirectCast(section.text.Items(3), StrucDocParagraph).language = Nothing
                ''DirectCast(section.text.Items(3), StrucDocParagraph).Text = New String() {sVal}
            Else
                section.text.Text = _sText
            End If
            stext = ""
            sVal = ""

            'confidentialityCode
            '' section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
            ''
            Dim sconf As CE
            sconf = New CE()
            sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
            If Not IsNothing(sconf.code) Then
                section.confidentialityCode = sconf
            End If
            sconf = Nothing
            ''
            ' ''section.entry =New            

            ''entry
            section.entry = New POCD_MT000040UV02Entry(0) {}
            section.entry(0) = New POCD_MT000040UV02Entry()
            section.entry(0).typeCode = x_ActRelationshipEntry.COMP
            section.entry(0).typeCodeSpecified = True

            ''templateID
            section.entry(0).templateId = GetCDAPrivacyTemplateID(CodeSystem.entrytemplateIdroot, Nothing, Nothing, section.entry(0))

            ''organizer    
            section.entry(0).Item = New POCD_MT000040UV02Organizer()
            org = DirectCast(section.entry(0).Item, POCD_MT000040UV02Organizer)
            org.classCode = x_ActClassDocumentEntryOrganizer.CLUSTER
            org.moodCode = "EVN"
            org.moodCodeSpecified = True

            ''templateID
            org.templateId = GetCDAPrivacyTemplateID(CodeSystem.organizertemplateIdroot, Nothing, Nothing, Nothing, org)

            ''statuscode            
            org.statusCode = New CS()
            org.statusCode.code = "active"
            org.statusCode.codeSystem = Nothing
            org.statusCode.codeSystemName = Nothing
            org.statusCode.codeSystemVersion = Nothing
            org.statusCode.displayName = Nothing

            ''component 1
            org.component = New POCD_MT000040UV02Component4(3) {}
            org.component(0) = New POCD_MT000040UV02Component4()
            org.component(0).typeCode = ActRelationshipType.COMP
            org.component(0).typeCodeSpecified = True

            ''observation
            DirectCast(org.component(0), POCD_MT000040UV02Component4).Item = New POCD_MT000040UV02Observation()
            ob = DirectCast(org.component(0), POCD_MT000040UV02Component4).Item
            ob.classCode = ActClassObservation.OBS
            ob.moodCode = x_ActMoodDocumentObservation.EVN
            ob.moodCodeSpecified = True

            ''templateId
            ob.templateId = GetCDAPrivacyOBSTemplateID(CodeSystem.sobservationtemplateIdroot11, CodeSystem.sobservationtemplateIdroot12, ob)

            ''code
            ob.code = GetCDAPrivacypitemCode("SECCLASSOBS", ob)

            ''value
            ob.value = GetCDAPrivacypitemValue("R", "Restricted", "Restricted Confidentiality", ob)

            ''component 2
            ''org.component = New POCD_MT000040UV02Component4(0) {}
            org.component(1) = New POCD_MT000040UV02Component4()
            '' org.component(1).typeCode = ActRelationshipType.COMP
            org.component(1).typeCodeSpecified = False

            ''observation
            DirectCast(org.component(1), POCD_MT000040UV02Component4).Item = New POCD_MT000040UV02Observation()
            ob = DirectCast(org.component(1), POCD_MT000040UV02Component4).Item
            ob.classCode = ActClassObservation.OBS
            ob.moodCode = x_ActMoodDocumentObservation.EVN
            ob.moodCodeSpecified = True

            ''templateId
            ob.templateId = GetCDAPrivacyOBSTemplateID(CodeSystem.sobservationtemplateIdroot11, CodeSystem.sobservationtemplateIdroot15, ob)

            ''code
            ob.code = GetCDAPrivacypitemCode("SECCONOBS", ob, True)

            ''value
            ob.value = GetCDAPrivacypitemValue("ENCRYPT", "Encrypt information", "Information must be encrypted", ob)


            ''component 3
            ''org.component = New POCD_MT000040UV02Component4(0) {}
            org.component(2) = New POCD_MT000040UV02Component4()
            ''org.component(2).typeCode = ActRelationshipType.COMP
            org.component(2).typeCodeSpecified = False

            ''observation
            DirectCast(org.component(2), POCD_MT000040UV02Component4).Item = New POCD_MT000040UV02Observation()
            ob = DirectCast(org.component(2), POCD_MT000040UV02Component4).Item
            ob.classCode = ActClassObservation.OBS
            ob.moodCode = x_ActMoodDocumentObservation.EVN
            ob.moodCodeSpecified = True

            ''templateId
            ob.templateId = GetCDAPrivacyOBSTemplateID(CodeSystem.sobservationtemplateIdroot11, CodeSystem.sobservationtemplateIdroot22, ob)

            ''code
            ob.code = GetCDAPrivacypitemCode("SECCONOBS", ob, True)

            ''value
            ob.value = GetCDAPrivacypitemValue("NORDSCLCD", "Prohibition on redisclosure without patient consent directive", "Prohibition on redisclosure without patient consent directive", ob, "", "", True)

            ''component 3           
            org.component(3) = New POCD_MT000040UV02Component4()
            ''org.component(2).typeCode = ActRelationshipType.COMP
            org.component(3).typeCodeSpecified = False

            ''observation
            DirectCast(org.component(3), POCD_MT000040UV02Component4).Item = New POCD_MT000040UV02Observation()
            ob = DirectCast(org.component(3), POCD_MT000040UV02Component4).Item
            ob.classCode = ActClassObservation.OBS
            ob.moodCode = x_ActMoodDocumentObservation.EVN
            ob.moodCodeSpecified = True

            ''templateId
            ob.templateId = GetCDAPrivacyOBSTemplateID(CodeSystem.sobservationtemplateIdroot11, CodeSystem.sobservationtemplateIdroot32, ob)

            ''code
            ob.code = GetCDAPrivacypitemCode("SECCONOBS", ob, True)

            ''value
            ''ob.value = GetCDAPrivacypitemValue("TREAT", "Treatment", "Information intended for treatment", ob)
            If gloLibCCDGeneral.dvCCDAPatientPurposeofUse.Count > 0 Then
                ob.value = GetCDAPrivacypitemValue(gloLibCCDGeneral.dvCCDAPatientPurposeofUse.Table(0)(1).ToString(), gloLibCCDGeneral.dvCCDAPatientPurposeofUse.Table(0)(0).ToString(), "Information intended for " + gloLibCCDGeneral.dvCCDAPatientPurposeofUse.Table(0)(0).ToString(), ob, gloLibCCDGeneral.dvCCDAPatientPurposeofUse.Table(0)(2).ToString(), gloLibCCDGeneral.dvCCDAPatientPurposeofUse.Table(0)(3).ToString())
            Else
                ob.value = GetCDAPrivacypitemValue("TREAT", "Treatment", "Information intended for treatment", ob)
            End If


            Return _sPrivacy
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Privacy Section"
            Else
                _msgString = _msgString & vbNewLine & "Privacy Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            Return Nothing
        Finally
            section = Nothing
            _CodeSysItem = Nothing
        End Try
        '' Added by Ujwala for certification criteria - 170.315(b)(7) Data Segmentation for Privacy – Send - Start
    End Function

    Private Function GetCDAPrivacypconfidentialityCode(scode As String, Optional pitem As POCD_MT000040UV02Section = Nothing, Optional pdoc As POCD_MT000040UV02ClinicalDocument = Nothing) As CE
        Dim sretval As CE
        sretval = New CE()
        Dim _CodeSysItem As CodeSystemItem = Nothing
        ''Select Case scode
        ''    Case "Restricted"
        ''        scode = "R"
        ''    Case "Normal"
        ''        scode = "N"
        ''End Select
        _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.sconfidentialityCodesystem, scode)

        Select Case True
            Case Not (pitem Is Nothing)
                'confidentialityCode
                ''pitem.confidentialityCode = New CE()
                ''pitem.confidentialityCode.code = scode
                ''pitem.confidentialityCode.codeSystem = CodeSystem.sconfidentialityCodesystem
                ''pitem.confidentialityCode.codeSystemName = CodeSystem.sconfidentialityCodesystemname
                ''pitem.confidentialityCode.displayName = Nothing
                ''pitem.confidentialityCode.codeSystemVersion = Nothing

                If gloLibCCDGeneral.sConfidentialityCode.ToLower = "restricted" Then
                    '' verify if patient consent               
                    If gloLibCCDGeneral.dvCCDAPatientConsent.Count > 0 Then
                        '' MessageBox.Show(gloLibCCDGeneral.dvCCDAPatientConsent.ToString())
                        ''If pitem.title.Text(0).ToLower() = "insurance" Or pitem.title.Text(0).ToLower() = "social history" Or pitem.title.Text(0).ToLower() = "problems" Then
                        If Not IsNothing(pitem.title) Then
                            If isConsentexists(pitem.title.Text(0)) Then
                                If Not IsNothing(_CodeSysItem) AndAlso _CodeSysItem.Code IsNot Nothing Then
                                    pitem.confidentialityCode = New CE()
                                    pitem.confidentialityCode.code = _CodeSysItem.Code
                                    pitem.confidentialityCode.codeSystem = _CodeSysItem.CodingSystem
                                    pitem.confidentialityCode.codeSystemName = _CodeSysItem.CodingSystemName
                                    pitem.confidentialityCode.displayName = Nothing
                                    sretval = pitem.confidentialityCode
                                Else
                                    pitem.confidentialityCode = New CE()
                                    pitem.confidentialityCode.code = Nothing
                                    pitem.confidentialityCode.codeSystem = Nothing
                                    pitem.confidentialityCode.codeSystemName = Nothing
                                    pitem.confidentialityCode.displayName = Nothing
                                    sretval = pitem.confidentialityCode
                                End If
                                ''Else
                                ''    pitem.confidentialityCode = New CE()
                                ''    pitem.confidentialityCode.code = Nothing
                                ''    pitem.confidentialityCode.codeSystem = Nothing
                                ''    pitem.confidentialityCode.codeSystemName = Nothing
                                ''    pitem.confidentialityCode.displayName = "NA"
                                ''    sretval = pitem.confidentialityCode
                            End If
                        End If
                    Else
                        If Not (pitem.title Is Nothing) Then
                            If pitem.title.Text(0).ToLower() = "security and privacy prohibitions" Then
                                If Not IsNothing(_CodeSysItem) AndAlso _CodeSysItem.Code IsNot Nothing Then
                                    pitem.confidentialityCode = New CE()
                                    pitem.confidentialityCode.code = _CodeSysItem.Code
                                    pitem.confidentialityCode.codeSystem = _CodeSysItem.CodingSystem
                                    pitem.confidentialityCode.codeSystemName = _CodeSysItem.CodingSystemName
                                    pitem.confidentialityCode.displayName = Nothing
                                    sretval = pitem.confidentialityCode
                                End If
                            End If
                        End If
                    End If
                End If

            Case Not (pdoc Is Nothing)
                'confidentialityCode

                If Not IsNothing(_CodeSysItem) AndAlso _CodeSysItem.Code IsNot Nothing Then
                    pdoc.confidentialityCode = New CE()
                    pdoc.confidentialityCode.code = _CodeSysItem.Code
                    pdoc.confidentialityCode.codeSystem = _CodeSysItem.CodingSystem
                    pdoc.confidentialityCode.codeSystemName = _CodeSysItem.CodingSystemName
                    pdoc.confidentialityCode.displayName = _CodeSysItem.Description
                Else
                    pdoc.confidentialityCode = New CE()
                    pdoc.confidentialityCode.code = Nothing
                    pdoc.confidentialityCode.codeSystem = Nothing
                    pdoc.confidentialityCode.codeSystemName = Nothing
                    pdoc.confidentialityCode.displayName = Nothing
                End If

                ' ''pdoc.confidentialityCode = New CE()
                ' ''pdoc.confidentialityCode.code = scode
                ' ''pdoc.confidentialityCode.codeSystem = CodeSystem.sconfidentialityCodesystem
                ' ''pdoc.confidentialityCode.codeSystemName = CodeSystem.sconfidentialityCodesystemname
                ' ''If scode = "R" Then
                ' ''    pdoc.confidentialityCode.displayName = "Restricted"
                ' ''Else
                ' ''    pdoc.confidentialityCode.displayName = ""
                ' ''End If
                ' ''pdoc.confidentialityCode.codeSystemVersion = Nothing

                sretval = pdoc.confidentialityCode
            Case Else
                gloAuditTrail.gloAuditTrail.ExceptionLog(" values are nothing for all inputs in function GetCDAPrivacypconfidentialityCode", False)
        End Select
        _CodeSysItem = Nothing
        Return sretval
    End Function

    Private Function isConsentexists(ByVal sconsentval As String) As Boolean
        Dim sResult As Boolean = False
        If sconsentval.ToLower() = "security and privacy prohibitions" Then
            sResult = True
        End If
        If sconsentval.ToLower() = "allergies, adverse reactions, alerts" Then
            sconsentval = "medication allergies"
        End If
        If sResult = False And (sconsentval.ToLower() = "reason for visit" Or sconsentval.ToLower() = "chiefcomplaint") Then
            sconsentval = "reason of visit/chiefcomplaint"
        End If       
        If sResult = False And sconsentval.ToLower() = "order and results" Then
            sconsentval = "laboratory value(s)/result(s)"
        End If              
        If sResult = False And sconsentval.ToLower() = "history of encounters" Then
            sconsentval = "encounter diagnosis"
        End If
        If sResult = False And sconsentval.ToLower() = "instructions" Then
            sconsentval = "clinical instructions"
        End If
        If sResult = False And sconsentval.ToLower() = "history of immunizations" Then
            sconsentval = "immunizations"
        End If
        If sResult = False And sconsentval.ToLower() = "plan of treatment" Then
            sconsentval = "treatment plan"
        End If
        If sResult = False And sconsentval.ToLower() = "medications administered during visit" Then
            sconsentval = "medications administered during the visit"
        End If
        If sResult = False And gloLibCCDGeneral.dvCCDAPatientConsent.Count > 0 Then
            gloLibCCDGeneral.dvCCDAPatientConsent.Sort = "sSectionName ASC"
            If gloLibCCDGeneral.dvCCDAPatientConsent.FindRows(sconsentval).Length > 0 Then
                sResult = True
            End If
        End If
        Return sResult
    End Function
    Private Function GetCDAPrivacypitemCode(scode As String, pitem As POCD_MT000040UV02Observation, Optional ByVal isS2 As Boolean = False) As CD
        Select Case True
            Case Not (pitem Is Nothing)
                pitem.code = New CD()
                pitem.code.code = scode
                If isS2 = False Then
                    pitem.code.codeSystem = "2.16.840.1.113883.1.11.20471"
                    pitem.code.displayName = "Security Category"
                Else
                    pitem.code.codeSystem = "2.16.840.1.113883.1.11.20457"
                    pitem.code.displayName = "Security Classification"
                End If

                pitem.code.codeSystemVersion = Nothing

                pitem.code.codeSystemName = "HL7 SecurityObservationTypeCodeSystem"

            Case Else
                gloAuditTrail.gloAuditTrail.ExceptionLog(" values are nothing for all inputs in function GetCDAPrivacypitemCode", False)
        End Select

        Return pitem.code
    End Function

    Private Function GetCDAPrivacypitemValue(scode As String, sdispname As String, sorgtext As String, pitem As POCD_MT000040UV02Observation, Optional ByVal scodesystem As String = "", Optional ByVal scodesystemName As String = "", Optional biscode2 As Boolean = False) As ANY()
        Select Case True
            Case Not (pitem Is Nothing)
                pitem.value = New ANY(0) {}
                pitem.value(0) = New CE()
                DirectCast(pitem.value(0), CE).code = scode
                If biscode2 = False Then
                    If scodesystem = "" Then
                        scodesystem = CodeSystem.sobservationvaluecodesystem
                    End If
                Else
                    If scodesystem = "" Then
                        scodesystem = CodeSystem.sobservationvaluecodesystem1
                    End If
                    ''If scodesystemName = "" Then
                    ''    scodesystemName = CodeSystem.sobservationvaluecodesystemname
                    ''End If
                End If
                If scodesystemName = "" Then
                    scodesystemName = CodeSystem.sobservationvaluecodesystemname
                End If
                DirectCast(pitem.value(0), CE).codeSystem = scodesystem
                DirectCast(pitem.value(0), CE).codeSystemName = scodesystemName
                DirectCast(pitem.value(0), CE).codeSystemVersion = Nothing
                DirectCast(pitem.value(0), CE).displayName = sdispname
                DirectCast(pitem.value(0), CE).originalText = New ED()
                DirectCast(pitem.value(0), CE).originalText.Text = New String() {(sorgtext).Trim()}
                DirectCast(pitem.value(0), CE).originalText.mediaType = Nothing
                DirectCast(pitem.value(0), CE).originalText.representation = Nothing
                DirectCast(pitem.value(0), CE).originalText.language = Nothing

            Case Else
                gloAuditTrail.gloAuditTrail.ExceptionLog(" values are nothing for all inputs in function GetCDAPrivacypitemValue", False)
        End Select

        Return pitem.value
    End Function

    Private Function GetCDAPrivacyOBSTemplateID(rootitem1 As String, rootitem2 As String, pitem As POCD_MT000040UV02Observation) As II()
        Select Case True
            Case Not (pitem Is Nothing)
                pitem.templateId = New II(2) {}
                pitem.templateId(0) = New II()
                pitem.templateId(0).root = rootitem1
                pitem.templateId(0).extension = Nothing
                ''pitem.templateId(0).assigningAuthorityName = "HL7 CBCC"

                pitem.templateId(1) = New II()
                pitem.templateId(1).root = rootitem2
                pitem.templateId(1).extension = Nothing
                ''pitem.templateId(1).assigningAuthorityName = "HL7 CBCC"

            Case Else
                gloAuditTrail.gloAuditTrail.ExceptionLog(" values are nothing for all inputs in function GetCDAPrivacyOBSTemplateID", False)
        End Select

        Return pitem.templateId
    End Function


    Private Function GetCDAPrivacyTemplateID(rootitem As String, Optional pitem As POCD_MT000040UV02Author = Nothing, Optional pitem1 As POCD_MT000040UV02AssignedAuthor = Nothing, Optional pentry As POCD_MT000040UV02Entry = Nothing, Optional porg As POCD_MT000040UV02Organizer = Nothing, Optional psection As POCD_MT000040UV02Section = Nothing) As II()
        Dim sretval As II()
        sretval = New II(0) {}

        Select Case True
            Case Not (pitem Is Nothing)
                pitem.templateId = New II(0) {}
                pitem.templateId(0) = New II()
                pitem.templateId(0).root = rootitem
                If gloLibCCDGeneral.sConfidentialityCode.ToLower = "restricted" Then
                    pitem.templateId(0).assigningAuthorityName = "HL7 Security"
                End If

                sretval = pitem.templateId
            Case Not (pitem1 Is Nothing)
                pitem1.templateId = New II(0) {}
                pitem1.templateId(0) = New II()
                pitem1.templateId(0).root = rootitem
                If gloLibCCDGeneral.sConfidentialityCode.ToLower = "restricted" Then
                    pitem1.templateId(0).assigningAuthorityName = "HL7 Security"
                End If
                sretval = pitem1.templateId
            Case Not (pentry Is Nothing)
                pentry.templateId = New II(0) {}
                pentry.templateId(0) = New II()
                pentry.templateId(0).root = rootitem
                pentry.templateId(0).extension = Nothing
                If gloLibCCDGeneral.sConfidentialityCode.ToLower = "restricted" Then
                    pentry.templateId(0).assigningAuthorityName = "HL7 Security"
                End If
                sretval = pentry.templateId
            Case Not (porg Is Nothing)
                porg.templateId = New II(0) {}
                porg.templateId(0) = New II()
                porg.templateId(0).root = rootitem
                porg.templateId(0).extension = Nothing
                If gloLibCCDGeneral.sConfidentialityCode.ToLower = "restricted" Then
                    porg.templateId(0).assigningAuthorityName = "HL7 Security"
                End If
                sretval = porg.templateId
            Case Not (psection Is Nothing)
                psection.templateId = New II(0) {}
                psection.templateId(0) = New II()
                psection.templateId(0).root = rootitem
                If gloLibCCDGeneral.sConfidentialityCode.ToLower = "restricted" Then
                    psection.templateId(0).assigningAuthorityName = "HL7 Security"
                End If
                sretval = psection.templateId
            Case Else
                gloAuditTrail.gloAuditTrail.ExceptionLog(" values are nothing for all inputs in function GetCDAPrivacyTemplateID", False)
        End Select

        Return sretval
    End Function

    Private Function GetCDAPrivacyAuthor() As POCD_MT000040UV02Author
        Dim _author As POCD_MT000040UV02Author()
        Dim _person As POCD_MT000040UV02Person = Nothing
        Dim oAuthor As gloCCDLibrary.PatientAuthor = Nothing
        Try

            If IsNothing(mPatient.Author) Then
                Return Nothing
            Else
                oAuthor = mPatient.Author
            End If
            'Author
            _author = New POCD_MT000040UV02Author(0) {}

            _author(0) = New POCD_MT000040UV02Author
            _author(0).typeCode = Nothing
            _author(0).typeCodeSpecified = False
            _author(0).contextControlCode = Nothing

            _author(0).templateId = GetCDAPrivacyTemplateID(CodeSystem.AuthortemplateId1root, _author(0), Nothing)

            _author(0).time = New TS()

            _author(0).time.value = DateTime.Now.ToString("yyyyMMddhhmmss") & Replace(DateTime.Now.ToString("zzzz"), ":", "")
            _author(0).assignedAuthor = New POCD_MT000040UV02AssignedAuthor()
            _author(0).assignedAuthor.classCode = Nothing
            _author(0).assignedAuthor.classCodeSpecified = False

            _author(0).assignedAuthor.templateId = GetCDAPrivacyTemplateID(CodeSystem.sassignedAuthortemplateIdroot, Nothing, _author(0).assignedAuthor)

            _author(0).assignedAuthor.id = New II(0) {}
            _author(0).assignedAuthor.id(0) = New II()
            ''If oAuthor.PersonName IsNot Nothing AndAlso oAuthor.PersonName.Code IsNot Nothing AndAlso oAuthor.PersonName.Code <> "" Then
            ''    _author(0).assignedAuthor.id(0).extension = oAuthor.PersonName.ID               
            ''Else
            ''    _author(0).assignedAuthor.id(0).extension = "111111"
            ''End If
            _author(0).assignedAuthor.id(0).extension = "111111"
            _author(0).assignedAuthor.id(0).root = CodeSystem.assignedAuthoridroot ''"2.16.840.1.113883.4.6"


            '' '' oTaxonomy code 
            ''_author(0).assignedAuthor.code = New CE()
            '' ''_author(0).assignedAuthor.code.nullFlavor = "NI"
            ''_author(0).assignedAuthor.code.code = oAuthor.PersonName.TaxonomyCode
            ''_author(0).assignedAuthor.code.codeSystem = "2.16.840.1.113883.6.101"
            ''_author(0).assignedAuthor.code.displayName = oAuthor.PersonName.TaxonomyDesc

            '' oTaxonomy code 
            _author(0).assignedAuthor.code = New CE()
            If oAuthor.PersonName.TaxonomyCode <> "" AndAlso oAuthor.PersonName.TaxonomyDesc <> "" Then
                _author(0).assignedAuthor.code.code = oAuthor.PersonName.TaxonomyCode
                _author(0).assignedAuthor.code.codeSystem = "2.16.840.1.113883.6.101"
                _author(0).assignedAuthor.code.displayName = oAuthor.PersonName.TaxonomyDesc
            Else
                _author(0).assignedAuthor.code.nullFlavor = "NI"
                _author(0).assignedAuthor.code.code = Nothing
                _author(0).assignedAuthor.code.codeSystem = Nothing
                _author(0).assignedAuthor.code.displayName = Nothing
            End If
            ''

            '' for addr section
            _author(0).assignedAuthor.addr = New AD(0) {}
            _author(0).assignedAuthor.addr(0) = New AD()
            ''_author(0).assignedAuthor.addr(0).use = New PostalAddressUse(0) {}
            ''_author(0).assignedAuthor.addr(0).use(0) = PostalAddressUse.WP

            _author(0).assignedAuthor.addr(0).Items = New ADXP(4) {}
            'StreetAddress
            _author(0).assignedAuthor.addr(0).Items(0) = New adxpstreetAddressLine()
            _author(0).assignedAuthor.addr(0).Items(0).language = Nothing
            _author(0).assignedAuthor.addr(0).Items(0).partType = Nothing
            If oAuthor.PersonContactAddress IsNot Nothing AndAlso oAuthor.PersonContactAddress.Street IsNot Nothing AndAlso oAuthor.PersonContactAddress.Street <> "" Then
                _author(0).assignedAuthor.addr(0).Items(0).Text = New String() {oAuthor.PersonContactAddress.Street.Trim}
            Else
                _author(0).assignedAuthor.addr(0).Items(0).Text = Nothing
                _author(0).assignedAuthor.addr(0).Items(0).nullFlavor = "NA"

            End If

            'City
            _author(0).assignedAuthor.addr(0).Items(1) = New adxpcity()
            _author(0).assignedAuthor.addr(0).Items(1).language = Nothing
            _author(0).assignedAuthor.addr(0).Items(1).partType = Nothing
            If oAuthor.PersonContactAddress IsNot Nothing AndAlso oAuthor.PersonContactAddress.City IsNot Nothing AndAlso oAuthor.PersonContactAddress.City <> "" Then
                _author(0).assignedAuthor.addr(0).Items(1).Text = New String() {oAuthor.PersonContactAddress.City}
            Else
                _author(0).assignedAuthor.addr(0).Items(1).Text = Nothing
                _author(0).assignedAuthor.addr(0).Items(1).nullFlavor = "NA"
            End If

            'State
            _author(0).assignedAuthor.addr(0).Items(2) = New adxpstate()
            _author(0).assignedAuthor.addr(0).Items(2).language = Nothing
            _author(0).assignedAuthor.addr(0).Items(2).partType = Nothing
            If oAuthor.PersonContactAddress IsNot Nothing AndAlso oAuthor.PersonContactAddress.State IsNot Nothing AndAlso oAuthor.PersonContactAddress.State <> "" Then
                _author(0).assignedAuthor.addr(0).Items(2).Text = New String() {oAuthor.PersonContactAddress.State}
            Else
                _author(0).assignedAuthor.addr(0).Items(2).Text = Nothing
                _author(0).assignedAuthor.addr(0).Items(2).nullFlavor = "NA"
            End If

            'Zip Code
            _author(0).assignedAuthor.addr(0).Items(3) = New adxppostalCode()
            _author(0).assignedAuthor.addr(0).Items(3).language = Nothing
            _author(0).assignedAuthor.addr(0).Items(3).partType = Nothing
            If oAuthor.PersonContactAddress IsNot Nothing AndAlso oAuthor.PersonContactAddress.Zip IsNot Nothing AndAlso oAuthor.PersonContactAddress.Zip <> "" Then
                _author(0).assignedAuthor.addr(0).Items(3).Text = New String() {oAuthor.PersonContactAddress.Zip}
            Else
                _author(0).assignedAuthor.addr(0).Items(3).Text = Nothing
                _author(0).assignedAuthor.addr(0).Items(3).nullFlavor = "NA"
            End If

            '  _author(0).assignedAuthor.addr(0).Items(4) = Nothing
            'country
            _author(0).assignedAuthor.addr(0).Items(4) = New adxpcountry()
            _author(0).assignedAuthor.addr(0).Items(4).language = Nothing
            _author(0).assignedAuthor.addr(0).Items(4).partType = Nothing
            If oAuthor.PersonContactAddress IsNot Nothing AndAlso oAuthor.PersonContactAddress.Country IsNot Nothing AndAlso oAuthor.PersonContactAddress.Country <> "" Then
                _author(0).assignedAuthor.addr(0).Items(4).Text = New String() {oAuthor.PersonContactAddress.Country}
            Else
                _author(0).assignedAuthor.addr(0).Items(4).Text = Nothing
                ''_author(0).assignedAuthor.addr(0).Items(4).nullFlavor = "NA"
            End If

            ''telecom
            _author(0).assignedAuthor.telecom = New TEL(0) {}
            _author(0).assignedAuthor.telecom(0) = New TEL()
            _author(0).assignedAuthor.telecom(0).use = New TelecommunicationAddressUse(0) {}
            _author(0).assignedAuthor.telecom(0).use(0) = TelecommunicationAddressUse.WP
            If oAuthor.Phone IsNot Nothing AndAlso oAuthor.Phone <> "" Then
                _author(0).assignedAuthor.telecom(0).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(oAuthor.Phone))
            Else
                _author(0).assignedAuthor.telecom(0).nullFlavor = "NI"
                _author(0).assignedAuthor.telecom(0).value = Nothing
            End If

            ''assignedPerson
            _author(0).assignedAuthor.Item = New POCD_MT000040UV02Person
            _person = DirectCast(_author(0).assignedAuthor.Item, POCD_MT000040UV02Person)
            _person.classCode = Nothing
            _person.classCodeSpecified = False
            _person.determinerCode = Nothing
            _person.name = New PN(0) {}
            _person.name(0) = New PN()
            _person.name(0).Items = New ENXP(4) {}
            If oAuthor.PersonName IsNot Nothing AndAlso oAuthor.PersonName.Prefix IsNot Nothing AndAlso oAuthor.PersonName.Prefix <> "" Then
                _person.name(0).Items(0) = New enprefix()
                _person.name(0).Items(0).Text = New String() {oAuthor.PersonName.Prefix}
                _person.name(0).Items(0).language = Nothing
                _person.name(0).Items(0).partType = Nothing
            Else
                _person.name(0).Items(0) = Nothing
            End If
            If oAuthor.PersonName IsNot Nothing AndAlso oAuthor.PersonName.FirstName IsNot Nothing AndAlso oAuthor.PersonName.FirstName <> "" Then
                _person.name(0).Items(1) = New engiven()
                _person.name(0).Items(1).Text = New String() {oAuthor.PersonName.FirstName}
                _person.name(0).Items(1).language = Nothing
                _person.name(0).Items(1).partType = Nothing
            Else
                _person.name(0).Items(1) = Nothing
            End If
            If oAuthor.PersonName IsNot Nothing AndAlso oAuthor.PersonName.MiddleName IsNot Nothing AndAlso oAuthor.PersonName.MiddleName <> "" Then
                _person.name(0).Items(2) = New engiven()
                _person.name(0).Items(2).Text = New String() {oAuthor.PersonName.MiddleName}
                _person.name(0).Items(2).language = Nothing
                _person.name(0).Items(2).partType = Nothing
            Else
                _person.name(0).Items(2) = Nothing
            End If

            If oAuthor.PersonName IsNot Nothing AndAlso oAuthor.PersonName.LastName IsNot Nothing AndAlso oAuthor.PersonName.LastName <> "" Then
                _person.name(0).Items(3) = New enfamily()
                _person.name(0).Items(3).Text = New String() {oAuthor.PersonName.LastName}
                _person.name(0).Items(3).language = Nothing
                _person.name(0).Items(3).partType = Nothing
            Else
                _person.name(0).Items(3) = Nothing
            End If

            If oAuthor.PersonName IsNot Nothing AndAlso oAuthor.PersonName.Suffix IsNot Nothing AndAlso oAuthor.PersonName.Suffix <> "" Then
                _person.name(0).Items(4) = New ensuffix()
                _person.name(0).Items(4).Text = New String() {oAuthor.PersonName.Suffix}
                _person.name(0).Items(4).language = Nothing
                _person.name(0).Items(4).partType = Nothing
            Else
                _person.name(0).Items(4) = Nothing
            End If

            ''representedOrganization
            _author(0).assignedAuthor.representedOrganization = New POCD_MT000040UV02Organization
            _author(0).assignedAuthor.representedOrganization.id = New II(0) {}
            _author(0).assignedAuthor.representedOrganization.id(0) = New II()
            _author(0).assignedAuthor.representedOrganization.classCodeSpecified = False
            _author(0).assignedAuthor.representedOrganization.id(0).root = CodeSystem.representedOrganizationidroot ''"2.16.840.1.113883.19.5"
            _author(0).assignedAuthor.representedOrganization.id(0).assigningAuthorityName = Nothing
            _author(0).assignedAuthor.representedOrganization.name = New [ON](0) {}
            _author(0).assignedAuthor.representedOrganization.name(0) = New [ON]
            _author(0).assignedAuthor.representedOrganization.name(0).Text = New String() {mPatient.Clinic.ClinicName}
            _author(0).assignedAuthor.representedOrganization.classCode = Nothing

            Return _author(0)
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "GetCDAPrivacyAuthor Author Section"
            Else
                _msgString = _msgString & vbNewLine & "GetCDAPrivacyAuthor Author Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            '  MessageBox.Show("Error:" & ex.ToString())
            Return Nothing
        Finally
            If Not IsNothing(oAuthor) Then
                oAuthor.Dispose()
                oAuthor = Nothing
            End If
            _person = Nothing

        End Try
    End Function

    Private Function GetCDAImplantProcedure() As POCD_MT000040UV02Component3


        Try


            Dim table As StrucDocTable = Nothing
            Dim _CodeSysItem As CodeSystemItem = Nothing
            Dim MedicalComponent As POCD_MT000040UV02Component3 = Nothing
            MedicalComponent = New POCD_MT000040UV02Component3
            MedicalComponent.section = New POCD_MT000040UV02Section
            MedicalComponent.section.templateId = New II(3) {}
            MedicalComponent.section.templateId(0) = New II()
            MedicalComponent.section.templateId(0).root = oTemplateIDMaster.GetSectionID("Implants")
            MedicalComponent.section.templateId(0).extension = Nothing
            MedicalComponent.section.templateId(0).assigningAuthorityName = Nothing

            MedicalComponent.section.templateId(1) = New II()
            MedicalComponent.section.templateId(1).root = oTemplateIDMaster.GetSectionID("Implants")
            MedicalComponent.section.templateId(1).extension = _DateExtension22
            MedicalComponent.section.templateId(1).assigningAuthorityName = Nothing

            MedicalComponent.section.templateId(2) = New II()
            MedicalComponent.section.templateId(2).root = oTemplateIDMaster.GetSectionID("Implants")
            MedicalComponent.section.templateId(2).extension = Nothing
            MedicalComponent.section.templateId(2).assigningAuthorityName = Nothing

            MedicalComponent.section.code = New CE()
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Medical Equipment")
            If Not IsNothing(_CodeSysItem) Then
                MedicalComponent.section.code.code = _CodeSysItem.Code
                MedicalComponent.section.code.codeSystem = _CodeSysItem.CodingSystem
                MedicalComponent.section.code.codeSystemName = _CodeSysItem.CodingSystemName
                MedicalComponent.section.code.displayName = _CodeSysItem.Description
            End If
            MedicalComponent.section.title = New ST()
            MedicalComponent.section.title.Text = New String() {"Implants"}
            MedicalComponent.section.title.language = Nothing
            MedicalComponent.section.text = New StrucDocText()
            MedicalComponent.section.text.mediaType = Nothing
            MedicalComponent.section.text.ID = Nothing
            MedicalComponent.section.text.language = Nothing
            ''
            Dim sconf As CE
            sconf = New CE()
            sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, MedicalComponent.section)
            If Not IsNothing(sconf.code) Then
                MedicalComponent.section.confidentialityCode = sconf
            End If
            sconf = Nothing
            ''
            If CDAWritingParams.Implant = True Then
                If Not IsNothing(mPatient.ImplantCol) AndAlso mPatient.ImplantCol.implants.Count > 0 Then
                    MedicalComponent.section.text.Items = New Object(0) {}
                    MedicalComponent.section.text.Items(0) = New StrucDocTable
                    table = DirectCast(MedicalComponent.section.text.Items(0), StrucDocTable)
                    table.ID = Nothing
                    table.language = Nothing
                    table.border = "1"
                    table.width = "100%"
                    table.thead = New StrucDocThead()
                    table.thead.ID = Nothing
                    table.thead.language = Nothing
                    table.thead.tr = New StrucDocTr(0) {}
                    table.thead.tr(0) = New StrucDocTr()
                    table.thead.tr(0).ID = Nothing
                    table.thead.tr(0).language = Nothing
                    table.thead.tr(0).Items = New Object(5) {}


                    table.thead.tr(0).Items(0) = New StrucDocTh()
                    'DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Functional and Cognitive Status"}
                    DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Implanted"}
                    DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing

                    table.thead.tr(0).Items(1) = New StrucDocTh()
                    'DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Area"}
                    'DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                    'DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing
                    DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"UDI"}
                    DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing

                    table.thead.tr(0).Items(2) = New StrucDocTh()
                    'DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"UDI"}
                    'DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                    'DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing
                    DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Implant Date"}
                    DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing

                    table.thead.tr(0).Items(3) = New StrucDocTh()
                    'DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"UDI"}
                    'DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                    'DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing
                    DirectCast(table.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Assigning Authority"}
                    DirectCast(table.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(3), StrucDocTh).language = Nothing


                    table.thead.tr(0).Items(4) = New StrucDocTh()
                    'DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"UDI"}
                    'DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                    'DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing
                    DirectCast(table.thead.tr(0).Items(4), StrucDocTh).Text = New String() {"Scoping Entity"}
                    DirectCast(table.thead.tr(0).Items(4), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(4), StrucDocTh).language = Nothing

                    'table.thead.tr(0).Items(3) = New StrucDocTh()
                    'DirectCast(table.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Implant Date"}
                    'DirectCast(table.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                    'DirectCast(table.thead.tr(0).Items(3), StrucDocTh).language = Nothing

                    table.tbody = New StrucDocTbody(0) {}
                    table.tbody(0) = New StrucDocTbody()
                    table.tbody(0).ID = Nothing
                    table.tbody(0).language = Nothing
                    table.tbody(0).tr = New StrucDocTr(0) {}
                    table.tbody(0).tr(0) = New StrucDocTr()
                    table.tbody(0).tr(0).ID = Nothing
                    table.tbody(0).tr(0).language = Nothing
                    table.tbody(0).tr(0).Items = New Object(2) {}
                    table.tbody(0).tr(0).Items(0) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing
                    table.tbody(0).tr = New StrucDocTr(mPatient.ImplantCol.implants.Count - 1) {}

                    For cnt As Integer = 0 To mPatient.ImplantCol.implants.Count - 1
                        Dim oimplant As Implant = mPatient.ImplantCol.implants.Item(cnt)
                        table.tbody(0).tr(cnt) = New StrucDocTr()
                        table.tbody(0).tr(cnt).ID = Nothing
                        table.tbody(0).tr(cnt).language = Nothing
                        table.tbody(0).tr(cnt).Items = New Object(5) {}
                        table.tbody(0).tr(cnt).Items(0) = New StrucDocTd()

                        DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).ID = "implant" & cnt + 1
                        DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).language = Nothing
                        If oimplant.Device_Description IsNot Nothing AndAlso oimplant.Device_Description <> "" Then
                            DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Text = New String() {oimplant.Device_Description}
                        Else
                            DirectCast(table.tbody(0).tr(cnt).Items(0), StrucDocTd).Text = Nothing
                        End If

                        table.tbody(0).tr(cnt).Items(1) = New StrucDocTd()
                        DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).ID = Nothing
                        DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).language = Nothing
                        If oimplant.UDI IsNot Nothing AndAlso oimplant.UDI <> "" Then
                            DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).Text = New String() {oimplant.UDI}
                        Else
                            DirectCast(table.tbody(0).tr(cnt).Items(1), StrucDocTd).Text = Nothing
                        End If

                        table.tbody(0).tr(cnt).Items(2) = New StrucDocTd()
                        DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).ID = Nothing
                        DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).language = Nothing
                        If oimplant.ImplantDate IsNot Nothing AndAlso oimplant.ImplantDate <> "" Then
                            DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).Text = New String() {oimplant.ImplantDate}
                        Else
                            DirectCast(table.tbody(0).tr(cnt).Items(2), StrucDocTd).Text = Nothing
                        End If

                        table.tbody(0).tr(cnt).Items(3) = New StrucDocTd()
                        DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).ID = Nothing
                        DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).language = Nothing
                        table.tbody(0).tr(cnt).Items(4) = New StrucDocTd()
                        DirectCast(table.tbody(0).tr(cnt).Items(4), StrucDocTd).ID = Nothing
                        DirectCast(table.tbody(0).tr(cnt).Items(4), StrucDocTd).language = Nothing
                        If oimplant.ISUDI = True Then
                            DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).Text = New String() {"FDA"}
                            DirectCast(table.tbody(0).tr(cnt).Items(4), StrucDocTd).Text = New String() {"FDA"}
                        Else
                            Select Case Convert.ToString(oimplant.IssueingAgency).ToUpper
                                Case "GS1"
                                    DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).Text = New String() {"GS1"}
                                    DirectCast(table.tbody(0).tr(cnt).Items(4), StrucDocTd).Text = New String() {"GS1"}
                                Case "HIBCC "
                                    DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).Text = New String() {"HIBCC"}
                                    DirectCast(table.tbody(0).tr(cnt).Items(4), StrucDocTd).Text = New String() {"HIBCC"}
                                Case "ICCBBA"
                                    If oimplant.ISBloodContainer = True Then
                                        DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).Text = New String() {"ICCBBAb"}
                                        DirectCast(table.tbody(0).tr(cnt).Items(4), StrucDocTd).Text = New String() {"ICCBBAb"}
                                    Else
                                        DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).Text = New String() {"ICCBBAo"}
                                        DirectCast(table.tbody(0).tr(cnt).Items(4), StrucDocTd).Text = New String() {"ICCBBAo"}
                                    End If
                            End Select
                        End If
                    Next
                    'table.tbody(0).tr(cnt).Items(3) = New StrucDocTd()
                    'DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).ID = Nothing
                    'DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).language = Nothing
                    'If oimplant.ImplantDate IsNot Nothing AndAlso oimplant.ImplantDate <> "" Then
                    '    DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).Text = New String() {oimplant.ImplantDate}
                    'Else
                    '    DirectCast(table.tbody(0).tr(cnt).Items(3), StrucDocTd).Text = Nothing
                    'End If


                    MedicalComponent.section.entry = New POCD_MT000040UV02Entry(mPatient.ImplantCol.implants.Count - 1) {}
                    For cnt As Integer = 0 To mPatient.ImplantCol.implants.Count - 1
                        Dim oimplant As Implant = mPatient.ImplantCol.implants.Item(cnt)
                        Dim entry As POCD_MT000040UV02Entry = Nothing

                        MedicalComponent.section.entry(cnt) = New POCD_MT000040UV02Entry()
                        entry = DirectCast(MedicalComponent.section.entry(cnt), POCD_MT000040UV02Entry)
                        entry.Item = New POCD_MT000040UV02Procedure
                        Dim proc As POCD_MT000040UV02Procedure
                        proc = DirectCast(entry.Item, POCD_MT000040UV02Procedure)
                        proc.classCode = Convert.ToString(ActClassProcedure.PROC)
                        proc.moodCodeSpecified = True
                        proc.moodCode = Convert.ToString(x_DocumentProcedureMood.EVN)
                        proc.templateId = New II(1) {}
                        proc.templateId(0) = New II
                        proc.templateId(0).root = oTemplateIDMaster.GetEntryID("Procedure Activity Procedure")
                        proc.templateId(0).extension = _DateExtension22
                        proc.templateId(0).assigningAuthorityName = Nothing

                        proc.templateId(1) = New II
                        proc.templateId(1).root = oTemplateIDMaster.GetEntryID("Procedure Activity Procedure")
                        proc.templateId(1).extension = Nothing
                        proc.templateId(1).assigningAuthorityName = Nothing

                        proc.id = New II(1) {}
                        proc.id(0) = New II()
                        proc.id(0).root = Guid.NewGuid.ToString()
                        proc.code = New CD()

                        Dim procedurefound As Boolean = False
                        proc.statusCode = New CS()

                        For Each pro As Procedures In mPatient.PatientProcedures
                            If pro.ImplantDeviceId = oimplant.DeviceID Then
                                If pro.SnomedCode <> "" Then
                                    proc.code.code = pro.SnomedCode
                                    proc.code.codeSystem = CodeSystem.SNOMED_CT
                                    proc.code.codeSystemName = "SNOMED-CT"
                                    proc.code.displayName = pro.SnomedDescription
                                ElseIf pro.ICD9_code <> "" Then
                                    proc.code.code = pro.ICD9_code
                                    If pro.ICDRevision = 9 Then
                                        proc.code.codeSystem = CodeSystem.ICD9
                                        proc.code.codeSystemName = "ICD-9"
                                    Else
                                        proc.code.codeSystem = CodeSystem.ICD9
                                        proc.code.codeSystemName = "ICD-10"
                                    End If
                                    proc.code.displayName = pro.ICD9Description
                                ElseIf pro.CPTCode <> "" Then
                                    proc.code.code = pro.CPTCode
                                    proc.code.codeSystem = CodeSystem.CPT
                                    proc.code.codeSystemName = "CPT"
                                    proc.code.displayName = pro.CPTDescription
                                End If
                                proc.statusCode.code = pro.Status
                                procedurefound = True
                                Exit For
                            End If

                        Next
                        If procedurefound = False Then
                            proc.code.nullFlavorSpecified = True
                            proc.code.nullFlavor = "UNK"
                            proc.code.code = Nothing
                            proc.code.codeSystem = Nothing
                            proc.code.codeSystemName = Nothing
                            proc.code.displayName = Nothing
                            proc.statusCode.code = "completed"
                        End If
                        If Not IsNothing(oimplant.ImplantDate) AndAlso oimplant.ImplantDate <> "" Then
                            proc.effectiveTime = New IVL_TS()
                            proc.effectiveTime.ItemsElementName = New ItemsChoiceType2(1) {}
                            proc.effectiveTime.ItemsElementName(0) = ItemsChoiceType2.low
                            proc.effectiveTime.ItemsElementName(1) = ItemsChoiceType2.high
                            proc.effectiveTime.Items = New QTY(1) {}
                            proc.effectiveTime.Items(0) = New IVXB_TS()
                            DirectCast(proc.effectiveTime.Items(0), IVXB_TS).value = Format(CType(oimplant.ImplantDate, Date), "yyyyMMdd")
                        End If

                      
                        proc.participant = New POCD_MT000040UV02Participant3(1) {}
                        proc.participant(0) = New POCD_MT000040UV02Participant3
                        getImplantProductInstance(proc.participant(0), oimplant, cnt)
                    Next

                Else
                    'MedicalComponent.section.text.Text = {"Patient has no history of implantable devices"}
                    'getNoProcedure(MedicalComponent)
                    If Not IsNothing(dtsec) Then

                        Dim dr As DataRow() = dtsec.Select("sSectionName='Implants'")
                        If (dr.Length = 0) Then


                            MedicalComponent.section = NoInformationSection("Implants", "Implants")
                            SetCodeforImplantNoInformation(MedicalComponent.section)
                            MedicalComponent.section.text.Text = New String() {"No Information for Patient"}
                            'MedicalComponent.section.text = New StrucDocText()
                            'MedicalComponent.section.text.Text = New String() {"No Information for Patient"}
                            'MedicalComponent.section.title = New ST()
                            'MedicalComponent.section.title.Text = New String() {"Implants"}
                        ElseIf dr(0)(1) = "0" Then


                            MedicalComponent.section = NoInformationSection("Implants", "Implants")
                            SetCodeforImplantNoInformation(MedicalComponent.section)
                            MedicalComponent.section.text.Text = New String() {"No Information for Patient"}
                            '  MedicalComponent.section = NoInformationSection("Implants", "Implants")
                            'MedicalComponent.section.text = New StrucDocText()
                            'MedicalComponent.section.text.Text = New String() {"No Information for Patient"}
                            'MedicalComponent.section.title = New ST()
                            'MedicalComponent.section.title.Text = New String() {"Implants"}
                        Else

                            MedicalComponent.section.text.Text = New String() {"Patient has no Known  implantable devices"}

                            getNoProcedure(MedicalComponent)

                        End If
                    Else
                        MedicalComponent.section = NoInformationSection("Implants", "Implants")
                        SetCodeforImplantNoInformation(MedicalComponent.section)
                        MedicalComponent.section.text.Text = New String() {"No Information for Patient"}

                        '       MedicalComponent.section.text.Text = New String() {"No Information for Patient"}
                    End If

                End If
            Else
                'MedicalComponent.section.text.Text = {"Patient has no history of implantable devices"}
                'getNoProcedure(MedicalComponent)
                If Not IsNothing(dtsec) Then

                    Dim dr As DataRow() = dtsec.Select("sSectionName='Implants'")
                    If (dr.Length = 0) Then
                        MedicalComponent.section = NoInformationSection("Implants", "Implants")
                        SetCodeforImplantNoInformation(MedicalComponent.section)
                        MedicalComponent.section.text.Text = New String() {"No Information for Patient"}
                        '    MedicalComponent.section.text.Text = New String() {"No Information for Patient"}
                    ElseIf dr(0)(1) = "0" Then
                        MedicalComponent.section = NoInformationSection("Implants", "Implants")
                        SetCodeforImplantNoInformation(MedicalComponent.section)
                        MedicalComponent.section.text.Text = New String() {"No Information for Patient"}
                    Else

                        MedicalComponent.section.text.Text = New String() {"Patient has no Known  implantable devices"}

                        getNoProcedure(MedicalComponent)

                    End If
                Else
                    MedicalComponent.section = NoInformationSection("Implants", "Implants")
                    SetCodeforImplantNoInformation(MedicalComponent.section)
                    MedicalComponent.section.text.Text = New String() {"No Information for Patient"}

                End If
                'MedicalComponent.section.text.Text = {"Patient has no history of implantable devices"}
                'getNoProcedure(MedicalComponent)
            End If
            Return MedicalComponent
        Catch ex As Exception
            Return Nothing
        End Try
    End Function
    Private Sub SetCodeforImplantNoInformation(ByRef section As POCD_MT000040UV02Section)
        Dim _CodeSysItem As CodeSystemItem = Nothing
        section.templateId = New II(2) {}
        section.templateId(0) = New II()
        section.templateId(0).root = oTemplateIDMaster.GetSectionID("Implants")
        section.templateId(0).extension = Nothing
        section.templateId(0).assigningAuthorityName = Nothing

        section.templateId(1) = New II()
        section.templateId(1).root = oTemplateIDMaster.GetSectionID("Implants")
        section.templateId(1).extension = _DateExtension22
        section.templateId(1).assigningAuthorityName = Nothing

        section.code = New CE()
        _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Medical Equipment")
        If Not IsNothing(_CodeSysItem) Then
            section.code.code = _CodeSysItem.Code
            section.code.codeSystem = _CodeSysItem.CodingSystem
            section.code.codeSystemName = _CodeSysItem.CodingSystemName
            section.code.displayName = _CodeSysItem.Description
        End If
    End Sub
    Public Sub getNoProcedure(ByRef Component As POCD_MT000040UV02Component3)
        Dim _CodeSysItem As CodeSystemItem = Nothing
        Dim entry As POCD_MT000040UV02Entry = Nothing
        Component.section.entry = New POCD_MT000040UV02Entry(1) {}
        Component.section.entry(0) = New POCD_MT000040UV02Entry()
        entry = DirectCast(Component.section.entry(0), POCD_MT000040UV02Entry)
        entry.Item = New POCD_MT000040UV02Procedure
        Dim proc As POCD_MT000040UV02Procedure
        proc = DirectCast(entry.Item, POCD_MT000040UV02Procedure)
        proc.classCode = Convert.ToString(ActClassProcedure.PROC)
        proc.moodCodeSpecified = True
        proc.moodCode = Convert.ToString(x_DocumentProcedureMood.EVN)
        proc.negationIndSpecified = True
        proc.negationInd = True
        proc.templateId = New II(3) {}
        proc.templateId(0) = New II
        proc.templateId(0).root = oTemplateIDMaster.GetEntryID("Procedure Activity Procedure")
        proc.templateId(0).extension = Nothing
        proc.templateId(0).assigningAuthorityName = Nothing

        proc.templateId(1) = New II
        proc.templateId(1).root = oTemplateIDMaster.GetEntryID("Procedure Activity Procedure")
        proc.templateId(1).extension = _DateExtension22
        proc.templateId(1).assigningAuthorityName = Nothing

        proc.templateId(2) = New II
        proc.templateId(2).root = oTemplateIDMaster.GetEntryID("Procedure Activity Procedure")
        proc.templateId(2).extension = Nothing
        proc.templateId(2).assigningAuthorityName = Nothing

        proc.id = New II(1) {}
        proc.id(0) = New II()
        proc.id(0).root = Guid.NewGuid.ToString()
        proc.code = New CD()
        _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Procedure")
        proc.code.code = _CodeSysItem.Code
        proc.code.codeSystem = _CodeSysItem.CodingSystem
        proc.code.codeSystemName = _CodeSysItem.CodingSystemName
        proc.code.displayName = _CodeSysItem.Description
        proc.statusCode = New CS()
        proc.statusCode.code = "completed"
        proc.effectiveTime = New IVL_TS()
        proc.effectiveTime.nullFlavorSpecified = True
        proc.effectiveTime.nullFlavor = "NA"
        proc.participant = New POCD_MT000040UV02Participant3(1) {}
        proc.participant(0) = New POCD_MT000040UV02Participant3
        getImplantProductInstance(proc.participant(0), Nothing, 0)
    End Sub
    Public Sub getImplantProductInstance(ByRef participant As POCD_MT000040UV02Participant3, ByVal _implant As Implant, ByVal cnt As Int16)
        Try
            If Not IsNothing(_implant) Then
                participant.typeCode = New ParticipationType
                participant.typeCode = ParticipationType.DEV
                participant.participantRole = New POCD_MT000040UV02ParticipantRole()
                participant.participantRole.classCodeSpecified = True
                participant.participantRole.classCode = RoleClassRoot.MANU
                participant.participantRole.templateId = New II(1) {}
                participant.participantRole.templateId(0) = New II()
                participant.participantRole.templateId(0).root = "2.16.840.1.113883.10.20.22.4.37"
                participant.participantRole.id = New II(1) {}
                participant.participantRole.id(0) = New II
                participant.participantRole.scopingEntity = New POCD_MT000040UV02Entity()
                participant.participantRole.scopingEntity.id = New II(1) {}
                participant.participantRole.scopingEntity.id(0) = New II()

                If _implant.ISUDI = True Then
                    participant.participantRole.id(0).root = oTemplateIDMaster.GetEntryID("FDA")
                    participant.participantRole.id(0).assigningAuthorityName = "FDA"
                    participant.participantRole.scopingEntity.id(0).root = oTemplateIDMaster.GetEntryID("FDA")
                Else
                    Select Case Convert.ToString(_implant.IssueingAgency).ToUpper
                        Case "GS1"
                            participant.participantRole.id(0).root = oTemplateIDMaster.GetEntryID("GS1")
                            participant.participantRole.scopingEntity.id(0).root = oTemplateIDMaster.GetEntryID("GS1")
                        Case "HIBCC "
                            participant.participantRole.id(0).root = oTemplateIDMaster.GetEntryID("HIBCC")
                            participant.participantRole.scopingEntity.id(0).root = oTemplateIDMaster.GetEntryID("HIBCC")
                        Case "ICCBBA"
                            If _implant.ISBloodContainer = True Then
                                participant.participantRole.id(0).root = oTemplateIDMaster.GetEntryID("ICCBBAb")
                                participant.participantRole.scopingEntity.id(0).root = oTemplateIDMaster.GetEntryID("ICCBBAb")
                            Else
                                participant.participantRole.id(0).root = oTemplateIDMaster.GetEntryID("ICCBBAo")
                                participant.participantRole.scopingEntity.id(0).root = oTemplateIDMaster.GetEntryID("ICCBBAo")
                            End If
                    End Select

                End If


                participant.participantRole.id(0).extension = _implant.UDI

                Dim device As POCD_MT000040UV02Device
                device = New POCD_MT000040UV02Device()
                participant.participantRole.Item = New POCD_MT000040UV02Device()
                device = DirectCast(participant.participantRole.Item, POCD_MT000040UV02Device)
                device.code = New CE()
                If _implant.DeviceCode <> "" AndAlso IsNothing(_implant.DeviceCode) = False Then
                    device.code.code = _implant.DeviceCode
                    device.code.codeSystem = CodeSystem.SNOMED_CT
                    device.code.codeSystemName = "SNOMED-CT"
                    device.code.displayName = _implant.Device_Description
                Else
                    device.code.nullFlavorSpecified = True
                    device.code.nullFlavor = "UNK"
                    device.code.codeSystem = Nothing
                    device.code.codeSystemName = Nothing
                    device.code.displayName = Nothing
                End If

                device.code.originalText = New ED()
                device.code.originalText.reference = New TEL()
                device.code.originalText.reference.value = "#implant" & cnt + 1
            Else
                participant.typeCode = New ParticipationType
                participant.typeCode = ParticipationType.DEV
                participant.participantRole = New POCD_MT000040UV02ParticipantRole()
                participant.participantRole.classCodeSpecified = True
                participant.participantRole.classCode = RoleClassRoot.MANU
                participant.participantRole.templateId = New II(1) {}
                participant.participantRole.templateId(0) = New II()
                participant.participantRole.templateId(0).root = "2.16.840.1.113883.10.20.22.4.37"
                participant.participantRole.id = New II(1) {}
                participant.participantRole.id(0) = New II
                participant.participantRole.id(0).root = oTemplateIDMaster.GetEntryID("FDA")
                participant.participantRole.id(0).nullFlavorSpecified = True
                participant.participantRole.id(0).nullFlavor = "NA"
                Dim device As POCD_MT000040UV02Device
                device = New POCD_MT000040UV02Device()
                participant.participantRole.Item = New POCD_MT000040UV02Device()
                device = DirectCast(participant.participantRole.Item, POCD_MT000040UV02Device)
                device.code = New CE()
                Dim _CodeSysItem As CodeSystemItem = Nothing
                _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Implant")
                device.code.code = _CodeSysItem.Code
                device.code.codeSystem = _CodeSysItem.CodingSystem
                device.code.codeSystemName = _CodeSysItem.CodingSystemName
                device.code.displayName = _CodeSysItem.Description
                participant.participantRole.scopingEntity = New POCD_MT000040UV02Entity()
                participant.participantRole.scopingEntity.id = New II(1) {}
                participant.participantRole.scopingEntity.id(0) = New II()
                participant.participantRole.scopingEntity.id(0).root = oTemplateIDMaster.GetEntryID("FDA")
            End If


        Catch ex As Exception

        End Try
    End Sub
    Private Sub getCDALabLocationDetails(ByRef _author As POCD_MT000040UV02Author(), ByVal labtest As LabTest)
        'Dim _author As POCD_MT000040UV02Author()
        Dim _person As POCD_MT000040UV02Person = Nothing
        Dim oAuthor As gloCCDLibrary.PatientAuthor = Nothing
        Try


            'Author
            _author = New POCD_MT000040UV02Author(0) {}

            _author(0) = New POCD_MT000040UV02Author
            _author(0).typeCode = Nothing
            _author(0).typeCodeSpecified = False
            _author(0).contextControlCode = Nothing
            _author(0).time = New TS()
            ''_author(0).time.value = System.DateTime.Now.ToString("yyyyMMddmmss")
            ''As per QualityNet after first validation on CMS

            _author(0).time.value = DateTime.Now.ToString("yyyyMMddhhmmss") & Replace(DateTime.Now.ToString("zzzz"), ":", "")
            _author(0).templateId = New II(0) {}
            _author(0).templateId(0) = New II
            _author(0).templateId(0).root = "2.16.840.1.113883.10.20.22.4.119"
            _author(0).assignedAuthor = New POCD_MT000040UV02AssignedAuthor()
            _author(0).assignedAuthor.classCode = Nothing
            _author(0).assignedAuthor.classCodeSpecified = False
            _author(0).assignedAuthor.id = New II(0) {}
            _author(0).assignedAuthor.id(0) = New II()
            ''As per QualityNet after first validation on CMS
            _author(0).assignedAuthor.id(0).root = System.Guid.NewGuid().ToString()
            _author(0).assignedAuthor.id(0).extension = Nothing
            _author(0).assignedAuthor.id(0).assigningAuthorityName = Nothing
            'If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
            '    _author(0).assignedAuthor.code = New CE()
            '    _author(0).assignedAuthor.code.nullFlavor = "NI"
            '    _author(0).assignedAuthor.code.code = Nothing
            '    _author(0).assignedAuthor.code.codeSystem = Nothing
            '    _author(0).assignedAuthor.code.codeSystemName = Nothing
            '    _author(0).assignedAuthor.code.codeSystemVersion = Nothing
            '    _author(0).assignedAuthor.code.displayName = Nothing
            'End If
            _author(0).assignedAuthor.representedOrganization = New POCD_MT000040UV02Organization()
            _author(0).assignedAuthor.representedOrganization.id = New II(0) {}
            _author(0).assignedAuthor.representedOrganization.id(0) = New II()
            _author(0).assignedAuthor.representedOrganization.id(0).root = oTemplateIDMaster.GetEntryID("Organisation Lab")
            _author(0).assignedAuthor.representedOrganization.id(0).assigningAuthorityName = Nothing
            _author(0).assignedAuthor.representedOrganization.name = New [ON](0) {}
            _author(0).assignedAuthor.representedOrganization.name(0) = New [ON]
            _author(0).assignedAuthor.representedOrganization.name(0).Text = New String() {labtest.LabLocationDetails.LabLocationName}
            _author(0).assignedAuthor.representedOrganization.telecom = New TEL(0) {}
            _author(0).assignedAuthor.representedOrganization.telecom(0) = New TEL
            _author(0).assignedAuthor.representedOrganization.telecom(0).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(labtest.LabLocationDetails.LabLocationTelephone))
            '_author(0).assignedAuthor.representedOrganization.telecom(0).use = New TelecommunicationAddressUse(0) {}
            '_author(0).assignedAuthor.representedOrganization.telecom(0).use = New String() {""}
            _author(0).assignedAuthor.representedOrganization.addr = New AD(0) {}
            _author(0).assignedAuthor.representedOrganization.addr(0) = New AD
            '_author(0).assignedAuthor.representedOrganization.addr(0).Text = New String() {labtest.LabLocationDetails.LabLocationAdd}
            _author(0).assignedAuthor.representedOrganization.addr(0).Items = New ADXP(4) {}
            _author(0).assignedAuthor.representedOrganization.addr(0).Items(0) = New adxpstreetAddressLine
            _author(0).assignedAuthor.representedOrganization.addr(0).Items(0).Text = New String() {labtest.LabLocationDetails.LabLocationAdd1}
            _author(0).assignedAuthor.representedOrganization.addr(0).Items(1) = New adxpcity
            _author(0).assignedAuthor.representedOrganization.addr(0).Items(1).Text = New String() {labtest.LabLocationDetails.LabCity}
            _author(0).assignedAuthor.representedOrganization.addr(0).Items(2) = New adxpstate
            _author(0).assignedAuthor.representedOrganization.addr(0).Items(2).Text = New String() {labtest.LabLocationDetails.LabState}
            _author(0).assignedAuthor.representedOrganization.addr(0).Items(3) = New adxppostalCode
            _author(0).assignedAuthor.representedOrganization.addr(0).Items(3).Text = New String() {labtest.LabLocationDetails.LabZip}

            'Return _author(0)
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Author Section"
            Else
                _msgString = _msgString & vbNewLine & "Author Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing
            '  MessageBox.Show("Error:" & ex.ToString())
            'Return Nothing
        Finally
            If Not IsNothing(oAuthor) Then
                oAuthor.Dispose()
                oAuthor = Nothing
            End If
            _person = Nothing

        End Try
    End Sub
    Public Function NoInformationSection(ByVal sectionname As String, ByVal sectiontitle As String, Optional ByVal extension As String = Nothing) As POCD_MT000040UV02Section
        Try
            Dim section As POCD_MT000040UV02Section = New POCD_MT000040UV02Section()
            section = New POCD_MT000040UV02Section
            section.nullFlavorSpecified = True
            section.nullFlavor = "NI"
            section.templateId = New II(1) {}
            section.templateId(0) = New II()
            section.templateId(0).root = oTemplateIDMaster.GetSectionID(sectionname)
            section.templateId(1) = New II()
            section.templateId(1).root = oTemplateIDMaster.GetSectionID(sectionname)
            If sectionname = "Reason for Referral" OrElse sectionname = "Medications" OrElse sectionname = "Treatment Plan" OrElse sectionname = "Assessments" Then
                section.templateId(1).extension = _DateExtension22
            Else
                section.templateId(1).extension = _DateExtension2015
            End If

            section.code = New CE()
            Dim codesystemitem As CodeSystemItem = Nothing

            If (sectionname = "Medications") Then
                codesystemitem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Medication")
            ElseIf (sectionname = "Treatment Plan") Then
                codesystemitem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Plan of care")
            Else
                codesystemitem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, sectionname)
            End If



            section.code.code = codesystemitem.Code
            section.code.codeSystem = codesystemitem.CodingSystem
            section.code.codeSystemName = codesystemitem.CodingSystemName
            section.code.codeSystemVersion = Nothing
            section.code.displayName = codesystemitem.Description
            ''
            section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, section)
            ''
            section.classCodeSpecified = False
            section.title = New ST
            section.title.Text = New String() {sectiontitle}
            section.text = New StrucDocText
            section.text.Text = New String() {"No Information"}
            section.text.mediaType = Nothing
            section.text.ID = Nothing
            section.text.language = Nothing            
            Return section
        Catch ex As Exception
            Return Nothing
        End Try
    End Function
    Private Function getCDAHealthconcenSection() As POCD_MT000040UV02Component3
        Try
            Dim table As StrucDocTable = Nothing
            Dim tableOBS As StrucDocTable = Nothing
            Dim _CodeSysItem As CodeSystemItem = Nothing
            Dim ConcernComponent As POCD_MT000040UV02Component3 = Nothing
            ConcernComponent = New POCD_MT000040UV02Component3
            ConcernComponent.section = New POCD_MT000040UV02Section
            ConcernComponent.section.templateId = New II(2) {}
            ConcernComponent.section.templateId(0) = New II()
            ConcernComponent.section.templateId(0).root = oTemplateIDMaster.GetSectionID("Health Concern")
            ConcernComponent.section.templateId(1) = New II()
            ConcernComponent.section.templateId(1).root = oTemplateIDMaster.GetSectionID("Health Concern")
            ConcernComponent.section.templateId(1).extension = _DateExtension2015

            ConcernComponent.section.code = New CE()
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Health Concern")
            If Not IsNothing(_CodeSysItem) Then
                ConcernComponent.section.code.code = _CodeSysItem.Code
                ConcernComponent.section.code.codeSystem = _CodeSysItem.CodingSystem
                ConcernComponent.section.code.codeSystemName = _CodeSysItem.CodingSystemName
                ConcernComponent.section.code.displayName = _CodeSysItem.Description
            End If
            ConcernComponent.section.title = New ST()
            ConcernComponent.section.title.Text = New String() {"Health Concerns Section"}
            ConcernComponent.section.title.language = Nothing
            ConcernComponent.section.text = New StrucDocText()
            ConcernComponent.section.text.mediaType = Nothing
            ConcernComponent.section.text.ID = Nothing
            ConcernComponent.section.text.language = Nothing

            If Not IsNothing(mPatient.HealthConcernCol) Then
                If mPatient.HealthConcernCol.HealthConcernList.Count > 0 Then
                    ConcernComponent.section.text.Items = New Object(2) {}
                    ConcernComponent.section.text.Items(0) = New StrucDocTable
                    tableOBS = DirectCast(ConcernComponent.section.text.Items(0), StrucDocTable)
                    tableOBS.ID = Nothing
                    tableOBS.language = Nothing
                    tableOBS.border = "1"
                    tableOBS.width = "100%"
                    tableOBS.thead = New StrucDocThead()
                    tableOBS.thead.ID = Nothing
                    tableOBS.thead.language = Nothing
                    tableOBS.thead.tr = New StrucDocTr(0) {}
                    tableOBS.thead.tr(0) = New StrucDocTr()
                    tableOBS.thead.tr(0).ID = Nothing
                    tableOBS.thead.tr(0).language = Nothing
                    tableOBS.thead.tr(0).Items = New Object(6) {}


                    tableOBS.thead.tr(0).Items(0) = New StrucDocTh()

                    DirectCast(tableOBS.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Name"}
                    DirectCast(tableOBS.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                    DirectCast(tableOBS.thead.tr(0).Items(0), StrucDocTh).language = Nothing

                    tableOBS.thead.tr(0).Items(1) = New StrucDocTh()

                    DirectCast(tableOBS.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Notes"}
                    DirectCast(tableOBS.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                    DirectCast(tableOBS.thead.tr(0).Items(1), StrucDocTh).language = Nothing

                    tableOBS.thead.tr(0).Items(2) = New StrucDocTh()

                    DirectCast(tableOBS.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Observation"}
                    DirectCast(tableOBS.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                    DirectCast(tableOBS.thead.tr(0).Items(2), StrucDocTh).language = Nothing

                    tableOBS.thead.tr(0).Items(3) = New StrucDocTh()

                    DirectCast(tableOBS.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Status"}
                    DirectCast(tableOBS.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                    DirectCast(tableOBS.thead.tr(0).Items(3), StrucDocTh).language = Nothing

                    tableOBS.thead.tr(0).Items(4) = New StrucDocTh()

                    DirectCast(tableOBS.thead.tr(0).Items(4), StrucDocTh).Text = New String() {"Start Date"}
                    DirectCast(tableOBS.thead.tr(0).Items(4), StrucDocTh).ID = Nothing
                    DirectCast(tableOBS.thead.tr(0).Items(4), StrucDocTh).language = Nothing

                    tableOBS.thead.tr(0).Items(5) = New StrucDocTh()

                    DirectCast(tableOBS.thead.tr(0).Items(5), StrucDocTh).Text = New String() {"End Date"}
                    DirectCast(tableOBS.thead.tr(0).Items(5), StrucDocTh).ID = Nothing
                    DirectCast(tableOBS.thead.tr(0).Items(5), StrucDocTh).language = Nothing

                    tableOBS.tbody = New StrucDocTbody(0) {}
                    tableOBS.tbody(0) = New StrucDocTbody()
                    tableOBS.tbody(0).ID = Nothing
                    tableOBS.tbody(0).language = Nothing
                    tableOBS.tbody(0).tr = New StrucDocTr(0) {}
                    tableOBS.tbody(0).tr(0) = New StrucDocTr()
                    tableOBS.tbody(0).tr(0).ID = Nothing
                    tableOBS.tbody(0).tr(0).language = Nothing
                    tableOBS.tbody(0).tr(0).Items = New Object(6) {}
                    tableOBS.tbody(0).tr(0).Items(0) = New StrucDocTd()
                    DirectCast(tableOBS.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(tableOBS.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing

                    ConcernComponent.section.text.Items(1) = New StrucDocContent
                    DirectCast(ConcernComponent.section.text.Items(1), StrucDocContent).ID = Nothing
                    DirectCast(ConcernComponent.section.text.Items(1), StrucDocContent).language = Nothing
                    DirectCast(ConcernComponent.section.text.Items(1), StrucDocContent).Text = New String() {"Health Concern References"}

                    ConcernComponent.section.text.Items(2) = New StrucDocTable
                    table = DirectCast(ConcernComponent.section.text.Items(2), StrucDocTable)
                    table.ID = Nothing
                    table.language = Nothing
                    table.border = "1"
                    table.width = "100%"
                    table.thead = New StrucDocThead()
                    table.thead.ID = Nothing
                    table.thead.language = Nothing
                    table.thead.tr = New StrucDocTr(0) {}
                    table.thead.tr(0) = New StrucDocTr()
                    table.thead.tr(0).ID = Nothing
                    table.thead.tr(0).language = Nothing
                    table.thead.tr(0).Items = New Object(2) {}


                    table.thead.tr(0).Items(0) = New StrucDocTh()

                    DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Name"}
                    DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing

                    table.thead.tr(0).Items(1) = New StrucDocTh()

                    DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Concern"}
                    DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing

                    'table.thead.tr(0).Items(2) = New StrucDocTh()

                    'DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Date"}
                    'DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                    'DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing

                    table.tbody = New StrucDocTbody(0) {}
                    table.tbody(0) = New StrucDocTbody()
                    table.tbody(0).ID = Nothing
                    table.tbody(0).language = Nothing
                    table.tbody(0).tr = New StrucDocTr(mPatient.HealthConcernCol.HealthConcernList.Count - 1) {}
                    table.tbody(0).tr(0) = New StrucDocTr()
                    table.tbody(0).tr(0).ID = Nothing
                    table.tbody(0).tr(0).language = Nothing
                    table.tbody(0).tr(0).Items = New Object(2) {}
                    table.tbody(0).tr(0).Items(0) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing

                    Dim Obsflag As Boolean = False
                    Dim Concernflag As Boolean = False
                    Dim HealthConcernnarratives As Int32 = 0
                    Dim Healthindex As Int32 = 0
                    Dim UniqueConcerIndes As Int32 = 0


                    Dim concerncol As HealthConcernCol = Nothing
                    concerncol = mPatient.HealthConcernCol
                    Dim ConcernCount As Int32 = concerncol.HealthConcernList.GroupBy(Function(x) x.HealthConcernID).Select(Function(x) x.First).ToList.Count
                    tableOBS.tbody(0).tr = New StrucDocTr(ConcernCount - 1) {}
                    ConcernComponent.section.entry = New POCD_MT000040UV02Entry((ConcernCount * 2) + mPatient.HealthConcernCol.HealthConcernList.Count - 1) {}
                    Dim HealthConcernId As String = ""
                    For HealthConcerIndes As Integer = 0 To mPatient.HealthConcernCol.HealthConcernList.Count - 1
                        Dim _HealthConcern As HealthConcern = mPatient.HealthConcernCol.HealthConcernList.Item(HealthConcerIndes)
                        If HealthConcernId <> _HealthConcern.HealthConcernID Then
                            HealthConcernId = _HealthConcern.HealthConcernID

                            Obsflag = True
                            tableOBS.tbody(0).tr(UniqueConcerIndes) = New StrucDocTr()
                            tableOBS.tbody(0).tr(UniqueConcerIndes).ID = Nothing
                            tableOBS.tbody(0).tr(UniqueConcerIndes).language = Nothing
                            tableOBS.tbody(0).tr(UniqueConcerIndes).Items = New Object(6) {}

                            tableOBS.tbody(0).tr(UniqueConcerIndes).Items(0) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(0), StrucDocTd).ID = Nothing
                            DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(0), StrucDocTd).language = Nothing
                            If _HealthConcern.HealthConcernName IsNot Nothing AndAlso _HealthConcern.HealthConcernName <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(0), StrucDocTd).Text = New String() {_HealthConcern.HealthConcernName}
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(0), StrucDocTd).Text = Nothing
                            End If

                            tableOBS.tbody(0).tr(UniqueConcerIndes).Items(1) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(1), StrucDocTd).ID = Nothing
                            DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(1), StrucDocTd).language = Nothing
                            If _HealthConcern.HealthConcernNarrative IsNot Nothing AndAlso _HealthConcern.HealthConcernNarrative <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(1), StrucDocTd).Text = New String() {_HealthConcern.HealthConcernNarrative}
                                HealthConcernnarratives = HealthConcernnarratives + 1
                                DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(1), StrucDocTd).ID = "NarrativeConcern" & HealthConcernnarratives
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(1), StrucDocTd).Text = Nothing
                            End If

                            tableOBS.tbody(0).tr(UniqueConcerIndes).Items(2) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(2), StrucDocTd).ID = Nothing
                            DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(2), StrucDocTd).language = Nothing
                            If _HealthConcern.HealthStatusDesc IsNot Nothing AndAlso _HealthConcern.HealthStatusDesc <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(2), StrucDocTd).Text = New String() {_HealthConcern.HealthStatusDesc}
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(2), StrucDocTd).Text = Nothing
                            End If

                            tableOBS.tbody(0).tr(UniqueConcerIndes).Items(3) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(3), StrucDocTd).ID = Nothing
                            DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(3), StrucDocTd).language = Nothing
                            If _HealthConcern.HealthConcernStatus IsNot Nothing AndAlso _HealthConcern.HealthConcernStatus <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(3), StrucDocTd).Text = New String() {_HealthConcern.HealthConcernStatus}
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(3), StrucDocTd).Text = Nothing
                            End If

                            tableOBS.tbody(0).tr(UniqueConcerIndes).Items(4) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(4), StrucDocTd).ID = Nothing
                            DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(4), StrucDocTd).language = Nothing
                            If _HealthConcern.ConcernStartDate IsNot Nothing AndAlso _HealthConcern.ConcernStartDate <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(4), StrucDocTd).Text = New String() {CType(_HealthConcern.ConcernStartDate, Date)}
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(4), StrucDocTd).Text = Nothing
                            End If

                            tableOBS.tbody(0).tr(UniqueConcerIndes).Items(5) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(5), StrucDocTd).ID = Nothing
                            DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(5), StrucDocTd).language = Nothing
                            If _HealthConcern.ConcernEndDate IsNot Nothing AndAlso _HealthConcern.ConcernEndDate <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(5), StrucDocTd).Text = New String() {CType(_HealthConcern.ConcernEndDate, Date)}
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueConcerIndes).Items(5), StrucDocTd).Text = Nothing
                            End If

                            If _HealthConcern.AssociateConcernID <> 0 Then
                                ConcernComponent.section.entry(Healthindex) = New POCD_MT000040UV02Entry()
                                getCDAHealthConcernAct(ConcernComponent.section.entry(Healthindex), _HealthConcern.HealthConcernID, Healthindex, _HealthConcern.HealthConcernStatus, mPatient.HealthConcernCol, _HealthConcern.ConcernStartDate)
                                Healthindex += 1
                            End If
                            If _HealthConcern.HealthStatusDesc <> "" Then
                                ConcernComponent.section.entry(Healthindex) = New POCD_MT000040UV02Entry()
                                getCDAHealthConcernObservation(ConcernComponent.section.entry(Healthindex), _HealthConcern)
                                Healthindex += 1
                            End If
                            If _HealthConcern.HealthConcernNarrative <> "" Then
                                ConcernComponent.section.entry(Healthindex) = New POCD_MT000040UV02Entry()
                                getHealthConcernNarrative(ConcernComponent.section.entry(Healthindex), _HealthConcern, HealthConcernnarratives)
                                Healthindex += 1
                            End If
                            UniqueConcerIndes += 1
                        End If

                        If _HealthConcern.AssociateConcernID <> 0 Then
                            Dim Problemlist = mPatient.PatientProblems.Where(Function(p) p.ProblemID = _HealthConcern.AssociateConcernID).ToList()
                            Dim HealthConcerndescription As String = ""
                            If CType(Problemlist, List(Of Problems)).Count > 0 Then
                                Dim _Problem As Problems = CType(Problemlist, List(Of Problems)).Item(0)
                                HealthConcerndescription = _Problem.Condition
                                'HealthConcerndescription = _Problem.
                            End If
                            Concernflag = True
                            table.tbody(0).tr(HealthConcerIndes) = New StrucDocTr()
                            table.tbody(0).tr(HealthConcerIndes).ID = Nothing
                            table.tbody(0).tr(HealthConcerIndes).language = Nothing
                            table.tbody(0).tr(HealthConcerIndes).Items = New Object(3) {}

                            table.tbody(0).tr(HealthConcerIndes).Items(0) = New StrucDocTd()
                            DirectCast(table.tbody(0).tr(HealthConcerIndes).Items(0), StrucDocTd).ID = Nothing
                            DirectCast(table.tbody(0).tr(HealthConcerIndes).Items(0), StrucDocTd).language = Nothing
                            If _HealthConcern.HealthConcernName IsNot Nothing AndAlso _HealthConcern.HealthConcernName <> "" Then
                                DirectCast(table.tbody(0).tr(HealthConcerIndes).Items(0), StrucDocTd).Text = New String() {_HealthConcern.HealthConcernName}
                            Else
                                DirectCast(table.tbody(0).tr(HealthConcerIndes).Items(0), StrucDocTd).Text = Nothing
                            End If

                            table.tbody(0).tr(HealthConcerIndes).Items(1) = New StrucDocTd()
                            DirectCast(table.tbody(0).tr(HealthConcerIndes).Items(1), StrucDocTd).ID = Nothing
                            DirectCast(table.tbody(0).tr(HealthConcerIndes).Items(1), StrucDocTd).language = Nothing
                            If HealthConcerndescription IsNot Nothing AndAlso HealthConcerndescription <> "" Then
                                DirectCast(table.tbody(0).tr(HealthConcerIndes).Items(1), StrucDocTd).Text = New String() {HealthConcerndescription}
                            Else
                                DirectCast(table.tbody(0).tr(HealthConcerIndes).Items(1), StrucDocTd).Text = Nothing
                            End If

                            'table.tbody(0).tr(HealthConcerIndes).Items(1) = New StrucDocTd()
                            'DirectCast(table.tbody(0).tr(HealthConcerIndes).Items(1), StrucDocTd).ID = Nothing
                            'DirectCast(table.tbody(0).tr(HealthConcerIndes).Items(1), StrucDocTd).language = Nothing
                            'If _HealthConcern.HealthConcernStatus IsNot Nothing AndAlso _HealthConcern.HealthConcernStatus <> "" Then
                            '    DirectCast(table.tbody(0).tr(HealthConcerIndes).Items(1), StrucDocTd).Text = New String() {_HealthConcern.HealthConcernStatus}
                            'Else
                            '    DirectCast(table.tbody(0).tr(HealthConcerIndes).Items(1), StrucDocTd).Text = Nothing
                            'End If

                            'table.tbody(0).tr(HealthConcerIndes).Items(2) = New StrucDocTd()
                            'DirectCast(table.tbody(0).tr(HealthConcerIndes).Items(2), StrucDocTd).ID = Nothing
                            'DirectCast(table.tbody(0).tr(HealthConcerIndes).Items(2), StrucDocTd).language = Nothing
                            'If _HealthConcern.ConcernStartDate IsNot Nothing AndAlso _HealthConcern.ConcernStartDate <> "" Then
                            '    DirectCast(table.tbody(0).tr(HealthConcerIndes).Items(2), StrucDocTd).Text = New String() {CType(_HealthConcern.ConcernStartDate, Date)}
                            'Else
                            '    DirectCast(table.tbody(0).tr(HealthConcerIndes).Items(2), StrucDocTd).Text = Nothing
                            'End If


                            'Else
                            '    Obsflag = True
                            '    tableOBS.tbody(0).tr(HealthConcerIndes) = New StrucDocTr()
                            '    tableOBS.tbody(0).tr(HealthConcerIndes).ID = Nothing
                            '    tableOBS.tbody(0).tr(HealthConcerIndes).language = Nothing
                            '    tableOBS.tbody(0).tr(HealthConcerIndes).Items = New Object(3) {}
                            '    tableOBS.tbody(0).tr(HealthConcerIndes).Items(0) = New StrucDocTd()

                            '    DirectCast(tableOBS.tbody(0).tr(HealthConcerIndes).Items(0), StrucDocTd).ID = Nothing
                            '    DirectCast(tableOBS.tbody(0).tr(HealthConcerIndes).Items(0), StrucDocTd).language = Nothing
                            '    If _HealthConcern.HealthStatusDesc IsNot Nothing AndAlso _HealthConcern.HealthStatusDesc <> "" Then
                            '        DirectCast(tableOBS.tbody(0).tr(HealthConcerIndes).Items(0), StrucDocTd).Text = New String() {_HealthConcern.HealthStatusDesc}
                            '    Else
                            '        DirectCast(tableOBS.tbody(0).tr(HealthConcerIndes).Items(0), StrucDocTd).Text = Nothing
                            '    End If

                            '    tableOBS.tbody(0).tr(HealthConcerIndes).Items(1) = New StrucDocTd()
                            '    DirectCast(tableOBS.tbody(0).tr(HealthConcerIndes).Items(1), StrucDocTd).ID = Nothing
                            '    DirectCast(tableOBS.tbody(0).tr(HealthConcerIndes).Items(1), StrucDocTd).language = Nothing
                            '    If _HealthConcern.HealthConcernStatus IsNot Nothing AndAlso _HealthConcern.HealthConcernStatus <> "" Then
                            '        DirectCast(tableOBS.tbody(0).tr(HealthConcerIndes).Items(1), StrucDocTd).Text = New String() {_HealthConcern.HealthConcernStatus}
                            '    Else
                            '        DirectCast(tableOBS.tbody(0).tr(HealthConcerIndes).Items(1), StrucDocTd).Text = Nothing
                            '    End If

                            '    tableOBS.tbody(0).tr(HealthConcerIndes).Items(2) = New StrucDocTd()
                            '    DirectCast(tableOBS.tbody(0).tr(HealthConcerIndes).Items(2), StrucDocTd).ID = Nothing
                            '    DirectCast(tableOBS.tbody(0).tr(HealthConcerIndes).Items(2), StrucDocTd).language = Nothing
                            '    If _HealthConcern.ConcernStartDate IsNot Nothing AndAlso _HealthConcern.ConcernStartDate <> "" Then
                            '        DirectCast(tableOBS.tbody(0).tr(HealthConcerIndes).Items(2), StrucDocTd).Text = New String() {CType(_HealthConcern.ConcernStartDate, Date)}
                            '    Else
                            '        DirectCast(tableOBS.tbody(0).tr(HealthConcerIndes).Items(2), StrucDocTd).Text = Nothing
                            '    End If
                        End If


                    Next

                    If Obsflag = False Then
                        ConcernComponent.section.text.Items(0) = Nothing
                        ConcernComponent.section.text.Items(1) = Nothing
                        ConcernComponent.section.text.Items(2) = Nothing
                    End If
                    If Concernflag = False Then
                        ConcernComponent.section.text.Items(1) = Nothing
                        ConcernComponent.section.text.Items(2) = Nothing
                    End If


                    'If Not IsNothing(mPatient.HealthConcernCol) Then
                    '    Dim concerncol As HealthConcernCol = Nothing
                    '    concerncol = mPatient.HealthConcernCol
                    '    Dim duplicates = concerncol.HealthConcernList.GroupBy(Function(x) x.HealthConcernID).Select(Function(x) x.First).ToList
                    '    HealthConcernnarratives = 0
                    '    If DirectCast(duplicates, List(Of HealthConcern)).Count > 0 Then
                    '        Dim entrycount As Integer = DirectCast(duplicates, List(Of HealthConcern)).Count
                    '        ConcernComponent.section.entry = New POCD_MT000040UV02Entry(entrycount) {}
                    '        For Healthindex As Integer = 0 To DirectCast(duplicates, List(Of HealthConcern)).Count - 1
                    '            Dim _HealthConcern As HealthConcern = DirectCast(duplicates, List(Of HealthConcern)).Item(Healthindex)
                    '            If _HealthConcern.AssociateConcernID <> 0 Then
                    '                ConcernComponent.section.entry(Healthindex) = New POCD_MT000040UV02Entry()
                    '                getCDAHealthConcernAct(ConcernComponent.section.entry(Healthindex), _HealthConcern.HealthConcernID, Healthindex, _HealthConcern.HealthConcernStatus, concerncol)
                    '            End If
                    '            If _HealthConcern.HealthConcernNarrative <> "" Then
                    '                HealthConcernnarratives = HealthConcernnarratives + 1
                    '                ConcernComponent.section.entry(Healthindex) = New POCD_MT000040UV02Entry()
                    '                getHealthConcernNarrative(ConcernComponent.section.entry(Healthindex), _HealthConcern.HealthConcernStatus, HealthConcernnarratives)
                    '            End If
                    '            If _HealthConcern.HealthStatusDesc <> "" Then
                    '                ConcernComponent.section.entry(Healthindex) = New POCD_MT000040UV02Entry()
                    '                getCDAHealthConcernObservation(ConcernComponent.section.entry(Healthindex), _HealthConcern)
                    '            End If
                    '        Next
                    '    End If
                    'End If

                    'check whether snomed code is present
                Else
                    ''ConcernComponent.section.text.Text = New String() {"No Information"}
                    ''ConcernComponent.section.nullFlavorSpecified = True
                    ''ConcernComponent.section.nullFlavor = "NI"
                    ''ConcernComponent.section.classCodeSpecified = False
                    'getNoKnownHealthConcern()

                    If Not IsNothing(dtsec) Then

                        Dim dr As DataRow() = dtsec.Select("sSectionName='Health Concern'")
                        If (dr.Length = 0) Then
                            ConcernComponent.section = NoInformationSection("Health Concern", "Health Concerns Section", _DateExtension2015)
                            ''   section.text.Text = New String() {"No Information for Patient"}
                        ElseIf dr(0)(1) = "0" Then
                            ConcernComponent.section = NoInformationSection("Health Concern", "Health Concerns Section", _DateExtension2015)
                            '' section.text.Text = New String() {"No Information for Patient"}
                        Else

                            ConcernComponent.section.text.Text = New String() {"No known Information for patient"}
                            If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
                                ConcernComponent.section.text.Items = New StrucDocContent(0) {}
                                ConcernComponent.section.text.Items(0) = New StrucDocContent
                                DirectCast(ConcernComponent.section.text.Items(0), StrucDocContent).ID = "Health Concern" & 0
                                DirectCast(ConcernComponent.section.text.Items(0), StrucDocContent).language = Nothing
                            End If
                            getNoKnownHealthConcern()
                        End If
                    Else
                        ConcernComponent.section = NoInformationSection("Health Concern", "Health Concerns Section", _DateExtension2015)
                    End If



                End If

                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, ConcernComponent.section)
                ''
                If Not IsNothing(sconf.code) Then
                    ConcernComponent.section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''

            Else
                ConcernComponent.section.text.Text = New String() {"No Information"}
                ConcernComponent.section.nullFlavorSpecified = True
                ConcernComponent.section.nullFlavor = "NI"
                ConcernComponent.section.classCodeSpecified = False
            End If
            Return ConcernComponent
        Catch ex As Exception
            Return Nothing
        End Try

    End Function
    Private Sub getHealthConcernNarrative(ByRef entry As POCD_MT000040UV02Entry, ByVal _HealthConcern As HealthConcern, ByVal HealthConcernnarratives As Int16)
        Try
            Dim act As POCD_MT000040UV02Act
            entry.Item = New POCD_MT000040UV02Act
            act = DirectCast(entry.Item, POCD_MT000040UV02Act)
            act.classCodeSpecified = True
            act.classCode = x_ActClassDocumentEntryAct.ACT
            act.moodCodeSpecified = True
            act.moodCode = x_DocumentActMood.EVN
            act.templateId = New II(1) {}
            act.templateId(0) = New II
            act.templateId(0).root = oTemplateIDMaster.GetEntryID("HEalth Concern Act")
            act.templateId(0).extension = _DateExtension2015
            act.templateId(0).assigningAuthorityName = Nothing

            act.templateId(1) = New II
            act.templateId(1).root = oTemplateIDMaster.GetEntryID("HEalth Concern Act")
            act.templateId(1).extension = Nothing
            act.templateId(1).assigningAuthorityName = Nothing

            act.id = New II(0) {}
            act.id(0) = New II
            act.id(0).root = Guid.NewGuid.ToString()
            'act.id(0).nullFlavorSpecified = True
            'act.id(0).nullFlavor = "UNK"
            act.code = New CD
            Dim CodesystemItem As CodeSystemItem = Nothing
            CodesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Health Concern")
            act.code.code = CodesystemItem.Code
            act.code.codeSystem = CodeSystem.LOINC
            act.code.codeSystemName = CodesystemItem.CodingSystemName
            act.code.displayName = CodesystemItem.Description
            act.text = New ED
            act.text.reference = New TEL
            act.text.reference.value = "#NarrativeConcern" & HealthConcernnarratives

            act.statusCode = New CS()
            act.statusCode.code = _HealthConcern.HealthConcernStatus.ToString().ToLower()
            If Not IsNothing(_HealthConcern.ConcernStartDate) AndAlso _HealthConcern.ConcernStartDate <> "" Then
                act.effectiveTime = New IVL_TS
                act.effectiveTime.value = Format(CType(_HealthConcern.ConcernStartDate, Date), "yyyyMMdd")
            End If

            If String.IsNullOrWhiteSpace(_HealthConcern.GUID) Then
                _HealthConcern.GUID = act.id(0).root
            End If
        Catch ex As Exception

        End Try
    End Sub
    Private Sub getCDAHealthConcernObservation(ByRef entry As POCD_MT000040UV02Entry, ByVal _HealthConcern As HealthConcern)
        'entry = New POCD_MT000040UV02Entry(1) {}
        'entry = New POCD_MT000040UV02Entry
        entry.Item = New POCD_MT000040UV02Observation()
        Dim obs As POCD_MT000040UV02Observation = Nothing
        obs = DirectCast(entry.Item, POCD_MT000040UV02Observation)
        obs.classCodeSpecified = True
        obs.classCode = ActClassObservation.OBS
        obs.moodCodeSpecified = True
        obs.moodCode = x_ActMoodDocumentObservation.EVN
        obs.templateId = New II(1) {}
        obs.templateId(0) = New II
        obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Health Status Observation")
        obs.templateId(0).extension = _DateExtension22
        obs.templateId(1) = New II
        obs.templateId(1).root = oTemplateIDMaster.GetEntryID("Health Status Observation")
        obs.id = New II(0) {}
        obs.id(0) = New II()
        obs.id(0).root = Guid.NewGuid.ToString()
        obs.code = New CD
        Dim codesystemItem As CodeSystemItem = Nothing
        codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Health status")
        obs.code.code = codesystemItem.Code
        obs.code.codeSystem = CodeSystem.LOINC
        obs.code.codeSystemName = codesystemItem.CodingSystemName
        obs.code.displayName = codesystemItem.Description
        codesystemItem = Nothing
        obs.statusCode = New CS()
        obs.statusCode.code = "completed"
        obs.value = New ANY(1) {}
        obs.value(0) = New CD()
        DirectCast(obs.value(0), CD).code = _HealthConcern.HealthConcernSNOMEDID
        DirectCast(obs.value(0), CD).codeSystem = CodeSystem.SNOMED_CT
        DirectCast(obs.value(0), CD).codeSystemName = "SNOMED-CT"
        DirectCast(obs.value(0), CD).displayName = _HealthConcern.HealthConcernSnomedDesc

        If String.IsNullOrWhiteSpace(_HealthConcern.GUID) Then
            _HealthConcern.GUID = obs.id(0).root
        End If


    End Sub
    Private Sub getCDAHealthConcernAct(ByRef entry As POCD_MT000040UV02Entry, ByVal ConcernID As Long, ByVal itemindex As Long, ByVal Healthconcernstatus As String, Optional ByVal ConcernCol As HealthConcernCol = Nothing, Optional ByVal ConcernStartdate As String = "")
        Dim act As POCD_MT000040UV02Act
        entry.Item = New POCD_MT000040UV02Act
        act = DirectCast(entry.Item, POCD_MT000040UV02Act)
        act.classCodeSpecified = True
        act.classCode = x_ActClassDocumentEntryAct.ACT
        act.moodCodeSpecified = True
        act.moodCode = x_DocumentActMood.EVN
        act.templateId = New II(0) {}
        act.templateId(0) = New II
        act.templateId(0).root = oTemplateIDMaster.GetEntryID("HEalth Concern Act")
        act.templateId(0).extension = _DateExtension2015
        act.id = New II(0) {}
        act.id(0) = New II
        act.id(0).root = Guid.NewGuid.ToString()

        act.code = New CD
        Dim CodesystemItem As CodeSystemItem = Nothing
        CodesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Health Concern")
        act.code.code = CodesystemItem.Code
        act.code.codeSystem = CodeSystem.LOINC
        act.code.codeSystemName = CodesystemItem.CodingSystemName
        act.code.displayName = CodesystemItem.Description
        act.statusCode = New CS()
        act.statusCode.code = Healthconcernstatus.ToLower()
        If ConcernStartdate.Trim() <> "" Then
            act.effectiveTime = New IVL_TS
            act.effectiveTime.value = Format(CType(ConcernStartdate, Date), "yyyyMMdd")
        End If

        Dim entryrelationcount As Integer = 0
        Dim entryrelationshipslist = ConcernCol.HealthConcernList.Where(Function(p) p.HealthConcernID = ConcernID).ToList()
        If DirectCast(entryrelationshipslist, List(Of HealthConcern)).Count > 0 Then
            entryrelationcount = DirectCast(entryrelationshipslist, List(Of HealthConcern)).Count
            act.entryRelationship = New POCD_MT000040UV02EntryRelationship(entryrelationcount - 1) {}
            For index As Integer = 0 To entryrelationcount - 1
                Dim _HealthConcern As HealthConcern = CType(entryrelationshipslist, List(Of HealthConcern)).Item(index)
                Dim entryrelationship As POCD_MT000040UV02EntryRelationship

                Dim Problemlist = mPatient.PatientProblems.Where(Function(p) p.ProblemID = _HealthConcern.AssociateConcernID).ToList()
                If CType(Problemlist, List(Of Problems)).Count > 0 Then
                    act.entryRelationship(index) = New POCD_MT000040UV02EntryRelationship
                    entryrelationship = DirectCast(act.entryRelationship(index), POCD_MT000040UV02EntryRelationship)
                    Dim _Problem As Problems = CType(Problemlist, List(Of Problems)).Item(0)
                    getCDAEntryReference(entryrelationship, _Problem.GUID)
                End If
                _HealthConcern.GUID = act.id(0).root
            Next

        End If




    End Sub

    Private Sub getNoKnownHealthConcern()
        Try
            Dim table As StrucDocTable = Nothing
            Dim tableOBS As StrucDocTable = Nothing
            Dim _CodeSysItem As CodeSystemItem = Nothing
            Dim ConcernComponent As POCD_MT000040UV02Component3 = Nothing
            ConcernComponent = New POCD_MT000040UV02Component3
            ConcernComponent.section = New POCD_MT000040UV02Section
            ConcernComponent.section.templateId = New II(2) {}
            ConcernComponent.section.templateId(0) = New II()
            ConcernComponent.section.templateId(0).root = oTemplateIDMaster.GetSectionID("Health Concern")
            ConcernComponent.section.templateId(0).extension = Nothing
            ConcernComponent.section.templateId(0).assigningAuthorityName = Nothing

            ConcernComponent.section.templateId(1) = New II()
            ConcernComponent.section.templateId(1).root = oTemplateIDMaster.GetSectionID("Health Concern")
            ConcernComponent.section.templateId(1).extension = _DateExtension2015
            ConcernComponent.section.templateId(1).assigningAuthorityName = Nothing
            ConcernComponent.section.code = New CE()
            _CodeSysItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Health Concern")
            If Not IsNothing(_CodeSysItem) Then
                ConcernComponent.section.code.code = _CodeSysItem.Code
                ConcernComponent.section.code.codeSystem = _CodeSysItem.CodingSystem
                ConcernComponent.section.code.codeSystemName = _CodeSysItem.CodingSystemName
                ConcernComponent.section.code.displayName = _CodeSysItem.Description
            End If
            ''
            ''ConcernComponent.section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, ConcernComponent.section)
            ''
            ''
            Dim sconf As CE
            sconf = New CE()
            sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, ConcernComponent.section)
            ''
            If Not IsNothing(sconf.code) Then
                ConcernComponent.section.confidentialityCode = sconf
            End If
            sconf = Nothing
            ''

            ConcernComponent.section.title = New ST()
            ConcernComponent.section.title.Text = New String() {"Health Concerns Section"}
            ConcernComponent.section.title.language = Nothing
            ConcernComponent.section.text = New StrucDocText()
            ConcernComponent.section.text.mediaType = Nothing
            ConcernComponent.section.text.ID = "HealthConcern_1"
            ConcernComponent.section.text.Text = New String() {"No Known Health Concerns"}
            ConcernComponent.section.text.language = Nothing
            ConcernComponent.section.entry = New POCD_MT000040UV02Entry(0) {}
            ConcernComponent.section.entry(0) = New POCD_MT000040UV02Entry
            ConcernComponent.section.entry(0).Item = New POCD_MT000040UV02Act
            Dim act As POCD_MT000040UV02Act
            act = DirectCast(ConcernComponent.section.entry(0).Item, POCD_MT000040UV02Act)
            act.classCodeSpecified = True
            act.classCode = x_ActClassDocumentEntryAct.ACT
            act.moodCodeSpecified = True
            act.moodCode = x_DocumentActMood.EVN
            act.templateId = New II(1) {}
            act.templateId(0) = New II
            act.templateId(0).root = oTemplateIDMaster.GetEntryID("HEalth Concern Act")
            act.templateId(0).extension = _DateExtension2015
            act.templateId(0).assigningAuthorityName = Nothing
            act.templateId(1) = New II
            act.templateId(1).root = oTemplateIDMaster.GetEntryID("HEalth Concern Act")
            act.templateId(1).extension = Nothing
            act.templateId(1).assigningAuthorityName = Nothing
            act.id = New II(0) {}
            act.id(0) = New II
            'act.id(0).root = Guid.NewGuid.ToString()
            act.id(0).nullFlavorSpecified = True
            act.id(0).nullFlavor = "UNK"
            act.code = New CD
            Dim CodesystemItem As CodeSystemItem = Nothing
            CodesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Health Concern")
            act.code.code = CodesystemItem.Code
            act.code.codeSystem = CodeSystem.LOINC
            act.code.codeSystemName = CodesystemItem.CodingSystemName
            act.code.displayName = CodesystemItem.Description
            act.text = New ED
            act.text.reference = New TEL
            act.text.reference.value = "#HealthConcern_1"
            act.statusCode = New CS()
            act.statusCode.code = "active"
        Catch ex As Exception

        End Try
    End Sub


#Region "Commented code"
    Private Function GetCDADataEnterer() As POCD_MT000040UV02DataEnterer
        Dim _dataenterer As POCD_MT000040UV02DataEnterer = Nothing
        Dim lstValues As New List(Of String)

        Try
            If mPatient.Clinic IsNot Nothing AndAlso mPatient.Clinic.PersonContactAddress IsNot Nothing AndAlso mPatient.Clinic.PersonContactPhone IsNot Nothing Then
                Dim clinic As gloCCDLibrary.Clinic = mPatient.Clinic

                With lstValues
                    .Add(clinic.ClinicId)
                    .Add(clinic.PersonContactAddress.Street)

                    .Add(clinic.PersonContactAddress.City)
                    .Add(clinic.PersonContactAddress.Zip)
                    .Add(clinic.PersonContactAddress.Country)
                    .Add(clinic.PersonContactAddress.State)

                    .Add(clinic.PersonContactPhone.Phone)

                    .Add(clinic.OfficeContactFirstname)
                End With

                If lstValues.All(Function(p) p IsNot Nothing AndAlso Not String.IsNullOrEmpty(p) AndAlso Not String.IsNullOrWhiteSpace(p) AndAlso p.Length > 0) Then







                    '_dataenterer
                    _dataenterer = New POCD_MT000040UV02DataEnterer
                    _dataenterer.typeCodeSpecified = False
                    _dataenterer.typeCode = Nothing

                    _dataenterer.contextControlCode = Nothing
                    _dataenterer.assignedEntity = New POCD_MT000040UV02AssignedEntity()
                    _dataenterer.assignedEntity.classCodeSpecified = False
                    _dataenterer.assignedEntity.classCode = Nothing
                    _dataenterer.assignedEntity.id = New II(0) {}
                    _dataenterer.assignedEntity.id(0) = New II()
                    _dataenterer.assignedEntity.id(0).extension = mPatient.Clinic.ClinicId
                    _dataenterer.assignedEntity.id(0).root = "2.16.840.1.113883.4.6"
                    _dataenterer.assignedEntity.id(0).assigningAuthorityName = Nothing
                    '_dataenterer.assignedEntity.code = New CE()
                    '_dataenterer.assignedEntity.code.code = "364SA2200X"
                    '_dataenterer.assignedEntity.code.displayName = "Adult Health"
                    '_dataenterer.assignedEntity.code.codeSystem = "2.16.840.1.113883.6.101"
                    '_dataenterer.assignedEntity.code.codeSystemName = "NUCC"
                    '_dataenterer.assignedEntity.code.codeSystemVersion = Nothing
                    _dataenterer.assignedEntity.addr = New AD(0) {}
                    _dataenterer.assignedEntity.addr(0) = New AD()
                    _dataenterer.assignedEntity.addr(0).Items = New ADXP(4) {}
                    _dataenterer.assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()
                    _dataenterer.assignedEntity.addr(0).Items(0).Text = New String() {mPatient.Clinic.PersonContactAddress.Street}
                    _dataenterer.assignedEntity.addr(0).Items(0).language = Nothing
                    _dataenterer.assignedEntity.addr(0).Items(0).partType = Nothing
                    _dataenterer.assignedEntity.addr(0).Items(1) = New adxpcity()
                    _dataenterer.assignedEntity.addr(0).Items(1).Text = New String() {mPatient.Clinic.PersonContactAddress.City}
                    _dataenterer.assignedEntity.addr(0).Items(1).language = Nothing
                    _dataenterer.assignedEntity.addr(0).Items(1).partType = Nothing
                    _dataenterer.assignedEntity.addr(0).Items(2) = New adxpstate()
                    _dataenterer.assignedEntity.addr(0).Items(2).Text = New String() {mPatient.Clinic.PersonContactAddress.State}
                    _dataenterer.assignedEntity.addr(0).Items(2).language = Nothing
                    _dataenterer.assignedEntity.addr(0).Items(2).partType = Nothing
                    _dataenterer.assignedEntity.addr(0).Items(3) = New adxppostalCode()
                    _dataenterer.assignedEntity.addr(0).Items(3).Text = New String() {mPatient.Clinic.PersonContactAddress.Zip}
                    _dataenterer.assignedEntity.addr(0).Items(3).language = Nothing
                    _dataenterer.assignedEntity.addr(0).Items(3).partType = Nothing
                    _dataenterer.assignedEntity.addr(0).Items(4) = New adxpcountry()
                    _dataenterer.assignedEntity.addr(0).Items(4).Text = New String() {mPatient.Clinic.PersonContactAddress.Country}
                    _dataenterer.assignedEntity.addr(0).Items(4).language = Nothing
                    _dataenterer.assignedEntity.addr(0).Items(4).partType = Nothing
                    _dataenterer.assignedEntity.telecom = New TEL(0) {}
                    _dataenterer.assignedEntity.telecom(0) = New TEL()

                    _dataenterer.assignedEntity.telecom(0).use = New TelecommunicationAddressUse(0) {}
                    _dataenterer.assignedEntity.telecom(0).use(0) = TelecommunicationAddressUse.WP
                    _dataenterer.assignedEntity.telecom(0).value = String.Format("{0:tel:+1(###) ###-####}", Long.Parse(mPatient.Clinic.PersonContactPhone.Phone))
                    _dataenterer.assignedEntity.assignedPerson = New POCD_MT000040UV02Person()
                    _dataenterer.assignedEntity.assignedPerson.classCodeSpecified = False
                    _dataenterer.assignedEntity.assignedPerson.classCode = Nothing
                    _dataenterer.assignedEntity.assignedPerson.determinerCode = Nothing
                    _dataenterer.assignedEntity.assignedPerson.name = New PN(0) {}
                    _dataenterer.assignedEntity.assignedPerson.name(0) = New PN()
                    _dataenterer.assignedEntity.assignedPerson.name(0).Items = New ENXP(2) {}

                    _dataenterer.assignedEntity.assignedPerson.name(0).Items(0) = New engiven()
                    _dataenterer.assignedEntity.assignedPerson.name(0).Items(0).Text = New String() {mPatient.Clinic.OfficeContactFirstname}
                    _dataenterer.assignedEntity.assignedPerson.name(0).Items(0).language = Nothing
                    _dataenterer.assignedEntity.assignedPerson.name(0).Items(0).partType = Nothing

                    If Not String.IsNullOrEmpty(mPatient.Clinic.OfficeContactLastname) AndAlso Not String.IsNullOrWhiteSpace(mPatient.Clinic.OfficeContactLastname) Then

                        _dataenterer.assignedEntity.assignedPerson.name(0).Items(1) = New enfamily()
                        _dataenterer.assignedEntity.assignedPerson.name(0).Items(1).Text = New String() {mPatient.Clinic.OfficeContactLastname}
                        _dataenterer.assignedEntity.assignedPerson.name(0).Items(1).language = Nothing
                        _dataenterer.assignedEntity.assignedPerson.name(0).Items(1).partType = Nothing
                    End If
                    '_dataenterer.assignedEntity.assignedPerson.name(0).Items(2) = New ensuffix()
                    '_dataenterer.assignedEntity.assignedPerson.name(0).Items(2).Text = New String() {"RN"}
                    '_dataenterer.assignedEntity.assignedPerson.name(0).Items(2).language = Nothing
                    '_dataenterer.assignedEntity.assignedPerson.name(0).Items(2).partType = Nothing
                End If

                clinic = Nothing
            End If
            Return _dataenterer
        Catch ex As Exception
            Return Nothing
        Finally
            If lstValues IsNot Nothing Then
                lstValues.Clear()
                lstValues = Nothing
            End If
        End Try
    End Function
    'Private Function GetCDAinforecepient() As POCD_MT000040InformationRecipient
    ' Dim _inforecipient As POCD_MT000040InformationRecipient()
    '    Try


    '        'informationRecipient
    '  _inforecipient = New POCD_MT000040InformationRecipient(0) {}
    '  _inforecipient(0) = New POCD_MT000040InformationRecipient
    '        _inforecipient(0).intendedRecipient = New POCD_MT000040IntendedRecipient
    '        _inforecipient(0).intendedRecipient.id = New II(0) {}
    '        _inforecipient(0).intendedRecipient.id(0) = New II()
    '        _inforecipient(0).intendedRecipient.id(0).root = "2.16.840.1.113883.4.6"
    '        _inforecipient(0).intendedRecipient.id(0).assigningAuthorityName = Nothing
    '        _inforecipient(0).intendedRecipient.id(0).extension = "23456"
    '        _inforecipient(0).intendedRecipient.id(0).nullFlavor = Nothing
    '        _inforecipient(0).intendedRecipient.informationRecipient = New POCD_MT000040UV02Person
    '        _inforecipient(0).intendedRecipient.informationRecipient.classCode = Nothing
    '        _inforecipient(0).intendedRecipient.informationRecipient.determinerCode = Nothing
    '        _inforecipient(0).intendedRecipient.informationRecipient.name = New PN(0) {}
    '        _inforecipient(0).intendedRecipient.informationRecipient.name(0) = New PN()
    '        _inforecipient(0).intendedRecipient.informationRecipient.name(0).Items = New ENXP(2) {}
    '        _inforecipient(0).intendedRecipient.informationRecipient.name(0).Items(0) = New enfamily()
    '        _inforecipient(0).intendedRecipient.informationRecipient.name(0).Items(0).Text = New String() {"Bernard"}
    '        _inforecipient(0).intendedRecipient.informationRecipient.name(0).Items(0).language = Nothing
    '        _inforecipient(0).intendedRecipient.informationRecipient.name(0).Items(0).partType = Nothing
    '        _inforecipient(0).intendedRecipient.informationRecipient.name(0).Items(1) = New engiven()
    '        _inforecipient(0).intendedRecipient.informationRecipient.name(0).Items(1).Text = New String() {"Crane"}
    '        _inforecipient(0).intendedRecipient.informationRecipient.name(0).Items(1).language = Nothing
    '        _inforecipient(0).intendedRecipient.informationRecipient.name(0).Items(1).partType = Nothing
    '        _inforecipient(0).intendedRecipient.informationRecipient.name(0).Items(2) = New ensuffix()
    '        _inforecipient(0).intendedRecipient.informationRecipient.name(0).Items(2).Text = New String() {"MD"}
    '        _inforecipient(0).intendedRecipient.informationRecipient.name(0).Items(2).language = Nothing
    '        _inforecipient(0).intendedRecipient.informationRecipient.name(0).Items(2).partType = Nothing
    '        _inforecipient(0).intendedRecipient.receivedOrganization = New POCD_MT000040UV02Organization()
    '        _inforecipient(0).intendedRecipient.receivedOrganization.classCode = Nothing
    '        _inforecipient(0).intendedRecipient.receivedOrganization.determinerCode = Nothing
    '        _inforecipient(0).intendedRecipient.receivedOrganization.name = New [ON](0) {}
    '        _inforecipient(0).intendedRecipient.receivedOrganization.name(0) = New [ON]()
    '        _inforecipient(0).intendedRecipient.receivedOrganization.name(0).Text = New String() {"Springfield Geriatric Associates"}
    '        _inforecipient(0).intendedRecipient.receivedOrganization.telecom = New TEL(0) {}
    '        _inforecipient(0).intendedRecipient.receivedOrganization.telecom(0) = New TEL()
    '        _inforecipient(0).intendedRecipient.receivedOrganization.telecom(0).value = "tel:+1(571)555-0179"
    '        _inforecipient(0).intendedRecipient.receivedOrganization.telecom(0).use(0) = TelecommunicationAddressUse.WP
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr = New AD(0) {}
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0) = New AD()
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items = New ADXP(4) {}
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(0) = New adxpstreetAddressLine()
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(0).Text = New String() {("Address" + " " + "Address2").Trim()}
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(0).language = Nothing
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(0).partType = Nothing
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(1) = New adxpcity()
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(1).Text = New String() {"Springfield"}
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(1).language = Nothing
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(1).partType = Nothing
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(2) = New adxpstate()
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(2).Text = New String() {"VA"} 'StateCode
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(2).language = Nothing
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(2).partType = Nothing
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(3) = New adxppostalCode()
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(3).Text = New String() {"42130"}  'Zip Code
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(3).language = Nothing
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(3).partType = Nothing
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(4) = New adxpcountry()
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(4).Text = New String() {"US"}  'Country Code
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(4).language = Nothing
    '        _inforecipient(0).intendedRecipient.receivedOrganization.addr(0).Items(4).partType = Nothing
    '        _inforecipient(0).intendedRecipient.receivedOrganization.standardIndustryClassCode = New CE()
    '        _inforecipient(0).intendedRecipient.receivedOrganization.standardIndustryClassCode.code = "207QG0300X"
    '        _inforecipient(0).intendedRecipient.receivedOrganization.standardIndustryClassCode.codeSystem = "2.16.840.1.113883.6.101"
    '        _inforecipient(0).intendedRecipient.receivedOrganization.standardIndustryClassCode.codeSystemName = "NUCC"
    '        _inforecipient(0).intendedRecipient.receivedOrganization.standardIndustryClassCode.displayName = "Geriatric Medicine"
    '        _inforecipient(0).intendedRecipient.receivedOrganization.standardIndustryClassCode.codeSystemVersion = Nothing

    '        Return _inforecipient(0)
    '    Catch ex As Exception
    '        Return Nothing
    '    Finally

    '    End Try
    'End Function
    Private Function GetQRDAIIIinforecepient() As POCD_MT000040UV02Participant
        Dim _inforecipient As POCD_MT000040UV02Participant()
        Try


            'informationRecipient
            _inforecipient = New POCD_MT000040UV02Participant(0) {}

            _inforecipient(0) = New POCD_MT000040UV02Participant
            _inforecipient(0).typeCodeSpecified = False
            _inforecipient(0).typeCode = Nothing
            _inforecipient(0).intendedRecipient = New POCD_MT000040UV02IntendedRecipient
            _inforecipient(0).intendedRecipient.classCode = Nothing
            _inforecipient(0).intendedRecipient.classCodeSpecified = False
            _inforecipient(0).intendedRecipient.id = New II(0) {}
            _inforecipient(0).intendedRecipient.id(0) = New II()
            _inforecipient(0).intendedRecipient.id(0).root = "2.16.840.1.113883.3.249.7"
            _inforecipient(0).intendedRecipient.id(0).assigningAuthorityName = Nothing
            If _nQRDAFileType = CDAFileTypeEnum.QRDA3 Or _nQRDAFileType = CDAFileTypeEnum.QRDA1 Then
                If _IsGroupReporting Then
                    _inforecipient(0).intendedRecipient.id(0).extension = "MIPS_GROUP"
                Else
                    _inforecipient(0).intendedRecipient.id(0).extension = "MIPS_INDIV"
                End If

            End If





            _inforecipient(0).intendedRecipient.id(0).nullFlavor = Nothing


            Return _inforecipient(0)
        Catch ex As Exception
            Return Nothing
        Finally

        End Try
    End Function
    'Private Function GetCDALegalAuthenticator() As POCD_MT000040LegalAuthenticator
    '    Dim _legalAuthenticator As POCD_MT000040LegalAuthenticator
    '    Try


    '        'Legal Authenticator
    '        _legalAuthenticator = New POCD_MT000040LegalAuthenticator
    '        _legalAuthenticator.typeCode = Nothing
    '        _legalAuthenticator.contextControlCode = Nothing
    '        _legalAuthenticator.time = New TS()
    '        _legalAuthenticator.time.value = DateTime.Now.ToString("yyyyMMddmmss") & "00"
    '        _legalAuthenticator.signatureCode = New CS()
    '        _legalAuthenticator.signatureCode.code = "S"
    '        _legalAuthenticator.signatureCode.codeSystem = Nothing
    '        _legalAuthenticator.signatureCode.codeSystemName = Nothing
    '        _legalAuthenticator.signatureCode.codeSystemVersion = Nothing
    '        _legalAuthenticator.signatureCode.displayName = Nothing
    '        _legalAuthenticator.assignedEntity = New POCD_MT000040UV02AssignedEntity()
    '        _legalAuthenticator.assignedEntity.classCode = Nothing
    '        _legalAuthenticator.assignedEntity.id = New II(0) {}
    '        _legalAuthenticator.assignedEntity.id(0) = New II()
    '        _legalAuthenticator.assignedEntity.id(0).nullFlavor = Nothing
    '        _legalAuthenticator.assignedEntity.id(0).root = "2.16.840.1.113883.4.6"
    '        _legalAuthenticator.assignedEntity.id(0).extension = "12345"
    '        _legalAuthenticator.assignedEntity.id(0).assigningAuthorityName = Nothing
    '        _legalAuthenticator.assignedEntity.code = New CE()
    '        _legalAuthenticator.assignedEntity.code.code = "207QG0300X"
    '        _legalAuthenticator.assignedEntity.code.codeSystem = "2.16.840.1.113883.6.101"
    '        _legalAuthenticator.assignedEntity.code.codeSystemName = "NUCC"
    '        _legalAuthenticator.assignedEntity.code.displayName = "Adult Medicine"
    '        _legalAuthenticator.assignedEntity.code.codeSystemVersion = Nothing
    '        _legalAuthenticator.assignedEntity.addr = New AD(0) {}
    '        _legalAuthenticator.assignedEntity.addr(0) = New AD()
    '        _legalAuthenticator.assignedEntity.addr(0).Items = New ADXP(4) {}
    '        _legalAuthenticator.assignedEntity.addr(0).Items(0) = New adxpstreetAddressLine()
    '        _legalAuthenticator.assignedEntity.addr(0).Items(0).Text = New String() {("Address" + " " + "Address2").Trim()}
    '        _legalAuthenticator.assignedEntity.addr(0).Items(0).language = Nothing
    '        _legalAuthenticator.assignedEntity.addr(0).Items(0).partType = Nothing
    '        _legalAuthenticator.assignedEntity.addr(0).Items(1) = New adxpcity()
    '        _legalAuthenticator.assignedEntity.addr(0).Items(1).Text = New String() {"Springfield"}
    '        _legalAuthenticator.assignedEntity.addr(0).Items(1).language = Nothing
    '        _legalAuthenticator.assignedEntity.addr(0).Items(1).partType = Nothing
    '        _legalAuthenticator.assignedEntity.addr(0).Items(2) = New adxpstate()
    '        _legalAuthenticator.assignedEntity.addr(0).Items(2).Text = New String() {"VA"} 'StateCode
    '        _legalAuthenticator.assignedEntity.addr(0).Items(2).language = Nothing
    '        _legalAuthenticator.assignedEntity.addr(0).Items(2).partType = Nothing
    '        _legalAuthenticator.assignedEntity.addr(0).Items(3) = New adxppostalCode()
    '        _legalAuthenticator.assignedEntity.addr(0).Items(3).Text = New String() {"42130"}  'Zip Code
    '        _legalAuthenticator.assignedEntity.addr(0).Items(3).language = Nothing
    '        _legalAuthenticator.assignedEntity.addr(0).Items(3).partType = Nothing
    '        _legalAuthenticator.assignedEntity.addr(0).Items(4) = New adxpcountry()
    '        _legalAuthenticator.assignedEntity.addr(0).Items(4).Text = New String() {"US"}  'Country Code
    '        _legalAuthenticator.assignedEntity.addr(0).Items(4).language = Nothing
    '        _legalAuthenticator.assignedEntity.addr(0).Items(4).partType = Nothing
    '        _legalAuthenticator.assignedEntity.telecom = New TEL(0) {}
    '        _legalAuthenticator.assignedEntity.telecom(0) = New TEL()
    '        _legalAuthenticator.assignedEntity.telecom(0).value = "tel:+1(571)555-0179;ext=221"
    '        _legalAuthenticator.assignedEntity.telecom(0).use = Nothing
    '        _legalAuthenticator.assignedEntity.assignedPerson = New POCD_MT000040UV02Person()
    '        _legalAuthenticator.assignedEntity.assignedPerson.classCode = Nothing
    '        _legalAuthenticator.assignedEntity.assignedPerson.determinerCode = Nothing
    '        _legalAuthenticator.assignedEntity.assignedPerson.name = New PN(0) {}
    '        _legalAuthenticator.assignedEntity.assignedPerson.name(0) = New PN()
    '        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items = New ENXP(2) {}
    '        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0) = New enfamily()
    '        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0).Text = New String() {"Boccino"}
    '        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0).language = Nothing
    '        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(0).partType = Nothing
    '        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1) = New engiven()
    '        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1).Text = New String() {"Raymond"}
    '        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1).language = Nothing
    '        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(1).partType = Nothing
    '        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2) = New ensuffix()
    '        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2).Text = New String() {"MD"}
    '        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2).language = Nothing
    '        _legalAuthenticator.assignedEntity.assignedPerson.name(0).Items(2).partType = Nothing

    '        Return _legalAuthenticator
    '    Catch ex As Exception
    '        Return Nothing
    '    Finally

    '    End Try
    'End Function
    'Private Function GetCDAParticipant() As POCD_MT000040Participant1
    '    Dim _participant As POCD_MT000040Participant1()
    '    Try


    '        'Participant
    '        _participant = New POCD_MT000040Participant1(0) {}
    '        _participant(0) = New POCD_MT000040Participant1()
    '        _participant(0).typeCode = "IND"
    '        _participant(0).contextControlCode = Nothing
    '        _participant(0).associatedEntity = New POCD_MT000040AssociatedEntity()
    '        _participant(0).associatedEntity.classCode = "PRS"
    '        _participant(0).associatedEntity.addr = New AD(0) {}
    '        _participant(0).associatedEntity.addr(0) = New AD()
    '        _participant(0).associatedEntity.addr(0).Items = New ADXP(4) {}
    '        _participant(0).associatedEntity.addr(0).Items(0) = New adxpstreetAddressLine()
    '        _participant(0).associatedEntity.addr(0).Items(0).Text = New String() {("Address" + " " + "Address2").Trim()}
    '        _participant(0).associatedEntity.addr(0).Items(0).language = Nothing
    '        _participant(0).associatedEntity.addr(0).Items(0).partType = Nothing
    '        _participant(0).associatedEntity.addr(0).Items(1) = New adxpcity()
    '        _participant(0).associatedEntity.addr(0).Items(1).Text = New String() {"Springfield"}
    '        _participant(0).associatedEntity.addr(0).Items(1).language = Nothing
    '        _participant(0).associatedEntity.addr(0).Items(1).partType = Nothing
    '        _participant(0).associatedEntity.addr(0).Items(2) = New adxpstate()
    '        _participant(0).associatedEntity.addr(0).Items(2).Text = New String() {"VA"} 'StateCode
    '        _participant(0).associatedEntity.addr(0).Items(2).language = Nothing
    '        _participant(0).associatedEntity.addr(0).Items(2).partType = Nothing
    '        _participant(0).associatedEntity.addr(0).Items(3) = New adxppostalCode()
    '        _participant(0).associatedEntity.addr(0).Items(3).Text = New String() {"42130"}  'Zip Code
    '        _participant(0).associatedEntity.addr(0).Items(3).language = Nothing
    '        _participant(0).associatedEntity.addr(0).Items(3).partType = Nothing
    '        _participant(0).associatedEntity.addr(0).Items(4) = New adxpcountry()
    '        _participant(0).associatedEntity.addr(0).Items(4).Text = New String() {"US"}  'Country Code
    '        _participant(0).associatedEntity.addr(0).Items(4).language = Nothing
    '        _participant(0).associatedEntity.addr(0).Items(4).partType = Nothing
    '        _participant(0).associatedEntity.telecom = New TEL(0) {}
    '        _participant(0).associatedEntity.telecom(0) = New TEL()
    '        _participant(0).associatedEntity.telecom(0).value = "tel:+1(571)555-0179;ext=221"
    '        _participant(0).associatedEntity.telecom(0).use = Nothing
    '        _participant(0).associatedEntity.associatedPerson = New POCD_MT000040UV02Person()
    '        _participant(0).associatedEntity.associatedPerson.classCode = Nothing
    '        _participant(0).associatedEntity.associatedPerson.determinerCode = Nothing
    '        _participant(0).associatedEntity.associatedPerson.name = New PN(0) {}
    '        _participant(0).associatedEntity.associatedPerson.name(0) = New PN()
    '        _participant(0).associatedEntity.associatedPerson.name(0).Items = New ENXP(1) {}
    '        _participant(0).associatedEntity.associatedPerson.name(0).Items(0) = New enfamily()
    '        _participant(0).associatedEntity.associatedPerson.name(0).Items(0).Text = New String() {"McReary"}
    '        _participant(0).associatedEntity.associatedPerson.name(0).Items(0).language = Nothing
    '        _participant(0).associatedEntity.associatedPerson.name(0).Items(0).partType = Nothing
    '        _participant(0).associatedEntity.associatedPerson.name(0).Items(1) = New engiven()
    '        _participant(0).associatedEntity.associatedPerson.name(0).Items(1).Text = New String() {"Kathleen"}
    '        _participant(0).associatedEntity.associatedPerson.name(0).Items(1).language = Nothing
    '        _participant(0).associatedEntity.associatedPerson.name(0).Items(1).partType = Nothing
    '        Return _participant(0)
    '    Catch ex As Exception
    '        Return Nothing
    '    Finally

    '    End Try
    'End Function


#End Region

    Private Sub getCDAEntryReference(ByRef entryrelationship As POCD_MT000040UV02EntryRelationship, ByVal GUID As String, Optional ByVal ReferenceType As String = "")
        entryrelationship.typeCodeSpecified = True
        'If isinterventiontoGoal = True Then
        '    entryrelationship.typeCode = ActRelationshipType.RSON

        'Else
        '    entryrelationship.typeCode = ActRelationshipType.REFR
        'End If
        Select Case ReferenceType
            Case "InterventionToGoal"
                entryrelationship.typeCode = ActRelationshipType.RSON
            Case "OutcometoGoal"
                entryrelationship.typeCode = ActRelationshipType.GEVL
            Case "OutcometoIntervention"
                entryrelationship.typeCode = ActRelationshipType.RSON
                'Case "InterventionToGoal"
                '    entryrelationship.typeCode = ActRelationshipType.RSON
            Case ""
                entryrelationship.typeCode = ActRelationshipType.REFR
        End Select



        entryrelationship.Item = New POCD_MT000040UV02Act()
        Dim entryrelationshipact As POCD_MT000040UV02Act = Nothing

        entryrelationshipact = DirectCast(entryrelationship.Item, POCD_MT000040UV02Act)
        'entryrelationship.Item(0) = New POCD_MT000040UV02Act
        entryrelationshipact.classCodeSpecified = True
        entryrelationshipact.classCode = x_ActClassDocumentEntryAct.ACT
        entryrelationshipact.moodCodeSpecified = True
        entryrelationshipact.moodCode = x_DocumentActMood.EVN
        entryrelationshipact.templateId = New II(0) {}
        entryrelationshipact.templateId(0) = New II
        entryrelationshipact.templateId(0).root = oTemplateIDMaster.GetEntryID("Entry Refer")

        entryrelationshipact.id = New II(0) {}
        entryrelationshipact.id(0) = New II
        entryrelationshipact.id(0).root = GUID


        entryrelationshipact.code = New CD
        entryrelationshipact.code.nullFlavorSpecified = True
        entryrelationshipact.code.nullFlavor = "NP"
        entryrelationshipact.statusCode = New CS
        entryrelationshipact.statusCode.code = "completed"
    End Sub
    Private Sub getCDANutritionRecommendation(ByRef item As Object, Optional ByVal intervention As Intervention = Nothing, Optional ByVal _PlannedModule As PlannedModule = Nothing)
        Dim act As POCD_MT000040UV02Act = Nothing

        act = DirectCast(item, POCD_MT000040UV02Act)
        act.moodCodeSpecified = True
        act.moodCode = x_DocumentActMood.INT
        act.classCodeSpecified = True
        act.classCode = x_ActClassDocumentEntryAct.ACT
        act.templateId = New II(0) {}
        act.templateId(0) = New II
        act.templateId(0).root = oTemplateIDMaster.GetEntryID("Nutrition Recommendations")
        act.id = New II(0) {}
        act.id(0) = New II()
        act.id(0).root = Guid.NewGuid.ToString
        act.code = New CD

        act.code.codeSystem = CodeSystem.SNOMED_CT
        act.code.codeSystemName = "SNOMED CT"

        If Not IsNothing(intervention) Then
            act.code.code = intervention.NutritionRecomendation
            act.code.displayName = intervention.NutritionRecomendationDesc
        End If
        If Not IsNothing(_PlannedModule) Then
            act.code.code = _PlannedModule.PlannedCode
            act.code.displayName = _PlannedModule.PlannedName
        End If

        act.statusCode = New CS()
        act.statusCode.code = "active"

    End Sub

    Private Function getCDAInterventionSection() As POCD_MT000040UV02Component3
        Try
            Dim Intervention As POCD_MT000040UV02Component3 = Nothing
            Intervention = New POCD_MT000040UV02Component3
            Intervention.section = New POCD_MT000040UV02Section
            If mPatient.InterventionCol IsNot Nothing AndAlso (mPatient.InterventionCol.InterventionList.Count > 0 Or mPatient.InterventionCol.PlannedIntervention.Count > 0) Then
                Intervention.section.templateId = New II(1) {}
                Intervention.section.templateId(0) = New II
                Intervention.section.templateId(0).root = oTemplateIDMaster.GetSectionID("Interventions")
                Intervention.section.templateId(0).extension = _DateExtension2015
                Intervention.section.templateId(0).assigningAuthorityName = Nothing
                Intervention.section.templateId(1) = New II
                Intervention.section.templateId(1).root = oTemplateIDMaster.GetSectionID("Interventions")
                Intervention.section.templateId(1).extension = Nothing
                Intervention.section.templateId(1).assigningAuthorityName = Nothing

                Intervention.section.code = New CE
                Dim _codesystemItem As CodeSystemItem = Nothing
                _codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Interventions")
                Intervention.section.code.code = _codesystemItem.Code
                Intervention.section.code.codeSystem = CodeSystem.LOINC
                Intervention.section.code.codeSystemName = _codesystemItem.CodingSystemName
                Intervention.section.code.displayName = _codesystemItem.Description
                Intervention.section.title = New ST
                Intervention.section.title.Text = New String() {"Interventions Section"}
                Intervention.section.text = New StrucDocText
                Intervention.section.text.Items = New Object(5) {}

                Intervention.section.text.Items(0) = New StrucDocTable
                Dim table As StrucDocTable = Nothing
                table = DirectCast(Intervention.section.text.Items(0), StrucDocTable)
                table.border = "1"
                table.width = "100%"
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}
                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(3) {}

                table.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Completed Intervention"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing

                table.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Notes"}
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing

                table.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Date"}
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing


                Dim tablePlanned As StrucDocTable = Nothing
                Intervention.section.text.Items(3) = New StrucDocTable
                tablePlanned = DirectCast(Intervention.section.text.Items(3), StrucDocTable)
                tablePlanned.border = "1"
                tablePlanned.width = "100%"
                tablePlanned.ID = Nothing
                tablePlanned.language = Nothing
                tablePlanned.border = "1"
                tablePlanned.width = "100%"
                tablePlanned.thead = New StrucDocThead()
                tablePlanned.thead.ID = Nothing
                tablePlanned.thead.language = Nothing
                tablePlanned.thead.tr = New StrucDocTr(0) {}
                tablePlanned.thead.tr(0) = New StrucDocTr()
                tablePlanned.thead.tr(0).ID = Nothing
                tablePlanned.thead.tr(0).language = Nothing
                tablePlanned.thead.tr(0).Items = New Object(3) {}

                tablePlanned.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(tablePlanned.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Planned Intervention"}
                DirectCast(tablePlanned.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(tablePlanned.thead.tr(0).Items(0), StrucDocTh).language = Nothing

                tablePlanned.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(tablePlanned.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Notes"}
                DirectCast(tablePlanned.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(tablePlanned.thead.tr(0).Items(1), StrucDocTh).language = Nothing

                tablePlanned.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(tablePlanned.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Date"}
                DirectCast(tablePlanned.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(tablePlanned.thead.tr(0).Items(2), StrucDocTh).language = Nothing


                Dim _interventionCol As InterventionCol = Nothing
                _interventionCol = mPatient.InterventionCol
                Dim interventionentry As Integer = 0
                Dim Plannedinterventionentry As Integer = 0
                Dim Interventinduplicates = Nothing
                Dim Plannedduplicates = Nothing
                If _interventionCol.InterventionList.Count > 0 Then
                    Interventinduplicates = _interventionCol.InterventionList.GroupBy(Function(x) x.InterventionId).Select(Function(x) x.FirstOrDefault).ToList
                    interventionentry = DirectCast(Interventinduplicates, List(Of Intervention)).Count
                End If
                If _interventionCol.PlannedIntervention.Count > 0 Then
                    Plannedduplicates = _interventionCol.PlannedIntervention.GroupBy(Function(x) x.InterventionId).Select(Function(x) x.FirstOrDefault).ToList
                    Plannedinterventionentry = DirectCast(Plannedduplicates, List(Of Intervention)).Count
                End If

                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing
                table.tbody(0).tr = New StrucDocTr(interventionentry) {}
                table.tbody(0).tr(0) = New StrucDocTr()
                table.tbody(0).tr(0).ID = Nothing
                table.tbody(0).tr(0).language = Nothing
                table.tbody(0).tr(0).Items = New Object(2) {}
                table.tbody(0).tr(0).Items(0) = New StrucDocTd()
                DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
                DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing

                tablePlanned.tbody = New StrucDocTbody(0) {}
                tablePlanned.tbody(0) = New StrucDocTbody()
                tablePlanned.tbody(0).ID = Nothing
                tablePlanned.tbody(0).language = Nothing
                tablePlanned.tbody(0).tr = New StrucDocTr(Plannedinterventionentry) {}
                tablePlanned.tbody(0).tr(0) = New StrucDocTr()
                tablePlanned.tbody(0).tr(0).ID = Nothing
                tablePlanned.tbody(0).tr(0).language = Nothing
                tablePlanned.tbody(0).tr(0).Items = New Object(2) {}
                tablePlanned.tbody(0).tr(0).Items(0) = New StrucDocTd()
                DirectCast(tablePlanned.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
                DirectCast(tablePlanned.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing

                Intervention.section.text.Items(1) = New StrucDocContent
                DirectCast(Intervention.section.text.Items(1), StrucDocContent).ID = Nothing
                DirectCast(Intervention.section.text.Items(1), StrucDocContent).language = Nothing
                DirectCast(Intervention.section.text.Items(1), StrucDocContent).Text = New String() {"Completed Intervention References"}

                Intervention.section.text.Items(4) = New StrucDocContent
                DirectCast(Intervention.section.text.Items(4), StrucDocContent).ID = Nothing
                DirectCast(Intervention.section.text.Items(4), StrucDocContent).language = Nothing
                DirectCast(Intervention.section.text.Items(4), StrucDocContent).Text = New String() {"Planned Intervention References"}

                Intervention.section.text.Items(2) = New StrucDocTable
                Dim tblAsson As StrucDocTable = Nothing
                tblAsson = DirectCast(Intervention.section.text.Items(2), StrucDocTable)
                tblAsson.border = "1"
                tblAsson.width = "100%"
                tblAsson.ID = Nothing
                tblAsson.language = Nothing
                tblAsson.border = "1"
                tblAsson.width = "100%"
                tblAsson.thead = New StrucDocThead()
                tblAsson.thead.ID = Nothing
                tblAsson.thead.language = Nothing
                tblAsson.thead.tr = New StrucDocTr(0) {}
                tblAsson.thead.tr(0) = New StrucDocTr()
                tblAsson.thead.tr(0).ID = Nothing
                tblAsson.thead.tr(0).language = Nothing
                tblAsson.thead.tr(0).Items = New Object(3) {}

                tblAsson.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(tblAsson.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Intervention Name"}
                DirectCast(tblAsson.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(tblAsson.thead.tr(0).Items(0), StrucDocTh).language = Nothing

                tblAsson.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(tblAsson.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Reference Type"}
                DirectCast(tblAsson.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(tblAsson.thead.tr(0).Items(1), StrucDocTh).language = Nothing

                tblAsson.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(tblAsson.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Reference"}
                DirectCast(tblAsson.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(tblAsson.thead.tr(0).Items(2), StrucDocTh).language = Nothing

                tblAsson.tbody = New StrucDocTbody(0) {}
                tblAsson.tbody(0) = New StrucDocTbody()
                tblAsson.tbody(0).ID = Nothing
                tblAsson.tbody(0).language = Nothing
                tblAsson.tbody(0).tr = New StrucDocTr(_interventionCol.InterventionList.Count) {}
                tblAsson.tbody(0).tr(0) = New StrucDocTr()
                tblAsson.tbody(0).tr(0).ID = Nothing
                tblAsson.tbody(0).tr(0).language = Nothing
                tblAsson.tbody(0).tr(0).Items = New Object(2) {}
                tblAsson.tbody(0).tr(0).Items(0) = New StrucDocTd()
                DirectCast(tblAsson.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
                DirectCast(tblAsson.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing


                Intervention.section.text.Items(5) = New StrucDocTable
                Dim tblPlannedAsson As StrucDocTable = Nothing
                tblPlannedAsson = DirectCast(Intervention.section.text.Items(5), StrucDocTable)
                tblPlannedAsson.border = "1"
                tblPlannedAsson.width = "100%"
                tblPlannedAsson.ID = Nothing
                tblPlannedAsson.language = Nothing
                tblPlannedAsson.border = "1"
                tblPlannedAsson.width = "100%"
                tblPlannedAsson.thead = New StrucDocThead()
                tblPlannedAsson.thead.ID = Nothing
                tblPlannedAsson.thead.language = Nothing
                tblPlannedAsson.thead.tr = New StrucDocTr(0) {}
                tblPlannedAsson.thead.tr(0) = New StrucDocTr()
                tblPlannedAsson.thead.tr(0).ID = Nothing
                tblPlannedAsson.thead.tr(0).language = Nothing
                tblPlannedAsson.thead.tr(0).Items = New Object(3) {}

                tblPlannedAsson.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(tblPlannedAsson.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Intervention Name"}
                DirectCast(tblPlannedAsson.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(tblPlannedAsson.thead.tr(0).Items(0), StrucDocTh).language = Nothing

                tblPlannedAsson.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(tblPlannedAsson.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Reference Type"}
                DirectCast(tblPlannedAsson.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(tblPlannedAsson.thead.tr(0).Items(1), StrucDocTh).language = Nothing

                tblPlannedAsson.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(tblPlannedAsson.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Reference"}
                DirectCast(tblPlannedAsson.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(tblPlannedAsson.thead.tr(0).Items(2), StrucDocTh).language = Nothing

                tblPlannedAsson.tbody = New StrucDocTbody(0) {}
                tblPlannedAsson.tbody(0) = New StrucDocTbody()
                tblPlannedAsson.tbody(0).ID = Nothing
                tblPlannedAsson.tbody(0).language = Nothing
                tblPlannedAsson.tbody(0).tr = New StrucDocTr(_interventionCol.PlannedIntervention.Count) {}
                tblPlannedAsson.tbody(0).tr(0) = New StrucDocTr()
                tblPlannedAsson.tbody(0).tr(0).ID = Nothing
                tblPlannedAsson.tbody(0).tr(0).language = Nothing
                tblPlannedAsson.tbody(0).tr(0).Items = New Object(2) {}
                tblPlannedAsson.tbody(0).tr(0).Items(0) = New StrucDocTd()
                DirectCast(tblPlannedAsson.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
                DirectCast(tblPlannedAsson.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing
                Dim AssIndex As Int32 = 0
                Dim PlannedAssIndex As Int32 = 0
                Try
                    For p As Int32 = 0 To _interventionCol.InterventionList.Count - 1
                        Dim _Intervention As Intervention = _interventionCol.InterventionList.Item(p)
                        If _Intervention.AssociateId <> 0 Then
                            Dim sRefType As String = ""
                            Dim sRefDesc As String = ""
                            If _Intervention.AssociateType = 1 Then
                                Dim GoalCol As GoalsCol = mPatient.GoalsCol
                                Dim Goallist = GoalCol.GoalsList.Where(Function(r) r.GoalId = _Intervention.AssociateId).ToList()
                                If CType(Goallist, List(Of Goal)).Count > 0 Then
                                    Dim _goal As Goal = CType(Goallist, List(Of Goal)).Item(0)
                                    sRefDesc = _goal.GoalName
                                    sRefType = "Goal"
                                End If
                            ElseIf _Intervention.AssociateType = "2" Then
                                sRefDesc = _Intervention.NutritionInstruction & " - " & _Intervention.NutritionRecomendationDesc
                                sRefType = "Nutrition"
                            ElseIf _Intervention.AssociateType = "3" Then
                                Dim Medication1 = mPatient.PatientMedications.Where(Function(r) r.MedicationID = _Intervention.AssociateId).FirstOrDefault()
                                If IsNothing(Medication1) Then
                                    Medication1 = mPatient.PatientMedications.Where(Function(r) r.PreviousMedicationid = _Intervention.AssociateId).FirstOrDefault()
                                End If
                                If Not IsNothing(Medication1) Then
                                    If Not IsNothing(Medication1) Then
                                        sRefDesc = Medication1.DrugName
                                        sRefType = "Medication"
                                    End If
                                End If
                            ElseIf _Intervention.AssociateType = "4" Then
                                For k As Int32 = 0 To mPatient.LabTests.Count - 1
                                    If (mPatient.LabTests.Item(k).TestId = _Intervention.AssociateId) And (mPatient.LabTests.Item(k).OrderId = _Intervention.RelativeId) Then
                                        If mPatient.LabTests.Item(k).LabResults.Count > 0 Then
                                            sRefDesc = mPatient.LabTests.Item(k).LabResults.Item(0).TestName
                                            sRefType = "LabOrder"
                                            Exit For
                                        End If
                                    End If
                                Next
                            ElseIf _Intervention.AssociateType = "5" Then
                                Dim Immunization1 = mPatient.PatientImmunizations.Where(Function(r) r.ImmtransactionId = _Intervention.AssociateId).FirstOrDefault()
                                If Not IsNothing(Immunization1) Then
                                    If Not IsNothing(Immunization1) Then
                                        sRefDesc = Immunization1.VaccineName
                                        sRefType = "Immunization"
                                    End If
                                End If
                            End If

                            If sRefType <> "" Then
                                tblAsson.tbody(0).tr(AssIndex) = New StrucDocTr()
                                tblAsson.tbody(0).tr(AssIndex).ID = Nothing
                                tblAsson.tbody(0).tr(AssIndex).language = Nothing
                                tblAsson.tbody(0).tr(AssIndex).Items = New Object(3) {}

                                tblAsson.tbody(0).tr(AssIndex).Items(0) = New StrucDocTd()
                                DirectCast(tblAsson.tbody(0).tr(AssIndex).Items(0), StrucDocTd).ID = Nothing
                                DirectCast(tblAsson.tbody(0).tr(AssIndex).Items(0), StrucDocTd).language = Nothing
                                If _Intervention.InterventionName IsNot Nothing AndAlso _Intervention.InterventionName <> "" Then
                                    DirectCast(tblAsson.tbody(0).tr(AssIndex).Items(0), StrucDocTd).Text = New String() {_Intervention.InterventionName}
                                Else
                                    DirectCast(tblAsson.tbody(0).tr(AssIndex).Items(0), StrucDocTd).Text = Nothing
                                End If

                                tblAsson.tbody(0).tr(AssIndex).Items(1) = New StrucDocTd()
                                DirectCast(tblAsson.tbody(0).tr(AssIndex).Items(1), StrucDocTd).ID = Nothing
                                DirectCast(tblAsson.tbody(0).tr(AssIndex).Items(1), StrucDocTd).language = Nothing
                                If sRefType IsNot Nothing AndAlso sRefType <> "" Then
                                    DirectCast(tblAsson.tbody(0).tr(AssIndex).Items(1), StrucDocTd).Text = New String() {sRefType}
                                Else
                                    DirectCast(tblAsson.tbody(0).tr(AssIndex).Items(1), StrucDocTd).Text = Nothing
                                End If

                                tblAsson.tbody(0).tr(AssIndex).Items(2) = New StrucDocTd()
                                DirectCast(tblAsson.tbody(0).tr(AssIndex).Items(2), StrucDocTd).ID = Nothing
                                DirectCast(tblAsson.tbody(0).tr(AssIndex).Items(2), StrucDocTd).language = Nothing
                                If sRefDesc IsNot Nothing AndAlso sRefDesc <> "" Then
                                    DirectCast(tblAsson.tbody(0).tr(AssIndex).Items(2), StrucDocTd).Text = New String() {sRefDesc}
                                Else
                                    DirectCast(tblAsson.tbody(0).tr(AssIndex).Items(2), StrucDocTd).Text = Nothing
                                End If
                                AssIndex += 1
                            End If
                        End If
                    Next
                Catch

                End Try
                Dim nCurrPlanId As Long = 0
                Try
                    For p As Int32 = 0 To _interventionCol.PlannedIntervention.Count - 1
                        Dim _Intervention As Intervention = _interventionCol.PlannedIntervention.Item(p)
                        If _Intervention.AssociateId <> 0 Then
                            Dim sRefType As String = ""
                            Dim sRefDesc As String = ""
                            If _Intervention.AssociateType = 1 Then
                                Dim GoalCol As GoalsCol = mPatient.GoalsCol
                                Dim Goallist = GoalCol.GoalsList.Where(Function(r) r.GoalId = _Intervention.AssociateId).ToList()
                                If CType(Goallist, List(Of Goal)).Count > 0 Then
                                    Dim _goal As Goal = CType(Goallist, List(Of Goal)).Item(0)
                                    sRefDesc = _goal.GoalName
                                    sRefType = "Goal"
                                End If
                            ElseIf _Intervention.AssociateType = "2" Then
                                sRefDesc = _Intervention.NutritionInstruction & " - " & _Intervention.NutritionRecomendationDesc
                                sRefType = "Nutrition"
                            ElseIf _Intervention.AssociateType = "3" Then
                                Dim Medication1 = mPatient.PatientMedications.Where(Function(r) r.MedicationID = _Intervention.AssociateId).FirstOrDefault()
                                If IsNothing(Medication1) Then
                                    Medication1 = mPatient.PatientMedications.Where(Function(r) r.PreviousMedicationid = _Intervention.AssociateId).FirstOrDefault()
                                End If
                                If Not IsNothing(Medication1) Then
                                    sRefDesc = Medication1.DrugName
                                    sRefType = "Medication"
                                End If
                            ElseIf _Intervention.AssociateType = "4" Then
                                For k As Int32 = 0 To mPatient.LabTests.Count - 1
                                    If (mPatient.LabTests.Item(k).TestId = _Intervention.AssociateId) And (mPatient.LabTests.Item(k).OrderId = _Intervention.RelativeId) Then
                                        If mPatient.LabTests.Item(k).LabResults.Count > 0 Then
                                            sRefDesc = mPatient.LabTests.Item(k).LabResults.Item(0).TestName
                                            sRefType = "LabOrder"
                                            Exit For
                                        End If
                                    End If
                                Next
                            ElseIf _Intervention.AssociateType = "5" Then
                                Dim Immunization1 = mPatient.PatientImmunizations.Where(Function(r) r.ImmtransactionId = _Intervention.AssociateId).FirstOrDefault()
                                If Not IsNothing(Immunization1) Then
                                    sRefDesc = Immunization1.VaccineName
                                    sRefType = "Immunization"
                                End If
                            End If
                            If sRefType <> "" Then
                                tblPlannedAsson.tbody(0).tr(PlannedAssIndex) = New StrucDocTr()
                                tblPlannedAsson.tbody(0).tr(PlannedAssIndex).ID = Nothing
                                tblPlannedAsson.tbody(0).tr(PlannedAssIndex).language = Nothing
                                tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items = New Object(3) {}

                                tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(0) = New StrucDocTd()
                                DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(0), StrucDocTd).ID = Nothing
                                DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(0), StrucDocTd).language = Nothing
                                If _Intervention.InterventionName IsNot Nothing AndAlso _Intervention.InterventionName <> "" Then
                                    DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(0), StrucDocTd).Text = New String() {_Intervention.InterventionName}
                                Else
                                    DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(0), StrucDocTd).Text = Nothing
                                End If

                                tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(1) = New StrucDocTd()
                                DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(1), StrucDocTd).ID = Nothing
                                DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(1), StrucDocTd).language = Nothing
                                If sRefType IsNot Nothing AndAlso sRefType <> "" Then
                                    DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(1), StrucDocTd).Text = New String() {sRefType}
                                Else
                                    DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(1), StrucDocTd).Text = Nothing
                                End If

                                tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(2) = New StrucDocTd()
                                DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(2), StrucDocTd).ID = Nothing
                                DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(2), StrucDocTd).language = Nothing
                                If sRefDesc IsNot Nothing AndAlso sRefDesc <> "" Then
                                    DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(2), StrucDocTd).Text = New String() {sRefDesc}
                                Else
                                    DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(2), StrucDocTd).Text = Nothing
                                End If
                                PlannedAssIndex += 1
                            End If
                        End If
                        Try
                            If nCurrPlanId <> _Intervention.InterventionId Then
                                nCurrPlanId = _Intervention.InterventionId
                                Dim cdaEx As gloCDADataExtraction = New gloCDADataExtraction()
                                Dim dt As DataTable = cdaEx.getCDAPlannedInterventionsDetail(_Intervention.PlanOfTreatmentId)
                                If dt IsNot Nothing Then
                                    Array.Resize(tblPlannedAsson.tbody(0).tr, (tblPlannedAsson.tbody(0).tr.Length + dt.Rows.Count))
                                    Dim sRefType As String = ""
                                    Dim sRefDesc As String = ""
                                    For i As Int32 = 0 To dt.Rows.Count - 1
                                        Select Case dt.Rows(i)("sType").ToString()
                                            Case "PLab"
                                                sRefType = "Planned Order"
                                            Case "PEnc"
                                                sRefType = "Planned Encounter"
                                            Case "PMed"
                                                sRefType = "Planned Medication"
                                            Case "PNut"
                                                sRefType = "Nutrition Recommendation" '' added for bugid Bug #110553 
                                        End Select
                                        sRefDesc = Convert.ToString(dt.Rows(i)("Name"))
                                        If sRefType <> "" Then
                                            tblPlannedAsson.tbody(0).tr(PlannedAssIndex) = New StrucDocTr()
                                            tblPlannedAsson.tbody(0).tr(PlannedAssIndex).ID = Nothing
                                            tblPlannedAsson.tbody(0).tr(PlannedAssIndex).language = Nothing
                                            tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items = New Object(3) {}

                                            tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(0) = New StrucDocTd()
                                            DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(0), StrucDocTd).ID = Nothing
                                            DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(0), StrucDocTd).language = Nothing
                                            If _Intervention.InterventionName IsNot Nothing AndAlso _Intervention.InterventionName <> "" Then
                                                DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(0), StrucDocTd).Text = New String() {_Intervention.InterventionName}
                                            Else
                                                DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(0), StrucDocTd).Text = Nothing
                                            End If

                                            tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(1) = New StrucDocTd()
                                            DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(1), StrucDocTd).ID = Nothing
                                            DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(1), StrucDocTd).language = Nothing
                                            If sRefType IsNot Nothing AndAlso sRefType <> "" Then
                                                DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(1), StrucDocTd).Text = New String() {sRefType}
                                            Else
                                                DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(1), StrucDocTd).Text = Nothing
                                            End If

                                            tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(2) = New StrucDocTd()
                                            DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(2), StrucDocTd).ID = Nothing
                                            DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(2), StrucDocTd).language = Nothing
                                            If sRefDesc IsNot Nothing AndAlso sRefDesc <> "" Then
                                                DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(2), StrucDocTd).Text = New String() {sRefDesc}
                                            Else
                                                DirectCast(tblPlannedAsson.tbody(0).tr(PlannedAssIndex).Items(2), StrucDocTd).Text = Nothing
                                            End If
                                            PlannedAssIndex += 1
                                        End If
                                    Next
                                End If
                                If cdaEx IsNot Nothing Then
                                    cdaEx.Dispose()
                                    cdaEx = Nothing
                                End If
                            End If
                        Catch

                        End Try
                    Next
                Catch

                End Try

                Dim interventionentryindex As Integer = 0
                Intervention.section.entry = New POCD_MT000040UV02Entry(interventionentry + Plannedinterventionentry) {}
                If interventionentry > 0 Then
                    For Interventionindex As Integer = 0 To interventionentry - 1
                        Intervention.section.entry(Interventionindex) = New POCD_MT000040UV02Entry
                        Dim _Intervention As Intervention = DirectCast(Interventinduplicates, List(Of Intervention)).Item(Interventionindex)
                        getCDAInterventionAct(Intervention.section.entry(Interventionindex), _interventionCol, _Intervention)
                        interventionentryindex = interventionentryindex + 1

                        table.tbody(0).tr(Interventionindex) = New StrucDocTr()
                        table.tbody(0).tr(Interventionindex).ID = Nothing
                        table.tbody(0).tr(Interventionindex).language = Nothing
                        table.tbody(0).tr(Interventionindex).Items = New Object(2) {}

                        table.tbody(0).tr(Interventionindex).Items(0) = New StrucDocTd()
                        DirectCast(table.tbody(0).tr(Interventionindex).Items(0), StrucDocTd).ID = Nothing
                        DirectCast(table.tbody(0).tr(Interventionindex).Items(0), StrucDocTd).language = Nothing
                        If _Intervention.InterventionName IsNot Nothing AndAlso _Intervention.InterventionName <> "" Then
                            DirectCast(table.tbody(0).tr(Interventionindex).Items(0), StrucDocTd).Text = New String() {_Intervention.InterventionName}
                        Else
                            DirectCast(table.tbody(0).tr(Interventionindex).Items(0), StrucDocTd).Text = Nothing
                        End If

                        table.tbody(0).tr(Interventionindex).Items(1) = New StrucDocTd()
                        DirectCast(table.tbody(0).tr(Interventionindex).Items(1), StrucDocTd).ID = "Intervention" & Interventionindex + 1
                        DirectCast(table.tbody(0).tr(Interventionindex).Items(1), StrucDocTd).language = Nothing
                        If _Intervention.InterventionNotes IsNot Nothing AndAlso _Intervention.InterventionNotes <> "" Then
                            DirectCast(table.tbody(0).tr(Interventionindex).Items(1), StrucDocTd).Text = New String() {_Intervention.InterventionNotes}
                        Else
                            DirectCast(table.tbody(0).tr(Interventionindex).Items(1), StrucDocTd).Text = Nothing
                        End If

                        table.tbody(0).tr(Interventionindex).Items(2) = New StrucDocTd()
                        DirectCast(table.tbody(0).tr(Interventionindex).Items(2), StrucDocTd).ID = Nothing
                        DirectCast(table.tbody(0).tr(Interventionindex).Items(2), StrucDocTd).language = Nothing
                        If _Intervention.InterventionrecordDate IsNot Nothing AndAlso _Intervention.InterventionrecordDate <> "" Then
                            DirectCast(table.tbody(0).tr(Interventionindex).Items(2), StrucDocTd).Text = New String() {_Intervention.InterventionrecordDate}
                        Else
                            DirectCast(table.tbody(0).tr(Interventionindex).Items(2), StrucDocTd).Text = Nothing
                        End If
                    Next
                Else
                    Intervention.section.text.Items(0) = Nothing
                    Intervention.section.text.Items(1) = Nothing
                    Intervention.section.text.Items(2) = Nothing
                End If
                If Plannedinterventionentry > 0 Then
                    For Interventionindex As Integer = 0 To Plannedinterventionentry - 1
                        Intervention.section.entry(interventionentryindex) = New POCD_MT000040UV02Entry
                        Dim _Intervention As Intervention = DirectCast(Plannedduplicates, List(Of Intervention)).Item(Interventionindex)
                        getCDAPlannedInterventionAct(Intervention.section.entry(interventionentryindex), _interventionCol, _Intervention)
                        interventionentryindex = interventionentryindex + 1

                        tablePlanned.tbody(0).tr(Interventionindex) = New StrucDocTr()
                        tablePlanned.tbody(0).tr(Interventionindex).ID = Nothing
                        tablePlanned.tbody(0).tr(Interventionindex).language = Nothing
                        tablePlanned.tbody(0).tr(Interventionindex).Items = New Object(2) {}

                        tablePlanned.tbody(0).tr(Interventionindex).Items(0) = New StrucDocTd()
                        DirectCast(tablePlanned.tbody(0).tr(Interventionindex).Items(0), StrucDocTd).ID = Nothing
                        DirectCast(tablePlanned.tbody(0).tr(Interventionindex).Items(0), StrucDocTd).language = Nothing
                        If _Intervention.InterventionName IsNot Nothing AndAlso _Intervention.InterventionName <> "" Then
                            DirectCast(tablePlanned.tbody(0).tr(Interventionindex).Items(0), StrucDocTd).Text = New String() {_Intervention.InterventionName}
                        Else
                            DirectCast(tablePlanned.tbody(0).tr(Interventionindex).Items(0), StrucDocTd).Text = Nothing
                        End If

                        tablePlanned.tbody(0).tr(Interventionindex).Items(1) = New StrucDocTd()
                        DirectCast(tablePlanned.tbody(0).tr(Interventionindex).Items(1), StrucDocTd).ID = "PlannedInt" & Interventionindex + 1
                        DirectCast(tablePlanned.tbody(0).tr(Interventionindex).Items(1), StrucDocTd).language = Nothing
                        If _Intervention.InterventionNotes IsNot Nothing AndAlso _Intervention.InterventionNotes <> "" Then
                            DirectCast(tablePlanned.tbody(0).tr(Interventionindex).Items(1), StrucDocTd).Text = New String() {_Intervention.InterventionNotes}
                        Else
                            DirectCast(tablePlanned.tbody(0).tr(Interventionindex).Items(1), StrucDocTd).Text = Nothing
                        End If

                        tablePlanned.tbody(0).tr(Interventionindex).Items(2) = New StrucDocTd()
                        DirectCast(tablePlanned.tbody(0).tr(Interventionindex).Items(2), StrucDocTd).ID = Nothing
                        DirectCast(tablePlanned.tbody(0).tr(Interventionindex).Items(2), StrucDocTd).language = Nothing
                        If _Intervention.InterventionrecordDate IsNot Nothing AndAlso _Intervention.InterventionrecordDate <> "" Then
                            DirectCast(tablePlanned.tbody(0).tr(Interventionindex).Items(2), StrucDocTd).Text = New String() {_Intervention.InterventionrecordDate}
                        Else
                            DirectCast(tablePlanned.tbody(0).tr(Interventionindex).Items(2), StrucDocTd).Text = Nothing
                        End If
                    Next
                Else
                    Intervention.section.text.Items(3) = Nothing
                    Intervention.section.text.Items(4) = Nothing
                    Intervention.section.text.Items(5) = Nothing
                End If

                If interventionentry > 0 Or Plannedinterventionentry > 0 Then
                    ''Intervention.section.confidentialityCode = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, Intervention.section)
                    ''
                    Dim sconf As CE
                    sconf = New CE()
                    sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, Intervention.section)
                    ''
                    If Not IsNothing(sconf.code) Then
                        Intervention.section.confidentialityCode = sconf
                    End If
                    sconf = Nothing
                    ''
                End If
                ''getCDAInterventionEntry(Intervention.section)
                'getCDAPlannedInterventionEntry(Intervention.section)

            Else
                Intervention.section = NoInformationSection("Interventions", "Interventions Section", _DateExtension2015)
            End If
            Return Intervention
        Catch ex As Exception
            Return Nothing
        End Try
    End Function
    'Private Sub getCDAInterventionEntry(ByRef section As POCD_MT000040UV02Section)
    '    'Dim _interventionCol As InterventionCol = Nothing
    '    '_interventionCol = mPatient.InterventionCol
    '    'Dim interventionentry As Integer = Nothing
    '    'If _interventionCol.InterventionList.Count > 0 Then
    '    '    Dim duplicates = _interventionCol.InterventionList.GroupBy(Function(x) x.InterventionId).Select(Function(x) x.FirstOrDefault).ToList
    '    '    interventionentry = DirectCast(duplicates, List(Of Intervention)).Count
    '    '    section.entry = New POCD_MT000040UV02Entry(interventionentry) {}

    '    'End If

    'End Sub
    Private Sub getCDAInterventionAct(ByRef entry As POCD_MT000040UV02Entry, ByVal InterventionCol As InterventionCol, ByVal intervention As Intervention)
        Try
            Dim act As POCD_MT000040UV02Act = Nothing
            entry.Item = New POCD_MT000040UV02Act
            act = DirectCast(entry.Item, POCD_MT000040UV02Act)
            act.classCodeSpecified = True
            act.classCode = x_ActClassDocumentEntryAct.ACT
            act.moodCodeSpecified = True
            act.moodCode = x_DocumentActMood.EVN
            act.templateId = New II(1) {}
            act.templateId(0) = New II
            act.templateId(0).root = oTemplateIDMaster.GetEntryID("Intervention ACT")
            act.templateId(0).extension = _DateExtension2015
            act.templateId(0).assigningAuthorityName = Nothing
            act.templateId(1) = New II
            act.templateId(1).root = oTemplateIDMaster.GetEntryID("Intervention ACT")
            act.templateId(1).extension = Nothing
            act.templateId(1).assigningAuthorityName = Nothing

            act.id = New II(0) {}
            act.id(0) = New II
            act.id(0).root = Guid.NewGuid.ToString()
            intervention.GUID = act.id(0).root
            act.code = New CD()
            Dim _codesystemitem As CodeSystemItem = Nothing
            _codesystemitem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Intervention")
            act.code.code = _codesystemitem.Code
            act.code.codeSystem = CodeSystem.SNOMED_CT
            act.code.codeSystemName = _codesystemitem.CodingSystemName
            act.code.displayName = _codesystemitem.Description
            act.statusCode = New CS
            act.statusCode.code = "completed"
            If Not IsNothing(intervention.InterventionrecordDate) AndAlso intervention.InterventionrecordDate <> "" Then
                act.effectiveTime = New IVL_TS()
                act.effectiveTime.value = Format(CType(intervention.InterventionrecordDate, Date), "yyyyMMdd")
            End If
            Dim entryrelationshipslist = InterventionCol.InterventionList.Where(Function(p) p.InterventionId = intervention.InterventionId).ToList()
            'Dim NutRecomendationCnt As Int16 = 0
            'Dim Goalreference As Integer = 0
            If Not IsNothing(entryrelationshipslist) Then
                Dim entryrelationshipcount As Integer = 0
                entryrelationshipcount = DirectCast(entryrelationshipslist, List(Of Intervention)).Count
                If entryrelationshipcount > 0 Then
                    act.entryRelationship = New POCD_MT000040UV02EntryRelationship(entryrelationshipcount) {}
                    For entryrelationshipindex As Integer = 0 To entryrelationshipcount - 1
                        Dim _intervention As Intervention = DirectCast(entryrelationshipslist, List(Of Intervention)).Item(entryrelationshipindex)

                        Select Case _intervention.AssociateType
                            Case "1"
                                Dim _GoalsCol As GoalsCol = mPatient.GoalsCol
                                Dim Goal1 = _GoalsCol.GoalsList.Where(Function(p) p.GoalId = _intervention.AssociateId).FirstOrDefault()
                                If Not IsNothing(Goal1) Then
                                    act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                    getCDAEntryReference(act.entryRelationship(entryrelationshipindex), DirectCast(Goal1, Goal).GUID, "InterventionToGoal")
                                End If
                            Case "2"
                                act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                act.entryRelationship(entryrelationshipindex).typeCodeSpecified = True
                                act.entryRelationship(entryrelationshipindex).typeCode = ActRelationshipType.REFR
                                act.entryRelationship(entryrelationshipindex).Item = New POCD_MT000040UV02Act
                                getCDANutritionRecommendation(act.entryRelationship(entryrelationshipindex).Item, _intervention)
                            Case "3"
                                Dim Medication1 = mPatient.PatientMedications.Where(Function(p) p.MedicationID = _intervention.AssociateId).FirstOrDefault()
                                If IsNothing(Medication1) Then
                                    Medication1 = mPatient.PatientMedications.Where(Function(p) p.PreviousMedicationid = _intervention.AssociateId).FirstOrDefault()
                                End If

                                If Not IsNothing(Medication1) Then
                                    act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                    getCDAEntryReference(act.entryRelationship(entryrelationshipindex), DirectCast(Medication1, Medication).GUID)
                                End If
                            Case "4"
                                For k As Int32 = 0 To mPatient.LabTests.Count - 1
                                    If (mPatient.LabTests.Item(k).TestId = _intervention.AssociateId) And (mPatient.LabTests.Item(k).OrderId = _intervention.RelativeId) Then
                                        act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                        getCDAEntryReference(act.entryRelationship(entryrelationshipindex), DirectCast(mPatient.LabTests.Item(k), LabTest).GUID)
                                        Exit For
                                    End If

                                Next

                                'Dim Labresults = mPatient.PatientLabResult.Where(Function(p) p.MedicationID = _intervention.AssociateId).FirstOrDefault()
                                'act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                'getCDAEntryReference(act.entryRelationship(entryrelationshipindex), DirectCast(Medication1, Medication).GUID)
                            Case "5"
                                Dim Immunization1 = mPatient.PatientImmunizations.Where(Function(p) p.ImmtransactionId = _intervention.AssociateId).FirstOrDefault()
                                If Not IsNothing(Immunization1) Then
                                    act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                    getCDAEntryReference(act.entryRelationship(entryrelationshipindex), DirectCast(Immunization1, Immunization).GUID)
                                End If
                            Case "6"
                                'Dim EncounterDiag = mPatient.PatientProblems.Where(Function(p) p.ProblemID = _intervention.AssociateId).FirstOrDefault()
                                'If Not IsNothing(EncounterDiag) Then
                                '    act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                '    getCDAEntryReference(act.entryRelationship(entryrelationshipindex), DirectCast(EncounterDiag, Problems).GUID)
                                'End If
                            Case "7"
                                'Dim EncounterDiag = mPatient.PatientEducation.Where(Function(p) p.mEncounterId = _intervention.AssociateId).FirstOrDefault()
                                'If Not IsNothing(EncounterDiag) Then
                                '    act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                '    getCDAEntryReference(act.entryRelationship(entryrelationshipindex), DirectCast(EncounterDiag, Problems).GUID)
                                'End If
                        End Select

                    Next
                End If

            End If


        Catch ex As Exception

        End Try
    End Sub
    Private Function getCDAGoalsSection() As POCD_MT000040UV02Component3
        Try

            Dim GoalsComponent As POCD_MT000040UV02Component3 = Nothing
            GoalsComponent = New POCD_MT000040UV02Component3

            If Not IsNothing(mPatient.GoalsCol) AndAlso mPatient.GoalsCol.GoalsList.Count > 0 Then
                GoalsComponent.section = New POCD_MT000040UV02Section
                GoalsComponent.section.templateId = New II(0) {}
                GoalsComponent.section.templateId(0) = New II
                GoalsComponent.section.templateId(0).root = oTemplateIDMaster.GetSectionID("Goals")
                GoalsComponent.section.code = New CE()
                Dim _CodesystemItem As CodeSystemItem = Nothing
                _CodesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Goals")
                If Not IsNothing(_CodesystemItem) Then
                    GoalsComponent.section.code.code = _CodesystemItem.Code
                    GoalsComponent.section.code.codeSystem = CodeSystem.LOINC
                    GoalsComponent.section.code.codeSystemName = "LOINC"
                    GoalsComponent.section.code.displayName = _CodesystemItem.Description
                Else
                    GoalsComponent.section.code.nullFlavorSpecified = True
                    GoalsComponent.section.code.nullFlavor = "UNK"
                End If

                GoalsComponent.section.title = New ST
                GoalsComponent.section.title.Text = New String() {"Goals Section"}
                GoalsComponent.section.text = New StrucDocText
                GoalsComponent.section.text.mediaType = Nothing
                GoalsComponent.section.text.ID = Nothing
                GoalsComponent.section.text.language = Nothing
                GoalsComponent.section.text.Items = New Object(2) {}
                GoalsComponent.section.text.Items(0) = New StrucDocTable
                Dim tableOBS As StrucDocTable = Nothing
                tableOBS = DirectCast(GoalsComponent.section.text.Items(0), StrucDocTable)
                tableOBS.ID = Nothing
                tableOBS.language = Nothing
                tableOBS.border = "1"
                tableOBS.width = "100%"
                tableOBS.thead = New StrucDocThead()
                tableOBS.thead.ID = Nothing
                tableOBS.thead.language = Nothing
                tableOBS.thead.tr = New StrucDocTr(0) {}
                tableOBS.thead.tr(0) = New StrucDocTr()
                tableOBS.thead.tr(0).ID = Nothing
                tableOBS.thead.tr(0).language = Nothing
                tableOBS.thead.tr(0).Items = New Object(5) {}


                tableOBS.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(tableOBS.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Name"}
                DirectCast(tableOBS.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(tableOBS.thead.tr(0).Items(0), StrucDocTh).language = Nothing

                tableOBS.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(tableOBS.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Notes"}
                DirectCast(tableOBS.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(tableOBS.thead.tr(0).Items(1), StrucDocTh).language = Nothing

                tableOBS.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(tableOBS.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Value"}
                DirectCast(tableOBS.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(tableOBS.thead.tr(0).Items(2), StrucDocTh).language = Nothing

                tableOBS.thead.tr(0).Items(3) = New StrucDocTh()
                DirectCast(tableOBS.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Unit"}
                DirectCast(tableOBS.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                DirectCast(tableOBS.thead.tr(0).Items(3), StrucDocTh).language = Nothing

                tableOBS.thead.tr(0).Items(4) = New StrucDocTh()
                DirectCast(tableOBS.thead.tr(0).Items(4), StrucDocTh).Text = New String() {"Date"}
                DirectCast(tableOBS.thead.tr(0).Items(4), StrucDocTh).ID = Nothing
                DirectCast(tableOBS.thead.tr(0).Items(4), StrucDocTh).language = Nothing

                tableOBS.tbody = New StrucDocTbody(0) {}
                tableOBS.tbody(0) = New StrucDocTbody()
                tableOBS.tbody(0).ID = Nothing
                tableOBS.tbody(0).language = Nothing
                tableOBS.tbody(0).tr = New StrucDocTr(0) {}
                tableOBS.tbody(0).tr(0) = New StrucDocTr()
                tableOBS.tbody(0).tr(0).ID = Nothing
                tableOBS.tbody(0).tr(0).language = Nothing
                tableOBS.tbody(0).tr(0).Items = New Object(5) {}
                tableOBS.tbody(0).tr(0).Items(0) = New StrucDocTd()
                DirectCast(tableOBS.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
                DirectCast(tableOBS.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing

                GoalsComponent.section.text.Items(1) = New StrucDocContent
                DirectCast(GoalsComponent.section.text.Items(1), StrucDocContent).ID = Nothing
                DirectCast(GoalsComponent.section.text.Items(1), StrucDocContent).language = Nothing
                DirectCast(GoalsComponent.section.text.Items(1), StrucDocContent).Text = New String() {"Goal References"}

                Dim table As StrucDocTable = Nothing
                GoalsComponent.section.text.Items(2) = New StrucDocTable
                table = DirectCast(GoalsComponent.section.text.Items(2), StrucDocTable)
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}
                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(3) {}

                table.thead.tr(0).Items(0) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Name"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing

                table.thead.tr(0).Items(1) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Reference Type"}
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing

                table.thead.tr(0).Items(2) = New StrucDocTh()
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Reference"}
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing

                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing
                table.tbody(0).tr = New StrucDocTr(mPatient.GoalsCol.GoalsList.Count - 1) {}
                table.tbody(0).tr(0) = New StrucDocTr()
                table.tbody(0).tr(0).ID = Nothing
                table.tbody(0).tr(0).language = Nothing
                table.tbody(0).tr(0).Items = New Object(3) {}
                table.tbody(0).tr(0).Items(0) = New StrucDocTd()
                DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
                DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing

                If Not IsNothing(mPatient.GoalsCol) Then

                    ''
                    Dim sconf As CE
                    sconf = New CE()
                    sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, GoalsComponent.section)
                    ''
                    If Not IsNothing(sconf.code) Then
                        GoalsComponent.section.confidentialityCode = sconf
                    End If
                    sconf = Nothing
                    ''

                    Dim RefFlag As Boolean = False
                    Dim UniqueGoalIndes As Int32 = 0
                    Dim GoalId As String = ""
                    Dim GoalsCol As GoalsCol = Nothing
                    GoalsCol = mPatient.GoalsCol
                    Dim duplicates = GoalsCol.GoalsList.GroupBy(Function(x) x.GoalId).Select(Function(x) x.First).ToList
                    Dim entrycount As Integer = DirectCast(duplicates, List(Of Goal)).Count
                    GoalsComponent.section.entry = New POCD_MT000040UV02Entry(entrycount) {}
                    tableOBS.tbody(0).tr = New StrucDocTr(entrycount) {}
                    For GoalIndex As Integer = 0 To mPatient.GoalsCol.GoalsList.Count - 1
                        Dim Goal As Goal = Nothing
                        Goal = mPatient.GoalsCol.GoalsList.Item(GoalIndex)
                        If GoalId <> Goal.GoalId Then
                            GoalId = Goal.GoalId

                            tableOBS.tbody(0).tr(UniqueGoalIndes) = New StrucDocTr()
                            tableOBS.tbody(0).tr(UniqueGoalIndes).ID = Nothing
                            tableOBS.tbody(0).tr(UniqueGoalIndes).language = Nothing
                            tableOBS.tbody(0).tr(UniqueGoalIndes).Items = New Object(5) {}

                            tableOBS.tbody(0).tr(UniqueGoalIndes).Items(0) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(0), StrucDocTd).ID = Nothing
                            DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(0), StrucDocTd).language = Nothing
                            If Goal.GoalName IsNot Nothing AndAlso Goal.GoalName <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(0), StrucDocTd).Text = New String() {Goal.GoalName}
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(0), StrucDocTd).Text = Nothing
                            End If

                            tableOBS.tbody(0).tr(UniqueGoalIndes).Items(1) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(1), StrucDocTd).ID = "Goal" & UniqueGoalIndes + 1
                            DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(1), StrucDocTd).language = Nothing
                            If Goal.GoalNarrative IsNot Nothing AndAlso Goal.GoalNarrative <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(1), StrucDocTd).Text = New String() {Goal.GoalNarrative}
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(1), StrucDocTd).Text = Nothing
                            End If

                            tableOBS.tbody(0).tr(UniqueGoalIndes).Items(2) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(2), StrucDocTd).ID = Nothing
                            DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(2), StrucDocTd).language = Nothing
                            If Goal.GoalValue IsNot Nothing AndAlso Goal.GoalValue <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(2), StrucDocTd).Text = New String() {Convert.ToString(Goal.GoalValue)}
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(2), StrucDocTd).Text = New String() {"NA"}
                            End If

                            tableOBS.tbody(0).tr(UniqueGoalIndes).Items(3) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(3), StrucDocTd).ID = Nothing
                            DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(3), StrucDocTd).language = Nothing
                            If Goal.GoalUnit IsNot Nothing AndAlso Goal.GoalUnit <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(3), StrucDocTd).Text = New String() {Convert.ToString(Goal.GoalUnit)}
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(3), StrucDocTd).Text = New String() {"NA"}
                            End If

                            tableOBS.tbody(0).tr(UniqueGoalIndes).Items(4) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(4), StrucDocTd).ID = Nothing
                            DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(4), StrucDocTd).language = Nothing
                            If Goal.GoalDate IsNot Nothing AndAlso Goal.GoalDate <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(4), StrucDocTd).Text = New String() {CType(Goal.GoalDate, Date)}
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueGoalIndes).Items(4), StrucDocTd).Text = Nothing
                            End If

                            GoalsComponent.section.entry(UniqueGoalIndes) = New POCD_MT000040UV02Entry
                            Dim GoalEntry As POCD_MT000040UV02Entry = Nothing
                            GoalEntry = DirectCast(GoalsComponent.section.entry(UniqueGoalIndes), POCD_MT000040UV02Entry)
                            getCDAGoalEntry(GoalEntry, Goal, UniqueGoalIndes, GoalsCol)
                            UniqueGoalIndes += 1
                        End If

                        If Goal.AssociateId <> 0 Then
                            Dim GoalrefDesc As String = ""
                            Dim GoalRefType As String = ""
                            RefFlag = True
                            If Goal.AssociateType = 2 Then
                                Dim Problemlist = mPatient.PatientProblems.Where(Function(p) p.ProblemID = Goal.AssociateId).ToList()
                                If CType(Problemlist, List(Of Problems)).Count > 0 Then
                                    Dim _Problem As Problems = CType(Problemlist, List(Of Problems)).Item(0)
                                    GoalrefDesc = _Problem.Condition
                                    GoalRefType = "Problem"
                                End If
                            ElseIf Goal.AssociateType = 1 Then
                                Dim ConcernCol As HealthConcernCol = mPatient.HealthConcernCol
                                Dim HealthConcernlist = ConcernCol.HealthConcernList.Where(Function(p) p.HealthConcernID = Goal.AssociateId).ToList()
                                If CType(HealthConcernlist, List(Of HealthConcern)).Count > 0 Then
                                    Dim _Concern As HealthConcern = CType(HealthConcernlist, List(Of HealthConcern)).Item(0)
                                    GoalrefDesc = _Concern.HealthConcernName
                                    GoalRefType = "Health Concern"
                                End If
                            End If

                            table.tbody(0).tr(GoalIndex) = New StrucDocTr()
                            table.tbody(0).tr(GoalIndex).ID = Nothing
                            table.tbody(0).tr(GoalIndex).language = Nothing
                            table.tbody(0).tr(GoalIndex).Items = New Object(3) {}

                            table.tbody(0).tr(GoalIndex).Items(0) = New StrucDocTd()
                            DirectCast(table.tbody(0).tr(GoalIndex).Items(0), StrucDocTd).ID = Nothing
                            DirectCast(table.tbody(0).tr(GoalIndex).Items(0), StrucDocTd).language = Nothing
                            If Goal.GoalName IsNot Nothing AndAlso Goal.GoalName <> "" Then
                                DirectCast(table.tbody(0).tr(GoalIndex).Items(0), StrucDocTd).Text = New String() {Goal.GoalName}
                            Else
                                DirectCast(table.tbody(0).tr(GoalIndex).Items(0), StrucDocTd).Text = Nothing
                            End If

                            table.tbody(0).tr(GoalIndex).Items(1) = New StrucDocTd()
                            DirectCast(table.tbody(0).tr(GoalIndex).Items(1), StrucDocTd).ID = Nothing
                            DirectCast(table.tbody(0).tr(GoalIndex).Items(1), StrucDocTd).language = Nothing
                            If GoalRefType IsNot Nothing AndAlso GoalRefType <> "" Then
                                DirectCast(table.tbody(0).tr(GoalIndex).Items(1), StrucDocTd).Text = New String() {GoalRefType}
                            Else
                                DirectCast(table.tbody(0).tr(GoalIndex).Items(1), StrucDocTd).Text = Nothing
                            End If

                            table.tbody(0).tr(GoalIndex).Items(2) = New StrucDocTd()
                            DirectCast(table.tbody(0).tr(GoalIndex).Items(2), StrucDocTd).ID = Nothing
                            DirectCast(table.tbody(0).tr(GoalIndex).Items(2), StrucDocTd).language = Nothing
                            If GoalrefDesc IsNot Nothing AndAlso GoalrefDesc <> "" Then
                                DirectCast(table.tbody(0).tr(GoalIndex).Items(2), StrucDocTd).Text = New String() {Convert.ToString(GoalrefDesc)}
                            Else
                                DirectCast(table.tbody(0).tr(GoalIndex).Items(2), StrucDocTd).Text = Nothing
                            End If
                        End If


                    Next

                    If RefFlag = False Then
                        GoalsComponent.section.text.Items(1) = Nothing
                        GoalsComponent.section.text.Items(2) = Nothing
                    End If

                    'Dim GoalsCol As GoalsCol = Nothing
                    'GoalsCol = mPatient.GoalsCol
                    'Dim duplicates = GoalsCol.GoalsList.GroupBy(Function(x) x.GoalId).Select(Function(x) x.First).ToList
                    'If DirectCast(duplicates, List(Of Goal)).Count > 0 Then
                    '    Dim entrycount As Integer = DirectCast(duplicates, List(Of Goal)).Count
                    '    GoalsComponent.section.entry = New POCD_MT000040UV02Entry(entrycount) {}
                    '    For GoalIndex As Integer = 0 To entrycount - 1
                    '        Dim _Goal As Goal = DirectCast(duplicates, List(Of Goal)).Item(GoalIndex)
                    '        GoalsComponent.section.entry(GoalIndex) = New POCD_MT000040UV02Entry
                    '        Dim GoalEntry As POCD_MT000040UV02Entry = Nothing
                    '        GoalEntry = DirectCast(GoalsComponent.section.entry(GoalIndex), POCD_MT000040UV02Entry)
                    '        getCDAGoalEntry(GoalEntry, _Goal, GoalIndex, GoalsCol)
                    '    Next
                    'End If

                End If

            Else
                GoalsComponent.section = NoInformationSection("Goals", "Goals Section")
            End If



            Return GoalsComponent
        Catch ex As Exception
            Return Nothing
        End Try
    End Function
    Private Sub getCDAGoalEntry(ByRef entry As POCD_MT000040UV02Entry, ByVal Goal As Goal, ByVal GoalIndex As Integer, ByVal goalCol As GoalsCol)
        entry.Item = New POCD_MT000040UV02Observation
        Dim Obs As POCD_MT000040UV02Observation = Nothing
        Obs = DirectCast(entry.Item, POCD_MT000040UV02Observation)
        Obs.classCodeSpecified = True
        Obs.classCode = ActClassObservation.OBS
        Obs.moodCodeSpecified = True
        Obs.moodCode = x_ActMoodDocumentObservation.GOL
        Obs.templateId = New II(0) {}
        Obs.templateId(0) = New II
        Obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Goals Entry")
        Obs.id = New II(0) {}
        Obs.id(0) = New II
        Obs.id(0).root = Guid.NewGuid.ToString()
        Goal.GUID = Obs.id(0).root
        If Goal.GoalLoincCode <> "" Then
            Obs.code = New CD
            Obs.code.code = Goal.GoalLoincCode
            Obs.code.codeSystem = CodeSystem.LOINC
            Obs.code.codeSystemName = "LOINC"
            Obs.code.displayName = Goal.GoalLoincDesc
        Else
            Obs.code = New CD
            Obs.code.nullFlavorSpecified = True
            Obs.code.nullFlavor = "UNK"
        End If
        Obs.statusCode = New CS
        Obs.statusCode.code = "active"
        If Goal.GoalDate <> "" Then
            Obs.effectiveTime = New IVL_TS
            Obs.effectiveTime.value = Format(CType(Goal.GoalDate, Date), "yyyyMMdd")
        End If


        If Goal.GoalValue <> "" Then
            Obs.value = New ANY(0) {}
            Dim valuearr() As String
            If Convert.ToString(Goal.GoalValue).Contains("-") Then
                valuearr = Convert.ToString(Goal.GoalValue).Split("-")
                If valuearr.Count > 0 Then
                    Dim lowvalue As String = valuearr(0)
                    Dim Highvalue As String = valuearr(1)
                    Obs.value(0) = New IVL_PQ
                    DirectCast(Obs.value(0), IVL_PQ).Items = New PQ(1) {}
                    DirectCast(Obs.value(0), IVL_PQ).ItemsElementName = New ItemsChoiceType2(1) {}
                    DirectCast(Obs.value(0), IVL_PQ).ItemsElementName(0) = ItemsChoiceType.low
                    DirectCast(Obs.value(0), IVL_PQ).ItemsElementName(1) = ItemsChoiceType.high
                    DirectCast(Obs.value(0), IVL_PQ).Items(0) = New IVXB_PQ
                    DirectCast(Obs.value(0), IVL_PQ).Items(1) = New IVXB_PQ
                    DirectCast(Obs.value(0), IVL_PQ).Items(0).value = lowvalue
                    DirectCast(Obs.value(0), IVL_PQ).Items(1).value = Highvalue
                    If Goal.GoalUnit <> "" Then
                        DirectCast(Obs.value(0), IVL_PQ).Items(0).unit = Goal.GoalUnit
                        DirectCast(Obs.value(0), IVL_PQ).Items(1).unit = Goal.GoalUnit
                    End If

                End If
            ElseIf IsNumeric(Goal.GoalValue) Then
                Obs.value(0) = New IVL_PQ
                DirectCast(Obs.value(0), IVL_PQ).Items = New PQ(1) {}
                DirectCast(Obs.value(0), IVL_PQ).ItemsElementName = New ItemsChoiceType2(1) {}
                DirectCast(Obs.value(0), IVL_PQ).ItemsElementName(0) = ItemsChoiceType.low
                DirectCast(Obs.value(0), IVL_PQ).Items(0) = New IVXB_PQ
                DirectCast(Obs.value(0), IVL_PQ).Items(0).value = Goal.GoalValue
                If Goal.GoalUnit <> "" Then
                    DirectCast(Obs.value(0), IVL_PQ).Items(0).unit = Goal.GoalUnit
                End If
            Else
                Obs.value(0) = New ST
                DirectCast(Obs.value(0), ST).Text = New String() {Convert.ToString(Goal.GoalValue)}
            End If
        End If
        If Goal.GoalNarrative <> "" Then
            Obs.text = New ED
            Obs.text.reference = New TEL
            Obs.text.reference.value = "#Goal" & GoalIndex + 1
        End If
        If Goal.AssociateId <> 0 Then
            Dim entryrelationcount As Integer = 0
            Dim entryrelationshipslist = goalCol.GoalsList.Where(Function(p) p.GoalId = Goal.GoalId).ToList()
            If DirectCast(entryrelationshipslist, List(Of Goal)).Count > 0 Then
                entryrelationcount = DirectCast(entryrelationshipslist, List(Of Goal)).Count
                Obs.entryRelationship = New POCD_MT000040UV02EntryRelationship(entryrelationcount - 1) {}
                For index As Integer = 0 To entryrelationcount - 1
                    Dim _Goal As Goal = CType(entryrelationshipslist, List(Of Goal)).Item(index)
                    Dim entryrelationship As POCD_MT000040UV02EntryRelationship
                    Obs.entryRelationship(index) = New POCD_MT000040UV02EntryRelationship
                    entryrelationship = DirectCast(Obs.entryRelationship(index), POCD_MT000040UV02EntryRelationship)
                    If _Goal.AssociateType = 1 Then
                        Dim _HealthConcernCol As HealthConcernCol = Nothing
                        _HealthConcernCol = mPatient.HealthConcernCol
                        Dim HealthConcernList = _HealthConcernCol.HealthConcernList.Where(Function(p) p.HealthConcernID = _Goal.AssociateId).ToList()
                        If CType(HealthConcernList, List(Of HealthConcern)).Count > 0 Then
                            Dim _HealthConcern As HealthConcern = CType(HealthConcernList, List(Of HealthConcern)).Item(0)
                            getCDAEntryReference(entryrelationship, _HealthConcern.GUID)
                        Else
                            Obs.entryRelationship(index) = Nothing
                        End If
                    ElseIf _Goal.AssociateType = 2 Then
                        Dim Problemlist = mPatient.PatientProblems.Where(Function(p) p.ProblemID = _Goal.AssociateId).ToList()
                        If CType(Problemlist, List(Of Problems)).Count > 0 Then
                            Dim _Problem As Problems = CType(Problemlist, List(Of Problems)).Item(0)
                            getCDAEntryReference(entryrelationship, _Problem.GUID)
                        Else
                            Obs.entryRelationship(index) = Nothing
                        End If
                    End If


                Next

            End If
        End If
        'Author participation is not mandatory 
        If Goal.GoalAuthor <> "" Then

            If Goal.GoalAuthor = "Provider" Then
                If Goal.GoalAuthorFirstName <> "" Then
                    getauthor(Obs.author, Goal)
                End If


                '    'Obs.author(0) = GetCDAAuthor()
                'ElseIf Goal.GoalAuthor = "Patient" Then
                '    'write patient author
                'Else
                '    'Obs.author = New POCD_MT000040UV02Author(1) {}
                '    'Obs.author(0) = GetCDAAuthor()
            End If

        End If



    End Sub
    Private Sub getauthor(ByRef _author As POCD_MT000040UV02Author(), ByVal goal As Goal)
        Dim _person As POCD_MT000040UV02Person = Nothing
        'Dim oAuthor As gloCCDLibrary.PatientAuthor = Nothing
        Try


            'Author
            _author = New POCD_MT000040UV02Author(0) {}

            _author(0) = New POCD_MT000040UV02Author
            _author(0).typeCode = Nothing
            _author(0).typeCodeSpecified = False
            _author(0).contextControlCode = Nothing
            _author(0).time = New TS()
            ''_author(0).time.value = System.DateTime.Now.ToString("yyyyMMddmmss")
            ''As per QualityNet after first validation on CMS

            _author(0).time.value = DateTime.Now.ToString("yyyyMMddhhmmss") & Replace(DateTime.Now.ToString("zzzz"), ":", "")
            _author(0).templateId = New II(0) {}
            _author(0).templateId(0) = New II
            _author(0).templateId(0).root = oTemplateIDMaster.GetEntryID("author")
            _author(0).assignedAuthor = New POCD_MT000040UV02AssignedAuthor()
            _author(0).assignedAuthor.classCode = Nothing
            _author(0).assignedAuthor.classCodeSpecified = False
            _author(0).assignedAuthor.id = New II(0) {}
            _author(0).assignedAuthor.id(0) = New II()
            ''As per QualityNet after first validation on CMS
            _author(0).assignedAuthor.id(0).root = System.Guid.NewGuid().ToString()
            _author(0).assignedAuthor.id(0).extension = Nothing
            _author(0).assignedAuthor.id(0).assigningAuthorityName = Nothing
            'If _nQRDAFileType = CDAFileTypeEnum.AmbulatorySummary Or _nQRDAFileType = CDAFileTypeEnum.CareRecordSummary Or _nQRDAFileType = CDAFileTypeEnum.ClinicalSummary Then
            _author(0).assignedAuthor.code = New CE()
            If mPatient.Clinic.TaxonomyCode <> "" AndAlso mPatient.Clinic.TaxonomyDesc <> "" Then
                _author(0).assignedAuthor.code.code = mPatient.Clinic.TaxonomyCode
                _author(0).assignedAuthor.code.codeSystem = "2.16.840.1.113883.6.101"
                _author(0).assignedAuthor.code.codeSystemName = "Healthcare Provider Taxonomy (HIPAA)"
                _author(0).assignedAuthor.code.codeSystemVersion = Nothing
                _author(0).assignedAuthor.code.displayName = mPatient.Clinic.TaxonomyDesc
            Else
                _author(0).assignedAuthor.code.nullFlavor = "NI"
                _author(0).assignedAuthor.code.code = Nothing
                _author(0).assignedAuthor.code.codeSystem = Nothing
                _author(0).assignedAuthor.code.codeSystemName = Nothing
                _author(0).assignedAuthor.code.codeSystemVersion = Nothing
                _author(0).assignedAuthor.code.displayName = Nothing
            End If



            'End If
            _author(0).assignedAuthor.Item = New POCD_MT000040UV02Person
            _person = DirectCast(_author(0).assignedAuthor.Item, POCD_MT000040UV02Person)
            _person.classCode = Nothing
            _person.classCodeSpecified = False
            _person.determinerCode = Nothing
            _person.name = New PN(0) {}
            _person.name(0) = New PN()
            _person.name(0).Items = New ENXP(4) {}
            'If oAuthor.PersonName IsNot Nothing AndAlso oAuthor.PersonName.Prefix IsNot Nothing AndAlso oAuthor.PersonName.Prefix <> "" Then
            '    _person.name(0).Items(0) = New enprefix()
            '    _person.name(0).Items(0).Text = New String() {oAuthor.PersonName.Prefix}
            '    _person.name(0).Items(0).language = Nothing
            '    _person.name(0).Items(0).partType = Nothing
            'Else
            '    _person.name(0).Items(0) = Nothing
            'End If
            If goal.GoalAuthorFirstName IsNot Nothing AndAlso goal.GoalAuthorFirstName <> "" Then
                _person.name(0).Items(1) = New engiven()
                _person.name(0).Items(1).Text = New String() {goal.GoalAuthorFirstName}
                _person.name(0).Items(1).language = Nothing
                _person.name(0).Items(1).partType = Nothing
            Else
                _person.name(0).Items(1) = Nothing
            End If
            If goal.GoalAuthorMiddleName IsNot Nothing AndAlso goal.GoalAuthorMiddleName <> "" Then
                _person.name(0).Items(2) = New engiven()
                _person.name(0).Items(2).Text = New String() {goal.GoalAuthorMiddleName}
                _person.name(0).Items(2).language = Nothing
                _person.name(0).Items(2).partType = Nothing
            Else
                _person.name(0).Items(2) = Nothing
            End If

            If goal.GoalAuthorLastName IsNot Nothing AndAlso goal.GoalAuthorLastName IsNot Nothing AndAlso goal.GoalAuthorLastName <> "" Then
                _person.name(0).Items(3) = New enfamily()
                _person.name(0).Items(3).Text = New String() {goal.GoalAuthorLastName}
                _person.name(0).Items(3).language = Nothing
                _person.name(0).Items(3).partType = Nothing
            Else
                _person.name(0).Items(3) = Nothing
            End If


            'If oAuthor.PersonName IsNot Nothing AndAlso oAuthor.PersonName.Suffix IsNot Nothing AndAlso oAuthor.PersonName.Suffix <> "" Then
            '    _person.name(0).Items(4) = New ensuffix()
            '    _person.name(0).Items(4).Text = New String() {oAuthor.PersonName.Suffix}
            '    _person.name(0).Items(4).language = Nothing
            '    _person.name(0).Items(4).partType = Nothing
            'Else
            '    _person.name(0).Items(4) = Nothing
            'End If

            'Return _author(0)
        Catch ex As Exception
            If _msgString = "" Then

                _msgString = vbNewLine & _errormsg & vbNewLine & "Author Section"
            Else
                _msgString = _msgString & vbNewLine & "Author Section"
            End If
            gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
            ex = Nothing



        End Try
    End Sub
    'Private Sub getCDAPlannedInterventionEntry(ByRef section As POCD_MT000040UV02Section)
    '    Try

    '        'Dim _interventionCol As InterventionCol = Nothing
    '        '_interventionCol = mPatient.InterventionCol
    '        'Dim interventionentry As Integer = Nothing
    '        'If _interventionCol.PlannedIntervention.Count > 0 Then
    '        '    Dim duplicates = _interventionCol.PlannedIntervention.GroupBy(Function(x) x.InterventionId).Select(Function(x) x.FirstOrDefault).ToList
    '        '    interventionentry = DirectCast(duplicates, List(Of Intervention)).Count
    '        '    section.entry = New POCD_MT000040UV02Entry(interventionentry) {}

    '        'End If
    '    Catch ex As Exception

    '    End Try
    'End Sub
    Private Sub getCDAPlannedInterventionAct(ByRef entry As POCD_MT000040UV02Entry, ByVal InterventionCol As InterventionCol, ByVal Intervention As Intervention)
        Try
            Dim act As POCD_MT000040UV02Act = Nothing
            entry.Item = New POCD_MT000040UV02Act
            act = DirectCast(entry.Item, POCD_MT000040UV02Act)
            act.classCodeSpecified = True
            act.classCode = x_ActClassDocumentEntryAct.ACT
            act.moodCodeSpecified = True
            act.moodCode = x_DocumentActMood.INT
            act.templateId = New II(1) {}
            act.templateId(0) = New II
            act.templateId(0).root = oTemplateIDMaster.GetEntryID("PlannedIntervention")
            act.templateId(0).extension = _DateExtension2015
            act.templateId(0).assigningAuthorityName = Nothing
            act.templateId(1) = New II
            act.templateId(1).root = oTemplateIDMaster.GetEntryID("PlannedIntervention")
            act.templateId(1).extension = Nothing
            act.templateId(1).assigningAuthorityName = Nothing

            act.id = New II(0) {}
            act.id(0) = New II
            act.id(0).root = Guid.NewGuid.ToString()
            Intervention.GUID = act.id(0).root
            act.code = New CD()
            Dim _codesystemitem As CodeSystemItem = Nothing
            _codesystemitem = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Intervention")
            act.code.code = _codesystemitem.Code
            act.code.codeSystem = CodeSystem.SNOMED_CT
            act.code.codeSystemName = _codesystemitem.CodingSystemName
            act.code.displayName = _codesystemitem.Description
            act.statusCode = New CS
            act.statusCode.code = "active"
            If Not IsNothing(Intervention.InterventionrecordDate) AndAlso Intervention.InterventionrecordDate <> "" Then
                act.effectiveTime = New IVL_TS()
                act.effectiveTime.value = Format(CType(Intervention.InterventionrecordDate, Date), "yyyyMMdd")
            End If
            Dim entryrelationshipcount As Integer = 0

            Dim cdaEx As gloCDADataExtraction = New gloCDADataExtraction()
            Dim dt As DataTable = cdaEx.getCDAPlannedInterventionsDetail(Intervention.PlanOfTreatmentId)
            If dt IsNot Nothing Then
                entryrelationshipcount = dt.Rows.Count
            End If
            If cdaEx IsNot Nothing Then
                cdaEx.Dispose()
                cdaEx = Nothing
            End If

            'Dim plannedobsflag As Boolean = False
            'Dim plannedEncflag As Boolean = False
            'Dim plannedMedflag As Boolean = False
            ''plannedLoinc Code is not blank means it has planned observation
            'If Intervention.PlannedLOINCCode <> "" Then
            '    plannedobsflag = True
            '    entryrelationshipcount = entryrelationshipcount + 1
            'End If
            'If Intervention.PlannedEncounterCode <> "" Then
            '    plannedEncflag = True
            '    entryrelationshipcount = entryrelationshipcount + 1
            'End If
            'If Intervention.PlannedMedicatinName <> "" AndAlso Intervention.PlannedMedicationCode <> "" Then
            '    plannedMedflag = True
            '    entryrelationshipcount = entryrelationshipcount + 1
            'End If

            Dim entryrelationshipind As Integer = 0

            Dim entryrelationshipslist = InterventionCol.PlannedIntervention.Where(Function(p) p.InterventionId = Intervention.InterventionId).ToList()
            'Dim NutRecomendationCnt As Int16 = 0
            'Dim Goalreference As Integer = 0
            If Not IsNothing(entryrelationshipslist) Then
                Dim entryrelationshiplistcount = DirectCast(entryrelationshipslist, List(Of Intervention)).Count
                entryrelationshipcount = entryrelationshipcount + entryrelationshiplistcount
                If entryrelationshipcount > 0 Then
                    act.entryRelationship = New POCD_MT000040UV02EntryRelationship(entryrelationshipcount) {}
                    For entryrelationshipindex As Integer = 0 To entryrelationshiplistcount - 1
                        Dim _intervention As Intervention = DirectCast(entryrelationshipslist, List(Of Intervention)).Item(entryrelationshipindex)
                        entryrelationshipind = entryrelationshipind + 1
                        Select Case _intervention.AssociateType
                            Case "1"
                                Dim _GoalsCol As GoalsCol = mPatient.GoalsCol
                                Dim Goal1 = _GoalsCol.GoalsList.Where(Function(p) p.GoalId = _intervention.AssociateId).FirstOrDefault()
                                If Not IsNothing(Goal1) Then
                                    act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                    getCDAEntryReference(act.entryRelationship(entryrelationshipindex), DirectCast(Goal1, Goal).GUID, "InterventionToGoal")
                                End If
                            Case "2"
                                act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                act.entryRelationship(entryrelationshipindex).typeCodeSpecified = True
                                act.entryRelationship(entryrelationshipindex).typeCode = ActRelationshipType.REFR
                                act.entryRelationship(entryrelationshipindex).Item = New POCD_MT000040UV02Act
                                getCDANutritionRecommendation(act.entryRelationship(entryrelationshipindex).Item, _intervention)
                            Case "3"
                                Dim Medication1 = mPatient.PatientMedications.Where(Function(p) p.MedicationID = _intervention.AssociateId).FirstOrDefault()
                                If IsNothing(Medication1) Then
                                    Medication1 = mPatient.PatientMedications.Where(Function(p) p.PreviousMedicationid = _intervention.AssociateId).FirstOrDefault()
                                End If
                                If Not IsNothing(Medication1) Then
                                    act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                    getCDAEntryReference(act.entryRelationship(entryrelationshipindex), DirectCast(Medication1, Medication).GUID)
                                End If
                            Case "4"
                                For k As Int32 = 0 To mPatient.LabTests.Count - 1
                                    If (mPatient.LabTests.Item(k).TestId = _intervention.AssociateId) And (mPatient.LabTests.Item(k).OrderId = _intervention.RelativeId) Then
                                        act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                        getCDAEntryReference(act.entryRelationship(entryrelationshipindex), DirectCast(mPatient.LabTests.Item(k), LabTest).GUID)
                                        Exit For
                                    End If

                                Next

                                'Dim Labresults = mPatient.PatientLabResult.Where(Function(p) p.MedicationID = _intervention.AssociateId).FirstOrDefault()
                                'act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                'getCDAEntryReference(act.entryRelationship(entryrelationshipindex), DirectCast(Medication1, Medication).GUID)
                            Case "5"
                                Dim Immunization1 = mPatient.PatientImmunizations.Where(Function(p) p.ImmtransactionId = _intervention.AssociateId).FirstOrDefault()
                                If Not IsNothing(Immunization1) Then
                                    act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                    getCDAEntryReference(act.entryRelationship(entryrelationshipindex), DirectCast(Immunization1, Immunization).GUID)
                                End If

                            Case "6"
                                'For k As Int32 = 0 To mPatient.PatientEncounters.Count - 1
                                '    If mPatient.PatientEncounters.Item(k).EncounterId = _intervention.AssociateId Then
                                '        act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                '        getCDAEntryReference(act.entryRelationship(entryrelationshipindex), DirectCast(mPatient.PatientEncounters.Item(k), Encounters).GUID)
                                '        Exit For
                                '    End If

                                'Next

                                'Dim EncounterDiag = mPatient.PatientEncounters.Item.Where(Function(p) p.mEncounterId = _intervention.AssociateId).FirstOrDefault()
                                'If Not IsNothing(EncounterDiag) Then
                                '    act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                '    getCDAEntryReference(act.entryRelationship(entryrelationshipindex), DirectCast(EncounterDiag, Problems).GUID)
                                'End If
                            Case "7"
                                'Dim EncounterDiag = mPatient.PatientEducation.Where(Function(p) p.mEncounterId = _intervention.AssociateId).FirstOrDefault()
                                'If Not IsNothing(EncounterDiag) Then
                                '    act.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                '    getCDAEntryReference(act.entryRelationship(entryrelationshipindex), DirectCast(EncounterDiag, Problems).GUID)
                                'End If
                        End Select

                    Next
                End If

            End If
            If dt IsNot Nothing Then
                Dim ndcList As New List(Of String)
                Using dtNDCs As DataTable = dt.AsEnumerable().Where(Function(c) (c.Field(Of String)("sType") = "PMed")).AsDataView().ToTable(False, New String() {"Code"})
                    If Not IsNothing(dtNDCs) Then
                        If Not IsNothing(dtNDCs) Or dtNDCs.Rows.Count > 0 Then
                            ndcList = dtNDCs.AsEnumerable().[Select](Of String)(Function(q) Convert.ToString(q("Code"))).ToList()
                        End If
                    End If
                End Using
                Dim oDrugInfo As New gloGlobal.DIB.ResultSetRxnorm
                Try
                    Using oDIBGSHelper As New gloGlobal.DIB.gloGSHelper(gloLibCCDGeneral.sDIBServiceURL)
                        oDrugInfo = oDIBGSHelper.GetRxnormGenericName(ndcList)
                    End Using
                Catch ex As Exception
                    gloAuditTrail.gloAuditTrail.ExceptionLog(ex, False)
                End Try

                For i As Int32 = 0 To dt.Rows.Count - 1
                    entryrelationshipind = entryrelationshipind + 1
                    act.entryRelationship(entryrelationshipind) = New POCD_MT000040UV02EntryRelationship
                    act.entryRelationship(entryrelationshipind).typeCodeSpecified = True
                    act.entryRelationship(entryrelationshipind).typeCode = ActRelationshipType.REFR

                    Select Case dt.Rows(i)("sType").ToString()
                        Case "PLab"
                            act.entryRelationship(entryrelationshipind).Item = New POCD_MT000040UV02Observation
                            Intervention.PlannedLOINCCode = Convert.ToString(dt.Rows(i)("Code"))
                            Intervention.PlannedLOINCName = Convert.ToString(dt.Rows(i)("Name"))
                            Intervention.PlannedObsDate = Convert.ToString(dt.Rows(i)("dtStartDate"))
                            getCDAPlannedObservation(act.entryRelationship(entryrelationshipind).Item, Intervention)
                        Case "PEnc"
                            act.entryRelationship(entryrelationshipind).Item = New POCD_MT000040UV02Encounter
                            Intervention.PlannedEncounterCode = Convert.ToString(dt.Rows(i)("Code"))
                            Intervention.PlannedEncounterName = Convert.ToString(dt.Rows(i)("Name"))
                            Intervention.PlannedEncounterDate = Convert.ToString(dt.Rows(i)("dtStartDate"))
                            getCDAPlannedEncounter(act.entryRelationship(entryrelationshipind).Item, Intervention)
                        Case "PMed"
                            act.entryRelationship(entryrelationshipind).Item = New POCD_MT000040UV02SubstanceAdministration
                            Intervention.PlannedMedicationCode = Convert.ToString(dt.Rows(i)("Code"))
                            Intervention.PlannedMedicatinName = Convert.ToString(dt.Rows(i)("Name"))
                            Intervention.PlannedmedicationDate = Convert.ToString(dt.Rows(i)("dtStartDate"))
                            If IsNothing(oDrugInfo) = False Then
                                If IsNothing(oDrugInfo) = False Then
                                    If oDrugInfo.lgrx.Count > 0 Then
                                        For Each item As gloGlobal.DIB.Rxnormdetails In oDrugInfo.lgrx
                                            If item.Ndc = Intervention.PlannedMedicationCode Then
                                                Intervention.PlannedRxNormCode = item.Rxnorm
                                                Exit For
                                            End If
                                        Next
                                    End If
                                End If
                            End If
                            getCDAPlannedMedicationActvity(act.entryRelationship(entryrelationshipind).Item, Intervention)

                        Case "PNut"
                            act.entryRelationship(entryrelationshipind).Item = New POCD_MT000040UV02Act
                            'Bug Id #110553
                            Intervention.NutritionRecomendation = Convert.ToString(dt.Rows(i)("Code"))
                            Intervention.NutritionRecomendationDesc = Convert.ToString(dt.Rows(i)("Name"))
                            'Intervention.pl = Convert.ToString(dt.Rows(i)("dtStartDate"))
                            getCDANutritionRecommendation(act.entryRelationship(entryrelationshipind).Item, Intervention)
                    End Select
                Next
            End If

            

            'If plannedobsflag = True Then
            '    entryrelationshipind = entryrelationshipind + 1
            '    act.entryRelationship(entryrelationshipind) = New POCD_MT000040UV02EntryRelationship
            '    act.entryRelationship(entryrelationshipind).typeCodeSpecified = True
            '    act.entryRelationship(entryrelationshipind).typeCode = ActRelationshipType.REFR
            '    act.entryRelationship(entryrelationshipind).Item = New POCD_MT000040UV02Observation
            '    getCDAPlannedObservation(act.entryRelationship(entryrelationshipind).Item, Intervention)
            'End If
            'If plannedEncflag = True Then
            '    entryrelationshipind = entryrelationshipind + 1
            '    act.entryRelationship(entryrelationshipind) = New POCD_MT000040UV02EntryRelationship
            '    act.entryRelationship(entryrelationshipind).typeCodeSpecified = True
            '    act.entryRelationship(entryrelationshipind).typeCode = ActRelationshipType.REFR
            '    act.entryRelationship(entryrelationshipind).Item = New POCD_MT000040UV02Encounter
            '    getCDAPlannedEncounter(act.entryRelationship(entryrelationshipind).Item, Intervention)
            'End If
            'If plannedMedflag = True Then
            '    entryrelationshipind = entryrelationshipind + 1
            '    act.entryRelationship(entryrelationshipind) = New POCD_MT000040UV02EntryRelationship
            '    act.entryRelationship(entryrelationshipind).typeCodeSpecified = True
            '    act.entryRelationship(entryrelationshipind).typeCode = ActRelationshipType.REFR
            '    act.entryRelationship(entryrelationshipind).Item = New POCD_MT000040UV02SubstanceAdministration
            '    getCDAPlannedMedicationActvity(act.entryRelationship(entryrelationshipind).Item, Intervention)
            'End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub getCDAPlannedObservation(ByRef item As Object, Optional ByVal _intervention As Intervention = Nothing, Optional ByVal _PlannedModule As PlannedModule = Nothing, Optional ByVal _PendingTest As LabTest = Nothing)

        Dim obs As POCD_MT000040UV02Observation = Nothing
        obs = DirectCast(item, POCD_MT000040UV02Observation)
        obs.classCodeSpecified = True
        obs.classCode = ActClassObservation.OBS
        obs.moodCodeSpecified = True
        obs.moodCode = x_ActMoodDocumentObservation.INT
        obs.templateId = New II(1) {}
        obs.templateId(0) = New II
        obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Plan of Care Activity Observation")
        obs.templateId(0).extension = _DateExtension22
        obs.templateId(1) = New II
        obs.templateId(1).root = oTemplateIDMaster.GetEntryID("Plan of Care Activity Observation")
        obs.id = New II(0) {}
        obs.id(0) = New II
        obs.id(0).root = Guid.NewGuid.ToString()
        obs.code = New CD()
        If Not IsNothing(_intervention) Then
            If Not IsNothing(_intervention.PlannedLOINCCode) And _intervention.PlannedLOINCCode <> "" Then
                obs.code.code = _intervention.PlannedLOINCCode
                If _intervention.PlannedLOINCName <> "" Then
                    obs.code.displayName = _intervention.PlannedLOINCName
                Else
                    obs.code.displayName = Nothing
                End If

                obs.code.codeSystem = CodeSystem.LOINC
                obs.code.codeSystemName = "LOINC"

            Else
                obs.code.nullFlavorSpecified = True
                obs.code.nullFlavor = "UNK"
                obs.code.codeSystem = Nothing
                obs.code.codeSystemName = Nothing
                obs.code.displayName = Nothing
            End If

          
            If _intervention.PlannedObsDate <> "" Then
                obs.effectiveTime = New IVL_TS
                obs.effectiveTime.value = Format(CType(_intervention.PlannedObsDate, Date), "yyyyMMdd")
            End If
        End If
        If Not IsNothing(_PlannedModule) Then
            If Not IsNothing(_PlannedModule.PlannedCode) And _PlannedModule.PlannedCode <> "" Then
                obs.code.code = _PlannedModule.PlannedCode
                If _PlannedModule.PlannedName <> "" Then
                    obs.code.displayName = _PlannedModule.PlannedName
                Else
                    obs.code.displayName = Nothing
                End If
                obs.code.codeSystem = CodeSystem.LOINC
                obs.code.codeSystemName = "LOINC"
            Else
                obs.code.nullFlavorSpecified = True
                obs.code.nullFlavor = "UNK"
                obs.code.codeSystem = Nothing
                obs.code.codeSystemName = Nothing
                obs.code.displayName = Nothing
            End If

         
            If _PlannedModule.EffectivePlannedDate <> "" Then
                obs.effectiveTime = New IVL_TS
                obs.effectiveTime.value = Format(CType(_PlannedModule.EffectivePlannedDate, Date), "yyyyMMdd")
            End If
        End If
        If Not IsNothing(_PendingTest) Then
            If Not IsNothing(_PendingTest.TestLOINCcode) And _PendingTest.TestLOINCcode <> "" Then
                obs.code.code = _PendingTest.TestLOINCcode
                If _PendingTest.TestName <> "" Then
                    obs.code.displayName = _PendingTest.TestName
                Else
                    obs.code.displayName = Nothing
                End If
                obs.code.codeSystem = CodeSystem.LOINC
                obs.code.codeSystemName = "LOINC"
            Else
                obs.code.nullFlavorSpecified = True
                obs.code.nullFlavor = "UNK"
                obs.code.codeSystem = Nothing
                obs.code.codeSystemName = Nothing
                obs.code.displayName = Nothing
            End If

          
            If _PendingTest.ScheduledDateTime <> "" Then
                obs.effectiveTime = New IVL_TS
                obs.effectiveTime.value = Format(CType(_PendingTest.ScheduledDateTime, Date), "yyyyMMdd")
            End If
        End If



        obs.statusCode = New CS()
        If Not IsNothing(_PlannedModule) Then
            obs.statusCode.code = _PlannedModule.PlannedStatus
        Else
            obs.statusCode.code = "active"
        End If





    End Sub
    Private Sub getCDAPlannedEncounter(ByRef item As Object, Optional ByVal _intervention As Intervention = Nothing, Optional ByVal _PlannedModule As PlannedModule = Nothing)

        Dim Enc As POCD_MT000040UV02Encounter = Nothing
        Enc = DirectCast(item, POCD_MT000040UV02Encounter)
        Enc.moodCodeSpecified = True
        Enc.moodCode = x_DocumentEncounterMood.INT
        Enc.classCodeSpecified = True
        Enc.classCode = ActClass.ENC
        Enc.templateId = New II(1) {}
        Enc.templateId(0) = New II
        Enc.templateId(0).root = oTemplateIDMaster.GetEntryID("Plan of Care Activity Encounter")
        Enc.templateId(0).extension = _DateExtension22
        Enc.templateId(1) = New II
        Enc.templateId(1).root = oTemplateIDMaster.GetEntryID("Plan of Care Activity Encounter")
        Enc.templateId(1).extension = Nothing
        Enc.id = New II(0) {}
        Enc.id(0) = New II
        Enc.id(0).root = Guid.NewGuid.ToString
        Enc.code = New CD()
        If Not IsNothing(_intervention) Then
            Enc.code.code = _intervention.PlannedEncounterCode
            If _intervention.PlannedEncounterName <> "" Then
                Enc.code.displayName = _intervention.PlannedEncounterName
            End If
        ElseIf Not IsNothing(_PlannedModule) Then
            Enc.code.code = _PlannedModule.PlannedCode
            If _PlannedModule.PlannedName <> "" Then
                Enc.code.displayName = _PlannedModule.PlannedName
            End If
        End If


        Enc.code.codeSystem = CodeSystem.SNOMED_CT
        Enc.code.codeSystemName = "SNOMED CT"

        Enc.statusCode = New CS()
        If Not IsNothing(_PlannedModule) Then
            Enc.statusCode.code = _PlannedModule.PlannedStatus
        Else
            Enc.statusCode.code = "active"
        End If


        Enc.effectiveTime = New IVL_TS
        If Not IsNothing(_intervention) Then
            If _intervention.PlannedEncounterDate <> "" Then
                Enc.effectiveTime.value = Format(CType(_intervention.PlannedEncounterDate, Date), "yyyyMMdd")
            End If
        ElseIf Not IsNothing(_PlannedModule) Then
            If _PlannedModule.EffectivePlannedDate <> "" Then
                Enc.effectiveTime.value = Format(CType(_PlannedModule.EffectivePlannedDate, Date), "yyyyMMdd")
            End If
        End If


    End Sub
    Private Sub getCDAPlannedMedicationActvity(ByRef item As Object, Optional ByVal _intervention As Intervention = Nothing, Optional ByVal _PlannedModule As PlannedModule = Nothing)

        Dim Subsadmin As POCD_MT000040UV02SubstanceAdministration = Nothing
        Subsadmin = DirectCast(item, POCD_MT000040UV02SubstanceAdministration)
        Subsadmin.classCode = ActClass.SBADM
        Subsadmin.moodCodeSpecified = True
        Subsadmin.moodCode = x_DocumentSubstanceMood.INT
        Subsadmin.templateId = New II(1) {}
        Subsadmin.templateId(0) = New II
        Subsadmin.templateId(0).root = oTemplateIDMaster.GetEntryID("Plan of Care Activity Substance Administration")
        Subsadmin.templateId(0).extension = _DateExtension22
        Subsadmin.templateId(1) = New II
        Subsadmin.templateId(1).root = oTemplateIDMaster.GetEntryID("Plan of Care Activity Substance Administration")
        Subsadmin.templateId(1).extension = Nothing

        Subsadmin.id = New II(0) {}
        Subsadmin.id(0) = New II
        Subsadmin.id(0).root = Guid.NewGuid.ToString
        Subsadmin.statusCode = New CS()
        If Not IsNothing(_PlannedModule) Then
            Subsadmin.statusCode.code = _PlannedModule.PlannedStatus
        Else
            Subsadmin.statusCode.code = "active"
        End If



        Subsadmin.consumable = New POCD_MT000040UV02Consumable()
        Subsadmin.consumable.typeCodeSpecified = False
        Subsadmin.consumable.typeCode = Nothing
        Subsadmin.consumable.manufacturedProduct = New POCD_MT000040UV02ManufacturedProduct()
        Subsadmin.consumable.manufacturedProduct.classCodeSpecified = True
        Subsadmin.consumable.manufacturedProduct.classCode = RoleClass.MANU
        Subsadmin.consumable.manufacturedProduct.templateId = New II(1) {}
        Subsadmin.consumable.manufacturedProduct.templateId(0) = New II()
        Subsadmin.consumable.manufacturedProduct.templateId(0).root = oTemplateIDMaster.GetEntryID("Medication Information")
        Subsadmin.consumable.manufacturedProduct.templateId(0).assigningAuthorityName = Nothing
        Subsadmin.consumable.manufacturedProduct.templateId(0).extension = _DateExtension22

        Subsadmin.consumable.manufacturedProduct.templateId(1) = New II()
        Subsadmin.consumable.manufacturedProduct.templateId(1).root = oTemplateIDMaster.GetEntryID("Medication Information")
        Subsadmin.consumable.manufacturedProduct.templateId(1).assigningAuthorityName = Nothing
        Subsadmin.consumable.manufacturedProduct.templateId(1).extension = Nothing



        Subsadmin.consumable.manufacturedProduct.Item = New POCD_MT000040UV02Material()
        Dim mat As POCD_MT000040UV02Material = Nothing
        mat = DirectCast(Subsadmin.consumable.manufacturedProduct.Item, POCD_MT000040UV02Material)
        mat.name = New EN()

        mat.code = New CE()
        'If IsNothing(mPatient.PatientMedications) Then
        '    mat.code.code = Nothing
        '    mat.code.nullFlavorSpecified = True
        '    mat.code.nullFlavor = "OTH"
        '    mat.code.codeSystem = CodeSystem.RxNorm
        '    mat.code.codeSystemName = Nothing
        '    mat.code.displayName = Nothing
        '    mat.code.codeSystemVersion = Nothing
        'Else


        mat.code.codeSystemVersion = Nothing


        mat.code.translation = New CD(0) {}
        mat.code.translation(0) = New CD()


        If Not IsNothing(_intervention) Then
            'If _intervention.PlannedmedicationDate <> "" Then
            Subsadmin.effectiveTime = New SXCM_TS(0) {}

            Subsadmin.effectiveTime(0) = New IVL_TS()
            Subsadmin.effectiveTime(0).value = Nothing
            DirectCast(Subsadmin.effectiveTime(0), IVL_TS).ItemsElementName = New ItemsChoiceType2(1) {}
            DirectCast(Subsadmin.effectiveTime(0), IVL_TS).ItemsElementName(0) = ItemsChoiceType2.low
            DirectCast(Subsadmin.effectiveTime(0), IVL_TS).ItemsElementName(1) = ItemsChoiceType2.high
            DirectCast(Subsadmin.effectiveTime(0), IVL_TS).Items = New QTY(1) {}
            DirectCast(Subsadmin.effectiveTime(0), IVL_TS).Items(0) = New IVXB_TS()
            'End If
            If _intervention.PlannedMedicatinName <> "" AndAlso _intervention.PlannedMedicatinName <> Nothing Then
                mat.code.displayName = _intervention.PlannedMedicatinName
            Else
                mat.code.displayName = Nothing
            End If
            If Not IsNothing(_intervention.PlannedRxNormCode) AndAlso _intervention.PlannedRxNormCode <> "" Then
                mat.code.code = _intervention.PlannedRxNormCode
                mat.code.codeSystem = CodeSystem.RxNorm
                mat.code.codeSystemName = "RxNorm"
                If _intervention.PlannedMedicatinName <> "" AndAlso _intervention.PlannedMedicatinName <> Nothing Then
                    mat.code.displayName = _intervention.PlannedMedicatinName
                Else
                    mat.code.displayName = Nothing
                End If
            Else
                mat.code.nullFlavor = "UNK"
                mat.code.codeSystem = Nothing
                mat.code.codeSystemName = Nothing
                mat.code.displayName = Nothing
                mat.code.code = Nothing
            End If
            If _intervention.PlannedMedicatinName <> "" AndAlso _intervention.PlannedMedicatinName <> Nothing Then
                mat.name.Text = New String() {_intervention.PlannedMedicatinName}
            End If
            If _intervention.PlannedmedicationDate <> "" Then
                DirectCast(DirectCast(Subsadmin.effectiveTime(0), IVL_TS).Items(0), IVXB_TS).value = Format(CType(_intervention.PlannedmedicationDate, Date), "yyyyMMdd")
            Else
                DirectCast(DirectCast(Subsadmin.effectiveTime(0), IVL_TS).Items(0), IVXB_TS).nullFlavor = "NA"
            End If
            If Not IsNothing(_intervention.PlannedMedicationCode) Then

                mat.code.translation(0).codeSystem = CodeSystem.NDC
                mat.code.translation(0).codeSystemName = "NDC"
                mat.code.translation(0).codeSystemVersion = Nothing
                If Not IsNothing(_intervention.PlannedMedicationCode) AndAlso _intervention.PlannedMedicationCode <> "" Then
                    mat.code.translation(0).code = _intervention.PlannedMedicationCode
                Else
                    mat.code.translation(0).code = Nothing
                    mat.code.translation(0).nullFlavor = "UNK"
                End If
                If _intervention.PlannedMedicatinName <> "" AndAlso _intervention.PlannedMedicatinName <> Nothing Then
                    mat.code.translation(0).displayName = _intervention.PlannedMedicatinName
                Else
                    mat.code.translation(0).displayName = Nothing
                End If
            End If
        End If
        If Not IsNothing(_PlannedModule) Then

            If _PlannedModule.PlannedName <> "" AndAlso _PlannedModule.PlannedName <> Nothing Then
                mat.code.displayName = _PlannedModule.PlannedName
            Else
                mat.code.displayName = Nothing
            End If
            If Not IsNothing(_PlannedModule.PlannedRxNormcode) AndAlso _PlannedModule.PlannedRxNormcode <> "" Then
                mat.code.code = _PlannedModule.PlannedRxNormcode
                mat.code.codeSystem = CodeSystem.RxNorm
                mat.code.codeSystemName = "RxNorm"
                If _PlannedModule.PlannedName <> "" AndAlso _PlannedModule.PlannedName <> Nothing Then
                    mat.code.displayName = _PlannedModule.PlannedName
                Else
                    mat.code.displayName = Nothing
                End If
            Else
                mat.code.nullFlavor = "UNK"
                mat.code.codeSystem = Nothing
                mat.code.codeSystemName = Nothing
                mat.code.displayName = Nothing
                mat.code.code = Nothing
            End If
            If _PlannedModule.PlannedName <> "" AndAlso _PlannedModule.PlannedName <> Nothing Then
                mat.name.Text = New String() {_PlannedModule.PlannedName}
            End If
            Subsadmin.effectiveTime = New SXCM_TS(0) {}

            Subsadmin.effectiveTime(0) = New IVL_TS()
            Subsadmin.effectiveTime(0).value = Nothing
            DirectCast(Subsadmin.effectiveTime(0), IVL_TS).ItemsElementName = New ItemsChoiceType2(1) {}
            DirectCast(Subsadmin.effectiveTime(0), IVL_TS).ItemsElementName(0) = ItemsChoiceType2.low
            DirectCast(Subsadmin.effectiveTime(0), IVL_TS).ItemsElementName(1) = ItemsChoiceType2.high
            DirectCast(Subsadmin.effectiveTime(0), IVL_TS).Items = New QTY(1) {}
            DirectCast(Subsadmin.effectiveTime(0), IVL_TS).Items(0) = New IVXB_TS()
            If _PlannedModule.EffectivePlannedDate <> "" Then

                DirectCast(DirectCast(Subsadmin.effectiveTime(0), IVL_TS).Items(0), IVXB_TS).value = Format(CType(_PlannedModule.EffectivePlannedDate, Date), "yyyyMMdd")
            Else
                DirectCast(DirectCast(Subsadmin.effectiveTime(0), IVL_TS).Items(0), IVXB_TS).nullFlavor = "NA"
            End If
            If _PlannedModule.PlannedEndDate <> "" Then
                DirectCast(Subsadmin.effectiveTime(0), IVL_TS).Items(1) = New IVXB_TS()
                DirectCast(DirectCast(Subsadmin.effectiveTime(0), IVL_TS).Items(1), IVXB_TS).value = Format(CType(_PlannedModule.PlannedEndDate, Date), "yyyyMMdd")
            End If
            If Not IsNothing(_PlannedModule.PlannedCode) Then
                mat.code.translation(0).codeSystem = CodeSystem.NDC
                mat.code.translation(0).codeSystemName = "NDC"
                mat.code.translation(0).codeSystemVersion = Nothing
                If Not IsNothing(_PlannedModule.PlannedCode) AndAlso _PlannedModule.PlannedCode <> "" Then
                    mat.code.translation(0).code = _PlannedModule.PlannedCode
                Else
                    mat.code.translation(0).code = Nothing
                    mat.code.translation(0).nullFlavor = "UNK"
                End If
                If _PlannedModule.PlannedName <> "" AndAlso _PlannedModule.PlannedName <> Nothing Then
                    mat.code.translation(0).displayName = _PlannedModule.PlannedName
                Else
                    mat.code.translation(0).displayName = Nothing
                End If
            End If
        End If


        'End If
    End Sub
    Private Function getCDAplanoftreatment() As POCD_MT000040UV02Component3
        Try
            Dim TreatmentPlanComponent As POCD_MT000040UV02Component3 = Nothing
            TreatmentPlanComponent = New POCD_MT000040UV02Component3

            If (Not IsNothing(mPatient.PlannedModuleCol) AndAlso mPatient.PlannedModuleCol.PlannedModuleList.Count > 0) Then

                TreatmentPlanComponent.section = New POCD_MT000040UV02Section
                TreatmentPlanComponent.section.templateId = New II(1) {}
                TreatmentPlanComponent.section.templateId(0) = New II
                TreatmentPlanComponent.section.templateId(0).root = oTemplateIDMaster.GetSectionID("Treatment Plan")
                TreatmentPlanComponent.section.templateId(0).extension = _DateExtension22
                TreatmentPlanComponent.section.templateId(1) = New II
                TreatmentPlanComponent.section.templateId(1).root = oTemplateIDMaster.GetSectionID("Treatment Plan")
                TreatmentPlanComponent.section.code = New CE()
                Dim _codesystemitem As CodeSystemItem = Nothing
                _codesystemitem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Plan of care")
                If Not IsNothing(_codesystemitem) Then
                    TreatmentPlanComponent.section.code.code = _codesystemitem.Code
                    TreatmentPlanComponent.section.code.codeSystem = CodeSystem.LOINC
                    TreatmentPlanComponent.section.code.codeSystemName = "LOINC"
                    TreatmentPlanComponent.section.code.codeSystemVersion = Nothing
                Else
                    TreatmentPlanComponent.section.code = Nothing
                End If
                TreatmentPlanComponent.section.title = New ST
                TreatmentPlanComponent.section.title.Text = New String() {"Plan of Treatment"}
                TreatmentPlanComponent.section.text = New StrucDocText

                ''
                Dim sconf As CE
                sconf = New CE()
                sconf = GetCDAPrivacypconfidentialityCode(gloLibCCDGeneral.sConfidentialityCode, TreatmentPlanComponent.section)
                ''
                If Not IsNothing(sconf.code) Then
                    TreatmentPlanComponent.section.confidentialityCode = sconf
                End If
                sconf = Nothing
                ''

                TreatmentPlanComponent.section.text.Items = New Object(1) {}
                TreatmentPlanComponent.section.text.Items(0) = New StrucDocTable
                Dim table As StrucDocTable = Nothing
                table = DirectCast(TreatmentPlanComponent.section.text.Items(0), StrucDocTable)
                table.border = "1"
                table.width = "100%"
                table.ID = Nothing
                table.language = Nothing
                table.border = "1"
                table.width = "100%"
                table.thead = New StrucDocThead()
                table.thead.ID = Nothing
                table.thead.language = Nothing
                table.thead.tr = New StrucDocTr(0) {}
                table.thead.tr(0) = New StrucDocTr()
                table.thead.tr(0).ID = Nothing
                table.thead.tr(0).language = Nothing
                table.thead.tr(0).Items = New Object(2) {}

                table.thead.tr(0).Items(0) = New StrucDocTh()

                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Planned Care"}
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing

                table.thead.tr(0).Items(1) = New StrucDocTh()



                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Start Date"}
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing

                table.thead.tr(0).Items(2) = New StrucDocTh()




                table.tbody = New StrucDocTbody(0) {}
                table.tbody(0) = New StrucDocTbody()
                table.tbody(0).ID = Nothing
                table.tbody(0).language = Nothing
                table.tbody(0).tr = New StrucDocTr(0) {}
                table.tbody(0).tr(0) = New StrucDocTr()
                table.tbody(0).tr(0).ID = Nothing
                table.tbody(0).tr(0).language = Nothing
                table.tbody(0).tr(0).Items = New Object(2) {}
                table.tbody(0).tr(0).Items(0) = New StrucDocTd()
                DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
                DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing
                Dim _PlannedModules As PlannedModuleCol = Nothing

                If Not IsNothing(mPatient.PlannedModuleCol) Then
                    _PlannedModules = mPatient.PlannedModuleCol
                    table.tbody(0).tr = New StrucDocTr(_PlannedModules.PlannedModuleList.Count - 1) {}
                    For TreatmentIndex As Integer = 0 To _PlannedModules.PlannedModuleList.Count - 1
                        Dim _Module As PlannedModule = Nothing
                        _Module = _PlannedModules.PlannedModuleList.Item(TreatmentIndex)
                        table.tbody(0).tr(TreatmentIndex) = New StrucDocTr()
                        table.tbody(0).tr(TreatmentIndex).ID = Nothing
                        table.tbody(0).tr(TreatmentIndex).language = Nothing
                        table.tbody(0).tr(TreatmentIndex).Items = New Object(3) {}
                        table.tbody(0).tr(TreatmentIndex).Items(0) = New StrucDocTd()

                        DirectCast(table.tbody(0).tr(TreatmentIndex).Items(0), StrucDocTd).ID = "Plan" & TreatmentIndex + 1
                        DirectCast(table.tbody(0).tr(TreatmentIndex).Items(0), StrucDocTd).language = Nothing
                        If _Module.Details IsNot Nothing AndAlso _Module.Details <> "" Then
                            If _Module.Details = "Pending Lab Test" Then
                                DirectCast(table.tbody(0).tr(TreatmentIndex).Items(0), StrucDocTd).Text = New String() {_Module.Details & "  -" & _Module.PlannedName}
                            Else
                                DirectCast(table.tbody(0).tr(TreatmentIndex).Items(0), StrucDocTd).Text = New String() {_Module.Details}
                            End If
                        Else
                            DirectCast(table.tbody(0).tr(TreatmentIndex).Items(0), StrucDocTd).Text = Nothing
                        End If

                        table.tbody(0).tr(TreatmentIndex).Items(1) = New StrucDocTd()
                        DirectCast(table.tbody(0).tr(TreatmentIndex).Items(1), StrucDocTd).ID = Nothing
                        DirectCast(table.tbody(0).tr(TreatmentIndex).Items(1), StrucDocTd).language = Nothing
                        If _Module.EffectivePlannedDate IsNot Nothing AndAlso _Module.EffectivePlannedDate <> "" Then
                            DirectCast(table.tbody(0).tr(TreatmentIndex).Items(1), StrucDocTd).Text = New String() {CType(_Module.EffectivePlannedDate, Date)}
                        Else
                            DirectCast(table.tbody(0).tr(TreatmentIndex).Items(1), StrucDocTd).Text = New String() {"NA"}
                        End If



                    Next
                    'Dim Pendingtests As Int16 = 0
                    'If Not IsNothing(mPatient.PendingTests) And mPatient.PendingTests.Count > 0 Then
                    '    Pendingtests = mPatient.PendingTests.Count
                    'End If
                    TreatmentPlanComponent.section.entry = New POCD_MT000040UV02Entry((_PlannedModules.PlannedModuleList.Count) - 1) {}
                    For TreatmentEntryIndex As Integer = 0 To _PlannedModules.PlannedModuleList.Count - 1
                        Dim _PlannedModule As PlannedModule = Nothing
                        Dim entry As POCD_MT000040UV02Entry = Nothing
                        TreatmentPlanComponent.section.entry(TreatmentEntryIndex) = New POCD_MT000040UV02Entry
                        entry = DirectCast(TreatmentPlanComponent.section.entry(TreatmentEntryIndex), POCD_MT000040UV02Entry)
                        _PlannedModule = _PlannedModules.PlannedModuleList.Item(TreatmentEntryIndex)
                        If _PlannedModule.PlannedModuletype = "Order" Then
                            entry.Item = New POCD_MT000040UV02Observation
                            'Dim obs As POCD_MT000040UV02Observation = Nothing
                            'obs = DirectCast(entry.Item, POCD_MT000040UV02Observation)

                            getCDAPlannedObservation(entry.Item, Nothing, _PlannedModule)
                            'obs.templateId = New II(1) {}
                            'obs.templateId (0) = New II
                        ElseIf _PlannedModule.PlannedModuletype = "Enc" Then
                            entry.Item = New POCD_MT000040UV02Encounter
                            'Dim obs As POCD_MT000040UV02Observation = Nothing
                            'obs = DirectCast(entry.Item, POCD_MT000040UV02Observation)

                            getCDAPlannedEncounter(entry.Item, Nothing, _PlannedModule)
                        ElseIf _PlannedModule.PlannedModuletype = "Medication" Then
                            entry.Item = New POCD_MT000040UV02SubstanceAdministration
                            getCDAPlannedMedicationActvity(entry.Item, Nothing, _PlannedModule)
                        ElseIf _PlannedModule.PlannedModuletype = "Nutrition" Then
                            entry.Item = New POCD_MT000040UV02Act
                            getCDANutritionRecommendation(entry.Item, Nothing, _PlannedModule)
                        End If
                    Next

                End If
                'If Not IsNothing(mPatient.PendingTests) And mPatient.PendingTests.Count > 0 Then
                '    table.tbody(0).tr = New StrucDocTr(mPatient.PendingTests.Count - 1) {}
                '    For TreatmentIndex As Integer = 0 To mPatient.PendingTests.Count - 1
                '        Dim _Module As LabTest = Nothing
                '        _Module = mPatient.PendingTests.Item(TreatmentIndex)
                '        table.tbody(0).tr(TreatmentIndex) = New StrucDocTr()
                '        table.tbody(0).tr(TreatmentIndex).ID = Nothing
                '        table.tbody(0).tr(TreatmentIndex).language = Nothing
                '        table.tbody(0).tr(TreatmentIndex).Items = New Object(3) {}
                '        table.tbody(0).tr(TreatmentIndex).Items(0) = New StrucDocTd()

                '        DirectCast(table.tbody(0).tr(TreatmentIndex).Items(0), StrucDocTd).ID = "Plan" & TreatmentIndex + 1
                '        DirectCast(table.tbody(0).tr(TreatmentIndex).Items(0), StrucDocTd).language = Nothing
                '        If _Module.TestName IsNot Nothing AndAlso _Module.TestName <> "" Then
                '            DirectCast(table.tbody(0).tr(TreatmentIndex).Items(0), StrucDocTd).Text = New String() {_Module.TestName}
                '        Else
                '            DirectCast(table.tbody(0).tr(TreatmentIndex).Items(0), StrucDocTd).Text = Nothing
                '        End If

                '        table.tbody(0).tr(TreatmentIndex).Items(1) = New StrucDocTd()
                '        DirectCast(table.tbody(0).tr(TreatmentIndex).Items(1), StrucDocTd).ID = Nothing
                '        DirectCast(table.tbody(0).tr(TreatmentIndex).Items(1), StrucDocTd).language = Nothing
                '        If _Module.ScheduledDateTime IsNot Nothing AndAlso _Module.ScheduledDateTime <> "" Then
                '            DirectCast(table.tbody(0).tr(TreatmentIndex).Items(1), StrucDocTd).Text = New String() {CType(_Module.ScheduledDateTime, Date)}
                '        Else
                '            DirectCast(table.tbody(0).tr(TreatmentIndex).Items(1), StrucDocTd).Text = New String() {"NA"}
                '        End If
                '    Next
                '    Dim Pendingtests As Int16 = 0
                '    If Not IsNothing(mPatient.PendingTests) And mPatient.PendingTests.Count > 0 Then
                '        Pendingtests = mPatient.PendingTests.Count
                '        TreatmentPlanComponent.section.entry = New POCD_MT000040UV02Entry(Pendingtests) {}
                '        For PendingtestIndex As Integer = 1 To mPatient.PendingTests.Count - 1
                '            Dim _PlannedModule As LabTest = Nothing
                '            Dim entry As POCD_MT000040UV02Entry = Nothing
                '            TreatmentPlanComponent.section.entry(PendingtestIndex) = New POCD_MT000040UV02Entry
                '            entry = DirectCast(TreatmentPlanComponent.section.entry(PendingtestIndex), POCD_MT000040UV02Entry)
                '            _PlannedModule = mPatient.PendingTests.Item(PendingtestIndex)
                '            entry.Item = New POCD_MT000040UV02Observation
                '            getCDAPlannedObservation(entry.Item, Nothing, Nothing, _PlannedModule)
                '        Next

                '    End If

                'End If

            Else
                TreatmentPlanComponent.section = NoInformationSection("Treatment Plan", "Plan of Treatment", _DateExtension22)
                'TreatmentPlanComponent.section.templateId(1).extension = Nothing
            End If
            Return TreatmentPlanComponent
        Catch ex As Exception
            Return Nothing
        End Try
    End Function
    Private Function getCDAHealthStatusOutcome() As POCD_MT000040UV02Component3
        Try
            Dim HealthstatusComponent As POCD_MT000040UV02Component3 = Nothing
            HealthstatusComponent = New POCD_MT000040UV02Component3
            HealthstatusComponent.section = New POCD_MT000040UV02Section
            HealthstatusComponent.section.templateId = New II(0) {}
            HealthstatusComponent.section.templateId(0) = New II
            HealthstatusComponent.section.templateId(0).root = oTemplateIDMaster.GetSectionID("Patient Problem Outcome")
            HealthstatusComponent.section.code = New CE
            Dim _codesystemItem As CodeSystemItem = Nothing
            _codesystemItem = oCodingSystemMaster.GetbyDescription(CodeSystem.LOINC, "Patient Problem Outcome")

            If Not IsNothing(_codesystemItem) Then
                HealthstatusComponent.section.code.code = _codesystemItem.Code
                HealthstatusComponent.section.code.codeSystem = CodeSystem.LOINC
                HealthstatusComponent.section.code.codeSystemName = "LOINC"
            End If
            HealthstatusComponent.section.title = New ST
            HealthstatusComponent.section.title.Text = New String() {"Health Status Evaluations/Outcomes Section"}
            HealthstatusComponent.section.text = New StrucDocText
            HealthstatusComponent.section.text.mediaType = Nothing
            HealthstatusComponent.section.text.ID = Nothing
            HealthstatusComponent.section.text.language = Nothing


            If Not IsNothing(mPatient.OutcomeCol) AndAlso mPatient.OutcomeCol.OutcomeList.Count > 0 Then

                If mPatient.OutcomeCol.OutcomeList.Count > 0 Then
                    Dim table As StrucDocTable = Nothing
                    Dim tableOBS As StrucDocTable = Nothing

                    HealthstatusComponent.section.text.Items = New Object(2) {}
                    HealthstatusComponent.section.text.Items(0) = New StrucDocTable
                    tableOBS = DirectCast(HealthstatusComponent.section.text.Items(0), StrucDocTable)
                    tableOBS.ID = Nothing
                    tableOBS.language = Nothing
                    tableOBS.border = "1"
                    tableOBS.width = "100%"
                    tableOBS.thead = New StrucDocThead()
                    tableOBS.thead.ID = Nothing
                    tableOBS.thead.language = Nothing
                    tableOBS.thead.tr = New StrucDocTr(0) {}
                    tableOBS.thead.tr(0) = New StrucDocTr()
                    tableOBS.thead.tr(0).ID = Nothing
                    tableOBS.thead.tr(0).language = Nothing
                    tableOBS.thead.tr(0).Items = New Object(6) {}

                    tableOBS.thead.tr(0).Items(0) = New StrucDocTh()

                    DirectCast(tableOBS.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Name"}
                    DirectCast(tableOBS.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                    DirectCast(tableOBS.thead.tr(0).Items(0), StrucDocTh).language = Nothing

                    tableOBS.thead.tr(0).Items(1) = New StrucDocTh()

                    DirectCast(tableOBS.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Notes"}
                    DirectCast(tableOBS.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                    DirectCast(tableOBS.thead.tr(0).Items(1), StrucDocTh).language = Nothing

                    tableOBS.thead.tr(0).Items(2) = New StrucDocTh()

                    DirectCast(tableOBS.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Status"}
                    DirectCast(tableOBS.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                    DirectCast(tableOBS.thead.tr(0).Items(2), StrucDocTh).language = Nothing

                    tableOBS.thead.tr(0).Items(3) = New StrucDocTh()

                    DirectCast(tableOBS.thead.tr(0).Items(3), StrucDocTh).Text = New String() {"Value"}
                    DirectCast(tableOBS.thead.tr(0).Items(3), StrucDocTh).ID = Nothing
                    DirectCast(tableOBS.thead.tr(0).Items(3), StrucDocTh).language = Nothing

                    tableOBS.thead.tr(0).Items(4) = New StrucDocTh()

                    DirectCast(tableOBS.thead.tr(0).Items(4), StrucDocTh).Text = New String() {"Unit"}
                    DirectCast(tableOBS.thead.tr(0).Items(4), StrucDocTh).ID = Nothing
                    DirectCast(tableOBS.thead.tr(0).Items(4), StrucDocTh).language = Nothing

                    tableOBS.thead.tr(0).Items(5) = New StrucDocTh()

                    DirectCast(tableOBS.thead.tr(0).Items(5), StrucDocTh).Text = New String() {"Date"}
                    DirectCast(tableOBS.thead.tr(0).Items(5), StrucDocTh).ID = Nothing
                    DirectCast(tableOBS.thead.tr(0).Items(5), StrucDocTh).language = Nothing

                    tableOBS.tbody = New StrucDocTbody(0) {}
                    tableOBS.tbody(0) = New StrucDocTbody()
                    tableOBS.tbody(0).ID = Nothing
                    tableOBS.tbody(0).language = Nothing
                    tableOBS.tbody(0).tr = New StrucDocTr(0) {}
                    tableOBS.tbody(0).tr(0) = New StrucDocTr()
                    tableOBS.tbody(0).tr(0).ID = Nothing
                    tableOBS.tbody(0).tr(0).language = Nothing
                    tableOBS.tbody(0).tr(0).Items = New Object(6) {}
                    tableOBS.tbody(0).tr(0).Items(0) = New StrucDocTd()
                    DirectCast(tableOBS.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(tableOBS.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing

                    HealthstatusComponent.section.text.Items(1) = New StrucDocContent
                    DirectCast(HealthstatusComponent.section.text.Items(1), StrucDocContent).ID = Nothing
                    DirectCast(HealthstatusComponent.section.text.Items(1), StrucDocContent).language = Nothing
                    DirectCast(HealthstatusComponent.section.text.Items(1), StrucDocContent).Text = New String() {"Outcome References"}

                    HealthstatusComponent.section.text.Items(2) = New StrucDocTable
                    table = DirectCast(HealthstatusComponent.section.text.Items(2), StrucDocTable)
                    table.ID = Nothing
                    table.language = Nothing
                    table.border = "1"
                    table.width = "100%"
                    table.thead = New StrucDocThead()
                    table.thead.ID = Nothing
                    table.thead.language = Nothing
                    table.thead.tr = New StrucDocTr(0) {}
                    table.thead.tr(0) = New StrucDocTr()
                    table.thead.tr(0).ID = Nothing
                    table.thead.tr(0).language = Nothing
                    table.thead.tr(0).Items = New Object(3) {}

                    table.thead.tr(0).Items(0) = New StrucDocTh()
                    DirectCast(table.thead.tr(0).Items(0), StrucDocTh).Text = New String() {"Name"}
                    DirectCast(table.thead.tr(0).Items(0), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(0), StrucDocTh).language = Nothing

                    table.thead.tr(0).Items(1) = New StrucDocTh()
                    DirectCast(table.thead.tr(0).Items(1), StrucDocTh).Text = New String() {"Reference Type"}
                    DirectCast(table.thead.tr(0).Items(1), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(1), StrucDocTh).language = Nothing

                    table.thead.tr(0).Items(2) = New StrucDocTh()
                    DirectCast(table.thead.tr(0).Items(2), StrucDocTh).Text = New String() {"Reference"}
                    DirectCast(table.thead.tr(0).Items(2), StrucDocTh).ID = Nothing
                    DirectCast(table.thead.tr(0).Items(2), StrucDocTh).language = Nothing

                    table.tbody = New StrucDocTbody(0) {}
                    table.tbody(0) = New StrucDocTbody()
                    table.tbody(0).ID = Nothing
                    table.tbody(0).language = Nothing
                    table.tbody(0).tr = New StrucDocTr(mPatient.OutcomeCol.OutcomeList.Count - 1) {}
                    table.tbody(0).tr(0) = New StrucDocTr()
                    table.tbody(0).tr(0).ID = Nothing
                    table.tbody(0).tr(0).language = Nothing
                    table.tbody(0).tr(0).Items = New Object(2) {}
                    table.tbody(0).tr(0).Items(0) = New StrucDocTd()
                    DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).ID = Nothing
                    DirectCast(table.tbody(0).tr(0).Items(0), StrucDocTd).language = Nothing

                    Dim Outindex As Int32 = 0
                    Dim UniqueOutIndes As Int32 = 0
                    Dim OutcomeNarrative As Int32 = 0
                    Dim AssociationFlag As Boolean = False

                    tableOBS.tbody(0).tr = New StrucDocTr(mPatient.OutcomeCol.OutcomeList.Count - 1) {}
                    Dim OutcomeId As Long = 0

                    For OutcomeIndes As Integer = 0 To mPatient.OutcomeCol.OutcomeList.Count - 1
                        Dim _Outcome As Outcome = mPatient.OutcomeCol.OutcomeList.Item(OutcomeIndes)
                        If OutcomeId <> _Outcome.OutcomeId Then
                            OutcomeId = _Outcome.OutcomeId

                            tableOBS.tbody(0).tr(UniqueOutIndes) = New StrucDocTr()
                            tableOBS.tbody(0).tr(UniqueOutIndes).ID = Nothing
                            tableOBS.tbody(0).tr(UniqueOutIndes).language = Nothing
                            tableOBS.tbody(0).tr(UniqueOutIndes).Items = New Object(6) {}

                            tableOBS.tbody(0).tr(UniqueOutIndes).Items(0) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(0), StrucDocTd).ID = Nothing
                            DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(0), StrucDocTd).language = Nothing
                            If _Outcome.OutcomeName IsNot Nothing AndAlso _Outcome.OutcomeName <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(0), StrucDocTd).Text = New String() {_Outcome.OutcomeName}
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(0), StrucDocTd).Text = Nothing
                            End If

                            tableOBS.tbody(0).tr(UniqueOutIndes).Items(1) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(1), StrucDocTd).ID = Nothing
                            DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(1), StrucDocTd).language = Nothing
                            If _Outcome.OutcomeNotes IsNot Nothing AndAlso _Outcome.OutcomeNotes <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(1), StrucDocTd).Text = New String() {_Outcome.OutcomeNotes}
                                OutcomeNarrative = OutcomeNarrative + 1
                                DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(1), StrucDocTd).ID = "NarrativeOutcome" & OutcomeNarrative
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(1), StrucDocTd).Text = Nothing
                            End If

                            tableOBS.tbody(0).tr(UniqueOutIndes).Items(2) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(2), StrucDocTd).ID = Nothing
                            DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(2), StrucDocTd).language = Nothing
                            If _Outcome.Outcomestatus IsNot Nothing AndAlso _Outcome.Outcomestatus <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(2), StrucDocTd).Text = New String() {_Outcome.Outcomestatus}
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(2), StrucDocTd).Text = Nothing
                            End If

                            tableOBS.tbody(0).tr(UniqueOutIndes).Items(3) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(3), StrucDocTd).ID = Nothing
                            DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(3), StrucDocTd).language = Nothing
                            If _Outcome.OutcomeValue IsNot Nothing AndAlso _Outcome.OutcomeValue <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(3), StrucDocTd).Text = New String() {_Outcome.OutcomeValue}
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(3), StrucDocTd).Text = Nothing
                            End If

                            tableOBS.tbody(0).tr(UniqueOutIndes).Items(4) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(4), StrucDocTd).ID = Nothing
                            DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(4), StrucDocTd).language = Nothing
                            If _Outcome.OutcomeValueUnit IsNot Nothing AndAlso _Outcome.OutcomeValueUnit <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(4), StrucDocTd).Text = New String() {_Outcome.OutcomeValueUnit}
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(4), StrucDocTd).Text = Nothing
                            End If

                            tableOBS.tbody(0).tr(UniqueOutIndes).Items(5) = New StrucDocTd()
                            DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(5), StrucDocTd).ID = Nothing
                            DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(5), StrucDocTd).language = Nothing
                            If _Outcome.Outcomedate IsNot Nothing AndAlso _Outcome.Outcomedate <> "" Then
                                DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(5), StrucDocTd).Text = New String() {_Outcome.Outcomedate}
                            Else
                                DirectCast(tableOBS.tbody(0).tr(UniqueOutIndes).Items(5), StrucDocTd).Text = Nothing
                            End If

                            UniqueOutIndes += 1
                        End If

                        If _Outcome.AssociateId <> 0 Then
                            Dim sRefType As String = ""
                            Dim sRefDesc As String = ""
                            If _Outcome.AssociateType = 1 Then
                                If Not IsNothing(mPatient.GoalsCol) AndAlso mPatient.GoalsCol.GoalsList.Count > 0 Then
                                    Dim GoalCol As GoalsCol = mPatient.GoalsCol
                                    Dim Goallist = GoalCol.GoalsList.Where(Function(p) p.GoalId = _Outcome.AssociateId).ToList()
                                    If CType(Goallist, List(Of Goal)).Count > 0 Then
                                        Dim _goal As Goal = CType(Goallist, List(Of Goal)).Item(0)
                                        sRefDesc = _goal.GoalName
                                        sRefType = "Goal"
                                    End If
                                End If
                            ElseIf _Outcome.AssociateType = 2 Then
                                If mPatient.InterventionCol IsNot Nothing AndAlso (mPatient.InterventionCol.InterventionList.Count > 0 Or mPatient.InterventionCol.PlannedIntervention.Count > 0) Then
                                    Dim InterventionCol As InterventionCol = mPatient.InterventionCol
                                    Dim Interventionlist = InterventionCol.InterventionList.Where(Function(p) p.InterventionId = _Outcome.AssociateId).ToList()
                                    If CType(Interventionlist, List(Of Intervention)).Count > 0 Then
                                        Dim _Intrvn As Intervention = CType(Interventionlist, List(Of Intervention)).Item(0)
                                        sRefDesc = _Intrvn.InterventionName
                                        sRefType = "Intervention"
                                    Else
                                        Dim InterventionCol2 As InterventionCol = mPatient.InterventionCol
                                        Dim Interventionlist2 = InterventionCol.PlannedIntervention.Where(Function(p) p.InterventionId = _Outcome.AssociateId).ToList()
                                        If CType(Interventionlist2, List(Of Intervention)).Count > 0 Then
                                            Dim _Intrvn As Intervention = CType(Interventionlist2, List(Of Intervention)).Item(0)
                                            sRefDesc = _Intrvn.InterventionName
                                            sRefType = "Planned Intervention"
                                        End If
                                    End If
                                End If
                            End If

                            If sRefType <> "" Then
                                AssociationFlag = True

                                table.tbody(0).tr(OutcomeIndes) = New StrucDocTr()
                                table.tbody(0).tr(OutcomeIndes).ID = Nothing
                                table.tbody(0).tr(OutcomeIndes).language = Nothing
                                table.tbody(0).tr(OutcomeIndes).Items = New Object(3) {}

                                table.tbody(0).tr(OutcomeIndes).Items(0) = New StrucDocTd()
                                DirectCast(table.tbody(0).tr(OutcomeIndes).Items(0), StrucDocTd).ID = Nothing
                                DirectCast(table.tbody(0).tr(OutcomeIndes).Items(0), StrucDocTd).language = Nothing
                                If _Outcome.OutcomeName IsNot Nothing AndAlso _Outcome.OutcomeName <> "" Then
                                    DirectCast(table.tbody(0).tr(OutcomeIndes).Items(0), StrucDocTd).Text = New String() {_Outcome.OutcomeName}
                                Else
                                    DirectCast(table.tbody(0).tr(OutcomeIndes).Items(0), StrucDocTd).Text = Nothing
                                End If

                                table.tbody(0).tr(OutcomeIndes).Items(1) = New StrucDocTd()
                                DirectCast(table.tbody(0).tr(OutcomeIndes).Items(1), StrucDocTd).ID = Nothing
                                DirectCast(table.tbody(0).tr(OutcomeIndes).Items(1), StrucDocTd).language = Nothing
                                If sRefType IsNot Nothing AndAlso sRefType <> "" Then
                                    DirectCast(table.tbody(0).tr(OutcomeIndes).Items(1), StrucDocTd).Text = New String() {sRefType}
                                Else
                                    DirectCast(table.tbody(0).tr(OutcomeIndes).Items(1), StrucDocTd).Text = Nothing
                                End If

                                table.tbody(0).tr(OutcomeIndes).Items(2) = New StrucDocTd()
                                DirectCast(table.tbody(0).tr(OutcomeIndes).Items(2), StrucDocTd).ID = Nothing
                                DirectCast(table.tbody(0).tr(OutcomeIndes).Items(2), StrucDocTd).language = Nothing
                                If sRefDesc IsNot Nothing AndAlso sRefDesc <> "" Then
                                    DirectCast(table.tbody(0).tr(OutcomeIndes).Items(2), StrucDocTd).Text = New String() {sRefDesc}
                                Else
                                    DirectCast(table.tbody(0).tr(OutcomeIndes).Items(2), StrucDocTd).Text = Nothing
                                End If
                            End If
                        End If
                    Next
                    If AssociationFlag = False Then
                        HealthstatusComponent.section.text.Items(1) = Nothing
                        HealthstatusComponent.section.text.Items(2) = Nothing
                    End If
                End If



                Dim duplicates = mPatient.OutcomeCol.OutcomeList.GroupBy(Function(x) x.OutcomeId).Select(Function(x) x.First).ToList
                If DirectCast(duplicates, List(Of Outcome)).Count > 0 Then
                    Dim entrycount As Int16 = 0
                    entrycount = DirectCast(duplicates, List(Of Outcome)).Count
                    HealthstatusComponent.section.entry = New POCD_MT000040UV02Entry(entrycount) {}
                    For outcomeindex As Integer = 0 To entrycount - 1
                        Dim outcome As Outcome = Nothing
                        outcome = DirectCast(duplicates, List(Of Outcome)).Item(outcomeindex)
                        HealthstatusComponent.section.entry(outcomeindex) = New POCD_MT000040UV02Entry()
                        HealthstatusComponent.section.entry(outcomeindex).Item = New POCD_MT000040UV02Observation
                        Dim obs As POCD_MT000040UV02Observation = Nothing
                        obs = DirectCast(HealthstatusComponent.section.entry(outcomeindex).Item, POCD_MT000040UV02Observation)
                        getCDAOutcomeObservation(obs, outcome)
                    Next
                End If
            Else
                HealthstatusComponent.section.nullFlavorSpecified = True
                HealthstatusComponent.section.nullFlavor = "NI"
                HealthstatusComponent.section.text.Text = New String() {"No Information"}
                HealthstatusComponent.section.text.mediaType = Nothing
            End If

            'HealthstatusComponent.section.text.Items = New Object(0) {}

            Return HealthstatusComponent
        Catch ex As Exception
            Return Nothing
        End Try
    End Function
    Private Sub getCDAOutcomeObservation(ByRef obs As POCD_MT000040UV02Observation, ByVal _Outcome As Outcome)
        obs.classCodeSpecified = True
        obs.classCode = ActClassObservation.OBS
        obs.moodCodeSpecified = True
        obs.moodCode = x_ActMoodDocumentObservation.EVN
        obs.templateId = New II(0) {}
        obs.templateId(0) = New II
        obs.templateId(0).root = oTemplateIDMaster.GetEntryID("Outcome Observation")
        obs.id = New II(0) {}
        obs.id(0) = New II
        obs.id(0).root = Guid.NewGuid.ToString
        obs.code = New CD()
        obs.code.code = Nothing
        obs.code.codeSystem = Nothing
        obs.code.codeSystemName = Nothing
        obs.code.nullFlavorSpecified = True
        obs.code.nullFlavor = "NA"
        If Not IsNothing(_Outcome.Outcomedate) AndAlso _Outcome.Outcomedate <> "" Then
            obs.effectiveTime = New IVL_TS()
            obs.effectiveTime.value = Format(CType(_Outcome.Outcomedate, Date), "yyyyMMdd")
        End If
        Dim entryrelationshipcount As Integer = 0
        Dim entryrelationshipindexcount As Integer = 0
        If Not IsNothing(_Outcome.OutcomeValue) AndAlso _Outcome.OutcomeValue <> "" Then
            obs.value = New ANY(0) {}
            obs.value(0) = New PQ()
            DirectCast(obs.value(0), PQ).value = _Outcome.OutcomeValue
            If Not IsNothing(_Outcome.OutcomeValueUnit) AndAlso _Outcome.OutcomeValueUnit <> "" Then
                DirectCast(obs.value(0), PQ).unit = _Outcome.OutcomeValueUnit
            End If
        End If
        If Not IsNothing(_Outcome.Outcomestatus) AndAlso _Outcome.Outcomestatus <> "" Then
            entryrelationshipcount = 1
        End If
        Dim entryrelationshipslist = mPatient.OutcomeCol.OutcomeList.Where(Function(p) p.OutcomeId = _Outcome.OutcomeId).ToList()
        If Not IsNothing(entryrelationshipslist) Then
            If DirectCast(entryrelationshipslist, List(Of Outcome)).Count > 0 Then
                Dim relationshipcount As Integer = 0
                relationshipcount = DirectCast(entryrelationshipslist, List(Of Outcome)).Count
                entryrelationshipcount = relationshipcount + entryrelationshipcount
                obs.entryRelationship = New POCD_MT000040UV02EntryRelationship(entryrelationshipcount) {}
                For entryrelationshipindex As Integer = 0 To relationshipcount - 1
                    Dim _OutcomeRef As Outcome = Nothing
                    _OutcomeRef = DirectCast(entryrelationshipslist, List(Of Outcome)).Item(entryrelationshipindex)
                    Select Case _OutcomeRef.AssociateType
                        Case "1"
                            If Not IsNothing(mPatient.GoalsCol) Then
                                Dim _GoalsCol As GoalsCol = mPatient.GoalsCol
                                Dim Goal1 = _GoalsCol.GoalsList.Where(Function(p) p.GoalId = _OutcomeRef.AssociateId).FirstOrDefault()
                                If Not IsNothing(Goal1) Then
                                    obs.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                    getCDAEntryReference(obs.entryRelationship(entryrelationshipindex), DirectCast(Goal1, Goal).GUID, "OutcometoGoal")
                                    entryrelationshipindexcount = entryrelationshipindexcount + 1
                                End If
                            End If

                        Case "2"
                            If Not IsNothing(mPatient.InterventionCol) Then
                                Dim interventioncol As InterventionCol = Nothing
                                interventioncol = mPatient.InterventionCol
                                Dim intervention As Intervention = Nothing
                                intervention = interventioncol.InterventionList.Where(Function(p) p.InterventionId = _OutcomeRef.AssociateId).FirstOrDefault()
                                If IsNothing(intervention) Then
                                    intervention = interventioncol.PlannedIntervention.Where(Function(p) p.InterventionId = _OutcomeRef.AssociateId).FirstOrDefault()
                                End If
                                If Not IsNothing(intervention) Then
                                    obs.entryRelationship(entryrelationshipindex) = New POCD_MT000040UV02EntryRelationship
                                    getCDAEntryReference(obs.entryRelationship(entryrelationshipindex), intervention.GUID, "OutcometoIntervention")
                                    entryrelationshipindexcount = entryrelationshipindexcount + 1
                                End If

                            End If
                    End Select
                Next

            End If
        End If
        If Not IsNothing(_Outcome.Outcomestatus) AndAlso _Outcome.Outcomestatus <> "" Then
            obs.entryRelationship(entryrelationshipindexcount) = New POCD_MT000040UV02EntryRelationship
            obs.entryRelationship(entryrelationshipindexcount).typeCodeSpecified = True
            obs.entryRelationship(entryrelationshipindexcount).typeCode = ActRelationshipType.SPRT
            obs.entryRelationship(entryrelationshipindexcount).inversionIndSpecified = True
            obs.entryRelationship(entryrelationshipindexcount).inversionInd = True
            obs.entryRelationship(entryrelationshipindexcount).Item = New POCD_MT000040UV02Observation
            getProgressTowardsGoalObservation(obs.entryRelationship(entryrelationshipindexcount).Item, _Outcome)
        End If

      


    End Sub
    Private Sub getProgressTowardsGoalObservation(ByRef observation As POCD_MT000040UV02Observation, ByVal _Outcome As Outcome)
        observation.classCodeSpecified = True
        observation.classCode = ActClassObservation.OBS
        observation.moodCodeSpecified = True
        observation.moodCode = x_ActMoodDocumentObservation.EVN
        observation.templateId = New II(0) {}
        observation.templateId(0) = New II
        observation.templateId(0).root = oTemplateIDMaster.GetEntryID("ProgressTowardsGoal")
        observation.id = New II(0) {}
        observation.id(0) = New II
        observation.id(0).root = Guid.NewGuid.ToString
        observation.code = New CD
        observation.code.code = oCodingSystemMaster.GetbyDescription(CodeSystem.Assertion, "ASSERTION").Code
        observation.code.codeSystem = CodeSystem.Assertion
        observation.code.codeSystemName = Nothing
        observation.code.codeSystemVersion = Nothing
        observation.code.displayName = Nothing
        observation.statusCode = New CS()
        observation.statusCode.code = "completed"
        observation.value = New ANY(0) {}
        observation.value(0) = New CD

        If String.Equals(_Outcome.Outcomestatus, "Achieved", StringComparison.OrdinalIgnoreCase) Then
            DirectCast(observation.value(0), CD).code = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Goal achieved").Code
            DirectCast(observation.value(0), CD).codeSystem = CodeSystem.SNOMED_CT
            DirectCast(observation.value(0), CD).displayName = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Goal achieved").Description
            DirectCast(observation.value(0), CD).codeSystemVersion = Nothing
        ElseIf String.Equals(_Outcome.Outcomestatus, "Not Achieved", StringComparison.OrdinalIgnoreCase) Then
            DirectCast(observation.value(0), CD).code = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Goal not achieved").Code
            DirectCast(observation.value(0), CD).codeSystem = CodeSystem.SNOMED_CT
            DirectCast(observation.value(0), CD).displayName = oCodingSystemMaster.GetbyDescription(CodeSystem.SNOMED_CT, "Goal not achieved").Description
            DirectCast(observation.value(0), CD).codeSystemVersion = Nothing
        End If

    End Sub
    Private Sub GenerateNonXMLBody(ByRef component As POCD_MT000040UV02Component2, ByVal base64string As String)
        Dim nonxmlbody As POCD_MT000040UV02NonXMLBody = Nothing

        Try
            If Not IsNothing(component) Then
                nonxmlbody = New POCD_MT000040UV02NonXMLBody
                component.Item = nonxmlbody
                nonxmlbody.text = New ED()
                nonxmlbody.text.mediaType = Convert.ToString(_MediaType)
                'nonxmlbody.text.mediaType = FileMediaType
                nonxmlbody.text.representation = BinaryDataEncoding.B64
                nonxmlbody.text.Text = New String(1) {}
                nonxmlbody.text.Text(0) = base64string
            End If

        Catch ex As Exception

        End Try
    End Sub
    
End Class
