<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
	x:Class="gloSurescriptSecureMessage_InBox.MyInboxExpanderControl"
	x:Name="myInboxExpanderControl"
	>

  <UserControl.Resources>
    <ResourceDictionary>
    	<ResourceDictionary.MergedDictionaries>
    		<ResourceDictionary Source="MyStyles.xaml"/>
    	</ResourceDictionary.MergedDictionaries>
      <!-- Geometry (down arrow) used in the ToggleButton in the editable ComboBox control -->
      <Geometry x:Key="MyDownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>

      <!-- ******************************************************** -->
      <!-- Style and control template for the InboxExpander control -->
      <!-- ******************************************************** -->

      <!-- Control template for the ToggleButton control which is used to expand/collapse the Expander control -->
      <ControlTemplate x:Key="MyToggleButtonControlTemplate" TargetType="{x:Type ToggleButton}">
        <Grid>
          <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="Transparent" Stroke="{DynamicResource NormalBorderBrush}" StrokeThickness="0"/>
          <Path RenderTransformOrigin="0.331351646560514,0.668211636061805" Fill="{x:Null}" Stretch="Fill" Stroke="{DynamicResource MyDarkBlueSolidBrush}" Width="Auto" Height="Auto" Data="M4.3499998,4.3690003 L0.49999971,4.3690003 0.53757259,0.50000022 M6.8185094,1.9004906 L2.9685095,1.9004906 3.0060828,-1.9685095" Margin="11.033,1.358,6.648,4.304" x:Name="path">
            <Path.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
                <SkewTransform AngleX="0" AngleY="0"/>
                <RotateTransform Angle="315"/>
                <TranslateTransform X="0" Y="0"/>
              </TransformGroup>
            </Path.RenderTransform>
          </Path>
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="true"/>
          <Trigger Property="IsPressed" Value="true"/>
          <Trigger Property="IsChecked" Value="true">
            <Setter Property="RenderTransform" TargetName="path">
              <Setter.Value>
                <TransformGroup>
                  <ScaleTransform ScaleX="1" ScaleY="1"/>
                  <SkewTransform AngleX="0" AngleY="0"/>
                  <RotateTransform Angle="135"/>
                  <TranslateTransform X="0" Y="0"/>
                </TransformGroup>
              </Setter.Value>
            </Setter>
          </Trigger>
          <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Rectangle"/>
            <Setter Property="Stroke" Value="{DynamicResource DisabledBorderBrush}" TargetName="Rectangle"/>
            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>

      <!-- Style for the Expander control -->
      <Style x:Key="MyInboxExpanderStyle" TargetType="{x:Type Expander}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource MyBlueBarGradientBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Expander}">
              <Grid Margin="0,0,0,0" >
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="*" x:Name="ContentRow"/>
                </Grid.RowDefinitions>
                <Border Grid.Row="0" x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,0,0,0" Margin="0,0,0,0">
                  <Grid Margin="0,0,0,0" ShowGridLines="false">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="40.455"/>
                    </Grid.ColumnDefinitions>
                    <ToggleButton Template="{DynamicResource MyToggleButtonControlTemplate}" Background="{DynamicResource NormalBrush}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True"  BorderThickness="4,4,4,4" Grid.Column="1" d:LayoutOverrides="Width" Margin="2.955,8.5,12.5,8.5" VerticalAlignment="Stretch" Width="25" />
                    <ContentPresenter Grid.Column="0" Margin="4,4,0,4" RecognizesAccessKey="True" ContentSource="Header" HorizontalAlignment="Stretch" Width="Auto" Grid.ColumnSpan="1"/>
                  </Grid>
                </Border>
                <Border Visibility="Collapsed" Grid.Row="1" x:Name="ExpandSite" Background="{TemplateBinding Background}" BorderBrush="{x:Null}" BorderThickness="0" CornerRadius="0,0,0,0">
                  <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="true"/>
                </Border>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                  <Setter Property="Visibility" Value="Visible" TargetName="ExpandSite"/>
                  <Setter Property="Background" Value="{DynamicResource MyOrangeBarGradientBrush}" TargetName="Border"/>
                  <Setter Property="Background" Value="{DynamicResource MyInboxExpanderExpandSiteBackground}" TargetName="ExpandSite" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                  <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>


      <!-- *************************************************************** -->
      <!-- Styles and control template for the SearchInboxComboBox control -->
      <!-- *************************************************************** -->

      <!-- Style for the SearchInboxComboBox control -->
      <Style x:Key="MySearchInboxComboStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1.1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="4,3"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ComboBox}">
              <Grid SnapsToDevicePixels="true" x:Name="MainGrid">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Margin="1" x:Name="PART_Popup" Grid.ColumnSpan="2">
                  <Microsoft_Windows_Themes:SystemDropShadowChrome MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}" x:Name="Shdw" Color="Transparent">
                    <Border x:Name="DropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                      <ScrollViewer CanContentScroll="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                      </ScrollViewer>
                    </Border>
                  </Microsoft_Windows_Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton Background="#FFFFFFFF" BorderBrush="{x:Null}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ContentPresenter IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                  <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                  <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                  <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                  <Setter Property="Background" Value="#FFF4F4F4"/>
                </Trigger>
                <Trigger Property="IsGrouping" Value="true">
                  <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <Trigger Property="IsEditable" Value="true">
            <Setter Property="BorderBrush" Value="{DynamicResource MyBlueSolidBrush2}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Template" Value="{DynamicResource MySearchInboxComboBoxEditableTemplate}"/>
          </Trigger>
        </Style.Triggers>
      </Style>

      <!-- Control template for the SearchInboxComboBox to make it editable -->
      <ControlTemplate x:Key="MySearchInboxComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid SnapsToDevicePixels="true" x:Name="Placement">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <Popup AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" x:Name="PART_Popup" Grid.ColumnSpan="2">
            <Microsoft_Windows_Themes:SystemDropShadowChrome MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}" x:Name="Shdw" Color="Transparent">
              <Border x:Name="DropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                <ScrollViewer>
                  <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                </ScrollViewer>
              </Border>
            </Microsoft_Windows_Themes:SystemDropShadowChrome>
          </Popup>
          <Microsoft_Windows_Themes:ListBoxChrome x:Name="Border" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" RenderMouseOver="{TemplateBinding IsMouseOver}"/>
          <TextBox Margin="{TemplateBinding Padding}" x:Name="PART_EditableTextBox" Style="{DynamicResource MyComboBoxEditableTextBoxStyle}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
          <ToggleButton Style="{DynamicResource MySearchInboxComboBoxToggleButtonStyle}" Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="IsKeyboardFocusWithin" Value="true">
            <Setter Property="Foreground" Value="Black"/>
          </Trigger>
          <Trigger Property="IsDropDownOpen" Value="true">
            <Setter Property="RenderFocused" TargetName="Border" Value="true"/>
          </Trigger>
          <Trigger Property="HasItems" Value="false">
            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            <Setter Property="Background" Value="#FFF4F4F4"/>
          </Trigger>
          <Trigger Property="IsGrouping" Value="true">
            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
          </Trigger>
          <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
            <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>

      <!-- Style for the editable TextBox control in the SearchInboxComboBox control -->
      <Style x:Key="MyComboBoxEditableTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type TextBox}">
              <ScrollViewer Focusable="false" x:Name="PART_ContentHost" Background="Transparent" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <!-- Style for the ToggleButton control in the SearchInboxComboBox control -->
      <Style x:Key="MySearchInboxComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
              <Grid Margin="2,2,2,2" Width="Auto" Height="18" >
                <StackPanel Orientation="Horizontal">
                  <Image Margin="0,0,0,0" Source="graphics\magnifier.gif"/>
                  <Path Fill="Black" x:Name="Arrow" Data="{DynamicResource MyDownArrowGeometry}" RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="Height" HorizontalAlignment="Left" Margin="2,0,1,0" VerticalAlignment="Center">
                    <Path.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                        <SkewTransform AngleX="0" AngleY="0"/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform X="0" Y="0"/>
                      </TransformGroup>
                    </Path.RenderTransform>
                  </Path>
                </StackPanel>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="true"/>
                <Trigger Property="IsEnabled" Value="false"/>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>


      <!-- ************************************************************************ -->
      <!-- Styles and control templates for the ComboBox controls in the ExpandSite -->
      <!-- ************************************************************************ -->

      <!-- Style for the ComboBoxItem controls which pop up when the user clicks the ToggleButton for the ComboBox -->
      <Style x:Key="MyComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}" BasedOn="{x:Null}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="1,1,1,1"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="MinWidth" Value="180"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
              <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                <Border x:Name="InnerBorder" Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="1" BorderThickness="0.7" Padding="27,1,1,1">
                  <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                </Border>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsKeyboardFocused" Value="true">
                  <Setter Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" TargetName="Border"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                  <Setter Property="Background" Value="{DynamicResource MyBrightOrangeSolidBrush}" TargetName="InnerBorder"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource MyDarkOrangeSolidBrush}" TargetName="InnerBorder"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="true"/>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                  <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <!-- Control template for the ComboBox controls in the ExpandSite -->
      <ControlTemplate x:Key="MyInboxExpanderComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <ToggleButton x:Name="comboBoxButton" Style="{DynamicResource MyInboxExpanderComboBoxToggleButtonStyle}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
          <Grid x:Name="Placement" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="0" >
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Popup AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" x:Name="PART_Popup" Grid.ColumnSpan="2">
              <Microsoft_Windows_Themes:SystemDropShadowChrome MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}" x:Name="Shdw" Color="Transparent">
                <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource MyBlueSolidBrush2}" BorderThickness="0.7" Background="{DynamicResource MyDropDownGrayGradientBrush}">
                  <ScrollViewer>
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                  </ScrollViewer>
                </Border>
              </Microsoft_Windows_Themes:SystemDropShadowChrome>
            </Popup>
            <Microsoft_Windows_Themes:ListBoxChrome x:Name="Border" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" RenderMouseOver="{TemplateBinding IsMouseOver}"/>
            <TextBlock Text="{TemplateBinding Text}"  x:Name="PART_TextBlock" Grid.Column="0" Grid.ColumnSpan="1"  HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="3,0,3,0"/>
            <Border x:Name="triangleBorder" Grid.Column="1" Grid.ColumnSpan="1"  HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="Auto" Height="20" Margin="3,0,3,0">
              <Path Fill="{DynamicResource GlyphBrush}" Data="M 0 0 L 4 4 L 8 0 Z" Width="Auto" Height="Auto" Margin="0,9,0,0"/>
            </Border>
          </Grid>
        </ToggleButton>
        <ControlTemplate.Triggers>
          <Trigger Property="IsKeyboardFocusWithin" Value="true">
            <Setter Property="Foreground" Value="Black"/>
          </Trigger>
          <Trigger Property="IsDropDownOpen" Value="true">
            <Setter Property="RenderFocused" TargetName="Border" Value="true"/>
          </Trigger>
          <Trigger Property="HasItems" Value="false">
            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            <Setter Property="Background" Value="#FFF4F4F4"/>
          </Trigger>
          <Trigger Property="IsGrouping" Value="true">
            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
          </Trigger>
          <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
            <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>

      <!-- Style for the ToggleButton controls used in ComboBox controls in the ExpandSite -->
      <Style x:Key="MyInboxExpanderComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
              <Grid x:Name="Grid">
                <Border x:Name="Border" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0.7" />
                <ContentPresenter x:Name="Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsKeyboardFocused" Value="true">
                  <Setter Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" TargetName="Border"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                  <Setter Property="Background" TargetName="Border" Value="{DynamicResource MyMouseOverOrangeGradientBrush2}"/>
                  <Setter Property="BorderBrush" Value="#FF6593CF" TargetName="Border"/>
                  <Setter Property="BorderThickness" Value="0.7" TargetName="Border"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                  <Setter Property="Background" Value="{DynamicResource MyMouseDownOrangeGradientBrush}" TargetName="Border"/>
                  <Setter Property="BorderBrush" Value="#FF6593CF" TargetName="Border"/>
                  <Setter Property="BorderThickness" Value="0.7" TargetName="Border"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="true"/>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                  <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="ClickMode" Value="Press"/>
      </Style>

      <!-- Control template for the ComboBox with an Image control in the ExpandSite -->
      <ControlTemplate x:Key="MyInboxExpanderImageComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <ToggleButton x:Name="imagecomboBoxButton" Style="{DynamicResource MyInboxExpanderComboBoxToggleButtonStyle}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
          <Grid x:Name="imagePlacement" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="0" >
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Popup AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" x:Name="PART_Popup2" Grid.ColumnSpan="2">
              <Microsoft_Windows_Themes:SystemDropShadowChrome MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}" x:Name="Shdw2" Color="Transparent">
                <Border x:Name="imageDropDownBorder" Background="{DynamicResource MyDropDownGrayGradientBrush}" BorderBrush="{DynamicResource MyBlueSolidBrush2}" BorderThickness="1">
                  <ScrollViewer>
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                  </ScrollViewer>
                </Border>
              </Microsoft_Windows_Themes:SystemDropShadowChrome>
            </Popup>
            <Microsoft_Windows_Themes:ListBoxChrome x:Name="imageBorder" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" RenderMouseOver="{TemplateBinding IsMouseOver}"/>
            <!--<StackPanel Orientation="Horizontal" Grid.ColumnSpan="1" Grid.Column="0">
              <Image HorizontalAlignment="Left" Margin="3,3,3,3" VerticalAlignment="Top" Width="Auto" Height="Auto" Stretch="None" Source="graphics\addCategories.gif"/>
              <TextBlock HorizontalAlignment="Left" Margin="3,3,3,3" VerticalAlignment="Top" Background="{x:Null}" Foreground="#FF000000" Text="Add Categories" TextWrapping="Wrap"/>
              <Border x:Name="triangleBorder2" Grid.Column="1" Grid.ColumnSpan="1"  HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="Auto" Height="20" Margin="3,0,3,0">
                <Path Fill="{DynamicResource GlyphBrush}" Data="M 0 0 L 4 4 L 8 0 Z" Width="Auto" Height="Auto" Margin="0,9,0,0"/>
              </Border>
            </StackPanel>-->
          </Grid>
        </ToggleButton>
        <ControlTemplate.Triggers>
          <Trigger Property="IsKeyboardFocusWithin" Value="true">
            <Setter Property="Foreground" Value="Black"/>
          </Trigger>
            
            
          <Trigger Property="IsDropDownOpen" Value="true">
            <Setter Property="RenderFocused" TargetName="imageBorder" Value="true"/>
          </Trigger>
          <Trigger Property="HasItems" Value="false">
            <Setter Property="Height" TargetName="imageDropDownBorder" Value="95"/>
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            <Setter Property="Background" Value="#FFF4F4F4"/>
          </Trigger>
          <Trigger Property="IsGrouping" Value="true">
            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
          </Trigger>
          <Trigger Property="HasDropShadow" SourceName="PART_Popup2" Value="true">
            <Setter Property="Margin" TargetName="Shdw2" Value="0,0,5,5"/>
            <Setter Property="Color" TargetName="Shdw2" Value="#71000000"/>
          </Trigger>
            
            
        </ControlTemplate.Triggers>
      </ControlTemplate>

    </ResourceDictionary>
  </UserControl.Resources>

  <Expander x:Name="myInboxExpander" IsExpanded="False" Style="{DynamicResource MyInboxExpanderStyle}" Width="Auto"  VerticalContentAlignment="Stretch" BorderBrush="{x:Null}" FontSize="11" FontWeight="Bold" Foreground="{DynamicResource MyDarkBlueSolidBrush}" DockPanel.Dock="Top" BorderThickness="0,0,0,0" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch"  >
    <Expander.Header>
      <DockPanel HorizontalAlignment="Stretch" Margin="0,0,0,0" MinWidth="0" VerticalAlignment="Top" Width="Auto" Background="{x:Null}" LastChildFill="False" Height="20">
        <Image DockPanel.Dock="Left" Margin="4,0,0,0" Width="16" Height="16" Stretch="Fill" Source="graphics\inbox.gif" HorizontalAlignment="Left"/>
        <TextBlock DockPanel.Dock="Left"  Padding="0,0,0,0" TextWrapping="NoWrap" Margin="4,0,0,0" VerticalAlignment="Center" FontSize="16" FontWeight="Bold" Foreground="{DynamicResource MyDarkBlueSolidBrush}" HorizontalAlignment="Left" x:Name="txtSelectedNode"/>
                <ComboBox DockPanel.Dock="Right"  BorderBrush="{DynamicResource MyBlueSolidBrush2}" BorderThickness="0.7" Margin="0,0,0,0" HorizontalAlignment="Right" Style="{DynamicResource MySearchInboxComboStyle}"  Width="150" Foreground="LightGray" IsSynchronizedWithCurrentItem="True" IsEditable="True" Text="Search Inbox" ToolTip="Search Inbox" IsKeyboardFocusWithinChanged="ComboBox_IsKeyboardFocusWithinChanged" Height="20" FontWeight="Normal" HorizontalContentAlignment="Left" x:Name="myInboxSearchComboBox" VerticalAlignment="Top" TextBoxBase.TextChanged="myInboxSearchComboBox_TextChanged"/>
            </DockPanel>
    </Expander.Header>
    <ContentControl x:Name="myInboxExpanderContentControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" BorderBrush="{x:Null}" BorderThickness="0,0,0,0">
      <Border Width="Auto" Height="Auto" BorderBrush="{DynamicResource MyDarkBlueSolidBrush}" BorderThickness="0,0.5,0,0">
        <Grid x:Name="myInboxExpanderGrid" Width="Auto" Height="Auto" >
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.2*"/>
            <ColumnDefinition Width="0.3*"/>
            <ColumnDefinition Width="0.2*"/>
            <ColumnDefinition Width="0.3*"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="0.333*"/>
            <RowDefinition Height="0.333*"/>
            <RowDefinition Height="0.334*"/>
          </Grid.RowDefinitions>
        	<TextBlock TextWrapping="Wrap" Text="From" Margin="10,8,10,5" VerticalAlignment="Top" d:LayoutOverrides="Width" Foreground="Black" FontWeight="Normal" TextAlignment="Right"/>
                    <TextBox HorizontalAlignment="Stretch" Margin="3,5,3,5" VerticalAlignment="Center" Grid.Column="1" Text="" TextWrapping="Wrap" x:Name="txtSearchFrom" BorderBrush="{DynamicResource MyBlueSolidBrush2}" BorderThickness="0.7,0.7,0.7,0.7" FontWeight="Normal" TextChanged="TextSearch_TextChanged"/>
                    <TextBlock TextWrapping="Wrap" Text="Subject" Margin="10,8,10,0" VerticalAlignment="Top" Foreground="Black" FontWeight="Normal" TextAlignment="Right" d:LayoutOverrides="Width" Grid.Column="2"/>
                    <TextBox HorizontalAlignment="Stretch" Margin="3,5,10,5" VerticalAlignment="Center" Grid.Column="3" Text="" TextWrapping="Wrap" x:Name="txtSearchSubject" BorderBrush="{DynamicResource MyBlueSolidBrush2}" BorderThickness="0.7,0.7,0.7,0.7" FontWeight="Normal" TextChanged="TextSearch_TextChanged"/>
                    <TextBlock TextWrapping="Wrap" Text="Received" Margin="9.999,8,10,0" VerticalAlignment="Top" Foreground="Black" FontWeight="Normal" TextAlignment="Right" d:LayoutOverrides="Width" Grid.Row="1"/>
                    <TextBox HorizontalAlignment="Stretch" Margin="3,5,3,5" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1" Text="" TextWrapping="Wrap" x:Name="txtSearchReceived" BorderBrush="{DynamicResource MyBlueSolidBrush2}" BorderThickness="0.7,0.7,0.7,0.7" FontWeight="Normal" TextChanged="TextSearch_TextChanged"/>                    
        </Grid>
      </Border>
    </ContentControl>
  </Expander>
</UserControl>