<Window x:Class="gloSurescriptSecureMessage.ViewMessage"
       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:gloSurescriptSecureMessage_InBox="clr-namespace:gloSurescriptSecureMessage_InBox" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" mc:Ignorable="d"
        Title="View Message" WindowStartupLocation="CenterScreen" ShowInTaskbar="True" Loaded="Window_Loaded" Closed="Window_Closed"
        Icon="graphics/unread.gif" 
        HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" 
        Background="#FFBFDBFF" ResizeMode="CanResizeWithGrip"  Closing="Window_Closing" Style="{DynamicResource WindowStyles}" WindowState="Maximized">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="MyStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/gloUIControlLibrary;component/Themes/gloGUIStyleV8.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/gloUIControlLibrary;component/Themes/gloIcons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
            
            <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
                <Setter Property="ClickMode" Value="Hover"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="MinHeight" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <DockPanel SnapsToDevicePixels="true" Background="Transparent">
                                <Rectangle Fill="Transparent" x:Name="R1" Width="1" DockPanel.Dock="Right"/>
                                <Rectangle Fill="Transparent" x:Name="B1" Height="1" DockPanel.Dock="Bottom"/>
                                <Rectangle Fill="Transparent" x:Name="L1" Width="1" DockPanel.Dock="Left"/>
                                <Rectangle Fill="Transparent" x:Name="T1" Height="1" DockPanel.Dock="Top"/>
                                <ContentPresenter HorizontalAlignment="Center" Margin="2,2,2,2" x:Name="ContentContainer" VerticalAlignment="Center"/>
                            </DockPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Fill" TargetName="R1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                    <Setter Property="Fill" TargetName="B1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                    <Setter Property="Fill" TargetName="L1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                    <Setter Property="Fill" TargetName="T1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                    <Setter Property="Margin" TargetName="ContentContainer" Value="3,3,1,1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
            
            <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
            
            <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
                <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Column="0" Grid.Row="1">
                                    <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
                                </Border>
                                <RepeatButton Focusable="false" Style="{StaticResource MenuScrollButton}" Grid.Column="0" Grid.Row="0" Command="{x:Static ScrollBar.LineUpCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <RepeatButton.Visibility>
                                        <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
                                            <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        </MultiBinding>
                                    </RepeatButton.Visibility>
                                    <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource UpArrow}"/>
                                </RepeatButton>
                                <RepeatButton Focusable="false" Style="{StaticResource MenuScrollButton}" Grid.Column="0" Grid.Row="2" Command="{x:Static ScrollBar.LineDownCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <RepeatButton.Visibility>
                                        <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
                                            <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        </MultiBinding>
                                    </RepeatButton.Visibility>
                                    <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource DownArrow}"/>
                                </RepeatButton>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MyToolBarButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="Grid">
                                <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
                              <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" TargetName="Border"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource MyDarkOrangeSolidBrush}" TargetName="Border"/>
                                    <Setter Property="BorderThickness" Value="0.7" TargetName="Border" />
                                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource MyMouseOverOrangeGradientBrush3}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" Value="{DynamicResource MyButtonPressedOrangeGradientBrush}" TargetName="Border"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource MyDarkOrangeSolidBrush}" TargetName="Border"/>
                                    <Setter Property="BorderThickness" Value="0.7" TargetName="Border" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                                    <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ClickMode" Value="Press"/>
            </Style>

        </ResourceDictionary>
    </Window.Resources>

    <Grid  Width="Auto" Height="Auto" >
        <DockPanel Height="Auto" Width="Auto" LastChildFill="True" >
            <StackPanel x:Name="LayoutRoot" Background="{DynamicResource MyBrightBlueSolidBrush1}" DockPanel.Dock="Top">

                <StackPanel x:Name="ToolBar" DockPanel.Dock="Top"  Orientation="Horizontal" Margin="0,0,0,4" VerticalAlignment="Stretch" Background="{DynamicResource Img_ToolstripStyle}" Height="55">

                    <Border x:Name="PatList" Style="{DynamicResource ToolStripButtonHover}" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Margin="4,0,0,0" >
                        <Grid>
                            <Button x:Name="btnPrint" ToolTip="Print" Click="btnPrint_Click" Style="{DynamicResource SimpleButton}" HorizontalAlignment="Center" VerticalAlignment="Top" Height="32" Width="32" Margin="0,2,0,0" Cursor="Hand" Content="{DynamicResource Print}"/>
                            <Label Margin="2" Content ="Print" Foreground="{DynamicResource BaseForeColor}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Padding="0" FontWeight="Bold" FontFamily="{DynamicResource BaseFontFamily}"/>
                        </Grid>
                    </Border>

                    <Border x:Name="pnlDelete" Style="{DynamicResource ToolStripButtonHover}" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Margin="4,0,0,0" >
                        <Grid>
                            <Button x:Name="btnDelete" ToolTip="Delete" Click="btnDelete_Click" Style="{DynamicResource SimpleButton}" HorizontalAlignment="Center" VerticalAlignment="Top" Height="32" Width="32" Margin="0,2,0,0" Cursor="Hand" Content="{DynamicResource Delete}"/>
                            <Label Margin="2" Content ="Delete" Foreground="{DynamicResource BaseForeColor}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Padding="0" FontWeight="Bold" FontFamily="{DynamicResource BaseFontFamily}"/>
                        </Grid>
                    </Border>
                            
                   <Border x:Name="pnlClose" Style="{DynamicResource ToolStripButtonHover}" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Margin="4,0,0,0" >
                    <Grid>
                        <Button x:Name="btnClose" ToolTip="Close" Click="btnClose_Click" Style="{DynamicResource SimpleButton}" HorizontalAlignment="Center" VerticalAlignment="Top" Height="32" Width="32" Margin="0,2,0,0" Cursor="Hand" Content="{DynamicResource Close}"/>
                            <Label Margin="2" Content ="Close" Foreground="{DynamicResource BaseForeColor}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Padding="0" FontWeight="Bold" FontFamily="{DynamicResource BaseFontFamily}"/>
                    </Grid>
                    </Border>


                  
                      
                </StackPanel>
                <Border VerticalAlignment="Top" Height="Auto" BorderThickness="0.5,0.5,0.5,0.5" BorderBrush="{DynamicResource BaseForeColor}" Margin="4,0">
                    <StackPanel Margin="0" Orientation="Vertical">
                        <DockPanel LastChildFill="True" Margin="0">
                            <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center"  Foreground="{DynamicResource MyBlueSolidBrush2}" Text="From :" TextWrapping="Wrap" Margin="0" TextAlignment="Right" Width="75" />
                            <Label x:Name="lblFrom" Content="{Binding From}" Foreground="{DynamicResource MyBlueSolidBrush2}" Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center" Tag="{Binding nSecureMessageInboxID}"  FontWeight="Bold" IsEnabled="False" />
                        </DockPanel>
                        <DockPanel Height="Auto"  Margin="0" MinHeight="24"  >
                            <TextBlock  Foreground="{DynamicResource MyBlueSolidBrush2}" Text="To :" TextWrapping="Wrap" HorizontalAlignment="Right" VerticalAlignment="Center" TextAlignment="Right" Width="75" />
                            <Label x:Name="lblTo" Foreground="{DynamicResource MyBlueSolidBrush2}"  Margin="0" HorizontalAlignment="Left" Background="{x:Null}" Content="{Binding sTo}" VerticalAlignment="Center" FontWeight="Bold" />
                        </DockPanel>
                        <DockPanel LastChildFill="True" Margin="0">
                            <TextBlock  Foreground="{DynamicResource MyBlueSolidBrush2}" Text="Subject :" TextWrapping="Wrap" HorizontalAlignment="Right" VerticalAlignment="Center" TextAlignment="Right" Width="75" />
                            <Label x:Name="lblSubject" Foreground="{DynamicResource MyBlueSolidBrush2}" Margin="0" Background="{x:Null}" Content="{Binding Subject}"  HorizontalAlignment="Left" VerticalAlignment="Center" />
                        </DockPanel>

                        <DockPanel LastChildFill="True" x:Name="dckAttachments" Margin="0,0,0,3">
                            <TextBlock  Foreground="{DynamicResource MyBlueSolidBrush2}" Text="Attachment :" TextWrapping="Wrap" HorizontalAlignment="Right" VerticalAlignment="Center" TextAlignment="Right" Width="75" />
                            <StackPanel Orientation="Vertical" DockPanel.Dock="Top" Height="25" Margin="4,0,0,0">
                                <ScrollViewer BorderThickness="0,0,0,0.5" VerticalScrollBarVisibility="Auto" Margin="0" >
                                    <ListBox  ScrollViewer.HorizontalScrollBarVisibility  ="Disabled" HorizontalContentAlignment="Stretch" Margin="6"   ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False" x:Name="lstAttachments" BorderThickness="0" HorizontalAlignment="Left" Foreground="{DynamicResource BaseForeColor}" BorderBrush="{x:Null}" Background="{x:Null}"  >
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel   Orientation="Horizontal" Width="Auto" IsItemsHost="True"  />
                                            </ItemsPanelTemplate>

                                        </ListBox.ItemsPanel>

                                    </ListBox>
                                </ScrollViewer>
                            </StackPanel>
                        </DockPanel>
                    </StackPanel>
                </Border>

            </StackPanel>
            <TextBox x:Name="txtMessage" Foreground="#FF313131" Background="White" BorderBrush="{DynamicResource BaseForeColor}" TextWrapping="Wrap" BorderThickness="0.5" 
				    HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Margin="4" AcceptsReturn="True"
				    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" 
                    Text="{Binding sMessageBody}"
                     />
         
        </DockPanel>

    </Grid>

</Window>

