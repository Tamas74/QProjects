<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:gloSurescriptSecureMessage_InBox="clr-namespace:gloSurescriptSecureMessage_InBox"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
	x:Class="gloSurescriptSecureMessage_InBox.MyToolBarTrayControl"
	x:Name="myToolBarTrayControl"
	>

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/gloUIControlLibrary;component/Themes/gloGUIStyleV8.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/gloUIControlLibrary;component/Themes/gloIcons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <LinearGradientBrush x:Key="MyToolBarBlueGradientBrush" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFCEE0F5" Offset="0"/>
                <GradientStop Color="#FFDDEEFF" Offset="0.041666666666666664"/>
                <GradientStop Color="#FFE5F0FD" Offset="0.5"/>
                <GradientStop Color="#FFAECBEF" Offset="1"/>
            </LinearGradientBrush>
            <!-- Geometry (down arrow) used in the ToggleButton in the editable ComboBox controls -->
            <Geometry x:Key="MyDownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>

            <!-- ***************************************************************** -->
            <!-- Resources (brush, styles, control templates) for the Menu control -->
            <!-- ***************************************************************** -->

            <LinearGradientBrush x:Key="MenuItemPressedFill" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#28717070" Offset="0"/>
                <GradientStop Color="#50717070" Offset="0.75"/>
                <GradientStop Color="#90717070" Offset="1"/>
            </LinearGradientBrush>



            <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
            <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
            <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
            <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>

            <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>

            <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
                <Setter Property="ClickMode" Value="Hover"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="MinHeight" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <DockPanel SnapsToDevicePixels="true" Background="Transparent">
                                <Rectangle Fill="Transparent" x:Name="R1" Width="1" DockPanel.Dock="Right"/>
                                <Rectangle Fill="Transparent" x:Name="B1" Height="1" DockPanel.Dock="Bottom"/>
                                <Rectangle Fill="Transparent" x:Name="L1" Width="1" DockPanel.Dock="Left"/>
                                <Rectangle Fill="Transparent" x:Name="T1" Height="1" DockPanel.Dock="Top"/>
                                <ContentPresenter HorizontalAlignment="Center" Margin="2,2,2,2" x:Name="ContentContainer" VerticalAlignment="Center"/>
                            </DockPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Fill" TargetName="R1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                    <Setter Property="Fill" TargetName="B1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                    <Setter Property="Fill" TargetName="L1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                    <Setter Property="Fill" TargetName="T1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                    <Setter Property="Margin" TargetName="ContentContainer" Value="3,3,1,1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
                <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Column="0" Grid.Row="1">
                                    <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
                                </Border>
                                <RepeatButton Focusable="false" Style="{StaticResource MenuScrollButton}" Grid.Column="0" Grid.Row="0" Command="{x:Static ScrollBar.LineUpCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <RepeatButton.Visibility>
                                        <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
                                            <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        </MultiBinding>
                                    </RepeatButton.Visibility>
                                    <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource UpArrow}"/>
                                </RepeatButton>
                                <RepeatButton Focusable="false" Style="{StaticResource MenuScrollButton}" Grid.Column="0" Grid.Row="2" Command="{x:Static ScrollBar.LineDownCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <RepeatButton.Visibility>
                                        <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
                                            <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        </MultiBinding>
                                    </RepeatButton.Visibility>
                                    <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource DownArrow}"/>
                                </RepeatButton>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MyMenuItemStyle" TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="#00FFFFFF"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="0.7"/>
                <Setter Property="Margin" Value="0,1,0,0"/>
                <Setter Property="Padding" Value="8,3,8,3"/>
                <Setter Property="DockPanel.Dock" Value="Top"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="True" Background="#00FFFFFF">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" MinWidth="24" Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                    <ColumnDefinition Width="14"/>
                                </Grid.ColumnDefinitions>
                                <Border Margin="1,0,1,0" x:Name="Border" Grid.ColumnSpan="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0" x:Name="Icon" VerticalAlignment="Center" Content="{TemplateBinding Icon}" ContentSource="Icon"/>
                                <Border Visibility="Hidden" Margin="0,1,0,1" x:Name="GlyphPanel" Width="20" Height="20" Background="#FFE6F0FA" BorderBrush="#FF3399FF" BorderThickness="0.7">
                                    <Path Stroke="{TemplateBinding Foreground}" StrokeThickness="1.2" FlowDirection="LeftToRight" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,2.5L2.5,5 7,0.5"/>
                                </Border>
                                <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" Grid.Column="1" Content="{TemplateBinding Header}" ContentSource="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True"/>
                                <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="4,3,2,3" Grid.Column="2" Text="{TemplateBinding InputGestureText}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter Property="BorderBrush" TargetName="Border" Value="#FF3399FF"/>
                                    <Setter Property="Background" TargetName="Border" Value="#FFC2E0FF"/>
                                    <Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#FF3399FF"/>
                                    <Setter Property="Background" TargetName="GlyphPanel" Value="#FF99CCFF"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Padding" Value="6,2,7,2"/>
                        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Border SnapsToDevicePixels="True" x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0.7">
                                        <DockPanel x:Name="Header">
                                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" Content="{TemplateBinding Icon}" ContentSource="Icon"/>
                                            <Path Visibility="Collapsed" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.2" FlowDirection="LeftToRight" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center" Data="M0,2.5L2.5,5 7,0.5"/>
                                            <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Header}" ContentSource="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True"/>
                                            <Popup Focusable="False" AllowsTransparency="True" HorizontalOffset="-1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" x:Name="PART_Popup">
                                                <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="#00FFFFFF">
                                                    <Border Background="{DynamicResource MyDropDownGraySolidBrush2}" BorderBrush="{DynamicResource MyDarkBlueSolidBrush}" BorderThickness="0.7" x:Name="border">
                                                        <Grid Grid.IsSharedSizeScope="True">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" MinWidth="24" Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Rectangle Margin="0,0,0,0" Fill="{DynamicResource MyDropDownGraySolidBrush1}"/>
                                                            <Rectangle Fill="#00F6F6F6" HorizontalAlignment="Left" Margin="0,-1,0,0" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=Header}" Height="{Binding ActualHeight, ElementName=Header}" Grid.ColumnSpan="2"/>
                                                            <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" Grid.ColumnSpan="2" CanContentScroll="True">
                                                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,0,1" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
                                                            </ScrollViewer>
                                                        </Grid>
                                                    </Border>
                                                </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                            </Popup>
                                        </DockPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                                        </Trigger>
                                        <Trigger Property="Icon" Value="{x:Null}">
                                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsHighlighted" Value="True">
                                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource MyMouseOverOrangeGradientBrush3}" />
                                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MyOrangeSolidBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsSubmenuOpen" Value="True">
                                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MyDarkBlueSolidBrush}"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource MyDarkBlueSolidBrush}"/>
                                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource MyBlueGradientBrush}" />
                                        </Trigger>
                                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                            <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="True"/>
                                            <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Margin" Value="0,1,0,1"/>
                        <Setter Property="Padding" Value="7,1,8,2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Border SnapsToDevicePixels="True" x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0.7">
                                        <DockPanel>
                                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" Content="{TemplateBinding Icon}" ContentSource="Icon"/>
                                            <Path Visibility="Collapsed" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.2" FlowDirection="LeftToRight" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center" Data="M0,2.5L2.5,5 7,0.5"/>
                                            <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Header}" ContentSource="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True"/>
                                        </DockPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Icon" Value="{x:Null}">
                                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsHighlighted" Value="True">
                                            <Setter Property="BorderBrush" TargetName="Border" Value="#FF3399FF"/>
                                            <Setter Property="Background" TargetName="Border" Value="#FFC2E0FF"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="DockPanel.Dock" Value="Top"/>
                        <Setter Property="Padding" Value="8,3,8,3"/>
                        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Grid SnapsToDevicePixels="True" Background="#00FFFFFF">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" MinWidth="24" Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                            <ColumnDefinition Width="14"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Margin="1,0,1,0" x:Name="Border" Grid.ColumnSpan="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="3,3,3,3" x:Name="Icon" VerticalAlignment="Center" Content="{TemplateBinding Icon}" ContentSource="Icon"/>
                                        <Border Visibility="Hidden" Margin="0,1,0,1" x:Name="GlyphPanel" Width="20" Height="20" Background="#FFE6F0FA" BorderBrush="#FF3399FF" BorderThickness="0.7">
                                            <Path Stroke="{TemplateBinding Foreground}" StrokeThickness="1.2" FlowDirection="LeftToRight" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,2.5L2.5,5 7,0.5"/>
                                        </Border>
                                        <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" Grid.Column="1" Content="{TemplateBinding Header}" ContentSource="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True"/>
                                        <Path Fill="{TemplateBinding Foreground}" Margin="4,0,6,0" VerticalAlignment="Center" Grid.Column="3" Data="M0,0L4,3.5 0,7z" DockPanel.Dock="Right"/>
                                        <Popup Focusable="False" AllowsTransparency="True" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" x:Name="PART_Popup">
                                            <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="#00FFFFFF">
                                                <Border Grid.IsSharedSizeScope="True" Background="#FFFDFDFD" BorderBrush="#FF808080" BorderThickness="0.7">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" MinWidth="24" Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Rectangle Margin="0,1,0,1">
                                                            <Rectangle.Fill>
                                                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                                                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                                    <GradientStop Color="#FFFFFBFF" Offset="0.5"/>
                                                                    <GradientStop Color="#FFF7F7F7" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                        <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" Grid.ColumnSpan="2" CanContentScroll="True">
                                                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,0,1" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
                                                        </ScrollViewer>
                                                    </Grid>
                                                </Border>
                                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                                        </Trigger>
                                        <Trigger Property="Icon" Value="{x:Null}">
                                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsHighlighted" Value="True">
                                            <Setter Property="BorderBrush" TargetName="Border" Value="#FF3399FF"/>
                                            <Setter Property="Background" TargetName="Border" Value="#FFC2E0FF"/>
                                            <Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#FF3399FF"/>
                                            <Setter Property="Background" TargetName="GlyphPanel" Value="#FF99CCFF"/>
                                        </Trigger>
                                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                            <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="True"/>
                                            <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MyMenuToolBarWithWrapStyle" TargetType="{x:Type ToolBar}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolBar}">
                            <Grid SnapsToDevicePixels="true" Margin="3,1,1,1" x:Name="Grid">
                                <Border Margin="0,0,11,0" x:Name="MainPanelBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3,3,3,3" Padding="{TemplateBinding Padding}">
                                    <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                        <Thumb Margin="-3,-1,0,0" x:Name="ToolBarThumb" Style="{DynamicResource MyToolBarThumbStyle}" Width="10" Padding="6,5,1,6"/>
                                        <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" Margin="4,0,4,0" x:Name="ToolBarHeader" ContentSource="Header"/>
                                        <ToolBarPanel SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,1,2,2" x:Name="PART_ToolBarPanel" />

                                        <Grid Width="Auto" Height="Auto" IsItemsHost="true" />

                                    </DockPanel>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsOverflowOpen" Value="true">
                                    <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false"/>
                                </Trigger>
                                <Trigger Property="Header" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="ToolBarTray.IsLocked" Value="true">
                                    <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
                                    <Setter Property="Height" TargetName="ToolBarThumb" Value="10"/>
                                    <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
                                    <Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0"/>
                                    <Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1"/>
                                    <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
                                    <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
                                    <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
                                    <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
                                    <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MyToolBarThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border SnapsToDevicePixels="True" Background="Transparent" Padding="{TemplateBinding Padding}">
                                <Rectangle>
                                    <Rectangle.Fill>
                                        <DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" ViewboxUnits="Absolute" Viewport="0,0,4,4" ViewportUnits="Absolute">
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup>
                                                    <GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
                                                    <GeometryDrawing Brush="{DynamicResource MyToolBarGripperSolidBrush}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                                                </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Cursor" Value="SizeAll"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MySubmenuItemStyle" TargetType="{x:Type MenuItem}">
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Padding" Value="7,2,8,3"/>
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Padding" Value="7,2,8,3"/>
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Padding" Value="2,3,2,3"/>
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="Padding" Value="2,3,2,3"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                <Grid SnapsToDevicePixels="true">
                    <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.7" x:Name="Bg"/>
                    <Rectangle Margin="1" StrokeThickness="0.7" x:Name="InnerBorder"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                            <ColumnDefinition Width="4"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="37"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                            <ColumnDefinition Width="17"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="1" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                        <Border Visibility="Hidden" Margin="2" x:Name="GlyphPanel" Width="22" Height="22" Background="{DynamicResource MyDarkOrangeSolidBrush}" BorderBrush="{DynamicResource MyDarkOrangeSolidBrush}" BorderThickness="0.7" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path Fill="Black" FlowDirection="LeftToRight" x:Name="Glyph" Width="9" Height="11" Data="{StaticResource Checkmark}"/>
                        </Border>
                        <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" Grid.Column="2" ContentSource="Header" RecognizesAccessKey="True"/>
                        <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" Grid.Column="4" Text="{TemplateBinding InputGestureText}"/>
                    </Grid>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource MyDarkOrangeSolidBrush}"/>
                        <Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource MyBrightOrangeSolidBrush}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="#FF9A9A9A"/>
                        <Setter Property="Background" TargetName="GlyphPanel" Value="#EEE9E9"/>
                        <Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#DBD6D6"/>
                        <Setter Property="Fill" TargetName="Glyph" Value="#848589"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ContentControl}">
                <Border Background="#F5F5F5" BorderBrush="#FF959595" BorderThickness="1">
                    <Grid>
                        <Rectangle Fill="#F1F1F1" RadiusX="2" RadiusY="2" HorizontalAlignment="Left" Margin="2" Width="28"/>
                        <Rectangle Fill="#E2E3E3" HorizontalAlignment="Left" Margin="30,2,0,2" Width="1"/>
                        <Rectangle Fill="White" HorizontalAlignment="Left" Margin="31,2,0,2" Width="1"/>
                        <ContentPresenter Margin="1,0" Grid.ColumnSpan="2"/>
                    </Grid>
                </Border>
            </ControlTemplate>

            <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                <Grid SnapsToDevicePixels="true">
                    <Rectangle RadiusX="2" RadiusY="2" x:Name="OuterBorder"/>
                    <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" Margin="1" x:Name="Bg"/>
                    <Rectangle Margin="2" x:Name="InnerBorder"/>
                    <DockPanel>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                        <Path Visibility="Collapsed" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="7,0,0,0" x:Name="GlyphPanel" VerticalAlignment="Center" Data="{StaticResource Checkmark}"/>
                        <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" ContentSource="Header" RecognizesAccessKey="True"/>
                    </DockPanel>
                    <Popup Focusable="false" AllowsTransparency="true" HorizontalOffset="0" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-1" x:Name="PART_Popup">
                        <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                            <ContentControl x:Name="SubMenuBorder" IsTabStop="false" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" CanContentScroll="true">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2" Grid.IsSharedSizeScope="true" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
                                </ScrollViewer>
                            </ContentControl>
                        </Microsoft_Windows_Themes:SystemDropShadowChrome>
                    </Popup>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                        <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                    </Trigger>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                        <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                        <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource MyDarkOrangeSolidBrush}"/>
                        <Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource MyBrightOrangeSolidBrush}" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="true">
                        <Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
                        <Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
                        <Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
                    </Trigger>
                    <Trigger Property="IsSubmenuOpen" Value="true">
                        <Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
                        <Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
                        <Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="#FF9A9A9A"/>
                        <Setter Property="Fill" TargetName="GlyphPanel" Value="#848589"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                <Grid SnapsToDevicePixels="true">
                    <Rectangle RadiusX="2" RadiusY="2" x:Name="OuterBorder"/>
                    <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.7" Margin="1" x:Name="Bg"/>
                    <Rectangle Margin="2" x:Name="InnerBorder" StrokeThickness="0.7"/>
                    <DockPanel>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                        <Path Visibility="Collapsed" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="7,0,0,0" x:Name="GlyphPanel" VerticalAlignment="Center" Data="{StaticResource Checkmark}"/>
                        <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" ContentSource="Header" RecognizesAccessKey="True"/>
                    </DockPanel>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource MyDarkOrangeSolidBrush}"/>
                        <Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource MyBrightOrangeSolidBrush}" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="true">
                        <Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
                        <Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
                        <Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="#FF9A9A9A"/>
                        <Setter Property="Fill" TargetName="GlyphPanel" Value="#848589"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                <Grid SnapsToDevicePixels="true">
                    <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2" x:Name="Bg"/>
                    <Rectangle Stroke="Transparent" StrokeThickness="0.7" Margin="1" x:Name="InnerBorder"/>
                    <Grid x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                            <ColumnDefinition Width="4"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="37"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                            <ColumnDefinition Width="17"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="1" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                        <Border Visibility="Hidden" Margin="1" x:Name="GlyphPanel" Width="22" Height="22" Background="{DynamicResource MyDarkOrangeSolidBrush}" BorderBrush="{DynamicResource MyDarkOrangeSolidBrush}" BorderThickness="1" CornerRadius="3">
                            <Path Fill="#0C12A1" FlowDirection="LeftToRight" x:Name="Glyph" Width="9" Height="11" Data="{StaticResource Checkmark}"/>
                        </Border>
                        <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" Grid.Column="2" ContentSource="Header" RecognizesAccessKey="True"/>
                        <TextBlock Visibility="Collapsed" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" Grid.Column="4" Text="{TemplateBinding InputGestureText}"/>
                        <Path Fill="{TemplateBinding Foreground}" Margin="4,0,0,0" VerticalAlignment="Center" Grid.Column="5" Data="{StaticResource RightArrow}"/>
                    </Grid>
                    <Popup Focusable="False" AllowsTransparency="True" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right"  PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" x:Name="PART_Popup">
                        <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="#00FFFFFF">
                            <Border Background="{DynamicResource MyDropDownGraySolidBrush2}" BorderBrush="{DynamicResource MyDarkBlueSolidBrush}" BorderThickness="0.7" x:Name="border">
                                <Grid Grid.IsSharedSizeScope="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" MinWidth="24" Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Margin="0,0,0,0" Fill="{DynamicResource MyDropDownGraySolidBrush1}"/>
                                    <Rectangle Fill="#00F6F6F6" HorizontalAlignment="Left" Margin="0,-1,0,0" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=Header}" Height="{Binding ActualHeight, ElementName=Header}" Grid.ColumnSpan="2"/>
                                    <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" Grid.ColumnSpan="2" CanContentScroll="True">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,0,1" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </Microsoft_Windows_Themes:SystemDropShadowChrome>
                    </Popup>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                        <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource MyDarkOrangeSolidBrush}"/>
                        <Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource MyBrightOrangeSolidBrush}" />
                    </Trigger>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                        <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                        <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="#FF9A9A9A"/>
                        <Setter Property="Background" TargetName="GlyphPanel" Value="#EEE9E9"/>
                        <Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#DBD6D6"/>
                        <Setter Property="Fill" TargetName="Glyph" Value="#848589"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- *************************************************************************************** -->
            <!-- Style for the ContextMenu control which pops up when a MyImageTextMenuButton is clicked -->
            <!-- *************************************************************************************** -->
            <Style x:Key="MyContextMenuStyle" TargetType="{x:Type ContextMenu}">
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="BorderThickness" Value="1,1,1,1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="#00FFFFFF" >
                                <Border Width="Auto" Background="{DynamicResource MyDropDownGraySolidBrush2}" BorderBrush="{DynamicResource MyDarkBlueSolidBrush}" BorderThickness="0.7" x:Name="border">
                                    <Grid Grid.IsSharedSizeScope="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" MinWidth="24" Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Margin="0,0,0,0" Fill="{DynamicResource MyDropDownGraySolidBrush1}"/>
                                        <Rectangle Fill="#00F6F6F6" HorizontalAlignment="Left" Margin="0,-1,0,0" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=Header}" Height="{Binding ActualHeight, ElementName=Header}" Grid.ColumnSpan="2"/>
                                        <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" Grid.ColumnSpan="2" CanContentScroll="True">
                                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,0,1" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsOpen" Value="True">
                                    <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                    <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Style for the Separator controls used in MenuItem and ContextMenu -->
            <Style x:Key="MyMenuItemSeparatorStyle" TargetType="{x:Type Separator}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Grid SnapsToDevicePixels="true" Margin="0,2,0,2">
                                <Rectangle Fill="#FF4D6DF3" Stroke="#FF4D6DF3" StrokeThickness="0.7" Margin="30,0,0,0" Height="0.7"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ***************************** -->
            <!-- Style for the toolbar buttons -->
            <!-- ***************************** -->

            <!-- Style for the ToolBar buttons which don't have a ContextMenu -->
            <Style x:Key="MyToolBarButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <!-- We use Grid as a root because it is easy to add more elements to customize the button -->
                            <Grid x:Name="Grid">
                                <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
                                <!-- Content Presenter is where the text content etc is placed by the control -->
                                <!-- The bindings are useful so that the control can be parameterized without editing the template -->
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                            </Grid>
                            <!--Each state sets a brush on the Border in the template -->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" TargetName="Border"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource MyDarkOrangeSolidBrush}" TargetName="Border"/>
                                    <Setter Property="BorderThickness" Value="0.7" TargetName="Border" />
                                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource MyMouseOverOrangeGradientBrush3}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" Value="{DynamicResource MyButtonPressedOrangeGradientBrush}" TargetName="Border"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource MyDarkOrangeSolidBrush}" TargetName="Border"/>
                                    <Setter Property="BorderThickness" Value="0.7" TargetName="Border" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                                    <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ClickMode" Value="Press"/>
            </Style>

            <!-- Style for MyImageTextButton controls which contain one Image and one TextBlock -->
            <Style x:Key="MyImageTextButtonStyle" TargetType="{x:Type gloSurescriptSecureMessage_InBox:MyImageTextButton}">
                <Setter Property="BorderThickness" Value="0.7"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type gloSurescriptSecureMessage_InBox:MyImageTextButton}">
                            <Border x:Name="border" Width="Auto" Height="Auto" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}">
                                <StackPanel x:Name="stackPanel" Width="Auto" Height="Auto" Orientation="Horizontal">
                                    <Image Margin="2,0,2,0" VerticalAlignment="Center" Width="18" Height="18" Source="{TemplateBinding MySource}"/>
                                    <TextBlock HorizontalAlignment="Left" Margin="0,0,5,0" VerticalAlignment="Center" Text="{TemplateBinding MyText}" TextWrapping="Wrap"/>
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true"/>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource MyDarkOrangeSolidBrush}"/>
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource MyButtonPressedOrangeGradientBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Style for MyImageTextMenuButton controls which contain one MyImageTextButton and one button with a triangle used to display the ContextMenu -->
            <Style x:Key="MyImageTextMenuButtonStyle" TargetType="{x:Type gloSurescriptSecureMessage_InBox:MyImageTextMenuButton}">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type gloSurescriptSecureMessage_InBox:MyImageTextMenuButton}">
                            <Border SnapsToDevicePixels="True" x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContextMenu="{TemplateBinding ContextMenu}" >
                                <Grid Width="Auto" Height="Auto" x:Name="Grid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <gloSurescriptSecureMessage_InBox:MyImageTextButton Grid.Column="0" MySource="{TemplateBinding MyButtonImageSource}"  MyText="{TemplateBinding MyButtonText}" Style="{DynamicResource MyImageTextButtonStyle}" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0.7,0.7,0.7,0.7" Padding="0,0,0,0" />
                                    <Button x:Name="triangleButton" Grid.Column="1" BorderThickness="0.7,0,0,0" Style="{DynamicResource MyTriangleButtonStyle}" Background="#00DE2424" BorderBrush="{x:Null}" Padding="0,0,0,0" Click="triangleButton_Click" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsFocused" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource MyMouseOverOrangeGradientBrush3}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource MyDarkOrangeSolidBrush}"/>
                                    <Setter Property="BorderBrush" TargetName="triangleButton" Value="{DynamicResource MyDarkOrangeSolidBrush}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Style for the triangle button used in MyImageTextMenuButton -->
            <Style x:Key="MyTriangleButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Width="12" Height="Auto" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <Path Fill="{DynamicResource GlyphBrush}" Data="M 0 0 L 4 4 L 8 0 Z" Width="8" Height="5" Margin="0,5,0,0"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!-- *************************************************** -->
            <!-- Styles and control templates for the two ComboBoxes -->
            <!-- *************************************************** -->
            <Style x:Key="MyEditableComboBoxStyle" TargetType="{x:Type ComboBox}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="Padding" Value="4,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid SnapsToDevicePixels="True" x:Name="MainGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Popup AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Margin="1" x:Name="PART_Popup" Grid.ColumnSpan="2">
                                    <Microsoft_Windows_Themes:SystemDropShadowChrome MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}" x:Name="Shdw" Color="Transparent">
                                        <Border x:Name="DropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                                            <ScrollViewer CanContentScroll="true">
                                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                            </ScrollViewer>
                                        </Border>
                                    </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                </Popup>
                                <ToggleButton Background="#FFFFFFFF" BorderBrush="{x:Null}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <ContentPresenter IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                    <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                    <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    <Setter Property="Background" Value="#FFF4F4F4"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEditable" Value="true">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                        <Setter Property="IsTabStop" Value="false"/>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="Template" Value="{DynamicResource MyEditableComboBoxControlTemplate}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- The control template for the two editable ComboBoxes in the ToolBarTray control -->
            <ControlTemplate x:Key="MyEditableComboBoxControlTemplate" TargetType="{x:Type ComboBox}">
                <Grid SnapsToDevicePixels="true" x:Name="Placement">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Popup AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" x:Name="PART_Popup" Grid.ColumnSpan="2">
                        <Microsoft_Windows_Themes:SystemDropShadowChrome MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}" x:Name="Shdw" Color="Transparent">
                            <Border x:Name="DropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                                <ScrollViewer>
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Border>
                        </Microsoft_Windows_Themes:SystemDropShadowChrome>
                    </Popup>
                    <Microsoft_Windows_Themes:ListBoxChrome x:Name="Border" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" RenderMouseOver="{TemplateBinding IsMouseOver}"/>
                    <TextBox Margin="{TemplateBinding Padding}" x:Name="PART_EditableTextBox" Style="{DynamicResource MyComboBoxEditableTextBoxStyle}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ToggleButton x:Name="TB" Background="{DynamicResource MyBrightBlueSolidBrush1}" Style="{DynamicResource MyEditableComboBoxToggleButtonStyle}" Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource MyDarkOrangeSolidBrush}"/>
                        <Setter Property="BorderThickness" Value="1.1"/>
                        <Setter Property="Background" TargetName="TB" Value="{DynamicResource MyMouseOverOrangeGradientBrush3}"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="true">
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource MyDarkOrangeSolidBrush}"/>
                        <Setter Property="BorderThickness" Value="1.1"/>
                        <Setter Property="Background" TargetName="TB" Value="{DynamicResource MyMouseOverOrangeGradientBrush3}"/>
                    </Trigger>
                    <Trigger Property="IsDropDownOpen" Value="true">
                        <Setter Property="RenderFocused" TargetName="Border" Value="true"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource MyDarkOrangeSolidBrush}"/>
                        <Setter Property="BorderThickness" Value="1.1"/>
                        <Setter Property="Background" TargetName="TB" Value="{DynamicResource MyDarkOrangeSolidBrush}"/>
                    </Trigger>
                    <Trigger Property="HasItems" Value="false">
                        <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        <Setter Property="Background" Value="#FFF4F4F4"/>
                    </Trigger>
                    <Trigger Property="IsGrouping" Value="true">
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                    </Trigger>
                    <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                        <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                        <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- The style for the editable TextBox in the ComboBox -->
            <Style x:Key="MyComboBoxEditableTextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="MinHeight" Value="0"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <ScrollViewer Focusable="false" x:Name="PART_ContentHost" Background="Transparent" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- The style for the ToggleButtons in the two editable ComboBoxes in the ToolBarTray control -->
            <Style x:Key="MyEditableComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="ClickMode" Value="Press"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid x:Name="Cbtb" Margin="2,2,2,2" Width="Auto" Height="18" Background="{TemplateBinding Background}">
                                <Path Fill="Black" x:Name="Arrow" Data="{DynamicResource MyDownArrowGeometry}" RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="Height" HorizontalAlignment="Left" Margin="2,0,1,0" VerticalAlignment="Center">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- **************************************************** -->
            <!-- Style for the Separator controls used in the toolbar -->
            <!-- **************************************************** -->
            <Style x:Key="MyVerticalSeparatorStyle" TargetType="{x:Type Separator}">
                <Setter Property="MinWidth" Value="1"/>
                <Setter Property="MinHeight" Value="1"/>
                <Setter Property="Margin" Value="2,2,2,2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border SnapsToDevicePixels="true" Width="1.5">
                                <Image Source="graphics\toolbarSeparator.gif" Stretch="Fill"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

   
          
            <!--<gloSurescriptSecureMessage_InBox:MyImageTextMenuButton Style="{DynamicResource MyImageTextMenuButtonStyle}" MyButtonImageSource="graphics\message.ico"  MyButtonText="New" Width="55.227" Height="Auto" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0.7,0.7,0.7,0.7" ToolTip="New Mail Message" Click="MyImageTextMenuButton_Click">
            <gloSurescriptSecureMessage_InBox:MyImageTextMenuButton.ContextMenu>
            <ContextMenu Style="{DynamicResource MyContextMenuStyle}">
            <MenuItem Header="_Mail Message" InputGestureText="Ctrl+N" >
            <MenuItem.Icon>
            <Image Width="18" Height="18" Source="graphics\message.ico" Stretch="Fill"/>
            </MenuItem.Icon>
            </MenuItem>
              
                        
            <MenuItem Header="_Contact" InputGestureText="Ctrl+Shift+C">
            <MenuItem.Icon>
            <Image Width="18" Height="18" Source="graphics\contacts.ico" Stretch="Fill"/>
            </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Distribution _List" InputGestureText="Ctrl+Shift+L">
            <MenuItem.Icon>
            <Image Width="18" Height="18" Source="graphics\distributionList.ico" Stretch="Fill"/>
            </MenuItem.Icon>
            </MenuItem>
            
            </ContextMenu>
            </gloSurescriptSecureMessage_InBox:MyImageTextMenuButton.ContextMenu>
            </gloSurescriptSecureMessage_InBox:MyImageTextMenuButton>-->
            		<!--<gloSurescriptSecureMessage_InBox:MyImageTextMenuButton Style="{DynamicResource MyImageTextMenuButtonStyle}" MyButtonImageSource="graphics\message.ico"  MyButtonText="New" Width="55.227" Height="Auto" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0.7,0.7,0.7,0.7" ToolTip="New Mail Message" Click="MyImageTextMenuButton_Click">
            <gloSurescriptSecureMessage_InBox:MyImageTextMenuButton.ContextMenu>
            <ContextMenu Style="{DynamicResource MyContextMenuStyle}">
            <MenuItem Header="_Mail Message" InputGestureText="Ctrl+N" >
            <MenuItem.Icon>
            <Image Width="18" Height="18" Source="graphics\message.ico" Stretch="Fill"/>
            </MenuItem.Icon>
            </MenuItem>
              
                        
            <MenuItem Header="_Contact" InputGestureText="Ctrl+Shift+C">
            <MenuItem.Icon>
            <Image Width="18" Height="18" Source="graphics\contacts.ico" Stretch="Fill"/>
            </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Distribution _List" InputGestureText="Ctrl+Shift+L">
            <MenuItem.Icon>
            <Image Width="18" Height="18" Source="graphics\distributionList.ico" Stretch="Fill"/>
            </MenuItem.Icon>
            </MenuItem>
            
            </ContextMenu>
            </gloSurescriptSecureMessage_InBox:MyImageTextMenuButton.ContextMenu>
            </gloSurescriptSecureMessage_InBox:MyImageTextMenuButton>-->

      <StackPanel  x:Name="ToolBar" DockPanel.Dock="Top"  Orientation="Horizontal" Margin="0" VerticalAlignment="Stretch" Background="{DynamicResource Img_ToolstripStyle}" Height="55">
        <StackPanel Orientation="Horizontal" Margin="0,0,10,0">

            <Button x:Name="NewMail" Style="{DynamicResource SimpleButton}"  HorizontalAlignment="Center" VerticalAlignment="Top" Height="Auto" Margin="0,2,0,0" Cursor="Hand">
                <Border  x:Name="pnlNewMail" Style="{DynamicResource ToolStripButtonHover}" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Margin="4,0,0,0">
                    <StackPanel>
                        <Image Source="pack://application:,,,/gloUIControlLibrary;component/Resources/NewMessage.png"></Image>
                        <Label Margin="2" Content="_New Message" Foreground="{DynamicResource BaseForeColor}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Padding="0" FontWeight="Bold" FontFamily="{DynamicResource BaseFontFamily}"/>
                    </StackPanel>
                </Border>
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock TextWrapping="Wrap"><Run Text="New Message"/></TextBlock>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>

            <Button x:Name="PrintButton" Style="{DynamicResource SimpleButton}"  HorizontalAlignment="Center" VerticalAlignment="Top" Height="Auto" Margin="0,2,0,0" Cursor="Hand"  Uid="{Binding XPath=nSecureMessageInboxID}">
                <Border  x:Name="pnlPrint" Style="{DynamicResource ToolStripButtonHover}" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Margin="4,0,0,0">
                    <StackPanel>
                        <Image Source="pack://application:,,,/gloUIControlLibrary;component/Resources/Print.png"></Image>
                        <Label Margin="2" Content="_Print" Foreground="{DynamicResource BaseForeColor}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Padding="0" FontWeight="Bold" FontFamily="{DynamicResource BaseFontFamily}"/>
                    </StackPanel>
                </Border>
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock TextWrapping="Wrap"><Run Text="Print"/></TextBlock>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>

            <Button x:Name="DeleteButton" IsCancel="False" Uid="{Binding XPath=nSecureMessageInboxID}"  Style="{DynamicResource SimpleButton}" HorizontalAlignment="Center" VerticalAlignment="Top"  Margin="0,2,0,0" Cursor="Hand">
                <Border  x:Name="pnlDelete" Style="{DynamicResource ToolStripButtonHover}" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Margin="4,0,0,0">
                    <StackPanel>
                        <Image Source="pack://application:,,,/gloUIControlLibrary;component/Resources/Delete.png"></Image>
                        <Label Margin="2" Content="_Delete" Foreground="{DynamicResource BaseForeColor}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Padding="0" FontWeight="Bold" FontFamily="{DynamicResource BaseFontFamily}"/>
                    </StackPanel>
                </Border>
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock TextWrapping="Wrap"><Run Text="Delete"/></TextBlock>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>

            <Button x:Name="SendReceive" IsCancel="False"  Style="{DynamicResource SimpleButton}" HorizontalAlignment="Center" VerticalAlignment="Top"  Margin="0,2,0,0" Cursor="Hand">
                <Border  x:Name="pnlSendReceive"  Style="{DynamicResource ToolStripButtonHover}" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Margin="4,0,0,0">
                    <StackPanel>
                        <Image Source="pack://application:,,,/gloUIControlLibrary;component/Resources/SendReceiveEmail.png"></Image>
                        <Label Margin="2" Content="_Send/Receive" Foreground="{DynamicResource BaseForeColor}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Padding="0" FontWeight="Bold" FontFamily="{DynamicResource BaseFontFamily}"/>
                    </StackPanel>
                </Border>
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock TextWrapping="Wrap"><Run Text="Send/Receive"/></TextBlock>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>

            <Button  x:Name="btnClose" Style="{DynamicResource SimpleButton}"  HorizontalAlignment="Center" VerticalAlignment="Top" Height="Auto" Margin="0,2,0,0" Cursor="Hand" Click="btnClose_Click">
                <Border  x:Name="pnlClose" Style="{DynamicResource ToolStripButtonHover}" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Margin="4,0,0,0">
                    <StackPanel>
                        <Image Source="pack://application:,,,/gloUIControlLibrary;component/Resources/Close.png"></Image>
                        <Label Margin="2" Content="_Close" Foreground="{DynamicResource BaseForeColor}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Padding="0" FontWeight="Bold" FontFamily="{DynamicResource BaseFontFamily}"/>
                    </StackPanel>
                </Border>

                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock TextWrapping="Wrap"><Run Text="Close"/></TextBlock>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>

        </StackPanel>
 <Separator Style="{DynamicResource MyVerticalSeparatorStyle}"/>
                <StackPanel Name="stkProviderInbox" Orientation="Vertical" Height="Auto"  Width="Auto" Margin="10,0,0,0">
                    <TextBlock Text="Provider Inbox:"                                FontWeight="Bold" 
                               VerticalAlignment="Top" 
                               Foreground="#FF2B5395" 
                               FontSize="10.667" 
                               TextWrapping="Wrap" 
                               TextAlignment="Left" 
                               HorizontalAlignment="Left" Margin="5,5,0,5" />

                    <ComboBox  Width="400" Height="23"  Name="cmbProviderInbox"                                
                               VerticalAlignment="Top"                                
                               HorizontalContentAlignment="Left" 
                               Margin="5,0,0,0"
                               SelectionChanged="cmbProviderInbox_SelectionChanged"
                               />

                </StackPanel>                                    
            </StackPanel>
            
        
            <!--<Button x:Name="ReplyButton" Style="{DynamicResource MyToolBarButtonStyle}" Background="{x:Null}" BorderThickness="0.7" BorderBrush="{x:Null}" ToolTip="Reply (Ctrl+R)">
            <StackPanel Orientation="Horizontal">
            <Image Source="graphics\reply.gif"/>
            <TextBlock Text="Reply" Margin="3,0,0,0" TextWrapping="Wrap"/>
            </StackPanel>
            </Button>
            <Button x:Name="ReplyAllButton" Style="{DynamicResource MyToolBarButtonStyle}" Background="{x:Null}" BorderThickness="0.7" BorderBrush="{x:Null}" ToolTip="Reply to All (Ctrl+Shift+R)">
            <StackPanel Orientation="Horizontal">
            <Image Width="Auto" Height="Auto" Source="graphics\replyall.gif"/>
            <TextBlock Text="Reply to All" Margin="3,0,0,0" TextWrapping="Wrap"/>
            </StackPanel>
            </Button>
            <Button x:Name="ForwardButton" Style="{DynamicResource MyToolBarButtonStyle}" Background="{x:Null}" BorderThickness="0.7" BorderBrush="{x:Null}" ToolTip="Forward (Ctrl+F)">
            <StackPanel Orientation="Horizontal">
            <Image Width="Auto" Height="Auto" Source="graphics\forward.gif"/>
            <TextBlock Text="Forward" Margin="3,0,0,0" TextWrapping="Wrap"/>
            </StackPanel>
            </Button>
            <Separator Style="{DynamicResource MyVerticalSeparatorStyle}"/>-->

            <!--<gloSurescriptSecureMessage_InBox:MyImageTextMenuButton Style="{DynamicResource MyImageTextMenuButtonStyle}" MyButtonImageSource="graphics\sendreceive.gif"  MyButtonText="Send/Receive" Width="Auto" Height="Auto" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0.7,0.7,0.7,0.7" ToolTip="Send/Receive" >-->
            <!--<gloSurescriptSecureMessage_InBox:MyImageTextMenuButton.ContextMenu>
            <ContextMenu Style="{DynamicResource MyContextMenuStyle}">
            <MenuItem Height="22" Header="Send/Receive _All" InputGestureText="F9"/>
            <MenuItem Height="22" Header="_Send All"/>
            </ContextMenu>
            </gloSurescriptSecureMessage_InBox:MyImageTextMenuButton.ContextMenu>-->
            <!--</gloSurescriptSecureMessage_InBox:MyImageTextMenuButton>-->
            <!-- <Button x:Name="RuleButton" Style="{DynamicResource MyToolBarButtonStyle}" Background="{x:Null}" BorderThickness="0.7" BorderBrush="{x:Null}" ToolTip="Create Rule">
            <Image Source="graphics\createrule.gif"/>
            </Button>
            <Separator Style="{DynamicResource MyVerticalSeparatorStyle}"/>
            <Button x:Name="AddressButton" Style="{DynamicResource MyToolBarButtonStyle}" Background="{x:Null}" BorderThickness="0.7" BorderBrush="{x:Null}" ToolTip="Address Book (Ctrl+Shift+B)">
            <Image Source="graphics\addressbook.gif"/>
            </Button>
            <ComboBox Foreground="LightGray" IsSynchronizedWithCurrentItem="True" IsEditable="True" Text="Search address book" ToolTip="Search address book" IsKeyboardFocusWithinChanged="ComboBox_IsKeyboardFocusWithinChanged" Width="140" Height="22" Margin="0,0,0,0" Style="{DynamicResource MyEditableComboBoxStyle}" />
            <Separator Style="{DynamicResource MyVerticalSeparatorStyle}"/>
            <Button x:Name="HelpButton" Style="{DynamicResource MyToolBarButtonStyle}" Background="{x:Null}" BorderThickness="0.7" BorderBrush="{x:Null}" ToolTip="Microsoft Office Outlook Help (F1)">
            <Image Source="graphics\help.gif"/>
            </Button>-->
        
</UserControl>