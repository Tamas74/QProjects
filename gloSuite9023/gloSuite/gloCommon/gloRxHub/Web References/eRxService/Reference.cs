//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.269.
// 
#pragma warning disable 1591

namespace gloRxHub.eRxService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="eRxMessageSoap", Namespace="https://ophit.net/")]
    public partial class eRxMessage : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback PostClientRxMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetXMLDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResponsesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDownloadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveSurescriptRxMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DirectoryDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertToBytesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DirectoryDownloadLocalOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public eRxMessage() {
            this.Url = global::gloRxHub.Properties.Settings.Default.gloRxHub_eRxService1_eRxMessage;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event PostClientRxMessageCompletedEventHandler PostClientRxMessageCompleted;
        
        /// <remarks/>
        public event GetXMLDocumentCompletedEventHandler GetXMLDocumentCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event GetResponsesCompletedEventHandler GetResponsesCompleted;
        
        /// <remarks/>
        public event UpdateDownloadStatusCompletedEventHandler UpdateDownloadStatusCompleted;
        
        /// <remarks/>
        public event RetrieveSurescriptRxMessagesCompletedEventHandler RetrieveSurescriptRxMessagesCompleted;
        
        /// <remarks/>
        public event DirectoryDownloadCompletedEventHandler DirectoryDownloadCompleted;
        
        /// <remarks/>
        public event ConvertToBytesCompletedEventHandler ConvertToBytesCompleted;
        
        /// <remarks/>
        public event DirectoryDownloadLocalCompletedEventHandler DirectoryDownloadLocalCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ophit.net/PostClientRxMessage", RequestNamespace="https://ophit.net/", ResponseNamespace="https://ophit.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] PostClientRxMessage(object cntFromDB, string _key, string _MsgType) {
            object[] results = this.Invoke("PostClientRxMessage", new object[] {
                        cntFromDB,
                        _key,
                        _MsgType});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void PostClientRxMessageAsync(object cntFromDB, string _key, string _MsgType) {
            this.PostClientRxMessageAsync(cntFromDB, _key, _MsgType, null);
        }
        
        /// <remarks/>
        public void PostClientRxMessageAsync(object cntFromDB, string _key, string _MsgType, object userState) {
            if ((this.PostClientRxMessageOperationCompleted == null)) {
                this.PostClientRxMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostClientRxMessageOperationCompleted);
            }
            this.InvokeAsync("PostClientRxMessage", new object[] {
                        cntFromDB,
                        _key,
                        _MsgType}, this.PostClientRxMessageOperationCompleted, userState);
        }
        
        private void OnPostClientRxMessageOperationCompleted(object arg) {
            if ((this.PostClientRxMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostClientRxMessageCompleted(this, new PostClientRxMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ophit.net/GetXMLDocument", RequestNamespace="https://ophit.net/", ResponseNamespace="https://ophit.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetXMLDocument(string inURL) {
            object[] results = this.Invoke("GetXMLDocument", new object[] {
                        inURL});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetXMLDocumentAsync(string inURL) {
            this.GetXMLDocumentAsync(inURL, null);
        }
        
        /// <remarks/>
        public void GetXMLDocumentAsync(string inURL, object userState) {
            if ((this.GetXMLDocumentOperationCompleted == null)) {
                this.GetXMLDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXMLDocumentOperationCompleted);
            }
            this.InvokeAsync("GetXMLDocument", new object[] {
                        inURL}, this.GetXMLDocumentOperationCompleted, userState);
        }
        
        private void OnGetXMLDocumentOperationCompleted(object arg) {
            if ((this.GetXMLDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXMLDocumentCompleted(this, new GetXMLDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ophit.net/Login", RequestNamespace="https://ophit.net/", ResponseNamespace="https://ophit.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string userid, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string userid, string password) {
            this.LoginAsync(userid, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string userid, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        userid,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ophit.net/GetResponses", RequestNamespace="https://ophit.net/", ResponseNamespace="https://ophit.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetResponses(string strPrescribers, string strMessageType, string _key) {
            object[] results = this.Invoke("GetResponses", new object[] {
                        strPrescribers,
                        strMessageType,
                        _key});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResponsesAsync(string strPrescribers, string strMessageType, string _key) {
            this.GetResponsesAsync(strPrescribers, strMessageType, _key, null);
        }
        
        /// <remarks/>
        public void GetResponsesAsync(string strPrescribers, string strMessageType, string _key, object userState) {
            if ((this.GetResponsesOperationCompleted == null)) {
                this.GetResponsesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResponsesOperationCompleted);
            }
            this.InvokeAsync("GetResponses", new object[] {
                        strPrescribers,
                        strMessageType,
                        _key}, this.GetResponsesOperationCompleted, userState);
        }
        
        private void OnGetResponsesOperationCompleted(object arg) {
            if ((this.GetResponsesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResponsesCompleted(this, new GetResponsesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ophit.net/UpdateDownloadStatus", RequestNamespace="https://ophit.net/", ResponseNamespace="https://ophit.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDownloadStatus(string Transactions, string _key) {
            this.Invoke("UpdateDownloadStatus", new object[] {
                        Transactions,
                        _key});
        }
        
        /// <remarks/>
        public void UpdateDownloadStatusAsync(string Transactions, string _key) {
            this.UpdateDownloadStatusAsync(Transactions, _key, null);
        }
        
        /// <remarks/>
        public void UpdateDownloadStatusAsync(string Transactions, string _key, object userState) {
            if ((this.UpdateDownloadStatusOperationCompleted == null)) {
                this.UpdateDownloadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDownloadStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateDownloadStatus", new object[] {
                        Transactions,
                        _key}, this.UpdateDownloadStatusOperationCompleted, userState);
        }
        
        private void OnUpdateDownloadStatusOperationCompleted(object arg) {
            if ((this.UpdateDownloadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDownloadStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ophit.net/RetrieveSurescriptRxMessages", RequestNamespace="https://ophit.net/", ResponseNamespace="https://ophit.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RetrieveSurescriptRxMessages() {
            this.Invoke("RetrieveSurescriptRxMessages", new object[0]);
        }
        
        /// <remarks/>
        public void RetrieveSurescriptRxMessagesAsync() {
            this.RetrieveSurescriptRxMessagesAsync(null);
        }
        
        /// <remarks/>
        public void RetrieveSurescriptRxMessagesAsync(object userState) {
            if ((this.RetrieveSurescriptRxMessagesOperationCompleted == null)) {
                this.RetrieveSurescriptRxMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveSurescriptRxMessagesOperationCompleted);
            }
            this.InvokeAsync("RetrieveSurescriptRxMessages", new object[0], this.RetrieveSurescriptRxMessagesOperationCompleted, userState);
        }
        
        private void OnRetrieveSurescriptRxMessagesOperationCompleted(object arg) {
            if ((this.RetrieveSurescriptRxMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveSurescriptRxMessagesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ophit.net/DirectoryDownload", RequestNamespace="https://ophit.net/", ResponseNamespace="https://ophit.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DirectoryDownload(string eType) {
            object[] results = this.Invoke("DirectoryDownload", new object[] {
                        eType});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DirectoryDownloadAsync(string eType) {
            this.DirectoryDownloadAsync(eType, null);
        }
        
        /// <remarks/>
        public void DirectoryDownloadAsync(string eType, object userState) {
            if ((this.DirectoryDownloadOperationCompleted == null)) {
                this.DirectoryDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDirectoryDownloadOperationCompleted);
            }
            this.InvokeAsync("DirectoryDownload", new object[] {
                        eType}, this.DirectoryDownloadOperationCompleted, userState);
        }
        
        private void OnDirectoryDownloadOperationCompleted(object arg) {
            if ((this.DirectoryDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DirectoryDownloadCompleted(this, new DirectoryDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ophit.net/ConvertToBytes", RequestNamespace="https://ophit.net/", ResponseNamespace="https://ophit.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ConvertToBytes(string strDownlaod) {
            object[] results = this.Invoke("ConvertToBytes", new object[] {
                        strDownlaod});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ConvertToBytesAsync(string strDownlaod) {
            this.ConvertToBytesAsync(strDownlaod, null);
        }
        
        /// <remarks/>
        public void ConvertToBytesAsync(string strDownlaod, object userState) {
            if ((this.ConvertToBytesOperationCompleted == null)) {
                this.ConvertToBytesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertToBytesOperationCompleted);
            }
            this.InvokeAsync("ConvertToBytes", new object[] {
                        strDownlaod}, this.ConvertToBytesOperationCompleted, userState);
        }
        
        private void OnConvertToBytesOperationCompleted(object arg) {
            if ((this.ConvertToBytesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertToBytesCompleted(this, new ConvertToBytesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ophit.net/DirectoryDownloadLocal", RequestNamespace="https://ophit.net/", ResponseNamespace="https://ophit.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DirectoryDownloadLocal(string eType) {
            object[] results = this.Invoke("DirectoryDownloadLocal", new object[] {
                        eType});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DirectoryDownloadLocalAsync(string eType) {
            this.DirectoryDownloadLocalAsync(eType, null);
        }
        
        /// <remarks/>
        public void DirectoryDownloadLocalAsync(string eType, object userState) {
            if ((this.DirectoryDownloadLocalOperationCompleted == null)) {
                this.DirectoryDownloadLocalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDirectoryDownloadLocalOperationCompleted);
            }
            this.InvokeAsync("DirectoryDownloadLocal", new object[] {
                        eType}, this.DirectoryDownloadLocalOperationCompleted, userState);
        }
        
        private void OnDirectoryDownloadLocalOperationCompleted(object arg) {
            if ((this.DirectoryDownloadLocalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DirectoryDownloadLocalCompleted(this, new DirectoryDownloadLocalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PostClientRxMessageCompletedEventHandler(object sender, PostClientRxMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostClientRxMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostClientRxMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetXMLDocumentCompletedEventHandler(object sender, GetXMLDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXMLDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXMLDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetResponsesCompletedEventHandler(object sender, GetResponsesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResponsesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResponsesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDownloadStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RetrieveSurescriptRxMessagesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DirectoryDownloadCompletedEventHandler(object sender, DirectoryDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DirectoryDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DirectoryDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConvertToBytesCompletedEventHandler(object sender, ConvertToBytesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertToBytesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertToBytesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DirectoryDownloadLocalCompletedEventHandler(object sender, DirectoryDownloadLocalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DirectoryDownloadLocalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DirectoryDownloadLocalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591