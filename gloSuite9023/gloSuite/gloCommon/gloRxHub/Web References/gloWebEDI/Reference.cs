//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace gloRxHub.gloWebEDI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="gloWebEDI837Soap", Namespace="http://tempuri.org/")]
    public partial class gloWebEDI837 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetEDI837OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInsuranceEligibilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRxEligibilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback Test_GetEDI837OperationCompleted;
        
        private System.Threading.SendOrPostCallback Test_GetInsuranceEligibilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback Test_GetRxEligibilityOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public gloWebEDI837() {
            this.Url = global::gloRxHub.Properties.Settings.Default.gloRxHub_gloWebEDI_gloWebEDI837;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetEDI837CompletedEventHandler GetEDI837Completed;
        
        /// <remarks/>
        public event GetInsuranceEligibilityCompletedEventHandler GetInsuranceEligibilityCompleted;
        
        /// <remarks/>
        public event GetRxEligibilityCompletedEventHandler GetRxEligibilityCompleted;
        
        /// <remarks/>
        public event Test_GetEDI837CompletedEventHandler Test_GetEDI837Completed;
        
        /// <remarks/>
        public event Test_GetInsuranceEligibilityCompletedEventHandler Test_GetInsuranceEligibilityCompleted;
        
        /// <remarks/>
        public event Test_GetRxEligibilityCompletedEventHandler Test_GetRxEligibilityCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEDI837", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EDI GetEDI837(EDI edi) {
            object[] results = this.Invoke("GetEDI837", new object[] {
                        edi});
            return ((EDI)(results[0]));
        }
        
        /// <remarks/>
        public void GetEDI837Async(EDI edi) {
            this.GetEDI837Async(edi, null);
        }
        
        /// <remarks/>
        public void GetEDI837Async(EDI edi, object userState) {
            if ((this.GetEDI837OperationCompleted == null)) {
                this.GetEDI837OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEDI837OperationCompleted);
            }
            this.InvokeAsync("GetEDI837", new object[] {
                        edi}, this.GetEDI837OperationCompleted, userState);
        }
        
        private void OnGetEDI837OperationCompleted(object arg) {
            if ((this.GetEDI837Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEDI837Completed(this, new GetEDI837CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInsuranceEligibility", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EligibilityData GetInsuranceEligibility(EligibilityData edi) {
            object[] results = this.Invoke("GetInsuranceEligibility", new object[] {
                        edi});
            return ((EligibilityData)(results[0]));
        }
        
        /// <remarks/>
        public void GetInsuranceEligibilityAsync(EligibilityData edi) {
            this.GetInsuranceEligibilityAsync(edi, null);
        }
        
        /// <remarks/>
        public void GetInsuranceEligibilityAsync(EligibilityData edi, object userState) {
            if ((this.GetInsuranceEligibilityOperationCompleted == null)) {
                this.GetInsuranceEligibilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInsuranceEligibilityOperationCompleted);
            }
            this.InvokeAsync("GetInsuranceEligibility", new object[] {
                        edi}, this.GetInsuranceEligibilityOperationCompleted, userState);
        }
        
        private void OnGetInsuranceEligibilityOperationCompleted(object arg) {
            if ((this.GetInsuranceEligibilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInsuranceEligibilityCompleted(this, new GetInsuranceEligibilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRxEligibility", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetRxEligibility(string PatientID, string ConnectionString, out string Message) {
            object[] results = this.Invoke("GetRxEligibility", new object[] {
                        PatientID,
                        ConnectionString});
            Message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetRxEligibilityAsync(string PatientID, string ConnectionString) {
            this.GetRxEligibilityAsync(PatientID, ConnectionString, null);
        }
        
        /// <remarks/>
        public void GetRxEligibilityAsync(string PatientID, string ConnectionString, object userState) {
            if ((this.GetRxEligibilityOperationCompleted == null)) {
                this.GetRxEligibilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRxEligibilityOperationCompleted);
            }
            this.InvokeAsync("GetRxEligibility", new object[] {
                        PatientID,
                        ConnectionString}, this.GetRxEligibilityOperationCompleted, userState);
        }
        
        private void OnGetRxEligibilityOperationCompleted(object arg) {
            if ((this.GetRxEligibilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRxEligibilityCompleted(this, new GetRxEligibilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Test_GetEDI837", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Test_GetEDI837(string ConnectionString, long BatchID, string TransactionIDs, EDIType ediType, InsuranceType insuranceType) {
            object[] results = this.Invoke("Test_GetEDI837", new object[] {
                        ConnectionString,
                        BatchID,
                        TransactionIDs,
                        ediType,
                        insuranceType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Test_GetEDI837Async(string ConnectionString, long BatchID, string TransactionIDs, EDIType ediType, InsuranceType insuranceType) {
            this.Test_GetEDI837Async(ConnectionString, BatchID, TransactionIDs, ediType, insuranceType, null);
        }
        
        /// <remarks/>
        public void Test_GetEDI837Async(string ConnectionString, long BatchID, string TransactionIDs, EDIType ediType, InsuranceType insuranceType, object userState) {
            if ((this.Test_GetEDI837OperationCompleted == null)) {
                this.Test_GetEDI837OperationCompleted = new System.Threading.SendOrPostCallback(this.OnTest_GetEDI837OperationCompleted);
            }
            this.InvokeAsync("Test_GetEDI837", new object[] {
                        ConnectionString,
                        BatchID,
                        TransactionIDs,
                        ediType,
                        insuranceType}, this.Test_GetEDI837OperationCompleted, userState);
        }
        
        private void OnTest_GetEDI837OperationCompleted(object arg) {
            if ((this.Test_GetEDI837Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Test_GetEDI837Completed(this, new Test_GetEDI837CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Test_GetInsuranceEligibility", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Test_GetInsuranceEligibility(string ConnectionString, long PatientID, long InsuranceID, long ContactID, long ProviderID, string PayerID) {
            object[] results = this.Invoke("Test_GetInsuranceEligibility", new object[] {
                        ConnectionString,
                        PatientID,
                        InsuranceID,
                        ContactID,
                        ProviderID,
                        PayerID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Test_GetInsuranceEligibilityAsync(string ConnectionString, long PatientID, long InsuranceID, long ContactID, long ProviderID, string PayerID) {
            this.Test_GetInsuranceEligibilityAsync(ConnectionString, PatientID, InsuranceID, ContactID, ProviderID, PayerID, null);
        }
        
        /// <remarks/>
        public void Test_GetInsuranceEligibilityAsync(string ConnectionString, long PatientID, long InsuranceID, long ContactID, long ProviderID, string PayerID, object userState) {
            if ((this.Test_GetInsuranceEligibilityOperationCompleted == null)) {
                this.Test_GetInsuranceEligibilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTest_GetInsuranceEligibilityOperationCompleted);
            }
            this.InvokeAsync("Test_GetInsuranceEligibility", new object[] {
                        ConnectionString,
                        PatientID,
                        InsuranceID,
                        ContactID,
                        ProviderID,
                        PayerID}, this.Test_GetInsuranceEligibilityOperationCompleted, userState);
        }
        
        private void OnTest_GetInsuranceEligibilityOperationCompleted(object arg) {
            if ((this.Test_GetInsuranceEligibilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Test_GetInsuranceEligibilityCompleted(this, new Test_GetInsuranceEligibilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Test_GetRxEligibility", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Test_GetRxEligibility(string PatientID, string ConnectionString) {
            object[] results = this.Invoke("Test_GetRxEligibility", new object[] {
                        PatientID,
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Test_GetRxEligibilityAsync(string PatientID, string ConnectionString) {
            this.Test_GetRxEligibilityAsync(PatientID, ConnectionString, null);
        }
        
        /// <remarks/>
        public void Test_GetRxEligibilityAsync(string PatientID, string ConnectionString, object userState) {
            if ((this.Test_GetRxEligibilityOperationCompleted == null)) {
                this.Test_GetRxEligibilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTest_GetRxEligibilityOperationCompleted);
            }
            this.InvokeAsync("Test_GetRxEligibility", new object[] {
                        PatientID,
                        ConnectionString}, this.Test_GetRxEligibilityOperationCompleted, userState);
        }
        
        private void OnTest_GetRxEligibilityOperationCompleted(object arg) {
            if ((this.Test_GetRxEligibilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Test_GetRxEligibilityCompleted(this, new Test_GetRxEligibilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EDI {
        
        private long clinicIDField;
        
        private long userIDField;
        
        private string functionalGroupHeaderField;
        
        private string interchangeHeaderField;
        
        private string transactionSetHeaderField;
        
        private string sEFFilePathField;
        
        private long batchIDField;
        
        private string transactionIDsField;
        
        private string messageField;
        
        private bool isGenratedField;
        
        private long eDIIDField;
        
        private string eDIFileField;
        
        private EDIType eDITypeField;
        
        private InsuranceType insuranceTypeField;
        
        private string connectionStringField;
        
        /// <remarks/>
        public long ClinicID {
            get {
                return this.clinicIDField;
            }
            set {
                this.clinicIDField = value;
            }
        }
        
        /// <remarks/>
        public long UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string FunctionalGroupHeader {
            get {
                return this.functionalGroupHeaderField;
            }
            set {
                this.functionalGroupHeaderField = value;
            }
        }
        
        /// <remarks/>
        public string InterchangeHeader {
            get {
                return this.interchangeHeaderField;
            }
            set {
                this.interchangeHeaderField = value;
            }
        }
        
        /// <remarks/>
        public string TransactionSetHeader {
            get {
                return this.transactionSetHeaderField;
            }
            set {
                this.transactionSetHeaderField = value;
            }
        }
        
        /// <remarks/>
        public string SEFFilePath {
            get {
                return this.sEFFilePathField;
            }
            set {
                this.sEFFilePathField = value;
            }
        }
        
        /// <remarks/>
        public long BatchID {
            get {
                return this.batchIDField;
            }
            set {
                this.batchIDField = value;
            }
        }
        
        /// <remarks/>
        public string TransactionIDs {
            get {
                return this.transactionIDsField;
            }
            set {
                this.transactionIDsField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public bool IsGenrated {
            get {
                return this.isGenratedField;
            }
            set {
                this.isGenratedField = value;
            }
        }
        
        /// <remarks/>
        public long EDIID {
            get {
                return this.eDIIDField;
            }
            set {
                this.eDIIDField = value;
            }
        }
        
        /// <remarks/>
        public string EDIFile {
            get {
                return this.eDIFileField;
            }
            set {
                this.eDIFileField = value;
            }
        }
        
        /// <remarks/>
        public EDIType EDIType {
            get {
                return this.eDITypeField;
            }
            set {
                this.eDITypeField = value;
            }
        }
        
        /// <remarks/>
        public InsuranceType InsuranceType {
            get {
                return this.insuranceTypeField;
            }
            set {
                this.insuranceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ConnectionString {
            get {
                return this.connectionStringField;
            }
            set {
                this.connectionStringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EDIType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Professional,
        
        /// <remarks/>
        Institutional,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum InsuranceType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Primary,
        
        /// <remarks/>
        Secondary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class gloEligibilities {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class gloEligibilityResponse {
        
        private string referenceIDField;
        
        private long patientIDField;
        
        private long clinicIDField;
        
        private long subscriberDOBField;
        
        private string payerNameField;
        
        private string payerIDField;
        
        private string payerContactNameField;
        
        private string payerContactNumberField;
        
        private string receiverNameField;
        
        private string receiverIDField;
        
        private string receiverAdditionalIDField;
        
        private string subscriberNameField;
        
        private string subscriberAdditionalIDField;
        
        private string subscriberGenderField;
        
        private gloEligibilities eligibilitiesField;
        
        private string subscriberIDField;
        
        private long eligibilityDateField;
        
        private System.DateTime dtEligibilityCheckField;
        
        private bool isPayerRejectedField;
        
        private string payerRejectionReasonField;
        
        private string followUpField;
        
        private bool isReceiverRejectedField;
        
        private string receiverRejectionReasonField;
        
        private string receiverFollowUpField;
        
        private bool isSubscriberRejectedField;
        
        private string subscriberRejectionReasonField;
        
        private string subscriberFollowUpField;
        
        /// <remarks/>
        public string ReferenceID {
            get {
                return this.referenceIDField;
            }
            set {
                this.referenceIDField = value;
            }
        }
        
        /// <remarks/>
        public long PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public long ClinicID {
            get {
                return this.clinicIDField;
            }
            set {
                this.clinicIDField = value;
            }
        }
        
        /// <remarks/>
        public long SubscriberDOB {
            get {
                return this.subscriberDOBField;
            }
            set {
                this.subscriberDOBField = value;
            }
        }
        
        /// <remarks/>
        public string PayerName {
            get {
                return this.payerNameField;
            }
            set {
                this.payerNameField = value;
            }
        }
        
        /// <remarks/>
        public string PayerID {
            get {
                return this.payerIDField;
            }
            set {
                this.payerIDField = value;
            }
        }
        
        /// <remarks/>
        public string PayerContactName {
            get {
                return this.payerContactNameField;
            }
            set {
                this.payerContactNameField = value;
            }
        }
        
        /// <remarks/>
        public string PayerContactNumber {
            get {
                return this.payerContactNumberField;
            }
            set {
                this.payerContactNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ReceiverName {
            get {
                return this.receiverNameField;
            }
            set {
                this.receiverNameField = value;
            }
        }
        
        /// <remarks/>
        public string ReceiverID {
            get {
                return this.receiverIDField;
            }
            set {
                this.receiverIDField = value;
            }
        }
        
        /// <remarks/>
        public string ReceiverAdditionalID {
            get {
                return this.receiverAdditionalIDField;
            }
            set {
                this.receiverAdditionalIDField = value;
            }
        }
        
        /// <remarks/>
        public string SubscriberName {
            get {
                return this.subscriberNameField;
            }
            set {
                this.subscriberNameField = value;
            }
        }
        
        /// <remarks/>
        public string SubscriberAdditionalID {
            get {
                return this.subscriberAdditionalIDField;
            }
            set {
                this.subscriberAdditionalIDField = value;
            }
        }
        
        /// <remarks/>
        public string SubscriberGender {
            get {
                return this.subscriberGenderField;
            }
            set {
                this.subscriberGenderField = value;
            }
        }
        
        /// <remarks/>
        public gloEligibilities Eligibilities {
            get {
                return this.eligibilitiesField;
            }
            set {
                this.eligibilitiesField = value;
            }
        }
        
        /// <remarks/>
        public string SubscriberID {
            get {
                return this.subscriberIDField;
            }
            set {
                this.subscriberIDField = value;
            }
        }
        
        /// <remarks/>
        public long EligibilityDate {
            get {
                return this.eligibilityDateField;
            }
            set {
                this.eligibilityDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dtEligibilityCheck {
            get {
                return this.dtEligibilityCheckField;
            }
            set {
                this.dtEligibilityCheckField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPayerRejected {
            get {
                return this.isPayerRejectedField;
            }
            set {
                this.isPayerRejectedField = value;
            }
        }
        
        /// <remarks/>
        public string PayerRejectionReason {
            get {
                return this.payerRejectionReasonField;
            }
            set {
                this.payerRejectionReasonField = value;
            }
        }
        
        /// <remarks/>
        public string FollowUp {
            get {
                return this.followUpField;
            }
            set {
                this.followUpField = value;
            }
        }
        
        /// <remarks/>
        public bool IsReceiverRejected {
            get {
                return this.isReceiverRejectedField;
            }
            set {
                this.isReceiverRejectedField = value;
            }
        }
        
        /// <remarks/>
        public string ReceiverRejectionReason {
            get {
                return this.receiverRejectionReasonField;
            }
            set {
                this.receiverRejectionReasonField = value;
            }
        }
        
        /// <remarks/>
        public string ReceiverFollowUp {
            get {
                return this.receiverFollowUpField;
            }
            set {
                this.receiverFollowUpField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSubscriberRejected {
            get {
                return this.isSubscriberRejectedField;
            }
            set {
                this.isSubscriberRejectedField = value;
            }
        }
        
        /// <remarks/>
        public string SubscriberRejectionReason {
            get {
                return this.subscriberRejectionReasonField;
            }
            set {
                this.subscriberRejectionReasonField = value;
            }
        }
        
        /// <remarks/>
        public string SubscriberFollowUp {
            get {
                return this.subscriberFollowUpField;
            }
            set {
                this.subscriberFollowUpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EligibilityData {
        
        private long insuranceIDField;
        
        private long contactIDField;
        
        private long clinicIDField;
        
        private string payerIDField;
        
        private long patientIDField;
        
        private long providerIDField;
        
        private bool isGenratedField;
        
        private string messageField;
        
        private string eDIFileField;
        
        private string eDI270FileNameField;
        
        private string eDI271FileNameField;
        
        private string connectionStringField;
        
        private gloEligibilityResponse serviceResponseField;
        
        /// <remarks/>
        public long InsuranceID {
            get {
                return this.insuranceIDField;
            }
            set {
                this.insuranceIDField = value;
            }
        }
        
        /// <remarks/>
        public long ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public long ClinicID {
            get {
                return this.clinicIDField;
            }
            set {
                this.clinicIDField = value;
            }
        }
        
        /// <remarks/>
        public string PayerID {
            get {
                return this.payerIDField;
            }
            set {
                this.payerIDField = value;
            }
        }
        
        /// <remarks/>
        public long PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public long ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsGenrated {
            get {
                return this.isGenratedField;
            }
            set {
                this.isGenratedField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string EDIFile {
            get {
                return this.eDIFileField;
            }
            set {
                this.eDIFileField = value;
            }
        }
        
        /// <remarks/>
        public string EDI270FileName {
            get {
                return this.eDI270FileNameField;
            }
            set {
                this.eDI270FileNameField = value;
            }
        }
        
        /// <remarks/>
        public string EDI271FileName {
            get {
                return this.eDI271FileNameField;
            }
            set {
                this.eDI271FileNameField = value;
            }
        }
        
        /// <remarks/>
        public string ConnectionString {
            get {
                return this.connectionStringField;
            }
            set {
                this.connectionStringField = value;
            }
        }
        
        /// <remarks/>
        public gloEligibilityResponse ServiceResponse {
            get {
                return this.serviceResponseField;
            }
            set {
                this.serviceResponseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEDI837CompletedEventHandler(object sender, GetEDI837CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEDI837CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEDI837CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EDI Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EDI)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInsuranceEligibilityCompletedEventHandler(object sender, GetInsuranceEligibilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInsuranceEligibilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInsuranceEligibilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EligibilityData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EligibilityData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRxEligibilityCompletedEventHandler(object sender, GetRxEligibilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRxEligibilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRxEligibilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Test_GetEDI837CompletedEventHandler(object sender, Test_GetEDI837CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Test_GetEDI837CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Test_GetEDI837CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Test_GetInsuranceEligibilityCompletedEventHandler(object sender, Test_GetInsuranceEligibilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Test_GetInsuranceEligibilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Test_GetInsuranceEligibilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Test_GetRxEligibilityCompletedEventHandler(object sender, Test_GetRxEligibilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Test_GetRxEligibilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Test_GetRxEligibilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591