//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChargeRules.QCommService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/QCommunicationService")]
    [System.SerializableAttribute()]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataTable ResultTableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultString {
            get {
                return this.ResultStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultStringField, value) != true)) {
                    this.ResultStringField = value;
                    this.RaisePropertyChanged("ResultString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataTable ResultTable {
            get {
                return this.ResultTableField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultTableField, value) != true)) {
                    this.ResultTableField = value;
                    this.RaisePropertyChanged("ResultTable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QCommService.IQCommunicatorService")]
    public interface IQCommunicatorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQCommunicatorService/GetData", ReplyAction="http://tempuri.org/IQCommunicatorService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQCommunicatorService/PopulatePracticeData", ReplyAction="http://tempuri.org/IQCommunicatorService/PopulatePracticeDataResponse")]
        string PopulatePracticeData(string sRequestType, string sPracticeAUSID, string sFieldName, string sSearchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQCommunicatorService/PopulatePracticeData_DataTable", ReplyAction="http://tempuri.org/IQCommunicatorService/PopulatePracticeData_DataTableResponse")]
        ChargeRules.QCommService.Result PopulatePracticeData_DataTable(string sRequestType, string sPracticeAUSID, string sDatabaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQCommunicatorService/PopulateClaimRules", ReplyAction="http://tempuri.org/IQCommunicatorService/PopulateClaimRulesResponse")]
        string PopulateClaimRules(string RequestType, string ClaimList, string PracticeAUSID, string DatabaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQCommunicatorService/PopulateRules", ReplyAction="http://tempuri.org/IQCommunicatorService/PopulateRulesResponse")]
        string PopulateRules(string ClaimList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQCommunicatorService/PopulatePracticeDataCoreURL", ReplyAction="http://tempuri.org/IQCommunicatorService/PopulatePracticeDataCoreURLResponse")]
        string PopulatePracticeDataCoreURL(string PracticeAUSID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQCommunicatorService/GetClaimRuleData", ReplyAction="http://tempuri.org/IQCommunicatorService/GetClaimRuleDataResponse")]
        string GetClaimRuleData(long RuleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQCommunicatorService/SaveClaimRule", ReplyAction="http://tempuri.org/IQCommunicatorService/SaveClaimRuleResponse")]
        long SaveClaimRule(string RuleData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQCommunicatorService/PublishClaimRules", ReplyAction="http://tempuri.org/IQCommunicatorService/PublishClaimRulesResponse")]
        string PublishClaimRules(string sRequestType, string sPracticeAUSID, string sRulesData, System.DateTime dtExportedDate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQCommunicatorServiceChannel : ChargeRules.QCommService.IQCommunicatorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QCommunicatorServiceClient : System.ServiceModel.ClientBase<ChargeRules.QCommService.IQCommunicatorService>, ChargeRules.QCommService.IQCommunicatorService {
        
        public QCommunicatorServiceClient() {
        }
        
        public QCommunicatorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QCommunicatorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QCommunicatorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QCommunicatorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public string PopulatePracticeData(string sRequestType, string sPracticeAUSID, string sFieldName, string sSearchString) {
            return base.Channel.PopulatePracticeData(sRequestType, sPracticeAUSID, sFieldName, sSearchString);
        }
        
        public ChargeRules.QCommService.Result PopulatePracticeData_DataTable(string sRequestType, string sPracticeAUSID, string sDatabaseName) {
            return base.Channel.PopulatePracticeData_DataTable(sRequestType, sPracticeAUSID, sDatabaseName);
        }
        
        public string PopulateClaimRules(string RequestType, string ClaimList, string PracticeAUSID, string DatabaseName) {
            return base.Channel.PopulateClaimRules(RequestType, ClaimList, PracticeAUSID, DatabaseName);
        }
        
        public string PopulateRules(string ClaimList) {
            return base.Channel.PopulateRules(ClaimList);
        }
        
        public string PopulatePracticeDataCoreURL(string PracticeAUSID) {
            return base.Channel.PopulatePracticeDataCoreURL(PracticeAUSID);
        }
        
        public string GetClaimRuleData(long RuleID) {
            return base.Channel.GetClaimRuleData(RuleID);
        }
        
        public long SaveClaimRule(string RuleData) {
            return base.Channel.SaveClaimRule(RuleData);
        }
        
        public string PublishClaimRules(string sRequestType, string sPracticeAUSID, string sRulesData, System.DateTime dtExportedDate) {
            return base.Channel.PublishClaimRules(sRequestType, sPracticeAUSID, sRulesData, dtExportedDate);
        }
    }
}
