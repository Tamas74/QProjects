//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace gloPatient.wsElig270 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsElig270Soap", Namespace="https://claims.realmed.com")]
    public partial class wsElig270 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ProcessEligibilityOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsElig270() {
            this.Url = global::gloPatient.Properties.Settings.Default.gloPatient_wsElig270_wsElig270;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ProcessEligibilityCompletedEventHandler ProcessEligibilityCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://claims.realmed.com/ProcessEligibility", RequestNamespace="https://claims.realmed.com", ResponseNamespace="https://claims.realmed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseHeader ProcessEligibility(RequestHeader request) {
            object[] results = this.Invoke("ProcessEligibility", new object[] {
                        request});
            return ((ResponseHeader)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessEligibilityAsync(RequestHeader request) {
            this.ProcessEligibilityAsync(request, null);
        }
        
        /// <remarks/>
        public void ProcessEligibilityAsync(RequestHeader request, object userState) {
            if ((this.ProcessEligibilityOperationCompleted == null)) {
                this.ProcessEligibilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessEligibilityOperationCompleted);
            }
            this.InvokeAsync("ProcessEligibility", new object[] {
                        request}, this.ProcessEligibilityOperationCompleted, userState);
        }
        
        private void OnProcessEligibilityOperationCompleted(object arg) {
            if ((this.ProcessEligibilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessEligibilityCompleted(this, new ProcessEligibilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://claims.realmed.com")]
    public partial class RequestHeader {
        
        private string submitterIDField;
        
        private string userNameField;
        
        private string passwordField;
        
        private string ansiRequestField;
        
        private string externalPayerIDField;
        
        private string userDefined1Field;
        
        private string userDefined2Field;
        
        private string timeStampField;
        
        /// <remarks/>
        public string SubmitterID {
            get {
                return this.submitterIDField;
            }
            set {
                this.submitterIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string AnsiRequest {
            get {
                return this.ansiRequestField;
            }
            set {
                this.ansiRequestField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPayerID {
            get {
                return this.externalPayerIDField;
            }
            set {
                this.externalPayerIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserDefined1 {
            get {
                return this.userDefined1Field;
            }
            set {
                this.userDefined1Field = value;
            }
        }
        
        /// <remarks/>
        public string UserDefined2 {
            get {
                return this.userDefined2Field;
            }
            set {
                this.userDefined2Field = value;
            }
        }
        
        /// <remarks/>
        public string TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://claims.realmed.com")]
    public partial class ResponseHeader {
        
        private string userDefined1Field;
        
        private string userDefined2Field;
        
        private string timeStampField;
        
        private string ansiResponseField;
        
        /// <remarks/>
        public string UserDefined1 {
            get {
                return this.userDefined1Field;
            }
            set {
                this.userDefined1Field = value;
            }
        }
        
        /// <remarks/>
        public string UserDefined2 {
            get {
                return this.userDefined2Field;
            }
            set {
                this.userDefined2Field = value;
            }
        }
        
        /// <remarks/>
        public string TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        public string AnsiResponse {
            get {
                return this.ansiResponseField;
            }
            set {
                this.ansiResponseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProcessEligibilityCompletedEventHandler(object sender, ProcessEligibilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessEligibilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessEligibilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseHeader Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseHeader)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591