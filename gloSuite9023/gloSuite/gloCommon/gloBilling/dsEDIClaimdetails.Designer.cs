//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace gloBilling {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsEDIClaimdetails")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsEDIClaimdetails : global::System.Data.DataSet {
        
        private BL_Transaction_ClaimMgr_MSTDataTable tableBL_Transaction_ClaimMgr_MST;
        
        private BL_CMSEDI_ElectronicClaimDataTable tableBL_CMSEDI_ElectronicClaim;
        
        private BL_CMSEDI_ElectronicClaim_DTLDataTable tableBL_CMSEDI_ElectronicClaim_DTL;
        
        private BL_TransactionIDsDataTable tableBL_TransactionIDs;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsEDIClaimdetails() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsEDIClaimdetails(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BL_Transaction_ClaimMgr_MST"] != null)) {
                    base.Tables.Add(new BL_Transaction_ClaimMgr_MSTDataTable(ds.Tables["BL_Transaction_ClaimMgr_MST"]));
                }
                if ((ds.Tables["BL_CMSEDI_ElectronicClaim"] != null)) {
                    base.Tables.Add(new BL_CMSEDI_ElectronicClaimDataTable(ds.Tables["BL_CMSEDI_ElectronicClaim"]));
                }
                if ((ds.Tables["BL_CMSEDI_ElectronicClaim_DTL"] != null)) {
                    base.Tables.Add(new BL_CMSEDI_ElectronicClaim_DTLDataTable(ds.Tables["BL_CMSEDI_ElectronicClaim_DTL"]));
                }
                if ((ds.Tables["BL_TransactionIDs"] != null)) {
                    base.Tables.Add(new BL_TransactionIDsDataTable(ds.Tables["BL_TransactionIDs"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BL_Transaction_ClaimMgr_MSTDataTable BL_Transaction_ClaimMgr_MST {
            get {
                return this.tableBL_Transaction_ClaimMgr_MST;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BL_CMSEDI_ElectronicClaimDataTable BL_CMSEDI_ElectronicClaim {
            get {
                return this.tableBL_CMSEDI_ElectronicClaim;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BL_CMSEDI_ElectronicClaim_DTLDataTable BL_CMSEDI_ElectronicClaim_DTL {
            get {
                return this.tableBL_CMSEDI_ElectronicClaim_DTL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BL_TransactionIDsDataTable BL_TransactionIDs {
            get {
                return this.tableBL_TransactionIDs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsEDIClaimdetails cln = ((dsEDIClaimdetails)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BL_Transaction_ClaimMgr_MST"] != null)) {
                    base.Tables.Add(new BL_Transaction_ClaimMgr_MSTDataTable(ds.Tables["BL_Transaction_ClaimMgr_MST"]));
                }
                if ((ds.Tables["BL_CMSEDI_ElectronicClaim"] != null)) {
                    base.Tables.Add(new BL_CMSEDI_ElectronicClaimDataTable(ds.Tables["BL_CMSEDI_ElectronicClaim"]));
                }
                if ((ds.Tables["BL_CMSEDI_ElectronicClaim_DTL"] != null)) {
                    base.Tables.Add(new BL_CMSEDI_ElectronicClaim_DTLDataTable(ds.Tables["BL_CMSEDI_ElectronicClaim_DTL"]));
                }
                if ((ds.Tables["BL_TransactionIDs"] != null)) {
                    base.Tables.Add(new BL_TransactionIDsDataTable(ds.Tables["BL_TransactionIDs"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableBL_Transaction_ClaimMgr_MST = ((BL_Transaction_ClaimMgr_MSTDataTable)(base.Tables["BL_Transaction_ClaimMgr_MST"]));
            if ((initTable == true)) {
                if ((this.tableBL_Transaction_ClaimMgr_MST != null)) {
                    this.tableBL_Transaction_ClaimMgr_MST.InitVars();
                }
            }
            this.tableBL_CMSEDI_ElectronicClaim = ((BL_CMSEDI_ElectronicClaimDataTable)(base.Tables["BL_CMSEDI_ElectronicClaim"]));
            if ((initTable == true)) {
                if ((this.tableBL_CMSEDI_ElectronicClaim != null)) {
                    this.tableBL_CMSEDI_ElectronicClaim.InitVars();
                }
            }
            this.tableBL_CMSEDI_ElectronicClaim_DTL = ((BL_CMSEDI_ElectronicClaim_DTLDataTable)(base.Tables["BL_CMSEDI_ElectronicClaim_DTL"]));
            if ((initTable == true)) {
                if ((this.tableBL_CMSEDI_ElectronicClaim_DTL != null)) {
                    this.tableBL_CMSEDI_ElectronicClaim_DTL.InitVars();
                }
            }
            this.tableBL_TransactionIDs = ((BL_TransactionIDsDataTable)(base.Tables["BL_TransactionIDs"]));
            if ((initTable == true)) {
                if ((this.tableBL_TransactionIDs != null)) {
                    this.tableBL_TransactionIDs.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsEDIClaimdetails";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsEDIClaimdetails.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBL_Transaction_ClaimMgr_MST = new BL_Transaction_ClaimMgr_MSTDataTable();
            base.Tables.Add(this.tableBL_Transaction_ClaimMgr_MST);
            this.tableBL_CMSEDI_ElectronicClaim = new BL_CMSEDI_ElectronicClaimDataTable();
            base.Tables.Add(this.tableBL_CMSEDI_ElectronicClaim);
            this.tableBL_CMSEDI_ElectronicClaim_DTL = new BL_CMSEDI_ElectronicClaim_DTLDataTable();
            base.Tables.Add(this.tableBL_CMSEDI_ElectronicClaim_DTL);
            this.tableBL_TransactionIDs = new BL_TransactionIDsDataTable();
            base.Tables.Add(this.tableBL_TransactionIDs);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBL_Transaction_ClaimMgr_MST() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBL_CMSEDI_ElectronicClaim() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBL_CMSEDI_ElectronicClaim_DTL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBL_TransactionIDs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsEDIClaimdetails ds = new dsEDIClaimdetails();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BL_Transaction_ClaimMgr_MSTRowChangeEventHandler(object sender, BL_Transaction_ClaimMgr_MSTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BL_CMSEDI_ElectronicClaimRowChangeEventHandler(object sender, BL_CMSEDI_ElectronicClaimRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BL_CMSEDI_ElectronicClaim_DTLRowChangeEventHandler(object sender, BL_CMSEDI_ElectronicClaim_DTLRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BL_TransactionIDsRowChangeEventHandler(object sender, BL_TransactionIDsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BL_Transaction_ClaimMgr_MSTDataTable : global::System.Data.TypedTableBase<BL_Transaction_ClaimMgr_MSTRow> {
            
            private global::System.Data.DataColumn columnnBatchID;
            
            private global::System.Data.DataColumn columnnTransactionId;
            
            private global::System.Data.DataColumn columnnClaimNumber;
            
            private global::System.Data.DataColumn columnnPatientId;
            
            private global::System.Data.DataColumn columnnClearingHouseId;
            
            private global::System.Data.DataColumn columnsInterchangeNumber;
            
            private global::System.Data.DataColumn columnsTransationSetNumber;
            
            private global::System.Data.DataColumn columnsFunctionalGroupNumber;
            
            private global::System.Data.DataColumn columnnDate;
            
            private global::System.Data.DataColumn columnnTime;
            
            private global::System.Data.DataColumn columnnUserId;
            
            private global::System.Data.DataColumn columnnClaimType;
            
            private global::System.Data.DataColumn columnnClinicId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_Transaction_ClaimMgr_MSTDataTable() {
                this.TableName = "BL_Transaction_ClaimMgr_MST";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BL_Transaction_ClaimMgr_MSTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BL_Transaction_ClaimMgr_MSTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nBatchIDColumn {
                get {
                    return this.columnnBatchID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nTransactionIdColumn {
                get {
                    return this.columnnTransactionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nClaimNumberColumn {
                get {
                    return this.columnnClaimNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nPatientIdColumn {
                get {
                    return this.columnnPatientId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nClearingHouseIdColumn {
                get {
                    return this.columnnClearingHouseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sInterchangeNumberColumn {
                get {
                    return this.columnsInterchangeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sTransationSetNumberColumn {
                get {
                    return this.columnsTransationSetNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sFunctionalGroupNumberColumn {
                get {
                    return this.columnsFunctionalGroupNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nDateColumn {
                get {
                    return this.columnnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nTimeColumn {
                get {
                    return this.columnnTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nUserIdColumn {
                get {
                    return this.columnnUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nClaimTypeColumn {
                get {
                    return this.columnnClaimType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nClinicIdColumn {
                get {
                    return this.columnnClinicId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_Transaction_ClaimMgr_MSTRow this[int index] {
                get {
                    return ((BL_Transaction_ClaimMgr_MSTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BL_Transaction_ClaimMgr_MSTRowChangeEventHandler BL_Transaction_ClaimMgr_MSTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BL_Transaction_ClaimMgr_MSTRowChangeEventHandler BL_Transaction_ClaimMgr_MSTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BL_Transaction_ClaimMgr_MSTRowChangeEventHandler BL_Transaction_ClaimMgr_MSTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BL_Transaction_ClaimMgr_MSTRowChangeEventHandler BL_Transaction_ClaimMgr_MSTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBL_Transaction_ClaimMgr_MSTRow(BL_Transaction_ClaimMgr_MSTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_Transaction_ClaimMgr_MSTRow AddBL_Transaction_ClaimMgr_MSTRow(long nBatchID, long nTransactionId, long nClaimNumber, long nPatientId, long nClearingHouseId, string sInterchangeNumber, string sTransationSetNumber, string sFunctionalGroupNumber, int nDate, string nTime, string nUserId, int nClaimType, long nClinicId) {
                BL_Transaction_ClaimMgr_MSTRow rowBL_Transaction_ClaimMgr_MSTRow = ((BL_Transaction_ClaimMgr_MSTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nBatchID,
                        nTransactionId,
                        nClaimNumber,
                        nPatientId,
                        nClearingHouseId,
                        sInterchangeNumber,
                        sTransationSetNumber,
                        sFunctionalGroupNumber,
                        nDate,
                        nTime,
                        nUserId,
                        nClaimType,
                        nClinicId};
                rowBL_Transaction_ClaimMgr_MSTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBL_Transaction_ClaimMgr_MSTRow);
                return rowBL_Transaction_ClaimMgr_MSTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BL_Transaction_ClaimMgr_MSTDataTable cln = ((BL_Transaction_ClaimMgr_MSTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BL_Transaction_ClaimMgr_MSTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnnBatchID = base.Columns["nBatchID"];
                this.columnnTransactionId = base.Columns["nTransactionId"];
                this.columnnClaimNumber = base.Columns["nClaimNumber"];
                this.columnnPatientId = base.Columns["nPatientId"];
                this.columnnClearingHouseId = base.Columns["nClearingHouseId"];
                this.columnsInterchangeNumber = base.Columns["sInterchangeNumber"];
                this.columnsTransationSetNumber = base.Columns["sTransationSetNumber"];
                this.columnsFunctionalGroupNumber = base.Columns["sFunctionalGroupNumber"];
                this.columnnDate = base.Columns["nDate"];
                this.columnnTime = base.Columns["nTime"];
                this.columnnUserId = base.Columns["nUserId"];
                this.columnnClaimType = base.Columns["nClaimType"];
                this.columnnClinicId = base.Columns["nClinicId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnnBatchID = new global::System.Data.DataColumn("nBatchID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnBatchID);
                this.columnnTransactionId = new global::System.Data.DataColumn("nTransactionId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTransactionId);
                this.columnnClaimNumber = new global::System.Data.DataColumn("nClaimNumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnClaimNumber);
                this.columnnPatientId = new global::System.Data.DataColumn("nPatientId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnPatientId);
                this.columnnClearingHouseId = new global::System.Data.DataColumn("nClearingHouseId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnClearingHouseId);
                this.columnsInterchangeNumber = new global::System.Data.DataColumn("sInterchangeNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsInterchangeNumber);
                this.columnsTransationSetNumber = new global::System.Data.DataColumn("sTransationSetNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsTransationSetNumber);
                this.columnsFunctionalGroupNumber = new global::System.Data.DataColumn("sFunctionalGroupNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsFunctionalGroupNumber);
                this.columnnDate = new global::System.Data.DataColumn("nDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnDate);
                this.columnnTime = new global::System.Data.DataColumn("nTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTime);
                this.columnnUserId = new global::System.Data.DataColumn("nUserId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnUserId);
                this.columnnClaimType = new global::System.Data.DataColumn("nClaimType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnClaimType);
                this.columnnClinicId = new global::System.Data.DataColumn("nClinicId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnClinicId);
                this.columnnBatchID.Caption = "nBatchId";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_Transaction_ClaimMgr_MSTRow NewBL_Transaction_ClaimMgr_MSTRow() {
                return ((BL_Transaction_ClaimMgr_MSTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BL_Transaction_ClaimMgr_MSTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BL_Transaction_ClaimMgr_MSTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BL_Transaction_ClaimMgr_MSTRowChanged != null)) {
                    this.BL_Transaction_ClaimMgr_MSTRowChanged(this, new BL_Transaction_ClaimMgr_MSTRowChangeEvent(((BL_Transaction_ClaimMgr_MSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BL_Transaction_ClaimMgr_MSTRowChanging != null)) {
                    this.BL_Transaction_ClaimMgr_MSTRowChanging(this, new BL_Transaction_ClaimMgr_MSTRowChangeEvent(((BL_Transaction_ClaimMgr_MSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BL_Transaction_ClaimMgr_MSTRowDeleted != null)) {
                    this.BL_Transaction_ClaimMgr_MSTRowDeleted(this, new BL_Transaction_ClaimMgr_MSTRowChangeEvent(((BL_Transaction_ClaimMgr_MSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BL_Transaction_ClaimMgr_MSTRowDeleting != null)) {
                    this.BL_Transaction_ClaimMgr_MSTRowDeleting(this, new BL_Transaction_ClaimMgr_MSTRowChangeEvent(((BL_Transaction_ClaimMgr_MSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBL_Transaction_ClaimMgr_MSTRow(BL_Transaction_ClaimMgr_MSTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEDIClaimdetails ds = new dsEDIClaimdetails();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BL_Transaction_ClaimMgr_MSTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BL_CMSEDI_ElectronicClaimDataTable : global::System.Data.TypedTableBase<BL_CMSEDI_ElectronicClaimRow> {
            
            private global::System.Data.DataColumn columnnBatchID;
            
            private global::System.Data.DataColumn columnsBatchName;
            
            private global::System.Data.DataColumn columni837File;
            
            private global::System.Data.DataColumn columnnStatus;
            
            private global::System.Data.DataColumn columnnUserID;
            
            private global::System.Data.DataColumn columnnClinicID;
            
            private global::System.Data.DataColumn columnBillingType;
            
            private global::System.Data.DataColumn columnnSendUserID;
            
            private global::System.Data.DataColumn columnsSendUserName;
            
            private global::System.Data.DataColumn columnnBatchBillingMethod;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_CMSEDI_ElectronicClaimDataTable() {
                this.TableName = "BL_CMSEDI_ElectronicClaim";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BL_CMSEDI_ElectronicClaimDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BL_CMSEDI_ElectronicClaimDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nBatchIDColumn {
                get {
                    return this.columnnBatchID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sBatchNameColumn {
                get {
                    return this.columnsBatchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn i837FileColumn {
                get {
                    return this.columni837File;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nStatusColumn {
                get {
                    return this.columnnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nUserIDColumn {
                get {
                    return this.columnnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nClinicIDColumn {
                get {
                    return this.columnnClinicID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BillingTypeColumn {
                get {
                    return this.columnBillingType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nSendUserIDColumn {
                get {
                    return this.columnnSendUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sSendUserNameColumn {
                get {
                    return this.columnsSendUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nBatchBillingMethodColumn {
                get {
                    return this.columnnBatchBillingMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_CMSEDI_ElectronicClaimRow this[int index] {
                get {
                    return ((BL_CMSEDI_ElectronicClaimRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BL_CMSEDI_ElectronicClaimRowChangeEventHandler BL_CMSEDI_ElectronicClaimRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BL_CMSEDI_ElectronicClaimRowChangeEventHandler BL_CMSEDI_ElectronicClaimRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BL_CMSEDI_ElectronicClaimRowChangeEventHandler BL_CMSEDI_ElectronicClaimRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BL_CMSEDI_ElectronicClaimRowChangeEventHandler BL_CMSEDI_ElectronicClaimRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBL_CMSEDI_ElectronicClaimRow(BL_CMSEDI_ElectronicClaimRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_CMSEDI_ElectronicClaimRow AddBL_CMSEDI_ElectronicClaimRow(long nBatchID, string sBatchName, byte[] i837File, int nStatus, long nUserID, long nClinicID, short BillingType, long nSendUserID, string sSendUserName, int nBatchBillingMethod) {
                BL_CMSEDI_ElectronicClaimRow rowBL_CMSEDI_ElectronicClaimRow = ((BL_CMSEDI_ElectronicClaimRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nBatchID,
                        sBatchName,
                        i837File,
                        nStatus,
                        nUserID,
                        nClinicID,
                        BillingType,
                        nSendUserID,
                        sSendUserName,
                        nBatchBillingMethod};
                rowBL_CMSEDI_ElectronicClaimRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBL_CMSEDI_ElectronicClaimRow);
                return rowBL_CMSEDI_ElectronicClaimRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BL_CMSEDI_ElectronicClaimDataTable cln = ((BL_CMSEDI_ElectronicClaimDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BL_CMSEDI_ElectronicClaimDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnnBatchID = base.Columns["nBatchID"];
                this.columnsBatchName = base.Columns["sBatchName"];
                this.columni837File = base.Columns["i837File"];
                this.columnnStatus = base.Columns["nStatus"];
                this.columnnUserID = base.Columns["nUserID"];
                this.columnnClinicID = base.Columns["nClinicID"];
                this.columnBillingType = base.Columns["BillingType"];
                this.columnnSendUserID = base.Columns["nSendUserID"];
                this.columnsSendUserName = base.Columns["sSendUserName"];
                this.columnnBatchBillingMethod = base.Columns["nBatchBillingMethod"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnnBatchID = new global::System.Data.DataColumn("nBatchID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnBatchID);
                this.columnsBatchName = new global::System.Data.DataColumn("sBatchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsBatchName);
                this.columni837File = new global::System.Data.DataColumn("i837File", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columni837File);
                this.columnnStatus = new global::System.Data.DataColumn("nStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnStatus);
                this.columnnUserID = new global::System.Data.DataColumn("nUserID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnUserID);
                this.columnnClinicID = new global::System.Data.DataColumn("nClinicID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnClinicID);
                this.columnBillingType = new global::System.Data.DataColumn("BillingType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillingType);
                this.columnnSendUserID = new global::System.Data.DataColumn("nSendUserID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnSendUserID);
                this.columnsSendUserName = new global::System.Data.DataColumn("sSendUserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsSendUserName);
                this.columnnBatchBillingMethod = new global::System.Data.DataColumn("nBatchBillingMethod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnBatchBillingMethod);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_CMSEDI_ElectronicClaimRow NewBL_CMSEDI_ElectronicClaimRow() {
                return ((BL_CMSEDI_ElectronicClaimRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BL_CMSEDI_ElectronicClaimRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BL_CMSEDI_ElectronicClaimRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BL_CMSEDI_ElectronicClaimRowChanged != null)) {
                    this.BL_CMSEDI_ElectronicClaimRowChanged(this, new BL_CMSEDI_ElectronicClaimRowChangeEvent(((BL_CMSEDI_ElectronicClaimRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BL_CMSEDI_ElectronicClaimRowChanging != null)) {
                    this.BL_CMSEDI_ElectronicClaimRowChanging(this, new BL_CMSEDI_ElectronicClaimRowChangeEvent(((BL_CMSEDI_ElectronicClaimRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BL_CMSEDI_ElectronicClaimRowDeleted != null)) {
                    this.BL_CMSEDI_ElectronicClaimRowDeleted(this, new BL_CMSEDI_ElectronicClaimRowChangeEvent(((BL_CMSEDI_ElectronicClaimRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BL_CMSEDI_ElectronicClaimRowDeleting != null)) {
                    this.BL_CMSEDI_ElectronicClaimRowDeleting(this, new BL_CMSEDI_ElectronicClaimRowChangeEvent(((BL_CMSEDI_ElectronicClaimRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBL_CMSEDI_ElectronicClaimRow(BL_CMSEDI_ElectronicClaimRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEDIClaimdetails ds = new dsEDIClaimdetails();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BL_CMSEDI_ElectronicClaimDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BL_CMSEDI_ElectronicClaim_DTLDataTable : global::System.Data.TypedTableBase<BL_CMSEDI_ElectronicClaim_DTLRow> {
            
            private global::System.Data.DataColumn columnnDetailID;
            
            private global::System.Data.DataColumn columnnClaimNo;
            
            private global::System.Data.DataColumn columnsSubClaimNumber;
            
            private global::System.Data.DataColumn columnnBillingTransactionID;
            
            private global::System.Data.DataColumn columnnClinicID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_CMSEDI_ElectronicClaim_DTLDataTable() {
                this.TableName = "BL_CMSEDI_ElectronicClaim_DTL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BL_CMSEDI_ElectronicClaim_DTLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BL_CMSEDI_ElectronicClaim_DTLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nDetailIDColumn {
                get {
                    return this.columnnDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nClaimNoColumn {
                get {
                    return this.columnnClaimNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sSubClaimNumberColumn {
                get {
                    return this.columnsSubClaimNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nBillingTransactionIDColumn {
                get {
                    return this.columnnBillingTransactionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nClinicIDColumn {
                get {
                    return this.columnnClinicID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_CMSEDI_ElectronicClaim_DTLRow this[int index] {
                get {
                    return ((BL_CMSEDI_ElectronicClaim_DTLRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BL_CMSEDI_ElectronicClaim_DTLRowChangeEventHandler BL_CMSEDI_ElectronicClaim_DTLRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BL_CMSEDI_ElectronicClaim_DTLRowChangeEventHandler BL_CMSEDI_ElectronicClaim_DTLRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BL_CMSEDI_ElectronicClaim_DTLRowChangeEventHandler BL_CMSEDI_ElectronicClaim_DTLRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BL_CMSEDI_ElectronicClaim_DTLRowChangeEventHandler BL_CMSEDI_ElectronicClaim_DTLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBL_CMSEDI_ElectronicClaim_DTLRow(BL_CMSEDI_ElectronicClaim_DTLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_CMSEDI_ElectronicClaim_DTLRow AddBL_CMSEDI_ElectronicClaim_DTLRow(long nDetailID, long nClaimNo, string sSubClaimNumber, long nBillingTransactionID, long nClinicID) {
                BL_CMSEDI_ElectronicClaim_DTLRow rowBL_CMSEDI_ElectronicClaim_DTLRow = ((BL_CMSEDI_ElectronicClaim_DTLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nDetailID,
                        nClaimNo,
                        sSubClaimNumber,
                        nBillingTransactionID,
                        nClinicID};
                rowBL_CMSEDI_ElectronicClaim_DTLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBL_CMSEDI_ElectronicClaim_DTLRow);
                return rowBL_CMSEDI_ElectronicClaim_DTLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BL_CMSEDI_ElectronicClaim_DTLDataTable cln = ((BL_CMSEDI_ElectronicClaim_DTLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BL_CMSEDI_ElectronicClaim_DTLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnnDetailID = base.Columns["nDetailID"];
                this.columnnClaimNo = base.Columns["nClaimNo"];
                this.columnsSubClaimNumber = base.Columns["sSubClaimNumber"];
                this.columnnBillingTransactionID = base.Columns["nBillingTransactionID"];
                this.columnnClinicID = base.Columns["nClinicID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnnDetailID = new global::System.Data.DataColumn("nDetailID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnDetailID);
                this.columnnClaimNo = new global::System.Data.DataColumn("nClaimNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnClaimNo);
                this.columnsSubClaimNumber = new global::System.Data.DataColumn("sSubClaimNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsSubClaimNumber);
                this.columnnBillingTransactionID = new global::System.Data.DataColumn("nBillingTransactionID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnBillingTransactionID);
                this.columnnClinicID = new global::System.Data.DataColumn("nClinicID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnClinicID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_CMSEDI_ElectronicClaim_DTLRow NewBL_CMSEDI_ElectronicClaim_DTLRow() {
                return ((BL_CMSEDI_ElectronicClaim_DTLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BL_CMSEDI_ElectronicClaim_DTLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BL_CMSEDI_ElectronicClaim_DTLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BL_CMSEDI_ElectronicClaim_DTLRowChanged != null)) {
                    this.BL_CMSEDI_ElectronicClaim_DTLRowChanged(this, new BL_CMSEDI_ElectronicClaim_DTLRowChangeEvent(((BL_CMSEDI_ElectronicClaim_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BL_CMSEDI_ElectronicClaim_DTLRowChanging != null)) {
                    this.BL_CMSEDI_ElectronicClaim_DTLRowChanging(this, new BL_CMSEDI_ElectronicClaim_DTLRowChangeEvent(((BL_CMSEDI_ElectronicClaim_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BL_CMSEDI_ElectronicClaim_DTLRowDeleted != null)) {
                    this.BL_CMSEDI_ElectronicClaim_DTLRowDeleted(this, new BL_CMSEDI_ElectronicClaim_DTLRowChangeEvent(((BL_CMSEDI_ElectronicClaim_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BL_CMSEDI_ElectronicClaim_DTLRowDeleting != null)) {
                    this.BL_CMSEDI_ElectronicClaim_DTLRowDeleting(this, new BL_CMSEDI_ElectronicClaim_DTLRowChangeEvent(((BL_CMSEDI_ElectronicClaim_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBL_CMSEDI_ElectronicClaim_DTLRow(BL_CMSEDI_ElectronicClaim_DTLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEDIClaimdetails ds = new dsEDIClaimdetails();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BL_CMSEDI_ElectronicClaim_DTLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BL_TransactionIDsDataTable : global::System.Data.TypedTableBase<BL_TransactionIDsRow> {
            
            private global::System.Data.DataColumn columnnTransactionID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_TransactionIDsDataTable() {
                this.TableName = "BL_TransactionIDs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BL_TransactionIDsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BL_TransactionIDsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nTransactionIDColumn {
                get {
                    return this.columnnTransactionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_TransactionIDsRow this[int index] {
                get {
                    return ((BL_TransactionIDsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BL_TransactionIDsRowChangeEventHandler BL_TransactionIDsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BL_TransactionIDsRowChangeEventHandler BL_TransactionIDsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BL_TransactionIDsRowChangeEventHandler BL_TransactionIDsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BL_TransactionIDsRowChangeEventHandler BL_TransactionIDsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBL_TransactionIDsRow(BL_TransactionIDsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_TransactionIDsRow AddBL_TransactionIDsRow(long nTransactionID) {
                BL_TransactionIDsRow rowBL_TransactionIDsRow = ((BL_TransactionIDsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nTransactionID};
                rowBL_TransactionIDsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBL_TransactionIDsRow);
                return rowBL_TransactionIDsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BL_TransactionIDsDataTable cln = ((BL_TransactionIDsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BL_TransactionIDsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnnTransactionID = base.Columns["nTransactionID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnnTransactionID = new global::System.Data.DataColumn("nTransactionID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTransactionID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_TransactionIDsRow NewBL_TransactionIDsRow() {
                return ((BL_TransactionIDsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BL_TransactionIDsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BL_TransactionIDsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BL_TransactionIDsRowChanged != null)) {
                    this.BL_TransactionIDsRowChanged(this, new BL_TransactionIDsRowChangeEvent(((BL_TransactionIDsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BL_TransactionIDsRowChanging != null)) {
                    this.BL_TransactionIDsRowChanging(this, new BL_TransactionIDsRowChangeEvent(((BL_TransactionIDsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BL_TransactionIDsRowDeleted != null)) {
                    this.BL_TransactionIDsRowDeleted(this, new BL_TransactionIDsRowChangeEvent(((BL_TransactionIDsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BL_TransactionIDsRowDeleting != null)) {
                    this.BL_TransactionIDsRowDeleting(this, new BL_TransactionIDsRowChangeEvent(((BL_TransactionIDsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBL_TransactionIDsRow(BL_TransactionIDsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEDIClaimdetails ds = new dsEDIClaimdetails();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BL_TransactionIDsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BL_Transaction_ClaimMgr_MSTRow : global::System.Data.DataRow {
            
            private BL_Transaction_ClaimMgr_MSTDataTable tableBL_Transaction_ClaimMgr_MST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BL_Transaction_ClaimMgr_MSTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBL_Transaction_ClaimMgr_MST = ((BL_Transaction_ClaimMgr_MSTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nBatchID {
                get {
                    try {
                        return ((long)(this[this.tableBL_Transaction_ClaimMgr_MST.nBatchIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nBatchID\' in table \'BL_Transaction_ClaimMgr_MST\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBL_Transaction_ClaimMgr_MST.nBatchIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nTransactionId {
                get {
                    try {
                        return ((long)(this[this.tableBL_Transaction_ClaimMgr_MST.nTransactionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTransactionId\' in table \'BL_Transaction_ClaimMgr_MST\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableBL_Transaction_ClaimMgr_MST.nTransactionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nClaimNumber {
                get {
                    try {
                        return ((long)(this[this.tableBL_Transaction_ClaimMgr_MST.nClaimNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nClaimNumber\' in table \'BL_Transaction_ClaimMgr_MST\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBL_Transaction_ClaimMgr_MST.nClaimNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nPatientId {
                get {
                    try {
                        return ((long)(this[this.tableBL_Transaction_ClaimMgr_MST.nPatientIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nPatientId\' in table \'BL_Transaction_ClaimMgr_MST\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableBL_Transaction_ClaimMgr_MST.nPatientIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nClearingHouseId {
                get {
                    try {
                        return ((long)(this[this.tableBL_Transaction_ClaimMgr_MST.nClearingHouseIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nClearingHouseId\' in table \'BL_Transaction_ClaimMgr_MST\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableBL_Transaction_ClaimMgr_MST.nClearingHouseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sInterchangeNumber {
                get {
                    try {
                        return ((string)(this[this.tableBL_Transaction_ClaimMgr_MST.sInterchangeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sInterchangeNumber\' in table \'BL_Transaction_ClaimMgr_MST\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBL_Transaction_ClaimMgr_MST.sInterchangeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sTransationSetNumber {
                get {
                    try {
                        return ((string)(this[this.tableBL_Transaction_ClaimMgr_MST.sTransationSetNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sTransationSetNumber\' in table \'BL_Transaction_ClaimMgr_MST" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBL_Transaction_ClaimMgr_MST.sTransationSetNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sFunctionalGroupNumber {
                get {
                    try {
                        return ((string)(this[this.tableBL_Transaction_ClaimMgr_MST.sFunctionalGroupNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sFunctionalGroupNumber\' in table \'BL_Transaction_ClaimMgr_M" +
                                "ST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBL_Transaction_ClaimMgr_MST.sFunctionalGroupNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int nDate {
                get {
                    try {
                        return ((int)(this[this.tableBL_Transaction_ClaimMgr_MST.nDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nDate\' in table \'BL_Transaction_ClaimMgr_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBL_Transaction_ClaimMgr_MST.nDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string nTime {
                get {
                    try {
                        return ((string)(this[this.tableBL_Transaction_ClaimMgr_MST.nTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTime\' in table \'BL_Transaction_ClaimMgr_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBL_Transaction_ClaimMgr_MST.nTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string nUserId {
                get {
                    try {
                        return ((string)(this[this.tableBL_Transaction_ClaimMgr_MST.nUserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nUserId\' in table \'BL_Transaction_ClaimMgr_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBL_Transaction_ClaimMgr_MST.nUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int nClaimType {
                get {
                    try {
                        return ((int)(this[this.tableBL_Transaction_ClaimMgr_MST.nClaimTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nClaimType\' in table \'BL_Transaction_ClaimMgr_MST\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableBL_Transaction_ClaimMgr_MST.nClaimTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nClinicId {
                get {
                    try {
                        return ((long)(this[this.tableBL_Transaction_ClaimMgr_MST.nClinicIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nClinicId\' in table \'BL_Transaction_ClaimMgr_MST\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableBL_Transaction_ClaimMgr_MST.nClinicIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnBatchIDNull() {
                return this.IsNull(this.tableBL_Transaction_ClaimMgr_MST.nBatchIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnBatchIDNull() {
                this[this.tableBL_Transaction_ClaimMgr_MST.nBatchIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnTransactionIdNull() {
                return this.IsNull(this.tableBL_Transaction_ClaimMgr_MST.nTransactionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnTransactionIdNull() {
                this[this.tableBL_Transaction_ClaimMgr_MST.nTransactionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnClaimNumberNull() {
                return this.IsNull(this.tableBL_Transaction_ClaimMgr_MST.nClaimNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnClaimNumberNull() {
                this[this.tableBL_Transaction_ClaimMgr_MST.nClaimNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnPatientIdNull() {
                return this.IsNull(this.tableBL_Transaction_ClaimMgr_MST.nPatientIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnPatientIdNull() {
                this[this.tableBL_Transaction_ClaimMgr_MST.nPatientIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnClearingHouseIdNull() {
                return this.IsNull(this.tableBL_Transaction_ClaimMgr_MST.nClearingHouseIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnClearingHouseIdNull() {
                this[this.tableBL_Transaction_ClaimMgr_MST.nClearingHouseIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssInterchangeNumberNull() {
                return this.IsNull(this.tableBL_Transaction_ClaimMgr_MST.sInterchangeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsInterchangeNumberNull() {
                this[this.tableBL_Transaction_ClaimMgr_MST.sInterchangeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssTransationSetNumberNull() {
                return this.IsNull(this.tableBL_Transaction_ClaimMgr_MST.sTransationSetNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsTransationSetNumberNull() {
                this[this.tableBL_Transaction_ClaimMgr_MST.sTransationSetNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssFunctionalGroupNumberNull() {
                return this.IsNull(this.tableBL_Transaction_ClaimMgr_MST.sFunctionalGroupNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsFunctionalGroupNumberNull() {
                this[this.tableBL_Transaction_ClaimMgr_MST.sFunctionalGroupNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnDateNull() {
                return this.IsNull(this.tableBL_Transaction_ClaimMgr_MST.nDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnDateNull() {
                this[this.tableBL_Transaction_ClaimMgr_MST.nDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnTimeNull() {
                return this.IsNull(this.tableBL_Transaction_ClaimMgr_MST.nTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnTimeNull() {
                this[this.tableBL_Transaction_ClaimMgr_MST.nTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnUserIdNull() {
                return this.IsNull(this.tableBL_Transaction_ClaimMgr_MST.nUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnUserIdNull() {
                this[this.tableBL_Transaction_ClaimMgr_MST.nUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnClaimTypeNull() {
                return this.IsNull(this.tableBL_Transaction_ClaimMgr_MST.nClaimTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnClaimTypeNull() {
                this[this.tableBL_Transaction_ClaimMgr_MST.nClaimTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnClinicIdNull() {
                return this.IsNull(this.tableBL_Transaction_ClaimMgr_MST.nClinicIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnClinicIdNull() {
                this[this.tableBL_Transaction_ClaimMgr_MST.nClinicIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BL_CMSEDI_ElectronicClaimRow : global::System.Data.DataRow {
            
            private BL_CMSEDI_ElectronicClaimDataTable tableBL_CMSEDI_ElectronicClaim;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BL_CMSEDI_ElectronicClaimRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBL_CMSEDI_ElectronicClaim = ((BL_CMSEDI_ElectronicClaimDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nBatchID {
                get {
                    try {
                        return ((long)(this[this.tableBL_CMSEDI_ElectronicClaim.nBatchIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nBatchID\' in table \'BL_CMSEDI_ElectronicClaim\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBL_CMSEDI_ElectronicClaim.nBatchIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sBatchName {
                get {
                    try {
                        return ((string)(this[this.tableBL_CMSEDI_ElectronicClaim.sBatchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sBatchName\' in table \'BL_CMSEDI_ElectronicClaim\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBL_CMSEDI_ElectronicClaim.sBatchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] i837File {
                get {
                    try {
                        return ((byte[])(this[this.tableBL_CMSEDI_ElectronicClaim.i837FileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'i837File\' in table \'BL_CMSEDI_ElectronicClaim\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBL_CMSEDI_ElectronicClaim.i837FileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int nStatus {
                get {
                    try {
                        return ((int)(this[this.tableBL_CMSEDI_ElectronicClaim.nStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nStatus\' in table \'BL_CMSEDI_ElectronicClaim\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBL_CMSEDI_ElectronicClaim.nStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nUserID {
                get {
                    try {
                        return ((long)(this[this.tableBL_CMSEDI_ElectronicClaim.nUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nUserID\' in table \'BL_CMSEDI_ElectronicClaim\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBL_CMSEDI_ElectronicClaim.nUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nClinicID {
                get {
                    try {
                        return ((long)(this[this.tableBL_CMSEDI_ElectronicClaim.nClinicIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nClinicID\' in table \'BL_CMSEDI_ElectronicClaim\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBL_CMSEDI_ElectronicClaim.nClinicIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BillingType {
                get {
                    try {
                        return ((short)(this[this.tableBL_CMSEDI_ElectronicClaim.BillingTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillingType\' in table \'BL_CMSEDI_ElectronicClaim\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableBL_CMSEDI_ElectronicClaim.BillingTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nSendUserID {
                get {
                    try {
                        return ((long)(this[this.tableBL_CMSEDI_ElectronicClaim.nSendUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nSendUserID\' in table \'BL_CMSEDI_ElectronicClaim\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableBL_CMSEDI_ElectronicClaim.nSendUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sSendUserName {
                get {
                    try {
                        return ((string)(this[this.tableBL_CMSEDI_ElectronicClaim.sSendUserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sSendUserName\' in table \'BL_CMSEDI_ElectronicClaim\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBL_CMSEDI_ElectronicClaim.sSendUserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int nBatchBillingMethod {
                get {
                    try {
                        return ((int)(this[this.tableBL_CMSEDI_ElectronicClaim.nBatchBillingMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nBatchBillingMethod\' in table \'BL_CMSEDI_ElectronicClaim\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableBL_CMSEDI_ElectronicClaim.nBatchBillingMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnBatchIDNull() {
                return this.IsNull(this.tableBL_CMSEDI_ElectronicClaim.nBatchIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnBatchIDNull() {
                this[this.tableBL_CMSEDI_ElectronicClaim.nBatchIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssBatchNameNull() {
                return this.IsNull(this.tableBL_CMSEDI_ElectronicClaim.sBatchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsBatchNameNull() {
                this[this.tableBL_CMSEDI_ElectronicClaim.sBatchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isi837FileNull() {
                return this.IsNull(this.tableBL_CMSEDI_ElectronicClaim.i837FileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Seti837FileNull() {
                this[this.tableBL_CMSEDI_ElectronicClaim.i837FileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnStatusNull() {
                return this.IsNull(this.tableBL_CMSEDI_ElectronicClaim.nStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnStatusNull() {
                this[this.tableBL_CMSEDI_ElectronicClaim.nStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnUserIDNull() {
                return this.IsNull(this.tableBL_CMSEDI_ElectronicClaim.nUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnUserIDNull() {
                this[this.tableBL_CMSEDI_ElectronicClaim.nUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnClinicIDNull() {
                return this.IsNull(this.tableBL_CMSEDI_ElectronicClaim.nClinicIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnClinicIDNull() {
                this[this.tableBL_CMSEDI_ElectronicClaim.nClinicIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBillingTypeNull() {
                return this.IsNull(this.tableBL_CMSEDI_ElectronicClaim.BillingTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBillingTypeNull() {
                this[this.tableBL_CMSEDI_ElectronicClaim.BillingTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnSendUserIDNull() {
                return this.IsNull(this.tableBL_CMSEDI_ElectronicClaim.nSendUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnSendUserIDNull() {
                this[this.tableBL_CMSEDI_ElectronicClaim.nSendUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssSendUserNameNull() {
                return this.IsNull(this.tableBL_CMSEDI_ElectronicClaim.sSendUserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsSendUserNameNull() {
                this[this.tableBL_CMSEDI_ElectronicClaim.sSendUserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnBatchBillingMethodNull() {
                return this.IsNull(this.tableBL_CMSEDI_ElectronicClaim.nBatchBillingMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnBatchBillingMethodNull() {
                this[this.tableBL_CMSEDI_ElectronicClaim.nBatchBillingMethodColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BL_CMSEDI_ElectronicClaim_DTLRow : global::System.Data.DataRow {
            
            private BL_CMSEDI_ElectronicClaim_DTLDataTable tableBL_CMSEDI_ElectronicClaim_DTL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BL_CMSEDI_ElectronicClaim_DTLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBL_CMSEDI_ElectronicClaim_DTL = ((BL_CMSEDI_ElectronicClaim_DTLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nDetailID {
                get {
                    try {
                        return ((long)(this[this.tableBL_CMSEDI_ElectronicClaim_DTL.nDetailIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nDetailID\' in table \'BL_CMSEDI_ElectronicClaim_DTL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBL_CMSEDI_ElectronicClaim_DTL.nDetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nClaimNo {
                get {
                    try {
                        return ((long)(this[this.tableBL_CMSEDI_ElectronicClaim_DTL.nClaimNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nClaimNo\' in table \'BL_CMSEDI_ElectronicClaim_DTL\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableBL_CMSEDI_ElectronicClaim_DTL.nClaimNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sSubClaimNumber {
                get {
                    try {
                        return ((string)(this[this.tableBL_CMSEDI_ElectronicClaim_DTL.sSubClaimNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sSubClaimNumber\' in table \'BL_CMSEDI_ElectronicClaim_DTL\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableBL_CMSEDI_ElectronicClaim_DTL.sSubClaimNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nBillingTransactionID {
                get {
                    try {
                        return ((long)(this[this.tableBL_CMSEDI_ElectronicClaim_DTL.nBillingTransactionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nBillingTransactionID\' in table \'BL_CMSEDI_ElectronicClaim_" +
                                "DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBL_CMSEDI_ElectronicClaim_DTL.nBillingTransactionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nClinicID {
                get {
                    try {
                        return ((long)(this[this.tableBL_CMSEDI_ElectronicClaim_DTL.nClinicIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nClinicID\' in table \'BL_CMSEDI_ElectronicClaim_DTL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBL_CMSEDI_ElectronicClaim_DTL.nClinicIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnDetailIDNull() {
                return this.IsNull(this.tableBL_CMSEDI_ElectronicClaim_DTL.nDetailIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnDetailIDNull() {
                this[this.tableBL_CMSEDI_ElectronicClaim_DTL.nDetailIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnClaimNoNull() {
                return this.IsNull(this.tableBL_CMSEDI_ElectronicClaim_DTL.nClaimNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnClaimNoNull() {
                this[this.tableBL_CMSEDI_ElectronicClaim_DTL.nClaimNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssSubClaimNumberNull() {
                return this.IsNull(this.tableBL_CMSEDI_ElectronicClaim_DTL.sSubClaimNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsSubClaimNumberNull() {
                this[this.tableBL_CMSEDI_ElectronicClaim_DTL.sSubClaimNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnBillingTransactionIDNull() {
                return this.IsNull(this.tableBL_CMSEDI_ElectronicClaim_DTL.nBillingTransactionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnBillingTransactionIDNull() {
                this[this.tableBL_CMSEDI_ElectronicClaim_DTL.nBillingTransactionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnClinicIDNull() {
                return this.IsNull(this.tableBL_CMSEDI_ElectronicClaim_DTL.nClinicIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnClinicIDNull() {
                this[this.tableBL_CMSEDI_ElectronicClaim_DTL.nClinicIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BL_TransactionIDsRow : global::System.Data.DataRow {
            
            private BL_TransactionIDsDataTable tableBL_TransactionIDs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BL_TransactionIDsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBL_TransactionIDs = ((BL_TransactionIDsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nTransactionID {
                get {
                    try {
                        return ((long)(this[this.tableBL_TransactionIDs.nTransactionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTransactionID\' in table \'BL_TransactionIDs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBL_TransactionIDs.nTransactionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnTransactionIDNull() {
                return this.IsNull(this.tableBL_TransactionIDs.nTransactionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnTransactionIDNull() {
                this[this.tableBL_TransactionIDs.nTransactionIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BL_Transaction_ClaimMgr_MSTRowChangeEvent : global::System.EventArgs {
            
            private BL_Transaction_ClaimMgr_MSTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_Transaction_ClaimMgr_MSTRowChangeEvent(BL_Transaction_ClaimMgr_MSTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_Transaction_ClaimMgr_MSTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BL_CMSEDI_ElectronicClaimRowChangeEvent : global::System.EventArgs {
            
            private BL_CMSEDI_ElectronicClaimRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_CMSEDI_ElectronicClaimRowChangeEvent(BL_CMSEDI_ElectronicClaimRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_CMSEDI_ElectronicClaimRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BL_CMSEDI_ElectronicClaim_DTLRowChangeEvent : global::System.EventArgs {
            
            private BL_CMSEDI_ElectronicClaim_DTLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_CMSEDI_ElectronicClaim_DTLRowChangeEvent(BL_CMSEDI_ElectronicClaim_DTLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_CMSEDI_ElectronicClaim_DTLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BL_TransactionIDsRowChangeEvent : global::System.EventArgs {
            
            private BL_TransactionIDsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_TransactionIDsRowChangeEvent(BL_TransactionIDsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BL_TransactionIDsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591