// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using gloBilling;
namespace gloPMUnitTesting
{
    /// <summary>
    ///This is a test class for gloBilling.frmSetupGroupCode and is intended
    ///to contain all gloBilling.frmSetupGroupCode Unit Tests
    ///</summary>
    [TestClass()]
    public class frmSetupGroupCodeTest
    {


        private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        ///A test for DeleteGroupCode (long, string)
        ///</summary>
        [TestMethod()]
        //20101202   Mahesh Nawal Test case for deleting the group code
        public void DeleteGroupCodeTest()
        {
            // Creating a record in database to test delete functionaloty
           
            string DatabaseConnectionString = "Data Source=gloint1;database=gloPM2010_Production;user id=sa;password=sagloint1"; // TODO: Initialize to an appropriate value
            long ID;
            frmSetupGroupCode target = new frmSetupGroupCode(50 ,DatabaseConnectionString );
            ID= GetRecordId(50, DatabaseConnectionString); // TODO: Initialize to an appropriate value
        //    long ID = 21;
            

                      
            bool expected = true;
            bool actual;

            actual = target.DeleteGroupCode(ID, DatabaseConnectionString);

            Assert.AreEqual(expected, actual, "gloBilling.frmSetupGroupCode.DeleteGroupCode did not return the expected value.");
           // Assert.Inconclusive("Verify the correctness of this test method.");
        }
        private long GetRecordId(int ID, string DatabaseConnectionString)
        {
            
            string strSql;
            gloDatabaseLayer.DBLayer oDB1 = new gloDatabaseLayer.DBLayer(DatabaseConnectionString);

            //strSql = "select * from BL_Reason_GroupCode_MST where nID =" + ID;
            //int result = oDB.Execute_Query(strSql);
            //if (result > 0)
            //{
            //    return ID;
            //}
            oDB1.Connect(false);
            strSql = "insert into BL_Reason_GroupCode_MST(nID,sCode,nClinicID) values("+ID+",'test',1)";
            int result = oDB1.Execute_Query(strSql);
            return ID;

        }

    }


}
