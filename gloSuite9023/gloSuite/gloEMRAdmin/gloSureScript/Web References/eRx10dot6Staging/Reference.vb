'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.296
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.296.
'
Namespace eRx10dot6Staging
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="BasicHttpBinding_IeRx", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class eRx
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDataUsingDataContractOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetResponsesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PharmacyDownLoadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PharmacyDownloadLocal4dot0OperationCompleted As System.Threading.SendOrPostCallback
        
        Private PharmacyDownloadLocalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PostClientMessageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLoginCredentialsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private checkPharmacyDownloadLocalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private checkPharmacyDownloadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private checkWebConfigOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IncrementOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.gloSureScript.My.MySettings.Default.gloSureScript_eRx10dot6Staging_eRx
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetDataCompleted As GetDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDataUsingDataContractCompleted As GetDataUsingDataContractCompletedEventHandler
        
        '''<remarks/>
        Public Event GetResponsesCompleted As GetResponsesCompletedEventHandler
        
        '''<remarks/>
        Public Event PharmacyDownLoadCompleted As PharmacyDownLoadCompletedEventHandler
        
        '''<remarks/>
        Public Event PharmacyDownloadLocal4dot0Completed As PharmacyDownloadLocal4dot0CompletedEventHandler
        
        '''<remarks/>
        Public Event PharmacyDownloadLocalCompleted As PharmacyDownloadLocalCompletedEventHandler
        
        '''<remarks/>
        Public Event PostClientMessageCompleted As PostClientMessageCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLoginCredentialsCompleted As GetLoginCredentialsCompletedEventHandler
        
        '''<remarks/>
        Public Event checkPharmacyDownloadLocalCompleted As checkPharmacyDownloadLocalCompletedEventHandler
        
        '''<remarks/>
        Public Event checkPharmacyDownloadCompleted As checkPharmacyDownloadCompletedEventHandler
        
        '''<remarks/>
        Public Event checkWebConfigCompleted As checkWebConfigCompletedEventHandler
        
        '''<remarks/>
        Public Event IncrementCompleted As IncrementCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeRx/GetData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetData(ByVal value As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal valueSpecified As Boolean) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("GetData", New Object() {value, valueSpecified})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDataAsync(ByVal value As Integer, ByVal valueSpecified As Boolean)
            Me.GetDataAsync(value, valueSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDataAsync(ByVal value As Integer, ByVal valueSpecified As Boolean, ByVal userState As Object)
            If (Me.GetDataOperationCompleted Is Nothing) Then
                Me.GetDataOperationCompleted = AddressOf Me.OnGetDataOperationCompleted
            End If
            Me.InvokeAsync("GetData", New Object() {value, valueSpecified}, Me.GetDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDataCompleted(Me, New GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeRx/GetDataUsingDataContract", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDataUsingDataContract(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal composite As ClsGeneral) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ClsGeneral
            Dim results() As Object = Me.Invoke("GetDataUsingDataContract", New Object() {composite})
            Return CType(results(0),ClsGeneral)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDataUsingDataContractAsync(ByVal composite As ClsGeneral)
            Me.GetDataUsingDataContractAsync(composite, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDataUsingDataContractAsync(ByVal composite As ClsGeneral, ByVal userState As Object)
            If (Me.GetDataUsingDataContractOperationCompleted Is Nothing) Then
                Me.GetDataUsingDataContractOperationCompleted = AddressOf Me.OnGetDataUsingDataContractOperationCompleted
            End If
            Me.InvokeAsync("GetDataUsingDataContract", New Object() {composite}, Me.GetDataUsingDataContractOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDataUsingDataContractOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDataUsingDataContractCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDataUsingDataContractCompleted(Me, New GetDataUsingDataContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeRx/GetResponses", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetResponses(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strPrescribers As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal strMessageType As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal _key As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> Byte()
            Dim results() As Object = Me.Invoke("GetResponses", New Object() {strPrescribers, strMessageType, _key})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetResponsesAsync(ByVal strPrescribers As String, ByVal strMessageType As String, ByVal _key As String)
            Me.GetResponsesAsync(strPrescribers, strMessageType, _key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetResponsesAsync(ByVal strPrescribers As String, ByVal strMessageType As String, ByVal _key As String, ByVal userState As Object)
            If (Me.GetResponsesOperationCompleted Is Nothing) Then
                Me.GetResponsesOperationCompleted = AddressOf Me.OnGetResponsesOperationCompleted
            End If
            Me.InvokeAsync("GetResponses", New Object() {strPrescribers, strMessageType, _key}, Me.GetResponsesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetResponsesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetResponsesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetResponsesCompleted(Me, New GetResponsesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeRx/PharmacyDownLoad", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PharmacyDownLoad(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal downloadType As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> Byte()
            Dim results() As Object = Me.Invoke("PharmacyDownLoad", New Object() {downloadType})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PharmacyDownLoadAsync(ByVal downloadType As String)
            Me.PharmacyDownLoadAsync(downloadType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PharmacyDownLoadAsync(ByVal downloadType As String, ByVal userState As Object)
            If (Me.PharmacyDownLoadOperationCompleted Is Nothing) Then
                Me.PharmacyDownLoadOperationCompleted = AddressOf Me.OnPharmacyDownLoadOperationCompleted
            End If
            Me.InvokeAsync("PharmacyDownLoad", New Object() {downloadType}, Me.PharmacyDownLoadOperationCompleted, userState)
        End Sub
        
        Private Sub OnPharmacyDownLoadOperationCompleted(ByVal arg As Object)
            If (Not (Me.PharmacyDownLoadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PharmacyDownLoadCompleted(Me, New PharmacyDownLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeRx/PharmacyDownloadLocal4dot0", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PharmacyDownloadLocal4dot0(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal downloadType As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> Byte()
            Dim results() As Object = Me.Invoke("PharmacyDownloadLocal4dot0", New Object() {downloadType})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PharmacyDownloadLocal4dot0Async(ByVal downloadType As String)
            Me.PharmacyDownloadLocal4dot0Async(downloadType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PharmacyDownloadLocal4dot0Async(ByVal downloadType As String, ByVal userState As Object)
            If (Me.PharmacyDownloadLocal4dot0OperationCompleted Is Nothing) Then
                Me.PharmacyDownloadLocal4dot0OperationCompleted = AddressOf Me.OnPharmacyDownloadLocal4dot0OperationCompleted
            End If
            Me.InvokeAsync("PharmacyDownloadLocal4dot0", New Object() {downloadType}, Me.PharmacyDownloadLocal4dot0OperationCompleted, userState)
        End Sub
        
        Private Sub OnPharmacyDownloadLocal4dot0OperationCompleted(ByVal arg As Object)
            If (Not (Me.PharmacyDownloadLocal4dot0CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PharmacyDownloadLocal4dot0Completed(Me, New PharmacyDownloadLocal4dot0CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeRx/PharmacyDownloadLocal", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PharmacyDownloadLocal(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal downloadType As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> Byte()
            Dim results() As Object = Me.Invoke("PharmacyDownloadLocal", New Object() {downloadType})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PharmacyDownloadLocalAsync(ByVal downloadType As String)
            Me.PharmacyDownloadLocalAsync(downloadType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PharmacyDownloadLocalAsync(ByVal downloadType As String, ByVal userState As Object)
            If (Me.PharmacyDownloadLocalOperationCompleted Is Nothing) Then
                Me.PharmacyDownloadLocalOperationCompleted = AddressOf Me.OnPharmacyDownloadLocalOperationCompleted
            End If
            Me.InvokeAsync("PharmacyDownloadLocal", New Object() {downloadType}, Me.PharmacyDownloadLocalOperationCompleted, userState)
        End Sub
        
        Private Sub OnPharmacyDownloadLocalOperationCompleted(ByVal arg As Object)
            If (Not (Me.PharmacyDownloadLocalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PharmacyDownloadLocalCompleted(Me, New PharmacyDownloadLocalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeRx/PostClientMessage", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostClientMessage(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal cntFromDB() As Byte, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal MessageType As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> Byte()
            Dim results() As Object = Me.Invoke("PostClientMessage", New Object() {cntFromDB, MessageType})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostClientMessageAsync(ByVal cntFromDB() As Byte, ByVal MessageType As String)
            Me.PostClientMessageAsync(cntFromDB, MessageType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostClientMessageAsync(ByVal cntFromDB() As Byte, ByVal MessageType As String, ByVal userState As Object)
            If (Me.PostClientMessageOperationCompleted Is Nothing) Then
                Me.PostClientMessageOperationCompleted = AddressOf Me.OnPostClientMessageOperationCompleted
            End If
            Me.InvokeAsync("PostClientMessage", New Object() {cntFromDB, MessageType}, Me.PostClientMessageOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostClientMessageOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostClientMessageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostClientMessageCompleted(Me, New PostClientMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeRx/GetLoginCredentials", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLoginCredentials() As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("GetLoginCredentials", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLoginCredentialsAsync()
            Me.GetLoginCredentialsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLoginCredentialsAsync(ByVal userState As Object)
            If (Me.GetLoginCredentialsOperationCompleted Is Nothing) Then
                Me.GetLoginCredentialsOperationCompleted = AddressOf Me.OnGetLoginCredentialsOperationCompleted
            End If
            Me.InvokeAsync("GetLoginCredentials", New Object(-1) {}, Me.GetLoginCredentialsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLoginCredentialsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLoginCredentialsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLoginCredentialsCompleted(Me, New GetLoginCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeRx/checkPharmacyDownloadLocal", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function checkPharmacyDownloadLocal(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal downloadType As String) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("checkPharmacyDownloadLocal", New Object() {downloadType})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub checkPharmacyDownloadLocalAsync(ByVal downloadType As String)
            Me.checkPharmacyDownloadLocalAsync(downloadType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub checkPharmacyDownloadLocalAsync(ByVal downloadType As String, ByVal userState As Object)
            If (Me.checkPharmacyDownloadLocalOperationCompleted Is Nothing) Then
                Me.checkPharmacyDownloadLocalOperationCompleted = AddressOf Me.OncheckPharmacyDownloadLocalOperationCompleted
            End If
            Me.InvokeAsync("checkPharmacyDownloadLocal", New Object() {downloadType}, Me.checkPharmacyDownloadLocalOperationCompleted, userState)
        End Sub
        
        Private Sub OncheckPharmacyDownloadLocalOperationCompleted(ByVal arg As Object)
            If (Not (Me.checkPharmacyDownloadLocalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent checkPharmacyDownloadLocalCompleted(Me, New checkPharmacyDownloadLocalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeRx/checkPharmacyDownload", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function checkPharmacyDownload(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal downloadType As String) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("checkPharmacyDownload", New Object() {downloadType})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub checkPharmacyDownloadAsync(ByVal downloadType As String)
            Me.checkPharmacyDownloadAsync(downloadType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub checkPharmacyDownloadAsync(ByVal downloadType As String, ByVal userState As Object)
            If (Me.checkPharmacyDownloadOperationCompleted Is Nothing) Then
                Me.checkPharmacyDownloadOperationCompleted = AddressOf Me.OncheckPharmacyDownloadOperationCompleted
            End If
            Me.InvokeAsync("checkPharmacyDownload", New Object() {downloadType}, Me.checkPharmacyDownloadOperationCompleted, userState)
        End Sub
        
        Private Sub OncheckPharmacyDownloadOperationCompleted(ByVal arg As Object)
            If (Not (Me.checkPharmacyDownloadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent checkPharmacyDownloadCompleted(Me, New checkPharmacyDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeRx/checkWebConfig", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function checkWebConfig(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal value As String) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("checkWebConfig", New Object() {value})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub checkWebConfigAsync(ByVal value As String)
            Me.checkWebConfigAsync(value, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub checkWebConfigAsync(ByVal value As String, ByVal userState As Object)
            If (Me.checkWebConfigOperationCompleted Is Nothing) Then
                Me.checkWebConfigOperationCompleted = AddressOf Me.OncheckWebConfigOperationCompleted
            End If
            Me.InvokeAsync("checkWebConfig", New Object() {value}, Me.checkWebConfigOperationCompleted, userState)
        End Sub
        
        Private Sub OncheckWebConfigOperationCompleted(ByVal arg As Object)
            If (Not (Me.checkWebConfigCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent checkWebConfigCompleted(Me, New checkWebConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeRx/Increment", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Increment(ByRef IncrementResult As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef IncrementResultSpecified As Boolean)
            Dim results() As Object = Me.Invoke("Increment", New Object(-1) {})
            IncrementResult = CType(results(0),Integer)
            IncrementResultSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IncrementAsync()
            Me.IncrementAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IncrementAsync(ByVal userState As Object)
            If (Me.IncrementOperationCompleted Is Nothing) Then
                Me.IncrementOperationCompleted = AddressOf Me.OnIncrementOperationCompleted
            End If
            Me.InvokeAsync("Increment", New Object(-1) {}, Me.IncrementOperationCompleted, userState)
        End Sub
        
        Private Sub OnIncrementOperationCompleted(ByVal arg As Object)
            If (Not (Me.IncrementCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IncrementCompleted(Me, New IncrementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.datacontract.org/2004/07/WCFeRxService")>  _
    Partial Public Class ClsGeneral
        
        Private boolValueField As Boolean
        
        Private boolValueFieldSpecified As Boolean
        
        Private stringValueField As String
        
        '''<remarks/>
        Public Property BoolValue() As Boolean
            Get
                Return Me.boolValueField
            End Get
            Set
                Me.boolValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property BoolValueSpecified() As Boolean
            Get
                Return Me.boolValueFieldSpecified
            End Get
            Set
                Me.boolValueFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property StringValue() As String
            Get
                Return Me.stringValueField
            End Get
            Set
                Me.stringValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetDataUsingDataContractCompletedEventHandler(ByVal sender As Object, ByVal e As GetDataUsingDataContractCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDataUsingDataContractCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ClsGeneral
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ClsGeneral)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetResponsesCompletedEventHandler(ByVal sender As Object, ByVal e As GetResponsesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetResponsesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub PharmacyDownLoadCompletedEventHandler(ByVal sender As Object, ByVal e As PharmacyDownLoadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PharmacyDownLoadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub PharmacyDownloadLocal4dot0CompletedEventHandler(ByVal sender As Object, ByVal e As PharmacyDownloadLocal4dot0CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PharmacyDownloadLocal4dot0CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub PharmacyDownloadLocalCompletedEventHandler(ByVal sender As Object, ByVal e As PharmacyDownloadLocalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PharmacyDownloadLocalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub PostClientMessageCompletedEventHandler(ByVal sender As Object, ByVal e As PostClientMessageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostClientMessageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetLoginCredentialsCompletedEventHandler(ByVal sender As Object, ByVal e As GetLoginCredentialsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLoginCredentialsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub checkPharmacyDownloadLocalCompletedEventHandler(ByVal sender As Object, ByVal e As checkPharmacyDownloadLocalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class checkPharmacyDownloadLocalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub checkPharmacyDownloadCompletedEventHandler(ByVal sender As Object, ByVal e As checkPharmacyDownloadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class checkPharmacyDownloadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub checkWebConfigCompletedEventHandler(ByVal sender As Object, ByVal e As checkWebConfigCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class checkWebConfigCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub IncrementCompletedEventHandler(ByVal sender As Object, ByVal e As IncrementCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IncrementCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property IncrementResult() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property IncrementResultSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
End Namespace
