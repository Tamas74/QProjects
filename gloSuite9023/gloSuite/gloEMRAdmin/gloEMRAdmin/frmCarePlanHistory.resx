<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="C1_CarePlanHistory.StyleInfo" xml:space="preserve">
    <value>Normal{Font:Tahoma, 9pt;}	Alternate{}	Fixed{BackColor:Control;ForeColor:ControlText;Border:Flat,1,ControlDark,Both;BackgroundImageLayout:Hide;}	Highlight{BackColor:Highlight;ForeColor:HighlightText;}	Focus{}	Editor{}	Search{BackColor:Highlight;ForeColor:HighlightText;}	Frozen{BackColor:Beige;}	NewRow{ForeColor:GrayText;}	EmptyArea{BackColor:AppWorkspace;Border:Flat,1,ControlDarkDark,Both;}	SelectedColumnHeader{}	SelectedRowHeader{}	GrandTotal{BackColor:Black;ForeColor:White;}	Subtotal0{BackColor:ControlDarkDark;ForeColor:White;}	Subtotal1{BackColor:ControlDarkDark;ForeColor:White;}	Subtotal2{BackColor:ControlDarkDark;ForeColor:White;}	Subtotal3{BackColor:ControlDarkDark;ForeColor:White;}	Subtotal4{BackColor:ControlDarkDark;ForeColor:White;}	Subtotal5{BackColor:ControlDarkDark;ForeColor:White;}	FilterEditor{}	FirstCustomStyle{}	</value>
  </data>
  <data name="C1_AssociationHisotry.StyleInfo" xml:space="preserve">
    <value>Normal{Font:Tahoma, 9pt;}	Alternate{}	Fixed{BackColor:Control;ForeColor:ControlText;Border:Flat,1,ControlDark,Both;BackgroundImageLayout:Hide;}	Highlight{BackColor:Highlight;ForeColor:HighlightText;}	Focus{}	Editor{}	Search{BackColor:Highlight;ForeColor:HighlightText;}	Frozen{BackColor:Beige;}	NewRow{ForeColor:GrayText;}	EmptyArea{BackColor:AppWorkspace;Border:Flat,1,ControlDarkDark,Both;}	SelectedColumnHeader{}	SelectedRowHeader{}	GrandTotal{BackColor:Black;ForeColor:White;}	Subtotal0{BackColor:ControlDarkDark;ForeColor:White;}	Subtotal1{BackColor:ControlDarkDark;ForeColor:White;}	Subtotal2{BackColor:ControlDarkDark;ForeColor:White;}	Subtotal3{BackColor:ControlDarkDark;ForeColor:White;}	Subtotal4{BackColor:ControlDarkDark;ForeColor:White;}	Subtotal5{BackColor:ControlDarkDark;ForeColor:White;}	FilterEditor{}	FirstCustomStyle{}	</value>
  </data>
  <metadata name="ts_ViewButtons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ts_btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAJVLb/ADFw/wAxcP8AMXD/ADFw/whKrv8ISq7/CEqu/whKrv8ISq7/CEqu/whF
        rf8JVLb/AAAAAAAAAAAAAAAAADFw/0z///815v//NPv//wS15P8AMXD/Ar7//wK+//8Cvv//Ar7//wK5
        //8itv//B0au/wAAAAAAAAAAADFw/46ynP//qD//AAAA///Kkv977O//HPD4/wAxcP+NbWH/jW1h/41t
        Yf+NbWH/G7r//wRPsv8AAAAAADFw/xv/////0qf//+m9/wAAAP//7+D//9Oc/3Lq7v8A3P//ADFw////
        ////////kW9l/zjD//8AVLb/AAAAAAAxcP8b/////9Kn///pvf8AAAD////k/9S6rP/os5D/odO8/wAx
        cP/5zMz//////5Zxav9NyP//AFu7/xR7JP8UeyT/FHsk/xR7JP8UeyT/FHsk///lxv//7c///9GX/4TT
        y/8AMXD/8O/v//////+ac27/T8///wBfwv8UeyT/WfmR/1n5kf9Z+ZH/FHsk/7+hg/8AAAD///TI//+u
        Sv8s7///ADFw//nMzP//////n3Vz/0nX//8AZcb/FHsk/1n5kf9Z+ZH/FHsk///kqv//5Kr///TA/wAA
        AP9WpK//CXZ+/wAxcP//+/3//////6N3d/884P//AGvM/xR7JP9Z+ZH/WfmR/1n5kf8AXwj/zJF4/7tw
        PP9cSi7/AYNY/wAxcP/5zMz/+czM//////+oeXz/Luv//wFx0f8UeyT/WfmR/xR7JP9Z+ZH/WfmR/1n5
        kf8XfCj/F3wo/wAxcP//////////////////////rHuA/yPx//8Dd9f/FHsk/xR7JP8AAAAAF3wo/xd8
        KP8XfCj/F3wo//nMzP/5zMz/+czM//nMzP/5zMz//////7F9hf8W+P//Bn3c/xR7JP8AAAAAAAAAAAiC
        4f8N/f//tX+J//////////////////////////////////////+1f4n/Df3//wiC4f8AAAAAAAAAAAAA
        AAAIjOb/Dv///7qCjv8AZgD/AGYA/wBmAP8AZgD/AGYA/wBmAP8AZgD/uoKO/w7///8IjOb/AAAAAAAA
        AAAAAAAACYvp/x3///8C////AGYA/yDsmf8g7Jn/IOyZ/yDsmf8g7Jn/AGYA/wH///8e////CZDp/wAA
        AAAAAAAAAAAAAAmO7f8Jju3/CY7t/wmO7f8AZgD/Ov/M/zr/zP86/8z/AGYA/wmO7f8Jju3/CY3r/wmO
        7f8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmAP8AZgD/AGYA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAA4AAAAOAAAADAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAA4AAAAOAA
        AADgAAAA/x8AAA==
</value>
  </data>
</root>