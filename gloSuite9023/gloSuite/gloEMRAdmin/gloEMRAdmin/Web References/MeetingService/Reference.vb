'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.544
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.544.
'
Namespace MeetingService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="MeetingsSoap", [Namespace]:="http://schemas.microsoft.com/sharepoint/soap/meetings/")>  _
    Partial Public Class Meetings
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private CreateWorkspaceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteWorkspaceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMeetingWorkspacesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetWorkspaceTitleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddMeetingFromICalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddMeetingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateMeetingFromICalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateMeetingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoveMeetingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAttendeeResponseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMeetingsInformationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RestoreMeetingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.gloEMRAdmin.My.MySettings.Default.gloEMRAdmin_MeetingService_Meetings
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event CreateWorkspaceCompleted As CreateWorkspaceCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteWorkspaceCompleted As DeleteWorkspaceCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMeetingWorkspacesCompleted As GetMeetingWorkspacesCompletedEventHandler
        
        '''<remarks/>
        Public Event SetWorkspaceTitleCompleted As SetWorkspaceTitleCompletedEventHandler
        
        '''<remarks/>
        Public Event AddMeetingFromICalCompleted As AddMeetingFromICalCompletedEventHandler
        
        '''<remarks/>
        Public Event AddMeetingCompleted As AddMeetingCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateMeetingFromICalCompleted As UpdateMeetingFromICalCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateMeetingCompleted As UpdateMeetingCompletedEventHandler
        
        '''<remarks/>
        Public Event RemoveMeetingCompleted As RemoveMeetingCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAttendeeResponseCompleted As SetAttendeeResponseCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMeetingsInformationCompleted As GetMeetingsInformationCompletedEventHandler
        
        '''<remarks/>
        Public Event RestoreMeetingCompleted As RestoreMeetingCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/meetings/CreateWorkspace", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateWorkspace(ByVal title As String, ByVal templateName As String, ByVal lcid As UInteger, ByVal timeZoneInformation As TimeZoneInf) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("CreateWorkspace", New Object() {title, templateName, lcid, timeZoneInformation})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateWorkspaceAsync(ByVal title As String, ByVal templateName As String, ByVal lcid As UInteger, ByVal timeZoneInformation As TimeZoneInf)
            Me.CreateWorkspaceAsync(title, templateName, lcid, timeZoneInformation, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateWorkspaceAsync(ByVal title As String, ByVal templateName As String, ByVal lcid As UInteger, ByVal timeZoneInformation As TimeZoneInf, ByVal userState As Object)
            If (Me.CreateWorkspaceOperationCompleted Is Nothing) Then
                Me.CreateWorkspaceOperationCompleted = AddressOf Me.OnCreateWorkspaceOperationCompleted
            End If
            Me.InvokeAsync("CreateWorkspace", New Object() {title, templateName, lcid, timeZoneInformation}, Me.CreateWorkspaceOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateWorkspaceOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateWorkspaceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateWorkspaceCompleted(Me, New CreateWorkspaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/meetings/DeleteWorkspace", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteWorkspace()
            Me.Invoke("DeleteWorkspace", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteWorkspaceAsync()
            Me.DeleteWorkspaceAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteWorkspaceAsync(ByVal userState As Object)
            If (Me.DeleteWorkspaceOperationCompleted Is Nothing) Then
                Me.DeleteWorkspaceOperationCompleted = AddressOf Me.OnDeleteWorkspaceOperationCompleted
            End If
            Me.InvokeAsync("DeleteWorkspace", New Object(-1) {}, Me.DeleteWorkspaceOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteWorkspaceOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteWorkspaceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteWorkspaceCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/meetings/GetMeetingWorkspaces", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMeetingWorkspaces(ByVal recurring As Boolean) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetMeetingWorkspaces", New Object() {recurring})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMeetingWorkspacesAsync(ByVal recurring As Boolean)
            Me.GetMeetingWorkspacesAsync(recurring, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMeetingWorkspacesAsync(ByVal recurring As Boolean, ByVal userState As Object)
            If (Me.GetMeetingWorkspacesOperationCompleted Is Nothing) Then
                Me.GetMeetingWorkspacesOperationCompleted = AddressOf Me.OnGetMeetingWorkspacesOperationCompleted
            End If
            Me.InvokeAsync("GetMeetingWorkspaces", New Object() {recurring}, Me.GetMeetingWorkspacesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMeetingWorkspacesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMeetingWorkspacesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMeetingWorkspacesCompleted(Me, New GetMeetingWorkspacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/meetings/SetWorkspaceTitle", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetWorkspaceTitle(ByVal title As String)
            Me.Invoke("SetWorkspaceTitle", New Object() {title})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetWorkspaceTitleAsync(ByVal title As String)
            Me.SetWorkspaceTitleAsync(title, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetWorkspaceTitleAsync(ByVal title As String, ByVal userState As Object)
            If (Me.SetWorkspaceTitleOperationCompleted Is Nothing) Then
                Me.SetWorkspaceTitleOperationCompleted = AddressOf Me.OnSetWorkspaceTitleOperationCompleted
            End If
            Me.InvokeAsync("SetWorkspaceTitle", New Object() {title}, Me.SetWorkspaceTitleOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetWorkspaceTitleOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetWorkspaceTitleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetWorkspaceTitleCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/meetings/AddMeetingFromICal", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddMeetingFromICal(ByVal organizerEmail As String, ByVal icalText As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("AddMeetingFromICal", New Object() {organizerEmail, icalText})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddMeetingFromICalAsync(ByVal organizerEmail As String, ByVal icalText As String)
            Me.AddMeetingFromICalAsync(organizerEmail, icalText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddMeetingFromICalAsync(ByVal organizerEmail As String, ByVal icalText As String, ByVal userState As Object)
            If (Me.AddMeetingFromICalOperationCompleted Is Nothing) Then
                Me.AddMeetingFromICalOperationCompleted = AddressOf Me.OnAddMeetingFromICalOperationCompleted
            End If
            Me.InvokeAsync("AddMeetingFromICal", New Object() {organizerEmail, icalText}, Me.AddMeetingFromICalOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddMeetingFromICalOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddMeetingFromICalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddMeetingFromICalCompleted(Me, New AddMeetingFromICalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/meetings/AddMeeting", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddMeeting(ByVal organizerEmail As String, ByVal uid As String, ByVal sequence As UInteger, ByVal utcDateStamp As Date, ByVal title As String, ByVal location As String, ByVal utcDateStart As Date, ByVal utcDateEnd As Date, ByVal nonGregorian As Boolean) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("AddMeeting", New Object() {organizerEmail, uid, sequence, utcDateStamp, title, location, utcDateStart, utcDateEnd, nonGregorian})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddMeetingAsync(ByVal organizerEmail As String, ByVal uid As String, ByVal sequence As UInteger, ByVal utcDateStamp As Date, ByVal title As String, ByVal location As String, ByVal utcDateStart As Date, ByVal utcDateEnd As Date, ByVal nonGregorian As Boolean)
            Me.AddMeetingAsync(organizerEmail, uid, sequence, utcDateStamp, title, location, utcDateStart, utcDateEnd, nonGregorian, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddMeetingAsync(ByVal organizerEmail As String, ByVal uid As String, ByVal sequence As UInteger, ByVal utcDateStamp As Date, ByVal title As String, ByVal location As String, ByVal utcDateStart As Date, ByVal utcDateEnd As Date, ByVal nonGregorian As Boolean, ByVal userState As Object)
            If (Me.AddMeetingOperationCompleted Is Nothing) Then
                Me.AddMeetingOperationCompleted = AddressOf Me.OnAddMeetingOperationCompleted
            End If
            Me.InvokeAsync("AddMeeting", New Object() {organizerEmail, uid, sequence, utcDateStamp, title, location, utcDateStart, utcDateEnd, nonGregorian}, Me.AddMeetingOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddMeetingOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddMeetingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddMeetingCompleted(Me, New AddMeetingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/meetings/UpdateMeetingFromICal", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateMeetingFromICal(ByVal icalText As String, ByVal ignoreAttendees As Boolean) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("UpdateMeetingFromICal", New Object() {icalText, ignoreAttendees})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateMeetingFromICalAsync(ByVal icalText As String, ByVal ignoreAttendees As Boolean)
            Me.UpdateMeetingFromICalAsync(icalText, ignoreAttendees, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateMeetingFromICalAsync(ByVal icalText As String, ByVal ignoreAttendees As Boolean, ByVal userState As Object)
            If (Me.UpdateMeetingFromICalOperationCompleted Is Nothing) Then
                Me.UpdateMeetingFromICalOperationCompleted = AddressOf Me.OnUpdateMeetingFromICalOperationCompleted
            End If
            Me.InvokeAsync("UpdateMeetingFromICal", New Object() {icalText, ignoreAttendees}, Me.UpdateMeetingFromICalOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateMeetingFromICalOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateMeetingFromICalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateMeetingFromICalCompleted(Me, New UpdateMeetingFromICalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/meetings/UpdateMeeting", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateMeeting(ByVal uid As String, ByVal sequence As UInteger, ByVal utcDateStamp As Date, ByVal title As String, ByVal location As String, ByVal utcDateStart As Date, ByVal utcDateEnd As Date, ByVal nonGregorian As Boolean)
            Me.Invoke("UpdateMeeting", New Object() {uid, sequence, utcDateStamp, title, location, utcDateStart, utcDateEnd, nonGregorian})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateMeetingAsync(ByVal uid As String, ByVal sequence As UInteger, ByVal utcDateStamp As Date, ByVal title As String, ByVal location As String, ByVal utcDateStart As Date, ByVal utcDateEnd As Date, ByVal nonGregorian As Boolean)
            Me.UpdateMeetingAsync(uid, sequence, utcDateStamp, title, location, utcDateStart, utcDateEnd, nonGregorian, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateMeetingAsync(ByVal uid As String, ByVal sequence As UInteger, ByVal utcDateStamp As Date, ByVal title As String, ByVal location As String, ByVal utcDateStart As Date, ByVal utcDateEnd As Date, ByVal nonGregorian As Boolean, ByVal userState As Object)
            If (Me.UpdateMeetingOperationCompleted Is Nothing) Then
                Me.UpdateMeetingOperationCompleted = AddressOf Me.OnUpdateMeetingOperationCompleted
            End If
            Me.InvokeAsync("UpdateMeeting", New Object() {uid, sequence, utcDateStamp, title, location, utcDateStart, utcDateEnd, nonGregorian}, Me.UpdateMeetingOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateMeetingOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateMeetingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateMeetingCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/meetings/RemoveMeeting", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RemoveMeeting(ByVal recurrenceId As UInteger, ByVal uid As String, ByVal sequence As UInteger, ByVal utcDateStamp As Date, ByVal cancelMeeting As Boolean)
            Me.Invoke("RemoveMeeting", New Object() {recurrenceId, uid, sequence, utcDateStamp, cancelMeeting})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveMeetingAsync(ByVal recurrenceId As UInteger, ByVal uid As String, ByVal sequence As UInteger, ByVal utcDateStamp As Date, ByVal cancelMeeting As Boolean)
            Me.RemoveMeetingAsync(recurrenceId, uid, sequence, utcDateStamp, cancelMeeting, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveMeetingAsync(ByVal recurrenceId As UInteger, ByVal uid As String, ByVal sequence As UInteger, ByVal utcDateStamp As Date, ByVal cancelMeeting As Boolean, ByVal userState As Object)
            If (Me.RemoveMeetingOperationCompleted Is Nothing) Then
                Me.RemoveMeetingOperationCompleted = AddressOf Me.OnRemoveMeetingOperationCompleted
            End If
            Me.InvokeAsync("RemoveMeeting", New Object() {recurrenceId, uid, sequence, utcDateStamp, cancelMeeting}, Me.RemoveMeetingOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoveMeetingOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoveMeetingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoveMeetingCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/meetings/SetAttendeeResponse", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetAttendeeResponse(ByVal attendeeEmail As String, ByVal recurrenceId As UInteger, ByVal uid As String, ByVal sequence As UInteger, ByVal utcDateTimeOrganizerCriticalChange As Date, ByVal utcDateTimeAttendeeCriticalChange As Date, ByVal response As AttendeeResponse)
            Me.Invoke("SetAttendeeResponse", New Object() {attendeeEmail, recurrenceId, uid, sequence, utcDateTimeOrganizerCriticalChange, utcDateTimeAttendeeCriticalChange, response})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAttendeeResponseAsync(ByVal attendeeEmail As String, ByVal recurrenceId As UInteger, ByVal uid As String, ByVal sequence As UInteger, ByVal utcDateTimeOrganizerCriticalChange As Date, ByVal utcDateTimeAttendeeCriticalChange As Date, ByVal response As AttendeeResponse)
            Me.SetAttendeeResponseAsync(attendeeEmail, recurrenceId, uid, sequence, utcDateTimeOrganizerCriticalChange, utcDateTimeAttendeeCriticalChange, response, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAttendeeResponseAsync(ByVal attendeeEmail As String, ByVal recurrenceId As UInteger, ByVal uid As String, ByVal sequence As UInteger, ByVal utcDateTimeOrganizerCriticalChange As Date, ByVal utcDateTimeAttendeeCriticalChange As Date, ByVal response As AttendeeResponse, ByVal userState As Object)
            If (Me.SetAttendeeResponseOperationCompleted Is Nothing) Then
                Me.SetAttendeeResponseOperationCompleted = AddressOf Me.OnSetAttendeeResponseOperationCompleted
            End If
            Me.InvokeAsync("SetAttendeeResponse", New Object() {attendeeEmail, recurrenceId, uid, sequence, utcDateTimeOrganizerCriticalChange, utcDateTimeAttendeeCriticalChange, response}, Me.SetAttendeeResponseOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAttendeeResponseOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAttendeeResponseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAttendeeResponseCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/meetings/GetMeetingsInformation", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMeetingsInformation(ByVal requestFlags As UInteger, ByVal lcid As UInteger) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetMeetingsInformation", New Object() {requestFlags, lcid})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMeetingsInformationAsync(ByVal requestFlags As UInteger, ByVal lcid As UInteger)
            Me.GetMeetingsInformationAsync(requestFlags, lcid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMeetingsInformationAsync(ByVal requestFlags As UInteger, ByVal lcid As UInteger, ByVal userState As Object)
            If (Me.GetMeetingsInformationOperationCompleted Is Nothing) Then
                Me.GetMeetingsInformationOperationCompleted = AddressOf Me.OnGetMeetingsInformationOperationCompleted
            End If
            Me.InvokeAsync("GetMeetingsInformation", New Object() {requestFlags, lcid}, Me.GetMeetingsInformationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMeetingsInformationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMeetingsInformationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMeetingsInformationCompleted(Me, New GetMeetingsInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/meetings/RestoreMeeting", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/meetings/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RestoreMeeting(ByVal uid As String)
            Me.Invoke("RestoreMeeting", New Object() {uid})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RestoreMeetingAsync(ByVal uid As String)
            Me.RestoreMeetingAsync(uid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RestoreMeetingAsync(ByVal uid As String, ByVal userState As Object)
            If (Me.RestoreMeetingOperationCompleted Is Nothing) Then
                Me.RestoreMeetingOperationCompleted = AddressOf Me.OnRestoreMeetingOperationCompleted
            End If
            Me.InvokeAsync("RestoreMeeting", New Object() {uid}, Me.RestoreMeetingOperationCompleted, userState)
        End Sub
        
        Private Sub OnRestoreMeetingOperationCompleted(ByVal arg As Object)
            If (Not (Me.RestoreMeetingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RestoreMeetingCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sharepoint/soap/meetings/")>  _
    Partial Public Class TimeZoneInf
        
        Private biasField As Integer
        
        Private standardDateField As SysTime
        
        Private standardBiasField As Integer
        
        Private daylightDateField As SysTime
        
        Private daylightBiasField As Integer
        
        '''<remarks/>
        Public Property bias() As Integer
            Get
                Return Me.biasField
            End Get
            Set
                Me.biasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property standardDate() As SysTime
            Get
                Return Me.standardDateField
            End Get
            Set
                Me.standardDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property standardBias() As Integer
            Get
                Return Me.standardBiasField
            End Get
            Set
                Me.standardBiasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property daylightDate() As SysTime
            Get
                Return Me.daylightDateField
            End Get
            Set
                Me.daylightDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property daylightBias() As Integer
            Get
                Return Me.daylightBiasField
            End Get
            Set
                Me.daylightBiasField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sharepoint/soap/meetings/")>  _
    Partial Public Class SysTime
        
        Private yearField As UShort
        
        Private monthField As UShort
        
        Private dayOfWeekField As UShort
        
        Private dayField As UShort
        
        Private hourField As UShort
        
        Private minuteField As UShort
        
        Private secondField As UShort
        
        Private millisecondsField As UShort
        
        '''<remarks/>
        Public Property year() As UShort
            Get
                Return Me.yearField
            End Get
            Set
                Me.yearField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property month() As UShort
            Get
                Return Me.monthField
            End Get
            Set
                Me.monthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dayOfWeek() As UShort
            Get
                Return Me.dayOfWeekField
            End Get
            Set
                Me.dayOfWeekField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property day() As UShort
            Get
                Return Me.dayField
            End Get
            Set
                Me.dayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hour() As UShort
            Get
                Return Me.hourField
            End Get
            Set
                Me.hourField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property minute() As UShort
            Get
                Return Me.minuteField
            End Get
            Set
                Me.minuteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property second() As UShort
            Get
                Return Me.secondField
            End Get
            Set
                Me.secondField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property milliseconds() As UShort
            Get
                Return Me.millisecondsField
            End Get
            Set
                Me.millisecondsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sharepoint/soap/meetings/")>  _
    Public Enum AttendeeResponse
        
        '''<remarks/>
        responseAccepted
        
        '''<remarks/>
        responseTentative
        
        '''<remarks/>
        responseDeclined
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateWorkspaceCompletedEventHandler(ByVal sender As Object, ByVal e As CreateWorkspaceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateWorkspaceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub DeleteWorkspaceCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetMeetingWorkspacesCompletedEventHandler(ByVal sender As Object, ByVal e As GetMeetingWorkspacesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMeetingWorkspacesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetWorkspaceTitleCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub AddMeetingFromICalCompletedEventHandler(ByVal sender As Object, ByVal e As AddMeetingFromICalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddMeetingFromICalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub AddMeetingCompletedEventHandler(ByVal sender As Object, ByVal e As AddMeetingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddMeetingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UpdateMeetingFromICalCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateMeetingFromICalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateMeetingFromICalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UpdateMeetingCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RemoveMeetingCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetAttendeeResponseCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetMeetingsInformationCompletedEventHandler(ByVal sender As Object, ByVal e As GetMeetingsInformationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMeetingsInformationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RestoreMeetingCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
