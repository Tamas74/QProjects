'***************************************************************************
' Module Name :- gloEMR Admin Login
' Company Name :- gloStream Inc.
' Written By :- Pankaj Naval
' Description :-
'This form is to validate the User Name and Password
'Processes
'   1) 
'***************************************************************************

Imports System.Data.SqlClient
Imports System.Collections.Generic
Public Class clsSettings

    '' To Identify whether the Setting is User or Clinic Setting 
    Public Enum enumSettingFlag
        None = 0
        Clinic = 1
        User = 2
    End Enum

    '' To identify what data of family/social history will go in CDA of summary type clinical summary
    Public Enum ClinicalSummaryHistory
        None = 0
        Current = 1
        VisitSpecific = 2
    End Enum


#Region " Private Variables"
    Private _IsYesNoLab As Boolean '' ''YES/No Labs
    Private _IsPediatrics As Boolean  ''PEDIATRIC SETTINGS
    Private _IsrequireSNOMED As Boolean
    Private _IsAutogeneratedProblemFromExam As Boolean
    Private _IsPatDaemoMerge As Boolean ''PATIENT DEMOGRAPHIC MERGE
    Dim _isCCDADataExportServiceEnabled As Boolean
    Dim _tmAppointmentStartTime As String
    Dim _tmAppointmentEndTime As String
    Dim _nAppointmentInterval As Int16
    Dim _nPULLCHARTSInterval As Int16
    Dim _nMaxNoOfFAXRetries As Int16
    Dim _nFAXRetryInterval As Int16
    Dim m_FAXCompression As String = ""
    Dim m_FAXSpeakerVolume As String = ""
    Dim m_FAXReceiveEnabled As Boolean
    Dim m_HPIEnabled As Boolean
    Dim m_LocationAddressed As Boolean
    Dim _DefaultLabTab As String = "Results"
    Private _IsEpcsEnble As Boolean
    Private _IsAllowPrintForCS As Boolean
    '********
    Dim m_blnPwdComplexity As Boolean

    Dim m_OMRCategoryHistory As String = ""
    Dim m_OMRCategoryROS As String = ""
    Dim m_OMRCategoryPatientRegistration As String = ""
    Dim m_OMRDirectiveCategory As String = ""
    Dim _CategoryVIS As String = ""

    Private m_pwdstrsql As String = ""

    Dim m_NoOfAttempts As Integer = 0
    ''//Code added by Ravikiran for RxReport Path on 13/02/2007 
    Dim m_RxReportPath As String = ""

    'sarika 14th june 07 //for Drug interaction Settings
    Dim m_blnClinicDISettings As Boolean

    'clinic level formulary setting
    Dim m_blnClinicFormularySettings As Boolean

    'Pramod 16 july 07 // for Lab scan documents
    Dim m_Labs As String = ""
    '''' Pramod 16 Jan 08 // For Radiology Scan Document
    Dim m_Radiology As String = ""

    ''for CCHIT11 setting for viewing DMS form in RxMeds wrt Medication Reconcilation
    Dim m_RxMeds As String = ""

    '' Mahesh 20070723 -- For Record Level Locking
    Dim _blnRecordLevelLocking As Boolean = False
    '' Exam Lock Date Field 
    Dim _blnEnableLockField As Boolean = False
    ''Exam Save LiquidData
    Dim _blnSaveLiquidData As Boolean = False
    Dim _blnIsVitalRequired As Boolean = False
    Dim _blnIsICD9CPTRequired As Boolean = False
    'Sagar 31 july 2007 for adding threshold value in Mx & Rx
    Dim _nThresholdValue As Double = 1

    'Added by mitesh
    Dim _nRxEligibilitythresholdValue As Int16 = 1

    'suraj 20080725 for rxdeclaration value
    Dim _RxDeclaration As String = ""

    'RxHub Disclaimer
    Dim _RxHUBDisclaimer As String = ""

    Dim _Generatemic As Boolean

    'Added by Amit - 7010 TRACK INVENTORY OF VACCINE 
    Dim _TrackVaccineInventory As Boolean


    'Added by Amit - 7020 Immunization Funding field mandatory
    Dim _RequireFunding As Boolean


    'Added by Amit - 7020 Enable Copy Exam
    Dim _EnableCopyExam As Boolean

    '27-Jan-15 Aniket: Addition of new setting to Show SmartDX screen on SmartDX save
    Private blnShowDxCPTScreenOnSmartDX As Boolean

    Private blnIsExamPTBillingEnabled As Boolean


    'Added by Amit - 7030 MU Stage 1 2013 changes
    'CPOE
    Dim _CPOE_MU1_Change As Boolean

    'Vitals Sign
    Dim _Vital_MU1_Change As Boolean


    'Vitals Sub Sign
    Dim _VitalAllRequired As Boolean
    Dim _VitalBPRequired As Boolean
    Dim _VitalHeightWeightRequired As Boolean

    Dim _VitalAllRequired_Stage2 As Boolean
    Dim _VitalBPRequired_Stage2 As Boolean
    Dim _VitalHeightWeightRequired_Stage2 As Boolean


    'ELECTRONIC PRESCRIPTION MU 2013
    Dim _eRx_MU1_Change As Boolean

    'REPORT CLINICAL QM MU 2013'
    Dim _eRptClinicalQua_MU1_Change As Boolean

    'ELECTRONIC COPY OF PAT. INFO. MU 2013' 
    Dim _eCopyPatHealthInfo_MU1_Change As Boolean

    'ELECTRONICALLY EXCH cLINICAL INFO MU 2013'
    Dim _eExchangeClinInfor_MU1_Change As Boolean




    ''Added for hl7 and genius global Setting on 6-dec-2012
    Dim _globlnhl7outbound As Boolean = False
    Dim _globlnhl7SendPatientdet As Boolean = False
    Dim _globlnhl7Sendchargeonsacl As Boolean = False
    Dim _globlnhl7SendImmudet As Boolean = False
    Dim _globlnhl7Sendapptdet As Boolean = False
    Dim _globlnhl7Sendchronsafi As Boolean = False
    Dim _globlnGenOutBound As Boolean = False
    Dim _globlnGenSendchargeonsacl As Boolean = False
    Dim _globlnGenSendchargeonsafi As Boolean = False
    Dim _globlnhl7SendVisitsumonsacl As Boolean = False 'added by manoj jadhav on 20140220 for MDM_T02 event
    Dim _globlnhl7SendVisitsumonsafi As Boolean = False 'added by manoj jadhav on 20140220 for MDM_T02 event
    ''Added for hl7 and genius global Setting on 6-dec-2012


    ''var added by sarika on 11th aug 07
    'Dim _sHL7SystemPath As String = "" 'carriable commented by manoj jadhav on 20120730 for moving service setiings to Respective Service

    Dim _CDAPrivacyText As String = "" '''' Added by Ujwala for certification criteria - 170.315(b)(7) Data Segmentation for Privacy – Send - 
    'to save the CCD file path.
    Dim _sCCDfilePath As String = ""
    Dim _sClinicalDocfilePath As String = ""
    Dim _sStylesheetfilePath As String = ""
    Dim _CDAValidateUrl As String = ""
    'Developer:Dipak Patil	
    'Date:20111215
    'PRD Name:Diagnosis One
    'Reason:To Add Diagnosis One Settings
    'Private _sCDS_PES_Url As String = ""
    'Private _sCDS_PES_UserName As String = ""
    'Private _sCDS_PES_Password As String = ""
    'Private _sCDS_PES_Enabled As String = ""
    'End Veriable Declaration by Dipak
    'Added by kanchan on 20100604 for CCD User
    Dim _CCDUserID As Int64
    Dim _CCDUniquePatientIdentifier As String = ""

    'start code commented by manoj jadhav on 20120730 for moving service setiings to Respective Service
    ''*****Sandip Deshmukh 22 Nov 2007
    'Dim _sHL7SendingFacility As String = ""
    'Dim _sHL7ReceivingApplication As String = ""
    'Dim _sHL7ReceivingFacility As String = ""
    ''***** 22 Nov 2007
    'end code commented by manoj jadhav on 20120730 for moving service setiings to Respective Service

    'sarika 31st aug 07

    Dim m_OMRCategoryFax As String = ""
    Dim _sDBVersion As String = ""
    Dim _sAppVersion As String = ""
    Dim _sgloAdminVersion As String = ""
    '----------------------


    ''Added for gloCommunity Setting on 03-jan-2012
    Dim _sSharepointSrvNm As String = ""

    Dim _sSharepointSiteNm As String = ""
    ' Dim _sSPCommSrvNm As String = ""
    Dim _sADFSServerName As String = ""
    Dim _sDomainName As String = ""
    Dim _blnglocommfeature As Boolean = False
    Dim _blnglocomminstalled As Boolean = False
    Dim _IsCommunitystaging As Boolean = True
    ''End
    Dim _sSharepointAuthentication As String = String.Empty 'Added by kanchan on 20120801

    'sarika 5th sept 07
    Dim _nPendingFaxUserID As Int64 = 0
    Dim _nRecieveFaxUserID As Int64 = 0
    '---------------------------

    '''''''''''Anil 20071119
    Dim _blnAutoPatientCode As Boolean = False
    Dim _blnIncludeFrequencyAbbrevationInRxMeds As Boolean = False

    'Dim _blnAlloEditablePatientCode As Boolean = False

    'sarika 18th jan 08 for gloReporting authentication settings
    Dim _sRptUserName As String = ""
    Dim _sRptPassword As String = ""
    ''sarika 18th jan 08 for gloReporting authentication settings

    'sarika UseFaxNoPrefix  12th april 08
    Private _blnUseFaxNoPrefix As Boolean = False
    Private _sFaxNoPrefix As String = ""
    '=======0--------------sarika UseFaxNoPrefix  12th april 08

    'sarika Internet fax
    Private _blnInternetFax As Boolean = False
    'eFax login key
    'Private _seFaxUserID As String = ""
    'Private _seFaxUserPassword As String = ""
    'sarika internet fax

    'sarika internet fax'
    Private _seFaxDirDownload As String = ""
    'sarika internet fax'

    '' sagarK 20080802 
    Private _MCIRReportPath As String = ""

    'code by supriya 11/7/2008
    'Surescript clinic settings
    Private _IsSurescriptEnabled As Boolean
    Private _IsStagingServer As Boolean
    Private _IsSecureMessageEnabled As Boolean



    Private _IsPatientSavingMessageEnabled As Boolean
    Private _IsPatientSavingInboxEnabled As Boolean
    Private _IsXDMSecureMessageEnable As Boolean

    Dim _sSecuremsgUrlStaging As String = String.Empty
    Dim _sSecuremsgUrlProduction As String = String.Empty
    Private _IsSecureStagingServer As Boolean
    'code by supriya 11/7/2008
    Private _IsNCPDP10dot6Ver As Boolean = False 'added for NCPDP 10.6 changes

    Private _IsMedHistory10Dot6Enable As Boolean = False  'added MedHistrory
    'Private _MedHistoryPortalURL As String = ""

    Private _Is8dot1PendingRefReqComplete As Boolean = False 'added for NCPDP 10.6 changes

    ''staging 1 account 2 portal ids
    Private _sSTAGING10DOT6ACCOUNTID As String = "" ''338 common account for 10.6 and 8.1
    Private _sSTAGING10DOT6PORTALID As String = "" ''2273
    Private _sSTAGING8DOT1PORTALID As String = "" ''422

    ''production 1 account and 2 portal ids
    Private _sSSPRODUCTIONACCOUNTID As String = "" ''261 common account for 10.6 and 8.1
    Private _sSSPRODUCTIONPORTALID As String = "" ''264
    Private _sSSPRODUCTION10DOT6PORTALID As String = "" ''1018

    '' Mahesh 20080809, For Advanced Growth Chart
    Private _ShowAdvancedGrowthChart As Boolean

    'by sudhir 20081111
    Private _ShowAgeInDays As Boolean
    Private _AgeLimit As Int64
    'Sudhir 20081124
    Private _AgeLimitForWeeks As Int64

    '' SUDHIR 20090721 '' GROWTH CHART PERCENTILE SETTING ''
    Private _GrowthChartPercentile As frmSettings_New.enumGrowthChartPercentile
    '' END SUDHIR ''


    'sarika 
    'DMS 20080908 -- for Loading no of recieved faxes in DMS
    Private _nLoadNoOfFaxes As Integer = 1
    '-------

    'Private _SendUnassociatedDiagnosis As Boolean 'varriable commented by manoj jadhav on 20120730 for moving service setiings to Respective Service

    'sarika PM DB Credentials 20081128

    Private m_blnAddPatient As Boolean = False
    Private m_PMServerName As String = ""
    Private m_PMDatabaseName As String = ""
    Private m_PMSQLUserId As String = ""
    Private m_PMSQLPwd As String = ""
    Private m_blnSQLAuthentication As Boolean = False
    Private m_PMConnectionString As String = ""

    '---
    Private m_SignatureText As String = ""
    Private m_CoSignatureText As String = ""

    Private _nDMSImageDIP As Int32 = 0
    Private _bUseFileCompression As Boolean = False
    '\\ Suraj 20090123 Document Split
    Private _SplitDoc As Boolean = False
    '\\ Suraj 20090128 DMSV2 Document recover
    Private m_RecoverDMSV2 As Boolean = False
    Private m_RecoverDMSV2Path As String = ""
    '\\ Suraj 20090128 Delete DMS Document After Migration
    Private m_DeleteDMSDoc As Boolean = False
    Private strOccMedDMSCategory As String = ""


    '\\ Sandip Darade 20090210  Use Coded History
    Private _bUsecodedhistory As Boolean = False
    Private _EMChiefComplaintType As String = ""
    Private _EMOnOff As String = ""
    Private _OtherPatientType As Boolean
    '\\ Sandip Darade 20090328  Show Coded History code or desc or both 
    Private _sShowCodedHistory As String = ""
    Private _sCodeFieldsinHistory As String = ""
    Dim _nIM_ReminderDays As Integer = 1
    Dim _blnAllowEditablePatientCode As Boolean = False
    Dim _IsVitalsHeightCopyForward As Boolean = False
    Dim _ShowDMAlert As Boolean = False

    Dim _blnEnableIntuitFeature As Boolean = False
    Dim _blnIncludeOriginalMessage As Boolean = False

    Dim _nIntuitPracticeID As String
    Dim _sSurescriptUrlStaging As String = String.Empty
    Dim _sSurescriptUrlProduction As String = String.Empty
    Dim _sSurescript10dot6UrlStaging As String = String.Empty
    Dim _sSurescript10dot6UrlProduction As String = String.Empty
    Dim _sMedhxSurescriptUrlStaging As String = String.Empty
    Dim _sMedhxSurescriptUrlProduction As String = String.Empty

    Private _bOTCIssueWarning As Boolean = False
    Dim _sDIServiceURL As String = String.Empty
    'sarika SendEMail 20090508
    'Private _bIsSendEMail As Boolean = False
    'Private _sSendEmailAddress As String = ""
    '---

    'sarika RxHUB Server Settings 20090602
    Private _bIsAdvanceRxEnabled As Boolean
    Private _bIsAdvanceRxStagingServer As Boolean
    Private _sEARDirectory As String = ""
    '--

    Private _SingleRxStateCustiomizeReport As String = ""
    Private _MultipleRxStateCustiomizeReport As String = ""

    '20090819 RxHUB partipantID & password setting
    Private _participantid As String = ""
    Private _rxPassword As String = ""

    'sarika SiteID setting 20090607
    Private _sSiteID As String = ""
    '--
    '\\ Sandip Darade 20090622
    Dim _sDefaultPatientGender As String = " "

    '\\ Sandip Darade 20090709
    ' DefaultFeeSpeciality  DefaultCarrierNumber  DefaultLocality  
    ' CLINICFEESCHEDULE NoOfClaimPerBatch NoOfModifiers ShowLabCol DEFAULTFEECHARGES
    Private _DefaultFeeSpeciality As String = ""
    Private _DefaultCarrierNumber As String = ""
    Private _DefaultLocality As String = ""
    Private _ClinicFeeSchedule As String = ""
    Private _NoOfClaimPerBatch As String = ""
    Private _NoOfModifiers As String = ""
    Private _ShowLabCol As String = ""
    Private _Defaultfeecharges As String = ""

    Private _SetCPTtoAllICD9 As Boolean
    Private _SetProblemDxAsDefaultForSmartDx As Boolean
    Private _bEnableSmartDxReviewScreen As Boolean
    Private _bDefaultDxCPTPatientProblemDiagnosis As Boolean
    'Mayuri
    Private _ICD9Driven As Boolean = True
    Private _Show8ICD9 As Boolean = True
    Private _Show4Modifier As Boolean = True

    'Private _PrescriptionProviderAssociation As Boolean = False //removed setting in 7020 as per PRD discussion for Incident #00006175
    Private _PatientQuestionnaire As Boolean = False
    ''Sandip Darade 20090830
    Private m_GeniusPath As String = ""
    Private m_GeniusCode As String = ""
    ''Sandip Darade 20091007
    Private _Country As String = ""
    Private _SameDayApptType As String = ""
    Private _FutureApptType As String = ""
    'Shubhangi 20100105
    Private _EMExamtype As enumExamControlType
    'Shweta 20100125
    Private _EmdeonUserName As String = ""
    Private _EmdeonPassword As String = ""
    Private _EmdeonURL As String = ""
    Private _EmdeonFacilityCode As String = ""
    Private _EmdeonGetLabOrdersFromDaysOnReload As Int16 = 90
    'Removed on 22/2/2010--by Madan-- According to mail dated on 22/2/2010 from Durga Prasad
    'Private _EmdeonDescription As String = ""
    'End Madan
    'End Shweta
    'Removed on -20100219-- Madan
    'Madan 20100213-- added for gloLab settings.
    'Private _gloLab_Pat As Boolean = False
    'Hsi-Label...
    'Madan---Added on 20100227
    Private _gloLab_billing As String = ""
    ' Private _gloLab_defaultUser As String = ""
    Private _gloLab_defaultUserID As Int64
    Private _gloLab_Hsilb As String = ""
    'End Madan        
    'Shirish--- Added on 20100612
    Private _gloLab_Provider_Usage As String = ""
    'End

    Private _gloHxForecast_defaultUserID As Int64
    Private _gloForecastReconcileDone_defaultUserID As Int64

    ''Dhruv 20100216 --added for the surescript
    Private _FormularyUserName As String = ""
    Private _FormularyPassword As String = ""
    Private _FormularyServerName As String = ""
    Private _FormularyDataBaseName As String = ""
    Private _FormularyAuthentication As Boolean = False

    'chetan
    Private m_SMServerName As String = ""
    Private m_SMDatabaseName As String = ""
    Private m_SMSQLUserId As String = ""
    Private m_SMSQLPwd As String = ""
    Private m_SMblnSQLAuthentication As Boolean
    ''Private m_SMConnectionString As String ''SnowMade ConnectionString Setting 
    Private m_SMblnShowsmdbsetting As Boolean



    'chetan
    ' chetan integrated on 4 oct 2010
    'Code Start-Added by kanchan on 20100908 for RxNorm DB settings
    Private m_SMtrv As String = ""
    Private m_RxNServerName As String
    Private m_RxNDatabaseName As String
    Private m_RxNSQLUserId As String
    Private m_RxNSQLPwd As String = ""
    Private m_RxNblnSQLAuthentication As Boolean
    ''Private m_RxNConnectionString As String RxNorm ConnectionString Settings
    Private m_RxNblnShowRxNdbsetting As Boolean
    'Code End-Added by kanchan on 20100908 for RxNorm DB settings
    ' chetan integrated on 4 oct 2010
    ''end--------------------------------Dhruv

    Private _EnableSingleSignon As Boolean = False

    'added by pradeep for Use Site Prefix on 28/06/2010
    Private _UseSitePrefix As Boolean = False
    'added by pradeep for Auto Acceptance test on 12/07/2010
    Private _ExplicitlyAcceptTask As Integer

    'added by Amit
    Private _RestrictedTemplateAppointtment As Integer
    Private _OverlapTemplateAppointment As Char

    'Added by pradeep to suppress task on Patient status change on 03/01/2011
    Private _EnableTasksforPatientStatusChange As Boolean = True
    ''Added by Mayuri:20100608
    Dim _VitalSettingsValue As String = ""
    Dim _FullCCDSettingsValue As String
    Dim _visitCCDSettings As String
    Dim _MUSectionsValue As String
    Dim _CCDAAutoDelete As Boolean
    ''Integrated By Mayuri 20101020
    Private _UseSignatureDelegates As Boolean


    ''Added by Yatin for infobutton url
    Dim _InfobuttonURL As String = ""
    Dim _OpenInfobuttonURL As String = ""
    ''

    Dim _dtICD10StartDOS As Date
    Dim _isAutoCompleteTaskAck As Boolean
    'Added _isEnableStaticColor setting flag
    Dim _isEnableStaticColor As Boolean

    Dim _isAutoCompleteDMSTaskAck As Boolean

    Dim _isAutoCompleteRCMTaskAck As Boolean

    ''Added Rahul for Unauthenticated Login Banner on 20101020
    Dim _sUnAuthLogin As String = ""
    ''End
    Private _bAllowRefillcancel As Boolean

    Private _bAutoEligibility As Boolean

    'Private m_SMtrv As String = ""


    '--- Added By Rahul Patel on 21-10-2010
    ' For DMS Database setting
    Private m_DMSServerName As String = ""
    Private m_DMSDatabaseName As String = ""
    Private m_DMSSQLUserId As String = ""
    Private m_DMSSQLPwd As String = ""
    Private m_DMSblnSQLAuthentication As Boolean = False
    'End of DMS Database Setting 
    'End of Added By Rahul Patel on 26-10-2010

    'Code added by Rohit for device database setting
    Private m_DeviceServerName As String = ""
    Private m_DeviceDatabaseName As String = ""
    'end ofCode added by Rohit for device database setting


    ''Added Services settings by Ujwala on 20022015 to get ServicesDB Name from settings table
    Private m_ServicesServerName As String = vbNullString
    Private m_ServicesDatabaseName As String = vbNullString
    Private m_ServicesUserID As String = vbNullString
    Private m_ServicesPassword As String = vbNullString
    Private m_ServicesAuthentication As Boolean = False
    ''Added Services settings by Ujwala on 20022015 to get ServicesDB Name from settings table

    'added by nilesh on 20101025
    'gloHL7 Settings
    Private m_gloHL7ServerName As String = vbNullString
    Private m_gloHL7DatabaseName As String = vbNullString
    Private m_gloHL7SQLUserID As String = vbNullString
    Private m_gloHL7SQLPassword As String = vbNullString
    Private m_gloHL7blnSQLAuthentication As Boolean = False
    'end by nilesh on 20101025

    'Added by madan for gloVault on 20101112
    Private _gloVaultVisiblility As Boolean = False
    'End madan

    ''Added by Abhijeet on 20101120
    Private m_PatientSpecificResultRange As String = String.Empty
    ''End of changes by Abhijeet on 20101120

    ''Added by Abhijeet for Failed Lab Task user selection on 20111122
    Private _gloLabFailure_DefaultUserID As Int64 = 0
    ''End of changes by Abhijeet for Failed Lab Task user selection on 20111122

    ''Added by pradeep on 20110106 for page break on pharmacy change 
    Private _bln_PrintMultipleRx_PerScriptPage_setting As Boolean = False
    ''End of changes by pradeep
    Private _bln_CustomizeRxReportPrintSetting As Boolean = False

    Private _bln_PrintPharmacyOnRxReportSetting As Boolean = True

    'start code commented by manoj jadhav for providing common UI for device activation settings on 20111003

    'added by madan for ECG Interface on 20110808
    'Private _ECG_InstutionID As String = String.Empty
    'Private _ECG_InterfaceURL As String = String.Empty
    ''End madan
    ''Added by Shirish 20110112
    Private _UseCardioScinceECGDevice As Boolean = False
    Private _UseWelchAllynECGDevice As Boolean = False
    Private _UseMidmarkECGDevice As Boolean = False 'Added by manoj jadhav for Midmark IQ ECG device Integration on 20120419
    'Private _ECG_UserProviderId As String = String.Empty
    'end of code commented by manoj jadhav for providing common UI for device activation settings on 20111003
    'added by Manoj Jadhav 20110314
    Private _GENERALMESSAGELOGPAGESIZE As Long
    '' ended by Manoj Jadhav on 20110314

    ''Added by Abhijeet on 20110407
    Private m_UseVitalDevice As Boolean = False
    'start code commented by manoj jadhav for providing common UI for device activation settings on 20111003
    'Private m_VitalDeviceKey As String = String.Empty
    'Private m_NoofAttempttoConnectVitalDevice As Int32 = 5
    'end of code commented by manoj jadhav for providing common UI for device activation settings on 20111003
    ''End of changes  by Abhijeet on 20110407

    'start of code commented by manoj jadhav on 20120730 for moving service setiings to Respective Service
    ' ''Added by Abhijeet on 20110422 & 20110425
    'Private m_IMRegistryHL7Format As Boolean = False
    'Private m_RegistryFileIstobeExport As Boolean = False
    'Private m_RegistryFileExportURL As String = ""
    'Private m_RegistryFileExportUserID As String = ""
    'Private m_RegistryFileExportPassword As String = ""
    'Private m_RegistryFileExportFacilityID As String = ""
    'Private m_RegistryFileExportPath As String = ""
    'Private m_RegistryFileExportEveryDayAt As String = ""

    ' ''End of changes by Abhijeet on 20110422 & 20110425
    'end of code commented by manoj jadhav on 20120730 for moving service setiings to Respective Service

    Private m_UseSpirometryDevice As Boolean = False
    'start code commented by manoj jadhav for providing common UI for device activation settings on 20111003
    'Private m_SpirometryDevicePrefix As String = String.Empty
    'start code commented by manoj jadhav for providing common UI for device activation settings on 20111003

    ''Add by madan for medfusion interface on 20110527
    Private _UseMedfusionInterface As Boolean = False
    ''End Madan changes
    ''Added for MU2 Patient Portal implementation on 20130620
    Private _UsePatientPortal As Boolean = False
    Private _PatientPortalLabAckNotification As Boolean = False
    Private _PatientPortalStatementNotification As Boolean = False

    ''End
    'For Recover Exam Module
    Private _IsRecoverExam As Integer = 0
    'Smoking
    Private _ShowSmokingColumn As Integer = 0

    'DAS Settings
    Private _IsRetrieveESR As Integer = 0
    Private _IsRetrieveCRP As Integer = 0

    Private _ESRDay As String = 0
    Private _CRPDay As String = 0


    Private _blnMultipleSupervisorsforPaperRx As Boolean = True

    'Enable MU2 Features Setting
    Dim _globlnEnableMultipleRaceFeatures As Boolean = False

    '04-Dec-14 Aniket: Exclude Non NDC Drugs From Erx Measure. Mail by Phill with subject ' prescriptions without an NCD code: OTC'S and Neutraceuticals'
    Dim _globlnExcludeNonNDCDrugsFromErxMeasure As Boolean = False

    Dim _blnExcludeControlSubstanceDrugsFromErxMeasure As Boolean = False

    Dim _blnEnableSpecializedRegistryReporting As Boolean = False

    Dim m_TimeServerName As String = ""

    ''7022Items: Home Billing- Added to save setting for USEAREACODEFORPATIENT in database
    ''Save false if No is selected and true if Yes is selected
    Private _UseAreaCodeForPatient As Boolean = False

    Private _ClinicalSummaryFamilyHistory As ClinicalSummaryHistory = ClinicalSummaryHistory.None
    Private _ClinicalSummarySocialHistory As ClinicalSummaryHistory = ClinicalSummaryHistory.None
    Private _ClinicalSummaryProcedure As ClinicalSummaryHistory = ClinicalSummaryHistory.None
    Private _ClinicalSummaryVital As ClinicalSummaryHistory = ClinicalSummaryHistory.None
    ''START CCDA Setting
    Dim _ClinicalCCDASettingsValue As String
    Dim _AmbulatoryCCDASettingsValue As String
    Dim _CCDAImportCategorySettings As String
    Dim _CCDAViewerURl As String
    ''End CCDA Setting

    ''Start OB Setting
    Dim _bIsOBSpeciality As Boolean = False
    Dim _sAutoCaseCloseDays As String
    ''End OB Setting

    Private m_IsLuhnDigitCheckAlgorithmEnable As Boolean = True

    Private bPreselectDiagnosisWhilePlacingEMDEONOrders As Boolean = False
    Private bCloseDmstaskwin As Boolean = False
    '' by default use old signature pad 
    Private bsignaturepadtouse As Boolean = False

    Dim _sCommonEmailServicePath As String = String.Empty
    Dim _sCommongloCoreServicePath As String = String.Empty

    Dim _showUserNoteFirst As Boolean = False
    Private _LoadProbonMedication As Boolean = False

    Private _LoadProblemDxCodeonMeds As Boolean = False



    'New Pdmp password and ID


    Private _PDMPparticipantid As String = ""
    Private _PDMPPassword As String = ""

#End Region

#Region " Public Properties"

    Public Property sCommonEmailServicePath As String
        Get
            Return _sCommonEmailServicePath
        End Get
        Set(ByVal value As String)
            _sCommonEmailServicePath = value
        End Set
    End Property

    Public Property sCommongloCoreServicePath As String
        Get
            Return _sCommongloCoreServicePath
        End Get
        Set(ByVal value As String)
            _sCommongloCoreServicePath = value
        End Set
    End Property

    Private _DefaultSelectedCMS As String
    Public Property DefaultSelectedCMS() As String
        Get
            Return _DefaultSelectedCMS
        End Get
        Set(ByVal value As String)
            _DefaultSelectedCMS = value
        End Set
    End Property


    Public Property FormularyServiceURL As String = String.Empty
    Public Property DIBServiceURL As String = String.Empty
    Public Property ePAServiceURL As String = String.Empty
    Public Property ParseUDIURL As String = String.Empty
    Public Property isAutoCompleteTaskAck As Boolean
        Get
            Return _isAutoCompleteTaskAck
        End Get
        Set(ByVal value As Boolean)
            _isAutoCompleteTaskAck = value
        End Set
    End Property
    'Added ENABLE STATIC COLOR setting
    Public Property isEnableStatusColor As Boolean
        Get
            Return _isEnableStaticColor
        End Get
        Set(ByVal value As Boolean)
            _isEnableStaticColor = value
        End Set
    End Property
    Public Property isAutoCompleteDMSTaskAck As Boolean
        Get
            Return _isAutoCompleteDMSTaskAck
        End Get
        Set(ByVal value As Boolean)
            _isAutoCompleteDMSTaskAck = value
        End Set
    End Property

    Public Property isAutoCompleteRCMTaskAck As Boolean
        Get
            Return _isAutoCompleteRCMTaskAck
        End Get
        Set(ByVal value As Boolean)
            _isAutoCompleteRCMTaskAck = value
        End Set
    End Property

    Public Property dtICD10StartDOS As Date
        Get
            Return _dtICD10StartDOS
        End Get
        Set(ByVal value As Date)
            _dtICD10StartDOS = value
        End Set
    End Property


    'For CCDA Service
    Public Property CCDADataExportServiceEnabled As Boolean
        Get
            Return _isCCDADataExportServiceEnabled
        End Get
        Set(ByVal value As Boolean)
            _isCCDADataExportServiceEnabled = value
        End Set
    End Property

    Public Property IsEpcsEnble As Boolean
        Get
            Return _IsEpcsEnble
        End Get
        Set(ByVal value As Boolean)
            _IsEpcsEnble = value
        End Set
    End Property
    Public Property IsAllowPrintForCS As Boolean
        Get
            Return _IsAllowPrintForCS
        End Get
        Set(ByVal value As Boolean)
            _IsAllowPrintForCS = value
        End Set
    End Property

    ''Added By Yatin for infobutton URL
    Public Property InfobuttonURL As String
        Get
            Return _InfobuttonURL
        End Get
        Set(ByVal value As String)
            _InfobuttonURL = value
        End Set
    End Property

    Public Property OpenInfobuttonURL As String
        Get
            Return _OpenInfobuttonURL
        End Get
        Set(ByVal value As String)
            _OpenInfobuttonURL = value
        End Set
    End Property



    'For Recover Exam Module
    Public Property RecoverExam() As Integer
        Get
            Return _IsRecoverExam
        End Get
        Set(ByVal value As Integer)
            _IsRecoverExam = value
        End Set
    End Property
    'start of property commented by manoj jadhav for providing common UI for device activation settings on 20111003

    'Public Property SpirometryDevicePrefix() As String
    '    Get
    '        Return m_SpirometryDevicePrefix
    '    End Get
    '    Set(ByVal value As String)
    '        m_SpirometryDevicePrefix = value
    '    End Set
    'End Property
    'end of commented by manoj jadhav for providing common UI for device activation settings on 20111003

    'changed property definition from string to Boolean by manoj jadhav for providing common UI for device activation settings on 20111003
    Public Property UseSpirometryDevice() As Boolean
        Get
            Return m_UseSpirometryDevice
        End Get
        Set(ByVal value As Boolean)
            m_UseSpirometryDevice = value
        End Set
    End Property

    'start of code commented by manoj jadhav on 20120730 for moving service setiings to Respective Service
    ' ''Added by Abhijeet on 20110422  & 20110425
    'Public Property IMRegistryHL7Format() As Boolean
    '    Get
    '        Return m_IMRegistryHL7Format
    '    End Get
    '    Set(ByVal value As Boolean)
    '        m_IMRegistryHL7Format = value
    '    End Set
    'End Property

    'Public Property RegistryFileIstobeExport() As Boolean
    '    Get
    '        Return m_RegistryFileIstobeExport
    '    End Get
    '    Set(ByVal value As Boolean)
    '        m_RegistryFileIstobeExport = value
    '    End Set
    'End Property


    'Public Property RegistryFileExportURL() As String
    '    Get
    '        Return m_RegistryFileExportURL
    '    End Get
    '    Set(ByVal value As String)
    '        m_RegistryFileExportURL = value
    '    End Set
    'End Property
    'Public Property RegistryFileExportUserID() As String
    '    Get
    '        Return m_RegistryFileExportUserID
    '    End Get
    '    Set(ByVal value As String)
    '        m_RegistryFileExportUserID = value
    '    End Set
    'End Property
    'Public Property RegistryFileExportPassword() As String
    '    Get
    '        Return m_RegistryFileExportPassword
    '    End Get
    '    Set(ByVal value As String)
    '        m_RegistryFileExportPassword = value
    '    End Set
    'End Property

    'Public Property RegistryFileExportFacilityID() As String
    '    Get
    '        Return m_RegistryFileExportFacilityID
    '    End Get
    '    Set(ByVal value As String)
    '        m_RegistryFileExportFacilityID = value
    '    End Set
    'End Property
    'Public Property RegistryFileExportPath() As String
    '    Get
    '        Return m_RegistryFileExportPath
    '    End Get
    '    Set(ByVal value As String)
    '        m_RegistryFileExportPath = value
    '    End Set
    'End Property

    'Public Property RegistryFileExportEveryDayAt() As String
    '    Get
    '        Return m_RegistryFileExportEveryDayAt
    '    End Get
    '    Set(ByVal value As String)
    '        m_RegistryFileExportEveryDayAt = value
    '    End Set
    'End Property

    ' ''End of changes by Abhijeet on 20110422  & 20110425
    'end of code commented by manoj jadhav on 20120730 for moving service setiings to Respective Service


    ''Aadded by Abhijeet on 20110407
    Public Property UseVitalDevice() As Boolean
        Get
            Return m_UseVitalDevice
        End Get
        Set(ByVal value As Boolean)
            m_UseVitalDevice = value
        End Set
    End Property
    'start of property commented by manoj jadhav for providing common UI for device activation settings on 20111003
    'Public Property VitalDeviceKey() As String
    '    Get
    '        Return m_VitalDeviceKey
    '    End Get
    '    Set(ByVal value As String)
    '        m_VitalDeviceKey = value
    '    End Set
    'End Property
    'Public Property NoofAttempttoConnectVitalDevice() As String
    '    Get
    '        Return m_NoofAttempttoConnectVitalDevice
    '    End Get
    '    Set(ByVal value As String)
    '        m_NoofAttempttoConnectVitalDevice = value
    '    End Set
    'End Property
    'end of property commented by manoj jadhav for providing common UI for device activation settings on 20111003
    ''End of changes by Abhijeet on 201104407
    ''''Start :: YES/No Labs
    Public Property IsYesNoLab() As Boolean
        Get
            Return _IsYesNoLab
        End Get
        Set(ByVal value As Boolean)
            _IsYesNoLab = value
        End Set
    End Property
    ''''End :: YES/No Labs

    ''PEDIATRIC SETTINGS
    Public Property IsPediatrics() As Boolean
        Get
            Return _IsPediatrics
        End Get
        Set(ByVal value As Boolean)
            _IsPediatrics = value
        End Set
    End Property
    Public Property IsrequireSNOMED() As Boolean
        Get
            Return _IsrequireSNOMED
        End Get
        Set(ByVal value As Boolean)
            _IsrequireSNOMED = value
        End Set
    End Property

    Public Property IsAutogeneratedProblemFromExam() As Boolean
        Get
            Return _IsAutogeneratedProblemFromExam
        End Get
        Set(ByVal value As Boolean)
            _IsAutogeneratedProblemFromExam = value
        End Set
    End Property

    ''Added Rahul for Unauthenticated Login Banner on 20101020
    Public Property UnAuthLogin() As String
        Get
            Return _sUnAuthLogin
        End Get
        Set(ByVal value As String)
            _sUnAuthLogin = value
        End Set
    End Property

    'Added by kanchan on 20100604 for CCD User
    Public Property CCDDefaultUser() As Long
        Get
            Return _CCDUserID
        End Get
        Set(ByVal Value As Long)
            _CCDUserID = Value
        End Set
    End Property

    Public Property CCDUniquePatientIdentifier() As String
        Get
            Return _CCDUniquePatientIdentifier
        End Get
        Set(ByVal Value As String)
            _CCDUniquePatientIdentifier = Value
        End Set
    End Property
    'Added by kanchan on 20100531
    ''PATIENT DEMOGRAPHIC MERGE
    Public Property IsPatDaemoMerge() As Boolean
        Get
            Return _IsPatDaemoMerge
        End Get
        Set(ByVal value As Boolean)
            _IsPatDaemoMerge = value
        End Set
    End Property
    ''Added by Mayuri:20101004-To add functonality of save as copy patient
    Public Property AllowEditablePatientCode() As Boolean
        Get
            Return _blnAllowEditablePatientCode
        End Get
        Set(ByVal value As Boolean)
            _blnAllowEditablePatientCode = value
        End Set
    End Property
    Public Property ShowDMAlert() As Boolean
        Get
            Return _ShowDMAlert
        End Get
        Set(ByVal value As Boolean)
            _ShowDMAlert = value
        End Set
    End Property
    Public Property IsVitalsHeightCopyForward() As Boolean
        Get
            Return _IsVitalsHeightCopyForward
        End Get
        Set(ByVal value As Boolean)
            _IsVitalsHeightCopyForward = value
        End Set
    End Property
    Public Property EnableIntuitFeature() As Boolean
        Get
            Return _blnEnableIntuitFeature
        End Get
        Set(ByVal value As Boolean)
            _blnEnableIntuitFeature = value
        End Set
    End Property
    Public Property IncludeOriginalMessage() As Boolean
        Get
            Return _blnIncludeOriginalMessage
        End Get
        Set(ByVal value As Boolean)
            _blnIncludeOriginalMessage = value
        End Set
    End Property
    Public Property IntuitPracticeID() As String
        Get
            Return _nIntuitPracticeID
        End Get
        Set(ByVal value As String)
            _nIntuitPracticeID = value
        End Set
    End Property
    'added code for NCPDP 10.6 implementation

    Public Property Surescript10dot6UrlStaging() As String
        Get
            Return _sSurescript10dot6UrlStaging
        End Get
        Set(ByVal value As String)
            _sSurescript10dot6UrlStaging = value
        End Set
    End Property
    Public Property Surescript10dot6UrlProduction() As String
        Get
            Return _sSurescript10dot6UrlProduction
        End Get
        Set(ByVal value As String)
            _sSurescript10dot6UrlProduction = value
        End Set
    End Property

    '''end code 
    ''' 
    Public Property SingleRxStateCustiomizeReport() As String
        Get
            Return _SingleRxStateCustiomizeReport
        End Get
        Set(ByVal value As String)
            _SingleRxStateCustiomizeReport = value
        End Set
    End Property
    Public Property MultipleRxStateCustiomizeReport() As String
        Get
            Return _MultipleRxStateCustiomizeReport
        End Get
        Set(ByVal value As String)
            _MultipleRxStateCustiomizeReport = value
        End Set
    End Property
    Public Property DIServiceURL() As String
        Get
            Return _sDIServiceURL
        End Get
        Set(ByVal value As String)
            _sDIServiceURL = value
        End Set
    End Property


    Public Property SurescriptUrlStaging() As String
        Get
            Return _sSurescriptUrlStaging
        End Get
        Set(ByVal value As String)
            _sSurescriptUrlStaging = value
        End Set
    End Property
    Public Property SurescriptUrlProduction() As String
        Get
            Return _sSurescriptUrlProduction
        End Get
        Set(ByVal value As String)
            _sSurescriptUrlProduction = value
        End Set
    End Property
    'Medication History 10.6
    Public Property MedhxSurescriptUrlStaging() As String
        Get
            Return _sMedhxSurescriptUrlStaging
        End Get
        Set(ByVal value As String)
            _sMedhxSurescriptUrlStaging = value
        End Set
    End Property
    Public Property MedhxSurescriptUrlProduction() As String
        Get
            Return _sMedhxSurescriptUrlProduction
        End Get
        Set(ByVal value As String)
            _sMedhxSurescriptUrlProduction = value
        End Set
    End Property

    ''Dhruv 20100216 --added for the surescript

    'Added by Ashish on 27-Nov-2013 for enabling Patient Savings Inbox
    Public Property IsPatientSavingInboxEnabled() As Boolean
        Get
            Return _IsPatientSavingInboxEnabled
        End Get
        Set(ByVal value As Boolean)
            _IsPatientSavingInboxEnabled = value
        End Set
    End Property



    Public Property RxNServerName() As String
        Get
            Return m_RxNServerName
        End Get
        Set(ByVal value As String)
            m_RxNServerName = value
        End Set
    End Property
    Public Property RxNDatabaseName() As String
        Get
            Return m_RxNDatabaseName
        End Get
        Set(ByVal value As String)
            m_RxNDatabaseName = value
        End Set
    End Property
    Public Property RxNSQLUserId() As String
        Get
            Return m_RxNSQLUserId
        End Get
        Set(ByVal value As String)
            m_RxNSQLUserId = value
        End Set
    End Property
    Public Property RxNSQLPwd() As String
        Get
            Return m_RxNSQLPwd
        End Get
        Set(ByVal value As String)
            m_RxNSQLPwd = value
        End Set
    End Property
    Public Property RxNblnSQLAuthentication() As Boolean
        Get
            Return m_RxNblnSQLAuthentication
        End Get
        Set(ByVal value As Boolean)
            m_RxNblnSQLAuthentication = value
        End Set
    End Property
    Public Property RxNblnShowRxNdbsetting() As Boolean
        Get
            Return m_RxNblnShowRxNdbsetting
        End Get
        Set(ByVal value As Boolean)
            m_RxNblnShowRxNdbsetting = value
        End Set
    End Property

    ''Start :: RxNorm ConnectionString Settings
    'Public Property RxNConnectionString() As String
    '    Get
    '        Return m_RxNConnectionString
    '    End Get
    '    Set(ByVal value As String)
    '        m_RxNConnectionString = value
    '    End Set
    'End Property
    ''End :: RxNorm ConnectionString Settings




    'start of property commented by manoj jadhav for providing common UI for device activation settings on 20111003
    ''Added by madan on 20110108
    'Public Property ECGInstutionID() As String
    '    Get
    '        Return _ECG_InstutionID
    '    End Get
    '    Set(ByVal value As String)
    '        _ECG_InstutionID = value
    '    End Set
    'End Property
    'Public Property ECGInterfaceUrl() As String
    '    Get
    '        Return _ECG_InterfaceURL
    '    End Get
    '    Set(ByVal value As String)
    '        _ECG_InterfaceURL = value
    '    End Set
    'End Property
    ''End madan
    ''Added by Shirish 20110112
    'end of property commented by manoj jadhav for providing common UI for device activation settings on 20111003

    'start of proerty added by manoj jadhav on 20111003 to read cardio scince ECG Device Settings
    Public Property UseCardioScinceECGDevice() As Boolean
        Get
            Return _UseCardioScinceECGDevice
        End Get
        Set(ByVal value As Boolean)
            _UseCardioScinceECGDevice = value
        End Set
    End Property
    'end of proerty added by manoj jadhav on 20111003 to read cardio scince ECG Device Settings

    'start of proerty added by manoj jadhav on 20111003 to read welchAllyn  ECG Device Settings
    Public Property UseWelchAllynECGDevice() As Boolean
        Get
            Return _UseWelchAllynECGDevice
        End Get
        Set(ByVal value As Boolean)
            _UseWelchAllynECGDevice = value
        End Set
    End Property
    'end of proerty added by manoj jadhav on 20111003 to read welchAllyn  ECG Device Settings
    'Proerty Added By Manoj Jadhav On 20120419 To Read Midmark IQ ECG Device Settings
    Public Property UseMidmarkECGDevice() As Boolean
        Get
            Return _UseMidmarkECGDevice
        End Get
        Set(ByVal value As Boolean)
            _UseMidmarkECGDevice = value
        End Set
    End Property

    'start of property commented by manoj jadhav for providing common UI for device activation settings on 20111003
    'Public Property ECGUserProviderID() As String
    '    Get
    '        Return _ECG_UserProviderId
    '    End Get
    '    Set(ByVal value As String)
    '        _ECG_UserProviderId = value
    '    End Set
    'End Property
    ''End of Shirish
    'end of property commented by manoj jadhav for providing common UI for device activation settings on 20111003

    Public Property FormularyUserName() As String
        Get
            Return _FormularyUserName
        End Get
        Set(ByVal value As String)
            _FormularyUserName = value
        End Set
    End Property
    ''code added by pradeep for User Site Prefix
    Public Property EnableSingleSignon() As Boolean
        Get
            Return _EnableSingleSignon
        End Get
        Set(ByVal value As Boolean)
            _EnableSingleSignon = value
        End Set
    End Property

    Public Property UseSitePrefix() As Boolean
        Get
            Return _UseSitePrefix
        End Get
        Set(ByVal value As Boolean)
            _UseSitePrefix = value
        End Set
    End Property
    'Added by pradeep to suppress task on Patient status change on 03/01/2011
    Public Property EnableTasksforPatientStatusChange() As Boolean
        Get
            Return _EnableTasksforPatientStatusChange
        End Get
        Set(ByVal value As Boolean)
            _EnableTasksforPatientStatusChange = value
        End Set
    End Property
    Public Property ExplicitlyAcceptTask() As Integer
        Get
            Return _ExplicitlyAcceptTask
        End Get
        Set(ByVal value As Integer)
            _ExplicitlyAcceptTask = value
        End Set
    End Property

    Public Property FormularyPassword() As String
        Get
            Return _FormularyPassword
        End Get
        Set(ByVal value As String)
            _FormularyPassword = value
        End Set
    End Property

    Public Property FormularyServerName() As String
        Get
            Return _FormularyServerName
        End Get
        Set(ByVal value As String)
            _FormularyServerName = value
        End Set
    End Property
    Public Property FormularyDataBaseName() As String
        Get
            Return _FormularyDataBaseName
        End Get
        Set(ByVal value As String)
            _FormularyDataBaseName = value
        End Set
    End Property

    Public Property FormularyAuthentication() As String
        Get
            Return _FormularyAuthentication
        End Get
        Set(ByVal value As String)
            _FormularyAuthentication = value
        End Set
    End Property
    ''end--------------------------------Dhruv

    Public Property AppointmentStartTime() As String
        Get
            Return _tmAppointmentStartTime
        End Get
        Set(ByVal Value As String)
            _tmAppointmentStartTime = Value
        End Set
    End Property
    Public Property AppointmentEndTime() As String
        Get
            Return _tmAppointmentEndTime
        End Get
        Set(ByVal Value As String)
            _tmAppointmentEndTime = Value
        End Set
    End Property
    Public Property AppointmentInterval() As Int16
        Get
            Return _nAppointmentInterval
        End Get
        Set(ByVal Value As Int16)
            _nAppointmentInterval = Value
        End Set
    End Property

    'added by Amit B
    Public Property RestrictedTemplateAppointtment() As Integer
        Get
            Return _RestrictedTemplateAppointtment
        End Get
        Set(ByVal value As Integer)
            _RestrictedTemplateAppointtment = value
        End Set
    End Property

    Public Property OverlapTemplateAppointment() As Char
        Get
            Return _OverlapTemplateAppointment
        End Get
        Set(ByVal value As Char)
            _OverlapTemplateAppointment = value
        End Set
    End Property

    Public Property PULLCHARTSInterval() As Int16
        Get
            Return _nPULLCHARTSInterval
        End Get
        Set(ByVal Value As Int16)
            _nPULLCHARTSInterval = Value
        End Set
    End Property
    Public Property MaxNoOfFAXRetries() As Int16
        Get
            Return _nMaxNoOfFAXRetries
        End Get
        Set(ByVal Value As Int16)
            _nMaxNoOfFAXRetries = Value
        End Set
    End Property
    Public Property FAXRetryInterval() As Int16
        Get
            Return _nFAXRetryInterval
        End Get
        Set(ByVal Value As Int16)
            _nFAXRetryInterval = Value
        End Set
    End Property
    Public Property HPIEnabled() As Boolean
        Get
            Return m_HPIEnabled
        End Get
        Set(ByVal Value As Boolean)
            m_HPIEnabled = Value
        End Set
    End Property
    Public Property LocationAddressed() As Boolean
        Get
            Return m_LocationAddressed
        End Get
        Set(ByVal Value As Boolean)
            m_LocationAddressed = Value
        End Set
    End Property
    Public Property FAXCompression() As String
        Get
            If Trim(m_FAXCompression) <> "" Then
                Return m_FAXCompression
            Else
                Return "CCITT G3"
            End If

        End Get
        Set(ByVal Value As String)
            m_FAXCompression = Value
        End Set
    End Property
    Public Property FAXSpeakerVoulme() As String
        Get
            If Trim(m_FAXSpeakerVolume) <> "" Then
                Return m_FAXSpeakerVolume
            Else
                Return "No Volume"
            End If

        End Get
        Set(ByVal Value As String)
            m_FAXSpeakerVolume = Value
        End Set
    End Property
    Public Property FAXReceiveEnabled() As Boolean
        Get
            Return m_FAXReceiveEnabled
        End Get
        Set(ByVal Value As Boolean)
            m_FAXReceiveEnabled = Value
        End Set
    End Property
    Public Property OMRCategoryHistory() As String
        Get
            Return m_OMRCategoryHistory
        End Get
        Set(ByVal Value As String)
            m_OMRCategoryHistory = Value
        End Set
    End Property
    Public Property OMRCategoryROS() As String
        Get
            Return m_OMRCategoryROS
        End Get
        Set(ByVal Value As String)
            m_OMRCategoryROS = Value
        End Set
    End Property
    Public Property OMRCategoryPatientRegistration() As String
        Get
            Return m_OMRCategoryPatientRegistration
        End Get
        Set(ByVal Value As String)
            m_OMRCategoryPatientRegistration = Value
        End Set
    End Property

    Public Property OMRCategoryDirective() As String
        Get
            Return m_OMRDirectiveCategory
        End Get
        Set(ByVal Value As String)
            m_OMRDirectiveCategory = Value
        End Set
    End Property
    Public Property CategoryVIS() As String
        Get
            Return _CategoryVIS
        End Get
        Set(ByVal Value As String)
            _CategoryVIS = Value
        End Set
    End Property
    Public Property blnPwdComplexity() As Boolean
        Get
            Return m_blnPwdComplexity
        End Get
        Set(ByVal Value As Boolean)
            m_blnPwdComplexity = Value
        End Set
    End Property

    Public Property PwdStrSQL() As String
        Get
            Return m_pwdstrsql
        End Get
        Set(ByVal Value As String)
            m_pwdstrsql = Value
        End Set
    End Property

    'sarika 12th feb

    Public Property NoOfAttempts() As Integer
        Get
            Return m_NoOfAttempts
        End Get
        Set(ByVal Value As Integer)
            m_NoOfAttempts = Value
        End Set
    End Property

    'sarika 14th june 07
    Public Property ClinicDISettings() As Boolean
        Get
            Return m_blnClinicDISettings
        End Get
        Set(ByVal Value As Boolean)
            m_blnClinicDISettings = Value
        End Set
    End Property

    'clinic level formulary setting
    Public Property ClinicFormularySettings() As Boolean
        Get
            Return m_blnClinicFormularySettings
        End Get
        Set(ByVal Value As Boolean)
            m_blnClinicFormularySettings = Value
        End Set
    End Property

    'Pramod 16 July 07
    Public Property Labs() As String
        Get
            Return m_Labs
        End Get
        Set(ByVal value As String)
            m_Labs = value
        End Set
    End Property

    'Pramod 16 Jan 08
    Public Property Radiology() As String
        Get
            Return m_Radiology
        End Get
        Set(ByVal value As String)
            m_Radiology = value
        End Set
    End Property

    ''CCHIT11
    Public Property RxMeds() As String
        Get
            Return m_RxMeds
        End Get
        Set(ByVal value As String)
            m_RxMeds = value
        End Set
    End Property

    'Mahesh 20070723 - Record Level Locking 
    Public Property RecordLevelLocking() As Boolean
        Get
            Return _blnRecordLevelLocking
        End Get
        Set(ByVal value As Boolean)
            _blnRecordLevelLocking = value
        End Set
    End Property


    Public Property EnableLockField() As Boolean
        Get
            Return _blnEnableLockField
        End Get
        Set(ByVal value As Boolean)
            _blnEnableLockField = value
        End Set
    End Property

    Public Property SaveLiquidData() As Boolean
        Get
            Return _blnSaveLiquidData
        End Get
        Set(ByVal value As Boolean)
            _blnSaveLiquidData = value
        End Set
    End Property

    Public Property IsVitalRequired() As Boolean
        Get
            Return _blnIsVitalRequired
        End Get
        Set(ByVal value As Boolean)
            _blnIsVitalRequired = value
        End Set
    End Property

    Public Property IsICD9CPTRequired() As Boolean
        Get
            Return _blnIsICD9CPTRequired
        End Get
        Set(ByVal value As Boolean)
            _blnIsICD9CPTRequired = value
        End Set
    End Property

    'Sagar 31 july 2007 for adding threshold value in Mx & Rx
    Public Property ThresholdValue() As Double
        Get
            Return _nThresholdValue
        End Get
        Set(ByVal Value As Double)
            _nThresholdValue = Value
        End Set
    End Property
    'Added by Mitesh
    Public Property RxEligibilitythresholdValue() As Int16
        Get
            Return _nRxEligibilitythresholdValue
        End Get
        Set(ByVal Value As Int16)
            _nRxEligibilitythresholdValue = Value
        End Set
    End Property

    'suraj 20080725
    Public Property RxDeclaration() As String
        Get
            Return _RxDeclaration
        End Get
        Set(ByVal value As String)
            _RxDeclaration = value
        End Set
    End Property
    'suraj 200800801

    'RxHub Disclaimer
    Public Property RxHUBDisclaimer() As String
        Get
            Return _RxHUBDisclaimer
        End Get
        Set(ByVal value As String)
            _RxHUBDisclaimer = value
        End Set
    End Property
    'RxHub Disclaimer

    'Property commented by manoj jadhav on 20120730 for moving service setiings to Respective Service
    'Public Property SendUnassociatedDiagnosis() As Boolean 
    '    Get
    '        Return _SendUnassociatedDiagnosis
    '    End Get
    '    Set(ByVal value As Boolean)
    '        _SendUnassociatedDiagnosis = value
    '    End Set
    'End Property

    Public Property GenerateMic() As String
        Get
            Return _Generatemic
        End Get
        Set(ByVal value As String)
            _Generatemic = value
        End Set
    End Property

    'Added by Amit - 7010 TRACK INVENTORY OF VACCINE 
    Public Property TrackVaccineInventory() As String
        Get
            Return _TrackVaccineInventory
        End Get
        Set(ByVal value As String)
            _TrackVaccineInventory = value
        End Set
    End Property


    'Added by Amit - 7020 Immunization Funding field mandatory
    Public Property RequireFunding() As String
        Get
            Return _RequireFunding
        End Get
        Set(ByVal value As String)
            _RequireFunding = value
        End Set
    End Property

    'Added by Amit - 7020 Enable Copy Exam
    Public Property EnableCopyExam() As String
        Get
            Return _EnableCopyExam
        End Get
        Set(ByVal value As String)
            _EnableCopyExam = value
        End Set
    End Property

    '27-Jan-15 Aniket: Addition of new setting to Show SmartDX screen on SmartDX save
    Public Property ShowDxCPTScreenOnSmartDX() As Boolean
        Get
            Return blnShowDxCPTScreenOnSmartDX
        End Get
        Set(ByVal value As Boolean)
            blnShowDxCPTScreenOnSmartDX = value
        End Set
    End Property

    Public Property IsExamPTBillingEnabled() As Boolean
        Get
            Return blnIsExamPTBillingEnabled
        End Get
        Set(ByVal value As Boolean)
            blnIsExamPTBillingEnabled = value
        End Set
    End Property

    'Added by Amit - 7030 MU Stage 1 2013 changes'
    'CPOE
    Public Property CPOE_MU1_Change() As String
        Get
            Return _CPOE_MU1_Change
        End Get
        Set(ByVal value As String)
            _CPOE_MU1_Change = value
        End Set
    End Property

    'Vital
    Public Property Vital_MU1_Change() As String
        Get
            Return _Vital_MU1_Change
        End Get
        Set(ByVal value As String)
            _Vital_MU1_Change = value
        End Set
    End Property

    'Vital sub option ALL
    Public Property VitalAllRequired() As String
        Get
            Return _VitalAllRequired
        End Get
        Set(ByVal value As String)
            _VitalAllRequired = value
        End Set
    End Property

    'Vital sub option BP
    Public Property VitalBPRequired() As String
        Get
            Return _VitalBPRequired
        End Get
        Set(ByVal value As String)
            _VitalBPRequired = value
        End Set
    End Property

    'Vital sub option Height/Weight
    Public Property VitalHeightWeightRequired() As String
        Get
            Return _VitalHeightWeightRequired
        End Get
        Set(ByVal value As String)
            _VitalHeightWeightRequired = value
        End Set
    End Property

    '23-Sep-13 Aniket: Vital Stage 2 Changes

    'Vital sub option ALL
    Public Property VitalAllRequired_Stage2() As String
        Get
            Return _VitalAllRequired_Stage2
        End Get
        Set(ByVal value As String)
            _VitalAllRequired_Stage2 = value
        End Set
    End Property

    'Vital sub option BP
    Public Property VitalBPRequired_Stage2() As String
        Get
            Return _VitalBPRequired_Stage2
        End Get
        Set(ByVal value As String)
            _VitalBPRequired_Stage2 = value
        End Set
    End Property

    'Vital sub option Height/Weight
    Public Property VitalHeightWeightRequired_Stage2() As String
        Get
            Return _VitalHeightWeightRequired_Stage2
        End Get
        Set(ByVal value As String)
            _VitalHeightWeightRequired_Stage2 = value
        End Set
    End Property

    '23-Sep-13 Aniket: Vital Stage 2 Changes

    'ELECTRONIC PRESCRIPTION MU 2013'
    Public Property eRx_MU1_Change() As String
        Get
            Return _eRx_MU1_Change
        End Get
        Set(ByVal value As String)
            _eRx_MU1_Change = value
        End Set
    End Property

    'REPORT CLINICAL QM MU 2013'
    Public Property eRptClinicalQua_MU1_Change() As String
        Get
            Return _eRptClinicalQua_MU1_Change
        End Get
        Set(ByVal value As String)
            _eRptClinicalQua_MU1_Change = value
        End Set
    End Property

    'ELECTRONIC COPY OF PAT. INFO. MU 2013' 
    Public Property eCopyPatHealthInfo_MU1_Change() As String
        Get
            Return _eCopyPatHealthInfo_MU1_Change
        End Get
        Set(ByVal value As String)
            _eCopyPatHealthInfo_MU1_Change = value
        End Set
    End Property

    'ELECTRONICALLY EXCH cLINICAL INFO MU 2013'
    Public Property eExchangeClinInfor_MU1_Change() As String
        Get
            Return _eExchangeClinInfor_MU1_Change
        End Get
        Set(ByVal value As String)
            _eExchangeClinInfor_MU1_Change = value
        End Set
    End Property

    'To Save Clinical Documents Export Path
    Public Property ClinicalDocfilePath() As String
        Get
            Return _sClinicalDocfilePath
        End Get
        Set(ByVal value As String)
            _sClinicalDocfilePath = value
        End Set
    End Property

    Public Property CDAPrivacyText() As String
        '' Added by Ujwala for certification criteria - 170.315(b)(7) Data Segmentation for Privacy – Send - Start
        Get
            Return _CDAPrivacyText
        End Get
        Set(ByVal value As String)
            _CDAPrivacyText = value
        End Set
        '' Added by Ujwala for certification criteria - 170.315(b)(7) Data Segmentation for Privacy – Send - End
    End Property

    'to save the CCD files
    Public Property CCDfilePath() As String
        Get
            Return _sCCDfilePath
        End Get
        Set(ByVal value As String)
            _sCCDfilePath = value
        End Set
    End Property
    Public Property StylesheetfilePath() As String
        Get
            Return _sStylesheetfilePath
        End Get
        Set(ByVal value As String)
            _sStylesheetfilePath = value
        End Set
    End Property
    Public Property CDAValidatorUrl() As String
        Get
            Return _CDAValidateUrl
        End Get
        Set(value As String)
            _CDAValidateUrl = value
        End Set
    End Property


    'start of code commented by manoj jadhav on 20120730 for moving service setiings to Respective Service
    ''******Sandip Deshmukh 22 Nov 2007
    'Public Property HL7SendingFacility() As String
    '    Get
    '        Return _sHL7SendingFacility
    '    End Get
    '    Set(ByVal value As String)
    '        _sHL7SendingFacility = value
    '    End Set
    'End Property
    'Public Property HL7ReceivingApplication() As String
    '    Get
    '        Return _sHL7ReceivingApplication
    '    End Get
    '    Set(ByVal value As String)
    '        _sHL7ReceivingApplication = value
    '    End Set
    'End Property
    'Public Property HL7ReceivingFacility() As String
    '    Get
    '        Return _sHL7ReceivingFacility
    '    End Get
    '    Set(ByVal value As String)
    '        _sHL7ReceivingFacility = value
    '    End Set
    'End Property
    'end of code commented by manoj jadhav on 20120730 for moving service setiings to Respective Service

    '****** 22 Nov 2007

    Private m_RCMtoDMSCategory As String = ""
    Public Property RCMtoDMSCategory() As String
        Get
            Return m_RCMtoDMSCategory
        End Get
        Set(ByVal value As String)
            m_RCMtoDMSCategory = value
        End Set
    End Property

    Private m_WelchAllynECGCategory As String = ""
    Public Property WelchAllynECGCategory() As String
        Get
            Return m_WelchAllynECGCategory
        End Get
        Set(ByVal value As String)
            m_WelchAllynECGCategory = value
        End Set
    End Property

    Public Property OMRCategoryFax() As String
        Get
            Return m_OMRCategoryFax
        End Get
        Set(ByVal value As String)
            m_OMRCategoryFax = value
        End Set
    End Property
    Private m_InboxAttachCategory As String = ""
    Public Property InboxAttachCategory() As String
        Get
            Return m_InboxAttachCategory
        End Get
        Set(ByVal value As String)
            m_InboxAttachCategory = value
        End Set
    End Property
    Public Property DBVersion() As String
        Get
            Return _sDBVersion
        End Get
        Set(ByVal value As String)
            _sDBVersion = value
        End Set
    End Property
    Public Property AppVersion() As String
        Get
            Return _sAppVersion
        End Get
        Set(ByVal value As String)
            _sAppVersion = value
        End Set
    End Property

    Public Property gloAdminVersion() As String
        Get
            Return _sgloAdminVersion
        End Get
        Set(ByVal value As String)
            _sgloAdminVersion = value
        End Set
    End Property
    '----------------------------

    'sarika 5th sept 07
    Public Property PendingFaxUserID() As Int64
        Get
            Return _nPendingFaxUserID
        End Get
        Set(ByVal value As Int64)
            _nPendingFaxUserID = value
        End Set
    End Property
    Private _nInboxAttacheUserID As Int64
    Public Property InboxAttacheUserID() As Int64
        Get
            Return _nInboxAttacheUserID
        End Get
        Set(ByVal value As Int64)
            _nInboxAttacheUserID = value
        End Set
    End Property
    Public Property RecieveFaxUserID() As Int64
        Get
            Return _nRecieveFaxUserID
        End Get
        Set(ByVal value As Int64)
            _nRecieveFaxUserID = value
        End Set
    End Property
    '----------------------------------
    ''''''''''''''''''''''Property Added by Anil 0n 20071119
    Public Property AutoGeneratePatientCode() As Boolean
        Get
            Return _blnAutoPatientCode
        End Get
        Set(ByVal value As Boolean)
            _blnAutoPatientCode = value
        End Set
    End Property
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Added by Mitesh 0n 20120914
    Public Property IncludeFrequencyAbbrevationInRxMeds() As Boolean
        Get
            Return _blnIncludeFrequencyAbbrevationInRxMeds
        End Get
        Set(ByVal value As Boolean)
            _blnIncludeFrequencyAbbrevationInRxMeds = value
        End Set
    End Property


    'sarika 18th jan 08 for gloReporting authentication settings
    Public Property ReportingUserName() As String
        Get
            Return _sRptUserName
        End Get
        Set(ByVal value As String)
            _sRptUserName = value
        End Set
    End Property

    Public Property ReportingPassword() As String
        Get
            Return _sRptPassword
        End Get
        Set(ByVal value As String)
            _sRptPassword = value
        End Set
    End Property

    ''sarika 18th jan 08 for gloReporting authentication settings

    'sarika UseFaxNoPrefix  12th april 08
    Public Property UseFaxNoPrefix() As Boolean
        Get
            Return _blnUseFaxNoPrefix
        End Get
        Set(ByVal value As Boolean)
            _blnUseFaxNoPrefix = value
        End Set
    End Property

    Public Property FaxNoPrefix() As String
        Get
            Return _sFaxNoPrefix
        End Get
        Set(ByVal value As String)
            _sFaxNoPrefix = value
        End Set
    End Property

    '=======0--------------sarika UseFaxNoPrefix  12th april 08
    'sarika internet fax
    Public Property InternetFax() As Boolean
        Get
            Return _blnInternetFax
        End Get
        Set(ByVal value As Boolean)
            _blnInternetFax = value
        End Set
    End Property
    ''Integrated By Mayuri 20101020
    Public Property UseSignatureDelegates() As Boolean
        Get
            Return _UseSignatureDelegates

        End Get
        Set(ByVal value As Boolean)
            _UseSignatureDelegates = value

        End Set
    End Property

    'eFax Login Key

    'Public Property eFaxUserID() As String
    '    Get
    '        Return _seFaxUserID
    '    End Get
    '    Set(ByVal value As String)
    '        _seFaxUserID = value
    '    End Set
    'End Property

    'Public Property eFaxUserPassword() As String
    '    Get
    '        Return _seFaxUserPassword
    '    End Get
    '    Set(ByVal value As String)
    '        _seFaxUserPassword = value
    '    End Set
    'End Property
    'sarika internet fax

    Public Property AllowRefillcancel() As Boolean
        Get
            Return _bAllowRefillcancel
        End Get
        Set(ByVal value As Boolean)
            _bAllowRefillcancel = value
        End Set
    End Property

    Public Property AutoEligibility() As Boolean
        Get
            Return _bAutoEligibility
        End Get
        Set(ByVal value As Boolean)
            _bAutoEligibility = value
        End Set
    End Property

    'sarika internet fax'
    Public Property eFaxDirDownload() As String
        Get
            Return _seFaxDirDownload
        End Get
        Set(ByVal value As String)
            _seFaxDirDownload = value
        End Set
    End Property
    'sarika internet fax'

    '' SagarK 20080802 
    Public Property MCIRReportPath() As String
        Get
            Return _MCIRReportPath
        End Get
        Set(ByVal value As String)
            _MCIRReportPath = value
        End Set
    End Property
    ''

    Public Property SSPRODUCTIONACCOUNTID() As String
        Get
            Return _sSSPRODUCTIONACCOUNTID
        End Get
        Set(ByVal value As String)
            _sSSPRODUCTIONACCOUNTID = value
        End Set
    End Property

    Public Property SSPRODUCTIONPORTALID() As String
        Get
            Return _sSSPRODUCTIONPORTALID
        End Get
        Set(ByVal value As String)
            _sSSPRODUCTIONPORTALID = value
        End Set
    End Property

    Public Property SSPRODUCTION10DOT6PORTALID() As String
        Get
            Return _sSSPRODUCTION10DOT6PORTALID
        End Get
        Set(ByVal value As String)
            _sSSPRODUCTION10DOT6PORTALID = value
        End Set
    End Property

    Public Property STAGING10DOT6ACCOUNTID() As String
        Get
            Return _sSTAGING10DOT6ACCOUNTID
        End Get
        Set(ByVal value As String)
            _sSTAGING10DOT6ACCOUNTID = value
        End Set
    End Property

    Public Property STAGING10DOT6PORTALID() As String
        Get
            Return _sSTAGING10DOT6PORTALID
        End Get
        Set(ByVal value As String)
            _sSTAGING10DOT6PORTALID = value
        End Set
    End Property

    Public Property STAGING8DOT1PORTALID() As String
        Get
            Return _sSTAGING8DOT1PORTALID
        End Get
        Set(ByVal value As String)
            _sSTAGING8DOT1PORTALID = value
        End Set
    End Property

    'code added by supriya 11/7/2008
    Public Property IsSurescriptEnabled() As Boolean
        Get
            Return _IsSurescriptEnabled
        End Get
        Set(ByVal value As Boolean)
            _IsSurescriptEnabled = value
        End Set
    End Property
    'added 13/8/2014

    Public Property IsSecureMessageEnabled() As Boolean
        Get
            Return _IsSecureMessageEnabled
        End Get
        Set(ByVal value As Boolean)
            _IsSecureMessageEnabled = value
        End Set
    End Property

    Public Property IsPatientSavingMessageEnabled() As Boolean
        Get
            Return _IsPatientSavingMessageEnabled
        End Get
        Set(ByVal value As Boolean)
            _IsPatientSavingMessageEnabled = value
        End Set
    End Property
    Public Property IsXDMSecureMessageEnable() As Boolean
        Get
            Return _IsXDMSecureMessageEnable
        End Get
        Set(ByVal value As Boolean)
            _IsXDMSecureMessageEnable = value
        End Set
    End Property
    Public Property SecuremsgUrlStaging() As String
        Get
            Return _sSecuremsgUrlStaging
        End Get
        Set(ByVal value As String)
            _sSecuremsgUrlStaging = value
        End Set
    End Property
    Public Property SecuremsgUrlProduction() As String
        Get
            Return _sSecuremsgUrlProduction
        End Get
        Set(ByVal value As String)
            _sSecuremsgUrlProduction = value
        End Set
    End Property
    Public Property IsSecureStagingServer() As Boolean
        Get
            Return _IsSecureStagingServer
        End Get
        Set(ByVal value As Boolean)
            _IsSecureStagingServer = value
        End Set
    End Property

    Public Property IsStagingServer() As Boolean
        Get
            Return _IsStagingServer
        End Get
        Set(ByVal value As Boolean)
            _IsStagingServer = value
        End Set
    End Property
    'code added for NCPDP 10.6 changes
    Public Property Is8dot1PendingRefReqComplete() As Boolean
        Get
            Return _Is8dot1PendingRefReqComplete
        End Get
        Set(ByVal value As Boolean)
            _Is8dot1PendingRefReqComplete = value
        End Set
    End Property
    'code added for NCPDP 10.6 changes
    Public Property IsNCPDP10dot6Ver() As Boolean
        Get
            Return _IsNCPDP10dot6Ver
        End Get
        Set(ByVal value As Boolean)
            _IsNCPDP10dot6Ver = value
        End Set
    End Property
    Public Property IsMedHistory10Dot6Enable() As Boolean
        Get
            Return _IsMedHistory10Dot6Enable
        End Get
        Set(ByVal value As Boolean)
            _IsMedHistory10Dot6Enable = value
        End Set
    End Property
    'Public Property MedHistoryPortalURL() As String
    '    Get
    '        Return _MedHistoryPortalURL
    '    End Get
    '    Set(ByVal value As String)
    '        _MedHistoryPortalURL = value
    '    End Set
    'End Property



    'code added by supriya 11/7/2008

    Public Property ShowAdvancedGrowthChart() As Boolean
        Get
            Return _ShowAdvancedGrowthChart
        End Get
        Set(ByVal value As Boolean)
            _ShowAdvancedGrowthChart = value
        End Set
    End Property

    'by sudhir 20081111
    Public Property ShowAgeInDays() As Boolean
        Get
            Return _ShowAgeInDays
        End Get
        Set(ByVal value As Boolean)
            _ShowAgeInDays = value
        End Set
    End Property

    Public Property AgeLimit() As Int64
        Get
            Return _AgeLimit
        End Get
        Set(ByVal value As Int64)
            _AgeLimit = value
        End Set
    End Property
    'sudhir 20081124
    Public Property AgeLimitForWeeks() As Int64
        Get
            Return _AgeLimitForWeeks
        End Get
        Set(ByVal value As Int64)
            _AgeLimitForWeeks = value
        End Set
    End Property

    Public Property GrowthChartPercentile() As frmSettings_New.enumGrowthChartPercentile
        Get
            Return _GrowthChartPercentile
        End Get
        Set(ByVal value As frmSettings_New.enumGrowthChartPercentile)
            _GrowthChartPercentile = value
        End Set
    End Property

    'sarika 
    'DMS 20080908 -- for Loading no of recieved faxes in DMS
    Public Property LoadNoOfFaxes() As Integer
        Get
            Return _nLoadNoOfFaxes
        End Get
        Set(ByVal value As Integer)
            _nLoadNoOfFaxes = value
        End Set
    End Property
    '----------


    'sarika PM DB Credentials 20081128
    Public Property PMServerName() As String
        Get
            Return m_PMServerName
        End Get
        Set(ByVal value As String)
            m_PMServerName = value
        End Set
    End Property

    Public Property TimeServerName() As String
        Get
            Return m_TimeServerName
        End Get
        Set(ByVal value As String)
            m_TimeServerName = value
        End Set
    End Property

    Public Property PMDatabaseName() As String
        Get
            Return m_PMDatabaseName
        End Get
        Set(ByVal value As String)
            m_PMDatabaseName = value
        End Set
    End Property

    Public Property PMUserID() As String
        Get
            Return m_PMSQLUserId
        End Get
        Set(ByVal value As String)
            m_PMSQLUserId = value
        End Set
    End Property
    Public Property PMSQLPwd() As String
        Get
            Return m_PMSQLPwd
        End Get
        Set(ByVal value As String)
            m_PMSQLPwd = value
        End Set
    End Property

    Public Property PMSQLAuthentication() As Boolean
        Get
            Return m_blnSQLAuthentication
        End Get
        Set(ByVal value As Boolean)
            m_blnSQLAuthentication = value
        End Set
    End Property

    Public Property PMConnectionString() As String
        Get
            Return m_PMConnectionString
        End Get
        Set(ByVal value As String)
            m_PMConnectionString = value
        End Set
    End Property

    Public Property PMAddPatient() As Boolean
        Get
            Return m_blnAddPatient
        End Get
        Set(ByVal value As Boolean)
            m_blnAddPatient = value
        End Set
    End Property
    Public Property SignatureText() As String
        Get
            Return m_SignatureText
        End Get
        Set(ByVal value As String)
            m_SignatureText = value
        End Set
    End Property
    Public Property CoSignatureText() As String
        Get
            Return m_CoSignatureText
        End Get
        Set(ByVal value As String)
            m_CoSignatureText = value
        End Set
    End Property
    '----

    Public Property DMSImageDIP() As Int32
        Get
            Return _nDMSImageDIP
        End Get
        Set(ByVal value As Int32)
            _nDMSImageDIP = value
        End Set
    End Property

    Public Property UseFileCompression() As Boolean
        Get
            Return _bUseFileCompression
        End Get
        Set(ByVal value As Boolean)
            _bUseFileCompression = value
        End Set
    End Property
    'cOMMENTED BY SHUBHANGI 20100507
    '\\Suraj 20090123
    'Public Property SplitDocument() As Boolean
    '    Get
    '        Return _SplitDoc
    '    End Get
    '    Set(ByVal value As Boolean)
    '        _SplitDoc = value
    '    End Set
    'End Property

    '\\Suraj 20090128 RecoveryDMS Check
    Public Property RecoveryDMSV2Doc() As Boolean
        Get
            Return m_RecoverDMSV2
        End Get
        Set(ByVal value As Boolean)
            m_RecoverDMSV2 = value
        End Set
    End Property
    Public Property RecoveryDMSV2Path() As String
        Get
            Return m_RecoverDMSV2Path
        End Get
        Set(ByVal value As String)
            m_RecoverDMSV2Path = value
        End Set
    End Property
    '\\suraj 20090128
    Public Property DeleteDMSDocAfterMigration() As Boolean
        Get
            Return m_DeleteDMSDoc
        End Get
        Set(ByVal value As Boolean)
            m_DeleteDMSDoc = value
        End Set
    End Property
    Public Property OccMedDMSCategory() As String
        Get
            Return strOccMedDMSCategory
        End Get
        Set(ByVal value As String)
            strOccMedDMSCategory = value
        End Set
    End Property

    'Sandip Darade 200090210
    Public Property Usecodedhistory() As Boolean
        Get
            Return _bUsecodedhistory
        End Get
        Set(ByVal value As Boolean)
            _bUsecodedhistory = value
        End Set
    End Property

    Public Property EMChiefComplaintType() As String
        Get
            Return _EMChiefComplaintType
        End Get
        Set(ByVal value As String)
            _EMChiefComplaintType = value
        End Set
    End Property
    'Sanjog For Smoking Status
    Public Property ShowSmokingColumn() As Integer
        Get
            Return _ShowSmokingColumn
        End Get
        Set(ByVal value As Integer)
            _ShowSmokingColumn = value
        End Set
    End Property
    'Sanjog For Smoking Status

    'Sanjog on 2011 October 5 to as DAS setting 

    Public Property IsRetrieveESR() As Integer
        Get
            Return _IsRetrieveESR
        End Get
        Set(ByVal value As Integer)
            _IsRetrieveESR = value
        End Set
    End Property

    Public Property ESRDay() As String
        Get
            Return _ESRDay
        End Get
        Set(ByVal value As String)
            _ESRDay = value
        End Set
    End Property

    Public Property IsRetrieveCRP() As Integer
        Get
            Return _IsRetrieveCRP
        End Get
        Set(ByVal value As Integer)
            _IsRetrieveCRP = value
        End Set
    End Property

    Public Property CRPDay() As String
        Get
            Return _CRPDay
        End Get
        Set(ByVal value As String)
            _CRPDay = value
        End Set
    End Property
    'Sanjog on 2011 October 5 to as DAS setting 

    'sanjog 20100615-End'
    Public Property EMOnOff() As String
        Get
            Return _EMOnOff
        End Get
        Set(ByVal value As String)
            _EMOnOff = value
        End Set
    End Property
    'sanjog 20100615-Start'
    'Shubhangi 20090306'
    Public Property OtherPatientType() As Boolean
        Get
            Return _OtherPatientType
        End Get
        Set(ByVal value As Boolean)
            _OtherPatientType = value
        End Set
    End Property
    ' Sandip Darade 20090328 
    '' Show Coded History code or desc or both 
    Public Property ShowCodedHistory() As String
        Get
            Return _sShowCodedHistory
        End Get
        Set(ByVal value As String)
            _sShowCodedHistory = value
        End Set
    End Property
    Public Property CodeFieldsinHistory() As String
        Get
            Return _sCodeFieldsinHistory
        End Get
        Set(ByVal value As String)
            _sCodeFieldsinHistory = value
        End Set
    End Property

    Public Property IM_ReminderDays() As Integer
        Get
            Return _nIM_ReminderDays
        End Get
        Set(ByVal value As Integer)
            _nIM_ReminderDays = value
        End Set
    End Property
    Public Property OTCIssueWarning() As Boolean
        Get
            Return _bOTCIssueWarning
        End Get
        Set(ByVal value As Boolean)
            _bOTCIssueWarning = value
        End Set
    End Property
    'sarika SendEMail 20090502

    'Public Property IsSendEMail() As Boolean
    '    Get
    '        Return _bIsSendEMail
    '    End Get
    '    Set(ByVal value As Boolean)
    '        _bIsSendEMail = value
    '    End Set
    'End Property

    'Public Property SendEmailAddress() As String
    '    Get
    '        Return _sSendEmailAddress
    '    End Get
    '    Set(ByVal value As String)
    '        _sSendEmailAddress = value
    '    End Set
    'End Property


    'sarika RxHUB Server Settings 20090602
    Public Property IsAdvanceRxEnabled() As Boolean
        Get
            Return _bIsAdvanceRxEnabled
        End Get
        Set(ByVal value As Boolean)
            _bIsAdvanceRxEnabled = value
        End Set
    End Property
    Public Property IsAdvanceRxStagingServer() As Boolean
        Get
            Return _bIsAdvanceRxStagingServer
        End Get
        Set(ByVal value As Boolean)
            _bIsAdvanceRxStagingServer = value
        End Set
    End Property
    Public Property EARDirectory() As String
        Get
            Return _sEARDirectory
        End Get
        Set(ByVal value As String)
            _sEARDirectory = value
        End Set
    End Property
    '--------------
    '20090819 RxHUB participantID 
    Public Property ParticipantID() As String
        Get
            Return _participantid
        End Get
        Set(ByVal value As String)
            _participantid = value
        End Set
    End Property

    '20090819 RxHUB rxPassword 
    Public Property RxPassword() As String
        Get
            Return _rxPassword
        End Get
        Set(ByVal value As String)
            _rxPassword = value
        End Set
    End Property

    Public Property PDMPParticipantID() As String
        Get
            Return _PDMPParticipantID
        End Get
        Set(ByVal value As String)
            _PDMPParticipantID = value
        End Set
    End Property


    Public Property PDMP_password() As String
        Get
            Return _PDMPPassword
        End Get
        Set(ByVal value As String)
            _PDMPPassword = value
        End Set
    End Property

    'sarika SiteID setting 20090607
    Public Property SiteID() As String
        Get
            Return _sSiteID
        End Get
        Set(ByVal value As String)
            _sSiteID = value
        End Set
    End Property
    '---
    ' Sandip Darade 20090622
    '' 
    Public Property DefaultPatientGender() As String
        Get
            Return _sDefaultPatientGender
        End Get
        Set(ByVal value As String)
            _sDefaultPatientGender = value
        End Set
    End Property
    'Sandip Darade 20090709
    Public Property DefaultFeeSpeciality() As String
        Get
            Return _DefaultFeeSpeciality
        End Get
        Set(ByVal Value As String)
            _DefaultFeeSpeciality = Value
        End Set
    End Property
    Public Property DefaultCarrierNumber() As String
        Get
            Return _DefaultCarrierNumber
        End Get
        Set(ByVal Value As String)
            _DefaultCarrierNumber = Value
        End Set
    End Property
    Public Property DefaultLocality() As String
        Get
            Return _DefaultLocality
        End Get
        Set(ByVal Value As String)
            _DefaultLocality = Value
        End Set
    End Property
    Public Property ClinicFeeSchedule() As String
        Get
            Return _ClinicFeeSchedule
        End Get
        Set(ByVal Value As String)
            _ClinicFeeSchedule = Value
        End Set
    End Property
    Public Property NoOfClaimPerBatch() As String
        Get
            Return _NoOfClaimPerBatch
        End Get
        Set(ByVal Value As String)
            _NoOfClaimPerBatch = Value
        End Set
    End Property
    Public Property NoOfModifiers() As String
        Get
            Return _NoOfModifiers
        End Get
        Set(ByVal Value As String)
            _NoOfModifiers = Value
        End Set
    End Property
    Public Property ShowLabCol() As String
        Get
            Return _ShowLabCol
        End Get
        Set(ByVal Value As String)
            _ShowLabCol = Value
        End Set
    End Property
    Public Property Defaultfeecharges() As String
        Get
            Return _Defaultfeecharges
        End Get
        Set(ByVal Value As String)
            _Defaultfeecharges = Value
        End Set
    End Property

    Public Property SetCPTtoAllICD9() As Boolean
        Get
            Return _SetCPTtoAllICD9
        End Get
        Set(ByVal value As Boolean)
            _SetCPTtoAllICD9 = value

        End Set
    End Property

    Public Property SetProblemDxAsDefaultForSmartDx() As Boolean
        Get
            Return _SetProblemDxAsDefaultForSmartDx
        End Get
        Set(ByVal value As Boolean)
            _SetProblemDxAsDefaultForSmartDx = value
        End Set
    End Property
    Public Property EnableSmartDxReviewScreen() As Boolean
        Get
            Return _bEnableSmartDxReviewScreen
        End Get
        Set(ByVal value As Boolean)
            _bEnableSmartDxReviewScreen = value
        End Set
    End Property
    Public Property DefaultDxCPTPatientProblemDiagnosis() As Boolean
        Get
            Return _bDefaultDxCPTPatientProblemDiagnosis
        End Get
        Set(ByVal value As Boolean)
            _bDefaultDxCPTPatientProblemDiagnosis = value
        End Set
    End Property

    Public Property ICD9Driven() As Boolean
        Get
            Return _ICD9Driven
        End Get
        Set(ByVal value As Boolean)
            _ICD9Driven = value
        End Set
    End Property

    Public Property Show8ICD9() As Boolean
        Get
            Return _Show8ICD9

        End Get
        Set(ByVal value As Boolean)
            _Show8ICD9 = value

        End Set
    End Property
    Public Property Show4Modifier() As Boolean
        Get
            Return _Show4Modifier

        End Get
        Set(ByVal value As Boolean)
            _Show4Modifier = value

        End Set
    End Property

    'removed setting in 7020 as per PRD discussion for Incident #00006175
    'Public Property PrescriptionProviderAssociation() As Boolean
    '    Get
    '        Return _PrescriptionProviderAssociation

    '    End Get
    '    Set(ByVal value As Boolean)
    '        _PrescriptionProviderAssociation = value

    '    End Set
    'End Property
    Public Property PatientQuestionnaire() As Boolean
        Get
            Return _PatientQuestionnaire

        End Get
        Set(ByVal value As Boolean)
            _PatientQuestionnaire = value

        End Set
    End Property

    ''Sandip Darade 20090830

    Public Property GeniusPath() As String
        Get
            Return m_GeniusPath
        End Get
        Set(ByVal value As String)
            m_GeniusPath = value
        End Set
    End Property

    '\\Suraj 20090207   Code
    Public Property GeniusCode() As String
        Get
            Return m_GeniusCode
        End Get
        Set(ByVal value As String)
            m_GeniusCode = value
        End Set
    End Property
    ''Sandip Darade 20091007
    Public Property Country() As String
        Get
            Return _Country
        End Get
        Set(ByVal Value As String)
            _Country = Value
        End Set
    End Property
    Public Property SameDayApptType() As String
        Get
            Return _SameDayApptType
        End Get
        Set(ByVal Value As String)
            _SameDayApptType = Value
        End Set
    End Property
    Public Property FutureApptType() As String
        Get
            Return _FutureApptType
        End Get
        Set(ByVal Value As String)
            _FutureApptType = Value
        End Set
    End Property
    'Shubhangi 20100105
    Public Property EMExamType() As [Enum]
        Get
            Return _EMExamtype
        End Get
        Set(ByVal value As [Enum])
            _EMExamtype = value
        End Set
    End Property
    'End
    ''Shweta 20100125   
    Public Property EmdeonUserName() As String
        Get
            Return _EmdeonUserName
        End Get
        Set(ByVal value As String)
            _EmdeonUserName = value
        End Set
    End Property
    Public Property EmdeonPassword() As String
        Get
            Return _EmdeonPassword
        End Get
        Set(ByVal value As String)
            _EmdeonPassword = value
        End Set
    End Property
    Public Property EmdeonURL() As String
        Get
            Return _EmdeonURL
        End Get
        Set(ByVal value As String)
            _EmdeonURL = value
        End Set
    End Property
    Public Property EmdeonFacilityCode() As String
        Get
            Return _EmdeonFacilityCode
        End Get
        Set(ByVal value As String)
            _EmdeonFacilityCode = value
        End Set
    End Property

    Public Property EmdeonGetLabOrdersFromDaysOnReload() As Int16
        Get
            Return _EmdeonGetLabOrdersFromDaysOnReload
        End Get
        Set(ByVal value As Int16)
            _EmdeonGetLabOrdersFromDaysOnReload = value
        End Set
    End Property
    '' chetan added for snowmade setting 
    Public Property SMServerName() As String
        Get
            Return m_SMServerName
        End Get
        Set(ByVal value As String)
            m_SMServerName = value
        End Set
    End Property



    Public Property SMDatabaseName() As String
        Get
            Return m_SMDatabaseName
        End Get
        Set(ByVal value As String)
            m_SMDatabaseName = value
        End Set
    End Property

    Public Property SMSQLUserId() As String
        Get
            Return m_SMSQLUserId
        End Get
        Set(ByVal value As String)
            m_SMSQLUserId = value
        End Set
    End Property

    Public Property SMSQLPwd() As String
        Get
            Return m_SMSQLPwd
        End Get
        Set(ByVal value As String)
            m_SMSQLPwd = value
        End Set
    End Property

    Public Property SMblnSQLAuthentication() As Boolean
        Get
            Return m_SMblnSQLAuthentication
        End Get
        Set(ByVal value As Boolean)
            m_SMblnSQLAuthentication = value
        End Set
    End Property

    Public Property SMblnShowsmdbsetting() As Boolean
        Get
            Return m_SMblnShowsmdbsetting
        End Get
        Set(ByVal value As Boolean)
            m_SMblnShowsmdbsetting = value
        End Set
    End Property

    Public Property SMTrvNode() As String
        Get
            Return m_SMtrv
        End Get
        Set(ByVal value As String)
            m_SMtrv = value
        End Set
    End Property
    Public Property DefaultLabTab() As String
        Get
            Return _DefaultLabTab
        End Get
        Set(ByVal Value As String)
            _DefaultLabTab = Value
        End Set
    End Property

    ''Added for SharePoint Server setting on 03-jan-2012
    Public Property SharepointSrvNm() As String
        Get
            Return _sSharepointSrvNm
        End Get
        Set(ByVal value As String)
            _sSharepointSrvNm = value
        End Set
    End Property

    Public Property IsCommunitystaging() As Boolean
        Get
            Return _IsCommunitystaging
        End Get
        Set(ByVal value As Boolean)
            _IsCommunitystaging = value
        End Set
    End Property
    'Public Property SPCommSrvNm() As String
    '    Get
    '        Return _sSPCommSrvNm
    '    End Get
    '    Set(ByVal value As String)
    '        _sSPCommSrvNm = value
    '    End Set
    'End Property


    Public Property SharepointSiteNm() As String
        Get
            Return _sSharepointSiteNm
        End Get
        Set(ByVal value As String)
            _sSharepointSiteNm = value
        End Set
    End Property

    Public Property SharepointAuthentication() As String
        Get
            Return _sSharepointAuthentication
        End Get
        Set(ByVal value As String)
            _sSharepointAuthentication = value
        End Set
    End Property
    Public Property DomainName() As String
        Get
            Return _sDomainName
        End Get
        Set(ByVal value As String)
            _sDomainName = value
        End Set
    End Property
    Public Property gloCommunityFeature() As Boolean
        Get
            Return _blnglocommfeature
        End Get
        Set(ByVal value As Boolean)
            _blnglocommfeature = value
        End Set

    End Property

    Public Property gloCommunityInstalled() As Boolean
        Get
            Return _blnglocomminstalled
        End Get
        Set(ByVal value As Boolean)
            _blnglocomminstalled = value
        End Set

    End Property

    ''End
    Public Property ADFSServerName() As String
        Get
            Return _sADFSServerName
        End Get
        Set(ByVal value As String)
            _sADFSServerName = value
        End Set
    End Property



    ''Start :: SnowMade ConnectionString Settings
    'Public Property SMConnectionString() As String
    '    Get
    '        Return m_SMConnectionString
    '    End Get
    '    Set(ByVal value As String)
    '        m_SMConnectionString = value
    '    End Set

    'End Property
    'End :: SnowMade ConnectionString Settings



    'Removed on 22/2/2010--by Madan-- According to mail dated on 22/2/2010 from Durga Prasad
    'Public Property EmdeonDescription() As String
    '    Get
    '        Return _EmdeonDescription
    '    End Get
    '    Set(ByVal value As String)
    '        _EmdeonDescription = value
    '    End Set
    'End Property
    'End Madan
    'End Shweta
    'Removed on ---20100219
    'Madan 20100213  Added for gloLab.. 
    'Public Property GloLab_Pat() As Boolean
    '    Get
    '        Return _gloLab_Pat
    '    End Get
    '    Set(ByVal Value As Boolean)
    '        _gloLab_Pat = Value
    '    End Set
    'End Property
    'Added for hsi_label
    Public Property GloLab_Hsilb() As String
        Get
            Return _gloLab_Hsilb
        End Get
        Set(ByVal value As String)
            _gloLab_Hsilb = value
        End Set
    End Property

    'End Madan
    Public Property GloLab_Billing() As String
        Get
            Return _gloLab_billing
        End Get
        Set(ByVal value As String)
            _gloLab_billing = value
        End Set
    End Property
    'removed---20100302-- by madan
    'Public Property GloLab_defaultUser() As String
    '    Get
    '        Return _gloLab_defaultUser
    '    End Get
    '    Set(ByVal value As String)
    '        _gloLab_defaultUser = value
    '    End Set
    'End Property
    Public Property GloLab_defaultUserID() As Int64
        Get
            Return _gloLab_defaultUserID
        End Get
        Set(ByVal value As Int64)
            _gloLab_defaultUserID = value
        End Set
    End Property

    ''Added  by Abhijeet for Failed Lab Task user selection on 20111122
    Public Property GloLabFailure_DefaultUserID As Int64
        Get
            Return _gloLabFailure_DefaultUserID
        End Get
        Set(value As Int64)
            _gloLabFailure_DefaultUserID = value
        End Set
    End Property

    Public Property GloForecastReconcileDone_defaultUserID() As Int64
        Get
            Return _gloForecastReconcileDone_defaultUserID
        End Get
        Set(ByVal value As Int64)
            _gloForecastReconcileDone_defaultUserID = value
        End Set
    End Property

    Public Property GloHxForecast_defaultUserID As Int64
        Get
            Return _gloHxForecast_defaultUserID
        End Get
        Set(value As Int64)
            _gloHxForecast_defaultUserID = value
        End Set
    End Property

    ''End of changes  by Abhijeet for Failed Lab Task user selection on 20111122

    Public Property VitalSettingsValue() As String
        Get
            Return _VitalSettingsValue
        End Get
        Set(ByVal value As String)
            _VitalSettingsValue = value
        End Set
    End Property

    Public Property ClinicalChartSettingsValue As String

    Public Property FaxExceedsValue As String
    Public Property AllowFaxesValue As String

    Public Property OBVitalSettingsValue As String

    Public Property SignatureFormat As String


    ''Added on 20110912-Mayuri-CCD Settings
    Public Property FullCCDSettingsValue() As String
        Get
            Return _FullCCDSettingsValue
        End Get
        Set(ByVal value As String)
            _FullCCDSettingsValue = value
        End Set
    End Property
    Public Property visitCCDSettings() As String
        Get
            Return _visitCCDSettings
        End Get
        Set(ByVal value As String)
            _visitCCDSettings = value
        End Set
    End Property
    Public Property MUSectionsValue() As String
        Get
            Return _MUSectionsValue
        End Get
        Set(ByVal value As String)
            _MUSectionsValue = value
        End Set
    End Property

    Public Property CCDAAutoDelete() As Boolean
        Get
            Return _CCDAAutoDelete
        End Get
        Set(ByVal value As Boolean)
            _CCDAAutoDelete = value
        End Set
    End Property
    ''End Added on 20110912-Mayuri-CCD Settings
    'Shirish--- Addeon 20100612
    Public Property GloLab_Provider_Usage() As String
        Get
            Return _gloLab_Provider_Usage
        End Get
        Set(ByVal value As String)
            _gloLab_Provider_Usage = value
        End Set
    End Property
    'End... Shirish

    ' -- Added By Rahul Patel on 26-10-2010-----'
    ' -- Property for DMS Database setting -----'
    Public Property DMSServerName() As String
        Get
            Return m_DMSServerName
        End Get
        Set(ByVal value As String)
            m_DMSServerName = value
        End Set
    End Property

    Public Property DMSDatabaseName() As String
        Get
            Return m_DMSDatabaseName
        End Get
        Set(ByVal value As String)
            m_DMSDatabaseName = value
        End Set
    End Property

    Public Property DMSSQLUserId() As String
        Get
            Return m_DMSSQLUserId
        End Get
        Set(ByVal value As String)
            m_DMSSQLUserId = value
        End Set
    End Property
    Public Property DMSSQLPwd() As String
        Get
            Return m_DMSSQLPwd
        End Get
        Set(ByVal value As String)
            m_DMSSQLPwd = value
        End Set
    End Property
    Public Property DMSblnSQLAuthentication() As Boolean
        Get
            Return m_DMSblnSQLAuthentication
        End Get
        Set(ByVal value As Boolean)
            m_DMSblnSQLAuthentication = value
        End Set
    End Property
    ' -- End Of DMS Database property  ------'
    ' -- End By Rahul Patel 26-10-2010 ------'

    'Code added by Rohit of Device Database Property
    Public Property DeviceServerName() As String
        Get
            Return m_DeviceServerName
        End Get
        Set(ByVal value As String)
            m_DeviceServerName = value
        End Set
    End Property

    Public Property DeviceDatabaseName() As String
        Get
            Return m_DeviceDatabaseName
        End Get
        Set(ByVal value As String)
            m_DeviceDatabaseName = value
        End Set
    End Property
    ' -- End Of Device Database property by Rohit on 20010514


    'added by nilesh on 20101025
    'property for gloHL7 Database

    Public Property gloHL7ServerName() As String
        Get
            Return m_gloHL7ServerName
        End Get
        Set(ByVal value As String)
            m_gloHL7ServerName = value
        End Set
    End Property

    Public Property gloHL7DatabaseName() As String
        Get
            Return m_gloHL7DatabaseName
        End Get
        Set(ByVal value As String)
            m_gloHL7DatabaseName = value
        End Set
    End Property

    Public Property gloHL7SQLUserID() As String
        Get
            Return m_gloHL7SQLUserID
        End Get
        Set(ByVal value As String)
            m_gloHL7SQLUserID = value
        End Set
    End Property

    Public Property gloHL7SQLPassword() As String
        Get
            Return m_gloHL7SQLPassword
        End Get
        Set(ByVal value As String)
            m_gloHL7SQLPassword = value
        End Set
    End Property

    Public Property gloHL7blnSQLAuthentication() As String
        Get
            Return m_gloHL7blnSQLAuthentication
        End Get
        Set(ByVal value As String)
            m_gloHL7blnSQLAuthentication = value
        End Set
    End Property


    'end by nilesh on 20101025
    'Added by madan-20101112
    Public Property gloVaultVisibility() As String
        Get
            Return _gloVaultVisiblility
        End Get
        Set(ByVal value As String)
            _gloVaultVisiblility = value
        End Set
    End Property
    'End madan

    ''Added by Abhijeet on 20101120
    Public Property PatientSpecificResultRange() As String
        Get
            Return m_PatientSpecificResultRange
        End Get
        Set(ByVal value As String)
            m_PatientSpecificResultRange = value
        End Set
    End Property
    ''End of changes by ABhijeet on 20101120

    ''Added by pradeep on 20110106 for page break on pharmacy change 
    Public Property PrintMultipleRx_PerScriptPage_setting() As Boolean
        Get
            Return _bln_PrintMultipleRx_PerScriptPage_setting
        End Get
        Set(ByVal value As Boolean)
            _bln_PrintMultipleRx_PerScriptPage_setting = value
        End Set
    End Property
    Public Property CustomizeRxReportPrintSetting() As Boolean
        Get
            Return _bln_CustomizeRxReportPrintSetting
        End Get
        Set(ByVal value As Boolean)
            _bln_CustomizeRxReportPrintSetting = value
        End Set
    End Property
    ''End of changes by pradeep
    Public Property PrintPharmacyOnRxReportSetting() As Boolean
        Get
            Return _bln_PrintPharmacyOnRxReportSetting
        End Get
        Set(ByVal value As Boolean)
            _bln_PrintPharmacyOnRxReportSetting = value
        End Set
    End Property

    '' added by Manoj Jadhav on 20110314
    Public Property GENERALMESSAGELOGPAGESIZE() As Long
        Get
            Return _GENERALMESSAGELOGPAGESIZE
        End Get
        Set(ByVal value As Long)
            _GENERALMESSAGELOGPAGESIZE = value
        End Set
    End Property
    '' ended by Manoj Jadhav on 20110314
    ''Added by madan for medfusion interface 20110527
    Public Property MultipleSupervisorsforPaperRx() As Boolean
        Get
            Return _blnMultipleSupervisorsforPaperRx
        End Get
        Set(ByVal value As Boolean)
            _blnMultipleSupervisorsforPaperRx = value
        End Set
    End Property
    ''End madan changes for medfusion.
    Public Property UseMedfusionInterface() As Boolean
        Get
            Return _UseMedfusionInterface
        End Get
        Set(ByVal value As Boolean)
            _UseMedfusionInterface = value
        End Set
    End Property
    ''Added for MU2 Patient Portal implementation on 20130620
    Public Property UsePatientPortal() As Boolean
        Get
            Return _UsePatientPortal
        End Get
        Set(ByVal value As Boolean)
            _UsePatientPortal = value
        End Set
    End Property

    Private sHoosKoosSurveyService As String
    Public Property HoosKoosSurveyService() As String
        Get
            Return sHoosKoosSurveyService
        End Get
        Set(ByVal value As String)
            sHoosKoosSurveyService = value
        End Set
    End Property
    Private sPDMPService As String
    Public Property PDMPService() As String
        Get
            Return sPDMPService
        End Get
        Set(ByVal value As String)
            sPDMPService = value
        End Set
    End Property
    Private _IsPDMPAuto As Boolean
    Public Property IsPDMPAuto As Boolean
        Get
            Return _IsPDMPAuto
        End Get
        Set(ByVal value As Boolean)
            _IsPDMPAuto = value
        End Set
    End Property
    Private _IsPDMPSendToDMS As Boolean
    Public Property IsPDMPSendToDMS As Boolean
        Get
            Return _IsPDMPSendToDMS
        End Get
        Set(ByVal value As Boolean)
            _IsPDMPSendToDMS = value
        End Set
    End Property

    Public Property PatientPortalLabAckNotification() As Boolean
        Get
            Return _PatientPortalLabAckNotification
        End Get
        Set(ByVal value As Boolean)
            _PatientPortalLabAckNotification = value
        End Set
    End Property

    Public Property PatientPortalStatementNotification() As Boolean
        Get
            Return _PatientPortalStatementNotification
        End Get
        Set(ByVal value As Boolean)
            _PatientPortalStatementNotification = value
        End Set
    End Property
    '' added on 6-dec-2012 for global setting on Genius and hl7 outbound 
    Public Property globlnhl7OutBound As Boolean
        Get
            Return _globlnhl7outbound
        End Get
        Set(value As Boolean)
            _globlnhl7outbound = value
        End Set
    End Property

    Public Property globlnhl7Sendpatientdet As Boolean
        Get
            Return _globlnhl7SendPatientdet
        End Get
        Set(value As Boolean)
            _globlnhl7SendPatientdet = value
        End Set
    End Property

    Public Property globlnhl7Sendchargeonsacl As Boolean
        Get
            Return _globlnhl7Sendchargeonsacl
        End Get
        Set(value As Boolean)
            _globlnhl7Sendchargeonsacl = value
        End Set
    End Property
    Public Property globlnhl7SendImmudet As Boolean
        Get
            Return _globlnhl7SendImmudet
        End Get
        Set(value As Boolean)
            _globlnhl7SendImmudet = value
        End Set
    End Property
    Public Property globlnhl7Sendapptdet As Boolean
        Get
            Return _globlnhl7Sendapptdet
        End Get
        Set(value As Boolean)
            _globlnhl7Sendapptdet = value
        End Set
    End Property
    Public Property globlnhl7Sendchronsafi As Boolean
        Get
            Return _globlnhl7Sendchronsafi
        End Get
        Set(value As Boolean)
            _globlnhl7Sendchronsafi = value
        End Set
    End Property
    Public Property globlnGenOutBound As Boolean
        Get
            Return _globlnGenOutBound
        End Get
        Set(value As Boolean)
            _globlnGenOutBound = value
        End Set
    End Property

    Public Property globlnGenSendchargeonsacl As Boolean
        Get
            Return _globlnGenSendchargeonsacl
        End Get
        Set(value As Boolean)
            _globlnGenSendchargeonsacl = value
        End Set
    End Property

    Public Property globlnGenSendchargeonsafi As Boolean
        Get
            Return _globlnGenSendchargeonsafi
        End Get
        Set(value As Boolean)
            _globlnGenSendchargeonsafi = value
        End Set
    End Property

    'Start of added by manoj jadhav on 20140220 V8010 for MDM_T02 event
    Public Property globlnhl7SendVisitsumonsacl As Boolean
        Get
            Return _globlnhl7SendVisitsumonsacl
        End Get
        Set(value As Boolean)
            _globlnhl7SendVisitsumonsacl = value
        End Set
    End Property

    Public Property globlnhl7SendVisitsumonsafi As Boolean
        Get
            Return _globlnhl7SendVisitsumonsafi
        End Get
        Set(value As Boolean)
            _globlnhl7SendVisitsumonsafi = value
        End Set
    End Property
    'end of added by manoj jadhav on 20140220 V8010 for MDM_T02 event

    '' added on 6-dec-2012 for global setting on Genius and hl7 outbound 



    'Enable MU2 Features Setting
    Public Property globlnEnableMultipleRaceFeatures() As Boolean
        Get
            Return _globlnEnableMultipleRaceFeatures
        End Get
        Set(ByVal value As Boolean)
            _globlnEnableMultipleRaceFeatures = value
        End Set
    End Property
    ''

    '04-Dec-14 Aniket: Exclude Non NDC Drugs From Erx Measure. Mail by Phill with subject ' prescriptions without an NCD code: OTC'S and Neutraceuticals'
    Public Property ExcludeNonNDCDrugsFromErxMeasure() As Boolean
        Get
            Return _globlnExcludeNonNDCDrugsFromErxMeasure
        End Get
        Set(ByVal value As Boolean)
            _globlnExcludeNonNDCDrugsFromErxMeasure = value
        End Set
    End Property
    Public Property ExcludeControlSubstanceDrugsFromErxMeasure() As Boolean
        Get
            Return _blnExcludeControlSubstanceDrugsFromErxMeasure
        End Get
        Set(ByVal value As Boolean)
            _blnExcludeControlSubstanceDrugsFromErxMeasure = value
        End Set
    End Property

    Public Property EnableSpecializedRegistryReporting() As Boolean
        Get
            Return _blnEnableSpecializedRegistryReporting
        End Get
        Set(ByVal value As Boolean)
            _blnEnableSpecializedRegistryReporting = value
        End Set
    End Property

    Public Property nMessageComunicationPrefID() As Int64
    Public Property nLetterComunicationPrefID() As Int64
    Public Property nSecureMessageComunicationPrefID() As Int64

    ''7022Items: Home Billing- Added to save setting for USEAREACODEFORPATIENT in database
    ''Save false if No is selected and true if Yes is selected
    Public Property UseAreaCodeForPatient() As Boolean
        Get
            Return _UseAreaCodeForPatient
        End Get
        Set(ByVal value As Boolean)
            _UseAreaCodeForPatient = value
        End Set
    End Property

    ''START CCDA Setting
    Public Property clinicalCCDASettings() As String
        Get
            Return _ClinicalCCDASettingsValue
        End Get
        Set(ByVal value As String)
            _ClinicalCCDASettingsValue = value
        End Set
    End Property
    Public Property ambulatoryCCDASettings() As String
        Get
            Return _AmbulatoryCCDASettingsValue
        End Get
        Set(ByVal value As String)
            _AmbulatoryCCDASettingsValue = value
        End Set
    End Property

    Public Property CCDAImportCategorySettings() As String
        Get
            Return _CCDAImportCategorySettings
        End Get
        Set(ByVal value As String)
            _CCDAImportCategorySettings = value
        End Set
    End Property
    Public Property CCDAViewerURl() As String
        Get
            Return _CCDAViewerURl
        End Get
        Set(ByVal value As String)
            _CCDAViewerURl = value
        End Set
    End Property

    ''END CCDA Setting

    ''Start OB Setting
    Public Property IsOBSpeciality As Boolean
        Get
            Return _bIsOBSpeciality
        End Get
        Set(ByVal value As Boolean)
            _bIsOBSpeciality = value
        End Set
    End Property
    Public Property AutoCaseCloseDays() As String
        Get
            Return _sAutoCaseCloseDays
        End Get
        Set(ByVal Value As String)
            _sAutoCaseCloseDays = Value
        End Set
    End Property
    ''End OB Setting
#End Region
    'End Property Addition by Dipak


    Public Property ClinicalSummaryFamilyHistory() As ClinicalSummaryHistory
        Get
            Return _ClinicalSummaryFamilyHistory
        End Get
        Set(ByVal value As ClinicalSummaryHistory)
            _ClinicalSummaryFamilyHistory = value
        End Set
    End Property


    Public Property ClinicalSummarySocialHistory() As ClinicalSummaryHistory
        Get
            Return _ClinicalSummarySocialHistory
        End Get
        Set(ByVal value As ClinicalSummaryHistory)
            _ClinicalSummarySocialHistory = value
        End Set
    End Property

    Public Property ClinicalSummaryProcedure() As ClinicalSummaryHistory
        Get
            Return _ClinicalSummaryProcedure
        End Get
        Set(ByVal value As ClinicalSummaryHistory)
            _ClinicalSummaryProcedure = value
        End Set
    End Property
    Public Property ClinicalSummaryVital() As ClinicalSummaryHistory
        Get
            Return _ClinicalSummaryVital
        End Get
        Set(ByVal value As ClinicalSummaryHistory)
            _ClinicalSummaryVital = value
        End Set
    End Property
    Public Property IsLuhnDigitCheckAlgorithmEnable() As Boolean
        Get
            Return m_IsLuhnDigitCheckAlgorithmEnable
        End Get
        Set(ByVal value As Boolean)
            m_IsLuhnDigitCheckAlgorithmEnable = value
        End Set
    End Property


    Public Property ServicesDatabaseName() As String
        ''Added ServicesDatabaseName by Ujwala on 20022015 to get ServicesDB Name from settings table
        Get
            Return m_ServicesDatabaseName
        End Get
        Set(ByVal value As String)
            m_ServicesDatabaseName = value
        End Set
        ''Added ServicesDatabaseName by Ujwala on 20022015 to get ServicesDB Name from settings table
    End Property

    Public Property ServicesServerName() As String
        ''Added SERVICESSERVERNAME by Ujwala on 20022015 to get ServicesDB Name from settings table
        Get
            Return m_ServicesServerName
        End Get
        Set(ByVal value As String)
            m_ServicesServerName = value
        End Set
        ''Added SERVICESSERVERNAME by Ujwala on 20022015 to get ServicesDB Name from settings table
    End Property
    Public Property ServicesUserID() As String
        ''Added SERVICESUSERID by Ujwala on 20022015 to get ServicesDB Name from settings table
        Get
            Return m_ServicesUserID
        End Get
        Set(ByVal value As String)
            m_ServicesUserID = value
        End Set
        ''Added SERVICESUSERID by Ujwala on 20022015 to get ServicesDB Name from settings table
    End Property
    Public Property ServicesPassword() As String
        ''Added SERVICESPASSWORD by Ujwala on 20022015 to get ServicesDB Name from settings table
        Get
            Return m_ServicesPassword
        End Get
        Set(ByVal value As String)
            m_ServicesPassword = value
        End Set
        ''Added SERVICESPASSWORD by Ujwala on 20022015 to get ServicesDB Name from settings table
    End Property
    Public Property ServicesAuthentication() As Boolean
        ''Added SERVICESAUTHEN by Ujwala on 20022015 to get ServicesDB Name from settings table
        Get
            Return m_ServicesAuthentication
        End Get
        Set(ByVal value As Boolean)
            m_ServicesAuthentication = value
        End Set
        ''Added SERVICESAUTHEN by Ujwala on 20022015 to get ServicesDB Name from settings table
    End Property

    Public Property PreselectDiagnosisWhilePlacingEMDEONOrders() As Boolean
        Get
            Return bPreselectDiagnosisWhilePlacingEMDEONOrders
        End Get
        Set(ByVal value As Boolean)
            bPreselectDiagnosisWhilePlacingEMDEONOrders = value
        End Set
    End Property

    Public Property CloseDmstaskwin() As Boolean
        Get
            Return bCloseDmstaskwin
        End Get
        Set(ByVal value As Boolean)
            bCloseDmstaskwin = value
        End Set
    End Property
    Public Property Signaturepadtouse() As Boolean
        Get
            Return bsignaturepadtouse
        End Get
        Set(ByVal value As Boolean)
            bsignaturepadtouse = value
        End Set
    End Property
    Public Property showUserNoteFirst As Boolean
        Get
            Return _showUserNoteFirst
        End Get
        Set(ByVal value As Boolean)
            _showUserNoteFirst = value
        End Set
    End Property
    Public Property gloAusPortalUrl() As String
    Public Property DemoNPIs() As String
    Public Property LoadProblemonMeds As Boolean
        Get
            Return _LoadProbonMedication
        End Get
        Set(ByVal value As Boolean)
            _LoadProbonMedication = value
        End Set
    End Property

    Public Property LoadProblemDxCodeonMeds As Boolean
        Get
            Return _LoadProblemDxCodeonMeds
        End Get
        Set(ByVal value As Boolean)
            _LoadProblemDxCodeonMeds = value
        End Set
    End Property

    Private _MedHxRestriction As Int16
    Public Property MedHxRestriction() As Int16
        Get
            Return _MedHxRestriction
        End Get
        Set(ByVal value As Int16)
            _MedHxRestriction = value
        End Set
    End Property


#Region " Public Functions "



    'Added ENABLE STATIC COLOR setting parameter
    Public Function UpdateSettings(Optional ByRef dtsaveSettings As DataTable = Nothing) As Boolean
        Return UpdateSettings(_tmAppointmentStartTime, _tmAppointmentEndTime, _nAppointmentInterval, _nPULLCHARTSInterval, _nMaxNoOfFAXRetries, _nFAXRetryInterval, m_FAXCompression, m_FAXSpeakerVolume, m_FAXReceiveEnabled, m_HPIEnabled, m_LocationAddressed, m_OMRCategoryHistory, m_OMRCategoryROS, m_OMRCategoryPatientRegistration, m_OMRDirectiveCategory, m_Labs, m_OMRCategoryFax, m_blnPwdComplexity, m_NoOfAttempts, m_blnClinicDISettings, _blnRecordLevelLocking, _nThresholdValue, _sDBVersion, _sAppVersion, _nPendingFaxUserID, _nRecieveFaxUserID, _blnAutoPatientCode, m_Radiology, _sRptUserName, _sRptPassword, _blnUseFaxNoPrefix, _sFaxNoPrefix, _blnInternetFax, _seFaxDirDownload, _MCIRReportPath, _sCCDfilePath, _sClinicalDocfilePath, _ShowAdvancedGrowthChart, _GrowthChartPercentile, _nLoadNoOfFaxes, _ShowAgeInDays, _AgeLimit, _AgeLimitForWeeks, m_blnAddPatient, m_PMServerName, m_PMDatabaseName, m_blnSQLAuthentication, m_PMSQLUserId, m_PMSQLPwd, m_PMConnectionString, m_SignatureText, _nDMSImageDIP, _bUseFileCompression, m_RecoverDMSV2, m_RecoverDMSV2Path, m_DeleteDMSDoc, _bUsecodedhistory, _bIsAdvanceRxEnabled, _bIsAdvanceRxStagingServer, _sEARDirectory, _sSiteID, m_blnClinicFormularySettings, _SetCPTtoAllICD9, _EMExamtype, _FormularyServerName, _FormularyDataBaseName, _FormularyUserName, _FormularyPassword, _FormularyAuthentication, _EmdeonUserName, _EmdeonPassword, _EmdeonFacilityCode, _EmdeonURL, _gloLab_billing, _gloLab_defaultUserID, _gloLab_Hsilb, _VitalSettingsValue, _gloLab_Provider_Usage, _UseSitePrefix, _ExplicitlyAcceptTask, m_SMServerName, m_SMDatabaseName, m_SMSQLUserId, m_SMSQLPwd, m_SMblnSQLAuthentication, m_SMblnShowsmdbsetting, m_RxNServerName, m_RxNDatabaseName, m_RxNSQLUserId, m_RxNSQLPwd, m_RxNblnSQLAuthentication, m_RxNblnShowRxNdbsetting, _IsPediatrics, m_SMtrv, m_RxMeds, _IsPatDaemoMerge, _UseSignatureDelegates, _sUnAuthLogin, _blnAllowEditablePatientCode, _IsYesNoLab, DMSServerName, DMSDatabaseName, DMSSQLUserId, DMSSQLPwd, DMSblnSQLAuthentication, _CCDUserID, _gloVaultVisiblility, _IsVitalsHeightCopyForward, _bln_PrintMultipleRx_PerScriptPage_setting, _EnableTasksforPatientStatusChange, _DefaultLabTab, _ShowDMAlert, DeviceServerName, DeviceDatabaseName, _IsRecoverExam, _FullCCDSettingsValue, _visitCCDSettings, _MUSectionsValue, _CCDAAutoDelete, ClinicalChartSettingsValue, FaxExceedsValue, AllowFaxesValue, OBVitalSettingsValue, _sSharepointSrvNm, _sSharepointSiteNm, _sADFSServerName, _sDomainName, _blnglocommfeature, _blnglocomminstalled, _CategoryVIS, SignatureFormat, _blnEnableIntuitFeature, _blnIncludeOriginalMessage, _nIntuitPracticeID, _nRxEligibilitythresholdValue, _sSurescriptUrlStaging, _sSurescriptUrlProduction, CodeFieldsinHistory, _blnIncludeFrequencyAbbrevationInRxMeds, _blnMultipleSupervisorsforPaperRx, globlnhl7OutBound, globlnhl7Sendpatientdet, globlnhl7Sendchargeonsacl, globlnhl7SendImmudet, globlnhl7Sendapptdet, globlnhl7Sendchronsafi, globlnGenOutBound, globlnGenSendchargeonsacl, globlnGenSendchargeonsafi, globlnEnableMultipleRaceFeatures, _IsMedHistory10Dot6Enable, _IsNCPDP10dot6Ver, _sSurescript10dot6UrlStaging, _sSurescript10dot6UrlProduction, UseAreaCodeForPatient, _IsrequireSNOMED, _bAllowRefillcancel, _InfobuttonURL, _OpenInfobuttonURL, _sStylesheetfilePath, _isAutoCompleteTaskAck, _bAutoEligibility, _ClinicalCCDASettingsValue, _AmbulatoryCCDASettingsValue, _sMedhxSurescriptUrlStaging, _sMedhxSurescriptUrlProduction, _bln_CustomizeRxReportPrintSetting, _bln_PrintPharmacyOnRxReportSetting, _globlnExcludeNonNDCDrugsFromErxMeasure, _bOTCIssueWarning, blnShowDxCPTScreenOnSmartDX, _bIsOBSpeciality, _sAutoCaseCloseDays, m_ServicesServerName, m_ServicesDatabaseName, m_ServicesUserID, m_ServicesPassword, m_ServicesAuthentication, FormularyServiceURL, _SetProblemDxAsDefaultForSmartDx, _blnExcludeControlSubstanceDrugsFromErxMeasure, _bEnableSmartDxReviewScreen, _bDefaultDxCPTPatientProblemDiagnosis, _isEnableStaticColor, _PatientPortalLabAckNotification, _blnEnableLockField, _blnSaveLiquidData, _blnIsVitalRequired, _blnIsICD9CPTRequired, _sDIServiceURL, DIBServiceURL, bsignaturepadtouse, m_RCMtoDMSCategory, strOccMedDMSCategory, dtsaveSettings, ePAServiceURL, CCDAImportCategorySettings, CDAPrivacyText, ParseUDIURL, sCommonEmailServicePath, sCommongloCoreServicePath, _PatientPortalStatementNotification, _LoadProbonMedication, _LoadProblemDxCodeonMeds, m_WelchAllynECGCategory)
    End Function

    Public Sub SaveEmrSettings(ByVal _dtsettingsdata As DataTable, ByVal CDAExamFinish As DataTable)


        For Each dr As DataRow In _dtsettingsdata.Rows
            If (Trim((Convert.ToString(dr("sSettingsUserDescription")))) = "") Then
                dr("sSettingsUserDescription") = dr("sSettingsName")
            End If
        Next


        Dim oDB As New gloDatabaseLayer.DBLayer(gloEMRAdmin.mdlGeneral.GetConnectionString())
        Dim oDBParameters As New gloDatabaseLayer.DBParameters()


        Try

            oDB.Connect(False)

            oDBParameters.Add("@TVP_Settings", _dtsettingsdata, ParameterDirection.Input, SqlDbType.Structured)
            oDBParameters.Add("@TVP_CDAExam", CDAExamFinish, ParameterDirection.Input, SqlDbType.Structured)
            oDBParameters.Add("@Machine_ID", oDB.GetPrefixTransactionID(0), ParameterDirection.Input, SqlDbType.BigInt)
            oDBParameters.Add("@UserFlag", enumSettingFlag.User, ParameterDirection.Input, SqlDbType.Int)

            oDB.Execute("gsp_SaveEMRSettings", oDBParameters)

            oDB.Disconnect()


        Catch dbEx As gloDatabaseLayer.DBException
            dbEx.ERROR_Log(dbEx.ToString())

        Catch ex As Exception



        Finally


            If (Not IsNothing(oDB)) Then
                oDB.Disconnect()
                oDB.Dispose()
                oDB = Nothing
            End If

            If (Not IsNothing(oDBParameters)) Then

                oDBParameters.Dispose()
                oDBParameters = Nothing
            End If
        End Try







    End Sub
    Public Function GetCDASectionWithCodes() As Dictionary(Of String, String)


        Dim htable As New Dictionary(Of String, String)
        Dim dtdata As New DataTable
        Dim oDB As New gloDatabaseLayer.DBLayer(gloEMRAdmin.mdlGeneral.GetConnectionString())



        Try

            oDB.Connect(False)



            oDB.Retrive("gsp_getdefaultCDASections", dtdata)
            If Not IsNothing(dtdata) Then
                Dim drr As DataRow() = dtdata.Select("SectionName='PlanofCare'") ''added condition for Bug #109785
                If (drr.Length > 0) Then
                    drr(0)("SectionName") = "Plan Of Treatment"
                End If
                dtdata.AcceptChanges()
            End If
            For Each dr As DataRow In dtdata.Rows
                htable.Add(dr("CDACode"), dr("SectionName"))
            Next

            oDB.Disconnect()


        Catch dbEx As gloDatabaseLayer.DBException
            dbEx.ERROR_Log(dbEx.ToString())

        Catch ex As Exception



        Finally

            If (Not IsNothing(dtdata)) Then
                dtdata.Dispose()
                dtdata = Nothing
            End If
            If (Not IsNothing(oDB)) Then
                oDB.Disconnect()
                oDB.Dispose()
                oDB = Nothing
            End If


        End Try

        Return htable





    End Function


    Public Function UpdateSettings(ByVal tmAppointmentStartTime As DateTime, ByVal tmAppointmentEndTime As DateTime, ByVal nAppointmentInterval As Int16, ByVal nPULLCHARTSInterval As Int16, ByVal nMaxNoOfFAXRetries As Int16, ByVal nFAXRetryInterval As Int16, ByVal sFAXCompression As String, ByVal sFAXSpeakerVolume As String, ByVal blnFAXReceiveEnabled As Boolean, ByVal blnHPIEnabled As Boolean, ByVal blnLocationAddressed As Boolean, ByVal sOMRCategoryHistory As String, ByVal sOMRCategoryROS As String, ByVal sOMRCategoryPatientRegistration As String, ByVal sOMRCategoryDirective As String, ByVal sLabsCategory As String, ByVal sOMRCategoryFax As String, ByVal blnPwdComplexityflag As Boolean, ByVal NoOfAttempts As Integer, ByVal blnClinicDISettings As Boolean, ByVal blnRecordLevelLocking As Boolean, ByVal nThresholdValue As Double, ByVal sDBVersion As String, ByVal sAppVersion As String, ByVal nPendingFaxUserID As Int64, ByVal nRecieveFaxUserID As Int64, ByVal blnAutoPatientCode As Boolean, ByVal RadiologyCategory As String, ByVal sRptUserName As String, ByVal sRptPassword As String, ByVal blnUseFaxNoPrefix As Boolean, ByVal sFaxNoPrefix As String, ByVal blnInternetFax As Boolean, ByVal seFaxDirDownload As String, ByVal sMCIRReportPath As String, ByVal sCCDfilePath As String, ByVal sClinicalDocumentExportPath As String, ByVal blnShowAdvancedGrowthChart As Boolean, ByVal enumGrowthChartPercentile As frmSettings_New.enumGrowthChartPercentile, ByVal nLoadNoOfFaxes As Integer, ByVal ShowAgeInDays As Boolean, ByVal AgeLimit As Int64, ByVal AgeLimitForWeeks As Int64, ByVal AddPatientToPM As Boolean, ByVal PMServerName As String, ByVal PMDatabaseName As String, ByVal SQLAuthentication As Boolean, ByVal PMSQLUserId As String, ByVal PMSQLPwd As String, ByVal PMConnectionString As String, ByVal SignatureText As String, ByVal DMSImageDPI As Int32, ByVal UseFileCompression As Boolean, ByVal blnRecoverDMSV2Doc As Boolean, ByVal strRecoveryDMSV2Path As String, ByVal blnDeleteDMSDocumentAfterMigration As Boolean, ByVal blnUsecodedHistory As Boolean, ByVal IsAdvanceRxEnabled As Boolean, ByVal IsAdvanceRxStagingServer As Boolean, ByVal EARDirectory As String, ByVal SiteID As String, ByVal blnClinicFormularySettings As Boolean, ByVal blnSetCPTtoAllICD9 As Boolean, ByVal enumEMExamtype As String, ByVal SureScriptServerName As String, ByVal SureScriptDataBaseName As String, ByVal SureScriptUserName As String, ByVal SureScriptPassword As String, ByVal SureScriptAuthentication As Boolean, ByVal EmdeonUsername As String, ByVal EmdeonPassword As String, ByVal EmdeonFacility As String, ByVal EmdeonURL As String, ByVal gloLab_billing As String, ByVal gloLab_defaultUserID As Int64, ByVal gloLab_Hsilb As String, ByVal VitalSettingsValue As String, ByVal gloLab_Provider_Usage As String, ByVal _UseSitePrefix As Boolean, ByVal _ExplicitlyAcceptTask As Integer, ByVal m_SMServerName As String, ByVal m_SMDatabaseName As String, ByVal m_SMSQLUserId As String, ByVal m_SMSQLPwd As String, ByVal m_SMblnSQLAuthentication As Boolean, ByVal m_SMblnShowsmdbsetting As Boolean, ByVal m_RxNServerName As String, ByVal m_RxNDatabaseName As String, ByVal m_RxNSQLUserId As String, ByVal m_RxNSQLPwd As String, ByVal m_RxNblnSQLAuthentication As Boolean, ByVal m_RxNblnShowRxNdbsetting As String, ByVal IsPediatrics As Boolean, ByVal m_SMTrv As String, ByVal RxMedsCategory As String, ByVal ISPatDaemoMerge As Boolean, ByVal _UseSignatureDelegates As Boolean, ByVal _sUnAuthLogin As String, ByVal blnAllowEditablePatientCode As Boolean, ByVal IsYesNoLab As Boolean, ByVal m_DMSServerName As String, ByVal m_DMSDatabaseName As String, ByVal m_DMSSQLUserId As String, ByVal m_DMSSQLPwd As String, ByVal m_DMSblnSQLAuthentication As Boolean, ByVal CCDDefaultUserId As Long, ByVal ggloVaultVisibility As Boolean, ByVal IsVitalsHeightCopyForward As Boolean, ByVal PrintMultipleRx_PerScriptPage_setting As Boolean, ByVal EnableTasksforPatientStatusChange As Boolean, ByVal DefaultLabTab As String, ByVal ShowDMAlert As String, ByVal DeviceServerName As String, ByVal DeviceDatabaseName As String, ByVal isRecoverExam As Int32, ByVal FullCCDSettingsValue As String, ByVal VisitCCDSettingsValue As String, ByVal MUCCDSettingsvalue As String, ByVal CCDAAutoDelete As Boolean, ByVal sClinicalChartvalue As String, ByVal _FaxExceedsValue As String, ByVal _AllowFaxesValue As String, ByVal sOBVitalsCustomizationValue As String, ByVal sADFSServerName As String, ByVal _sSharepointSiteNm As String, ByVal _sServiceNamespace As String, ByVal _sDomainName As String, ByVal _blnglocommfeature As Boolean, ByVal _blnglocominstall As Boolean, ByVal _VISCategory As String, ByVal _SignatureFormat As String, ByVal blnEnableIntuitFeature As Boolean, ByVal blnIncludeOriginalmessage As Boolean, ByVal nIntuitPracticeID As String, ByVal _RxEligibilitythresholdValue As Int16, ByVal sSurescriptUrlStaging As String, ByVal sSurescriptUrlProduction As String, ByVal strCodeFieldsinHistory As String, ByVal bIncludeFrequencyAbbrevationInRxMeds As Boolean, ByVal _blnMultipleSupervisorsforPaperRx As Boolean, ByVal tgloblnhl7OutBound As Boolean, ByVal tgloblnhl7Sendpatientdet As Boolean, ByVal tgloblnhl7Sendchargeonsacl As Boolean, ByVal tgloblnhl7SendImmudet As Boolean, ByVal tgloblnhl7Sendapptdet As Boolean, ByVal tgloblnhl7Sendchronsafi As Boolean, ByVal tgloblnGenOutBound As Boolean, ByVal tgloblnGenSendchargeonsacl As Boolean, ByVal tgloblnGenSendchargeonsafi As Boolean, ByVal tgloblnEnableMU2Settings As Boolean, ByVal _MedHistory10Dot6Enable As Boolean, ByVal _NCPDP10dot6Ver As Boolean, ByVal _Surescript10dot6StagingUrl As String, ByVal _Surescript10dot6ProductionUrl As String, ByVal UseAreaCodeForPatient As Boolean, ByVal bIsRequireSNOMED As Boolean, ByVal AllowRefillcancel As Boolean, ByVal InfobuttonURL As String, ByVal OpenInfobuttonURL As String, ByVal StyleSheetPath As String, ByVal AllowAutoCompleteTaskAck As Boolean, ByVal bAutoEligibility As Boolean, ByVal ClinicalCCDASettingsValue As String, ByVal AmbulatoryCCDASettingsValue As String, ByVal sMedhxStagingURL As String, ByVal sMedhxProductionURL As String, ByVal CustomizeReportSetting_local As Boolean, ByVal PrintPharmacyOnRxReportSetting_local As Boolean, ByVal ExcludeNonNDCDrugsFromErxMeasure As Boolean, ByVal _OTCIssueWarning As Boolean, ByVal _ShowDxCPTScreenOnSmartDX As Boolean, ByVal _OBSpeciality As Boolean, ByVal _sAutoCaseCloseDays As String, ByVal m_ServicesServerName As String, ByVal m_ServicesDatabaseName As String, ByVal m_ServicesUserID As String, ByVal m_ServicesPassword As String, ByVal m_ServicesAuthentication As Boolean, ByVal FormularyURL As String, ByVal ProblemDxDefaultOnSmartTreatment As Boolean, ByVal ExcludeControlSubstanceDrugsFromErxMeasure As Boolean, ByVal bEnableSmartDxReviewScreen As Boolean, ByVal bDefaultDxCPTPatientProblemDiagnosis As Boolean, ByVal isEnableStaticColor As Boolean, ByVal blnPatientPortalLabAckNotification As Boolean, ByVal blnEnableLockField As Boolean, ByVal blnSaveLiquidData As Boolean, ByVal blnIsVitalRequired As Boolean, ByVal blnIsICD9CPTRequired As Boolean, ByVal sDIServiceURL As String, ByVal _DIBServiceURL As String, ByVal blnUseNewsignaturepad As Boolean, ByVal sRCMtoDMSCategory As String, ByVal strOccMedDMSCateogries As String, ByRef dtSaveSettings As DataTable, ByVal _ePAServiceURL As String, ByVal CCDAImportCategorySettings As String, ByVal CDAPrivacyText As String, ByVal _UDIAPIURL As String, ByVal _sCommonEmailServicePath As String, ByVal _sCommongloCoreServicePath As String, ByVal blnPatientPortalStatementNotification As Boolean, ByVal _loadProbonMeds As Boolean, ByVal _LoadProblemDxCodeonMeds As Boolean, ByVal sWelchAllynECGCategory As String) As Boolean


        If (dtSaveSettings Is Nothing) Then
            dtSaveSettings = New DataTable
            dtSaveSettings.Columns.Add("sSettingsName")
            dtSaveSettings.Columns.Add("sSettingsValue")
            dtSaveSettings.Columns.Add("sSettingsUserDescription")
        End If

        dtSaveSettings.Rows.Add("PDMPAutoSettingEnable", IIf(IsPDMPAuto = True, 1, 0), "PDMPAutoSettingEnable")
        dtSaveSettings.Rows.Add("PDMPSendToDMS", IIf(IsPDMPSendToDMS = True, 1, 0), "PDMPSendToDMS")
        dtSaveSettings.Rows.Add("PDMP_Username", PDMPParticipantID, "PDMP_Username")
        dtSaveSettings.Rows.Add("PDMP_Password", PDMP_password, "PDMP_Password")
        dtSaveSettings.Rows.Add("EnableSingleSignOn", IIf(_EnableSingleSignon, 1, 0), "Single Sign ON")
        dtSaveSettings.Rows.Add("Auto Complete Tasks on Acknowledgement", isAutoCompleteTaskAck, "Auto Complete Lab Tasks on Acknowledgement")
        dtSaveSettings.Rows.Add("ENABLE STATIC COLOR", isEnableStaticColor, "Enable Static Color")
        dtSaveSettings.Rows.Add("Auto Complete DMS Tasks on Acknowledgement", isAutoCompleteDMSTaskAck, "Auto Complete DMS Tasks on Acknowledgement")
        dtSaveSettings.Rows.Add("Auto Complete RCM Tasks on Acknowledgement", isAutoCompleteRCMTaskAck, "Auto Complete RCM Tasks on Acknowledgement")
        dtSaveSettings.Rows.Add("Infobutton_URL", InfobuttonURL, "Infobutton URL")
        dtSaveSettings.Rows.Add("OpenInfobutton_URL", OpenInfobuttonURL, "Open Infobutton URL")
        dtSaveSettings.Rows.Add("ClinicStartTime", _tmAppointmentStartTime, "Appointment Start Time")
        dtSaveSettings.Rows.Add("ClinicEndTime", _tmAppointmentEndTime, "Appointment Closing Time")
        dtSaveSettings.Rows.Add("Appointment Interval", nAppointmentInterval, "Appointment Interval")
        dtSaveSettings.Rows.Add("RegisterTemplateAppointmentOnly", _RestrictedTemplateAppointtment, "Appointment Restricted To Template Appointments")
        dtSaveSettings.Rows.Add("OverlapTemplateAppointment", _OverlapTemplateAppointment, "New Overlapping Appointments use all covered template slots")
        dtSaveSettings.Rows.Add("Default AppointmentType for future", _FutureApptType, "Default Appointment Type For non-templated Appointments")
        dtSaveSettings.Rows.Add("Default AppointmentType for Same Day", _SameDayApptType, "Default Appointment Type For same day,non-templated Appointments")
        dtSaveSettings.Rows.Add("Pull Chart Interval", nPULLCHARTSInterval, "Appointment Pull Charts Interval")
        dtSaveSettings.Rows.Add("Max FAX Retries", nMaxNoOfFAXRetries, "Fax - Max. Retries")
        dtSaveSettings.Rows.Add("FAX Retry Interval", nFAXRetryInterval, "Fax Retry Interval")
        dtSaveSettings.Rows.Add("FAX Compression", sFAXCompression, "Fax Compression")
        dtSaveSettings.Rows.Add("FAX Speaker Volume", sFAXSpeakerVolume, "Fax-Speaker Volume")
        dtSaveSettings.Rows.Add("FAX Receive", IIf(blnFAXReceiveEnabled = True, 1, 0), "FAX Receive")
        dtSaveSettings.Rows.Add("HPI", IIf(blnHPIEnabled = True, 1, 0), "HPI")
        dtSaveSettings.Rows.Add("Pull Address", IIf(blnLocationAddressed = True, 1, 0), "Pull Address")
        dtSaveSettings.Rows.Add("OMR Category - History", sOMRCategoryHistory, "OMR Category - History")
        dtSaveSettings.Rows.Add("OMR Category - ROS", sOMRCategoryROS, "OMR Category - ROS")
        dtSaveSettings.Rows.Add("OMR Category - Patient Registration", sOMRCategoryPatientRegistration, "OMR Category - Patient Registration")
        dtSaveSettings.Rows.Add("VISCategory", _VISCategory, "VIS Category")
        dtSaveSettings.Rows.Add("OMR Category - Directive", sOMRCategoryDirective, "DMS- Advance Directive Category")
        dtSaveSettings.Rows.Add("Lab Category", sLabsCategory, "DMS - Orders & Results Category")
        dtSaveSettings.Rows.Add("Radiology Category", RadiologyCategory, "DMS- Order Category")
        dtSaveSettings.Rows.Add("RxMeds Category", RxMedsCategory, "DMS- Prescription Category")
        dtSaveSettings.Rows.Add("OMR Category - Fax", sOMRCategoryFax, "DMS - Fax Category")
        dtSaveSettings.Rows.Add("Direct Message Attachment Category", m_InboxAttachCategory, "DMS - Direct Message Attachment Category")
        dtSaveSettings.Rows.Add("Password Complexity", IIf(blnPwdComplexityflag = True, 1, 0), "Password Complexity")
        dtSaveSettings.Rows.Add("No. Of. Attempts", NoOfAttempts, "Lock Out Attempts")
        dtSaveSettings.Rows.Add("Clinic DI Settings", IIf(blnClinicDISettings = True, 1, 0), "Clinic DI Settings")
        dtSaveSettings.Rows.Add("Record Level Locking", IIf(blnRecordLevelLocking = True, 1, 0), "Record Level Locking")
        dtSaveSettings.Rows.Add("Threshold Value", nThresholdValue, "Surescript Settings-Threshold Value")
        dtSaveSettings.Rows.Add("ExcludeNonNDCDrugsFromErxMeasure", IIf(ExcludeNonNDCDrugsFromErxMeasure = True, 1, 0), "MU Stage2-Exclude Non NDC Drugs From eRx Measures")
        dtSaveSettings.Rows.Add("ExcludeControlSubstanceDrugsFromErxMeasure", IIf(ExcludeControlSubstanceDrugsFromErxMeasure = True, 1, 0), "MU Stage2-Exclude Controlled Substance Drugs from eRx Measures")
        dtSaveSettings.Rows.Add("EnableSpecializedRegistryReporting", EnableSpecializedRegistryReporting, "MU Stage2-Enable Specialized Registry Reporting")
        dtSaveSettings.Rows.Add("Rx eligibility threshold value", _RxEligibilitythresholdValue, "SureScript - Rx eligibility Threshold value")
        dtSaveSettings.Rows.Add("Multiple Supervisors for Paper Rx", IIf(_blnMultipleSupervisorsforPaperRx = True, 1, 0), "SureScript Settings- Multiple Supervisors for Paper Rx")
        dtSaveSettings.Rows.Add("GloSmServerName", m_SMServerName, "SnoMed Server Name")
        dtSaveSettings.Rows.Add("GloSmDBName", m_SMDatabaseName, "SnoMed Database Name")
        dtSaveSettings.Rows.Add("FAX Speaker Volume", sFAXSpeakerVolume, "Fax Speaker Volume")
        dtSaveSettings.Rows.Add("GloSmUserID", m_SMSQLUserId, "SnoMed UserID")
        dtSaveSettings.Rows.Add("GloSmPassword", m_SMSQLPwd, "SnoMed Password")
        dtSaveSettings.Rows.Add("GloSmAuthen", m_SMblnSQLAuthentication, "SnoMed Authentication type")
        dtSaveSettings.Rows.Add("GloSmDbSetting", m_SMblnShowsmdbsetting, "Snomed Setting")
        dtSaveSettings.Rows.Add("GLORxNSERVERNAME", m_RxNServerName, "RxNorm Server Name")
        dtSaveSettings.Rows.Add("GLORxNDBNAME", m_RxNDatabaseName, "RxNorm DatabaseName")
        dtSaveSettings.Rows.Add("GLORxNUSERID", m_RxNSQLUserId, "RxNorm UserId")
        dtSaveSettings.Rows.Add("GLORxNPASSWORD", m_RxNSQLPwd, "RxNorm Password")
        dtSaveSettings.Rows.Add("GLORxNAUTHEN", m_RxNblnSQLAuthentication, "RxNorm Authentication Type")
        dtSaveSettings.Rows.Add("GLORECOVEREXAM", isRecoverExam, "Enable Exam Recovery")
        dtSaveSettings.Rows.Add("GLODMSSERVERNAME", m_DMSServerName, "DMS ServerName")
        dtSaveSettings.Rows.Add("GLODMSDBNAME", m_DMSDatabaseName, "DMS DataBaseName")
        dtSaveSettings.Rows.Add("GLODMSUSERID", m_DMSSQLUserId, "DMS UserID")
        dtSaveSettings.Rows.Add("GLODMSPASSWORD", m_DMSSQLPwd, "DMS Password")
        dtSaveSettings.Rows.Add("GLODMSAUTHEN", m_DMSblnSQLAuthentication, "DMS Authentication")
        dtSaveSettings.Rows.Add("GLOHL7SERVERNAME", m_gloHL7ServerName, "HL7 ServerName")
        dtSaveSettings.Rows.Add("GLOHL7DBNAME", m_gloHL7DatabaseName, "HL7 DatabaseName")
        dtSaveSettings.Rows.Add("GLOHL7USERID", m_gloHL7SQLUserID, "HL7 UserID")
        dtSaveSettings.Rows.Add("GLOHL7PASSWORD", m_gloHL7SQLPassword, "HL7 SQLPassword")
        dtSaveSettings.Rows.Add("GLOHL7AUTHEN", m_gloHL7blnSQLAuthentication, "HL7 Authentication")
        dtSaveSettings.Rows.Add("GLOVAULTVISIBILITY", ggloVaultVisibility, "Microsoft HealthVault")
        dtSaveSettings.Rows.Add("PatientSpecificResultRange", m_PatientSpecificResultRange, "Lab-Patient Specific Result Range")
        dtSaveSettings.Rows.Add("GLOLAB FAILURE DEFAULT USER", GloLabFailure_DefaultUserID, "Lab-Default User for Lab Failure Notification Tasks User ID")
        dtSaveSettings.Rows.Add("EnableTasksforPatientStatusChange", IIf(_EnableTasksforPatientStatusChange = True, 1, 0), "Clinic-Enable Tasks for Patient Status Change")
        dtSaveSettings.Rows.Add("GLORxNDBSETTING", m_RxNblnShowRxNdbsetting)
        dtSaveSettings.Rows.Add("GloSmtrv", m_SMTrv, "Snomed Codification")
        dtSaveSettings.Rows.Add("DB Version", sDBVersion, "Database Version")
        dtSaveSettings.Rows.Add("Application Version", sAppVersion, "Application Version")
        dtSaveSettings.Rows.Add("gloADMIN Version", _sgloAdminVersion, "Admin Version")
        dtSaveSettings.Rows.Add("Pending Fax User", _nPendingFaxUserID, "Pending Fax UserID")
        dtSaveSettings.Rows.Add("Direct Message Attachment User", _nInboxAttacheUserID, "DMS- Direct Message Attachment User")
        dtSaveSettings.Rows.Add("Recieve Fax User", _nRecieveFaxUserID, "Receive Fax User")
        dtSaveSettings.Rows.Add("Auto-Generate Patient Code", IIf(blnAutoPatientCode = True, 1, 0), "Auto-Generate Patient Code")
        dtSaveSettings.Rows.Add("Include Frequency Abbrevation In RxMeds", IIf(bIncludeFrequencyAbbrevationInRxMeds = True, 1, 0), "Surescript Settings-Include Frequency Abbrevation In Rx-Meds")
        dtSaveSettings.Rows.Add("Allow-Editable Patient Code", IIf(blnAllowEditablePatientCode = True, 1, 0), "Allow Copy Patient")
        dtSaveSettings.Rows.Add("Intuit feature enable setting", IIf(blnEnableIntuitFeature = True, "True", "False"), "Intuit feature enable setting")
        dtSaveSettings.Rows.Add("PatientPortalLabAckNotification", IIf(blnPatientPortalLabAckNotification = True, "True", "False"), "Notify Patients on Lab Acknowledgement")
        dtSaveSettings.Rows.Add("PatientPortalStatementNotification", IIf(blnPatientPortalStatementNotification = True, "True", "False"), "Notify Patients on New Statement")
        dtSaveSettings.Rows.Add("Include Original message in reply", IIf(blnIncludeOriginalmessage = True, "True", "False"), "Include Original message in reply")
        dtSaveSettings.Rows.Add("IntuitPracticeID", nIntuitPracticeID, "Patient Portal PracticeID")
        dtSaveSettings.Rows.Add("USECCDADATAEXPORTSERVICE", IIf(CCDADataExportServiceEnabled = True, "True", "False"), "Data export tool/service - Enable CCD/CCDA Tool/Service")
        dtSaveSettings.Rows.Add("Is8dot1PendingRefReqComplete", IIf(Is8dot1PendingRefReqComplete = True, 1, 0))
        dtSaveSettings.Rows.Add("NCPDP10dot6", IIf(_NCPDP10dot6Ver = True, 1, 0), "NCPDP Script 10.6")
        dtSaveSettings.Rows.Add("UDI API URL", _UDIAPIURL, "URL to Parse UDI")
        dtSaveSettings.Rows.Add("PatientPortalEmailService", _sCommonEmailServicePath, "URL to Parse UDI")
        dtSaveSettings.Rows.Add("PatientPortalCoreServicePath", _sCommongloCoreServicePath, "URL to Parse UDI")
        If _NCPDP10dot6Ver = True Then

            dtSaveSettings.Rows.Add(IIf(Surescript10dot6UrlStaging <> "", "eRx10dot6StagingWebserviceURL", "eRx10dot6ProductionWebserviceURL"), IIf(Surescript10dot6UrlStaging <> "", Surescript10dot6UrlStaging, Surescript10dot6UrlProduction))

        End If
        '''''''''''''''''''''''''''NCPDP 10.6 changes''''''''''''''''''''''''''''
        'Added by Mitesh 
        'Surescript URL Staging or Production
        If _NCPDP10dot6Ver = False Then

            dtSaveSettings.Rows.Add(IIf(sSurescriptUrlStaging <> "", "eRxStagingWebserviceURL", "eRxProductionWebserviceURL"), IIf(sSurescriptUrlStaging <> "", sSurescriptUrlStaging, sSurescriptUrlProduction))

        End If


        dtSaveSettings.Rows.Add("GLODIURL", sDIServiceURL, "SureScript Settings DI Service URL")
        dtSaveSettings.Rows.Add("ShowDMAlert", IIf(ShowDMAlert = True, 1, 0), "Show DM Alert")
        dtSaveSettings.Rows.Add("UserName", IIf(sRptUserName <> "", sRptUserName, ""))
        dtSaveSettings.Rows.Add("Password", IIf(sRptPassword <> "", sRptPassword, ""))
        dtSaveSettings.Rows.Add("Use Fax No. Prefix", IIf(blnUseFaxNoPrefix = True, 1, 0), "Use Fax No. Prefix")

        dtSaveSettings.Rows.Add("Fax No. Prefix", sFaxNoPrefix, "Fax No. Prefix")


        dtSaveSettings.Rows.Add("InternetFax", IIf(blnInternetFax = True, 1, 0), "eFax")






        dtSaveSettings.Rows.Add("Fax Receive Path For DMS", seFaxDirDownload, "Fax Settings : Download Path")

        'sarika internet fax'



        dtSaveSettings.Rows.Add("Surescript Enabled", IIf(_IsSurescriptEnabled = True, 1, 0), "SureScript Enabled")


        dtSaveSettings.Rows.Add("Secure Message Enabled", IIf(_IsSecureMessageEnabled = False, 0, 1), "SureScript -Secure Message Enabled")





        dtSaveSettings.Rows.Add("SecuremsgStagingServer", IIf(_IsSecureStagingServer = False, 0, 1), "SureScript -Secure Message Staging Server")


        dtSaveSettings.Rows.Add(IIf(_sSecuremsgUrlStaging <> "", "SecureMsgStagingWebserviceURL", "SecureMsgProductionWebserviceURL"), IIf(_sSecuremsgUrlStaging <> "", _sSecuremsgUrlStaging, _sSecuremsgUrlProduction), "Surescript - Secure Message Web Service")


        'dtSaveSettings.Rows.Add(IIf(_sSecuremsgUrlStaging <> "", "SecureMsgStagingWebserviceURL", "SecureMsgProductionWebserviceURL"), IIf(_sSecuremsgUrlStaging <> "", _sSecuremsgUrlStaging, _sSecuremsgUrlProduction),"Secure Message Web Service")


        dtSaveSettings.Rows.Add("PatientSavingMessageEnabled", IIf(_IsPatientSavingMessageEnabled = False, 0, 1))

        dtSaveSettings.Rows.Add("ShowPatientSavingDirectMessage", IIf(_IsPatientSavingInboxEnabled = False, 0, 1))


        dtSaveSettings.Rows.Add("StagingServer", IIf(_IsStagingServer = False, 0, 1), "SureScript Staging Server")


        dtSaveSettings.Rows.Add("RxDeclaration", _RxDeclaration, "SureScript Settings -RxDeclaration")

        dtSaveSettings.Rows.Add("RxHubDisclaimer", _RxHUBDisclaimer, "SureScript Settings -Disclaimer")



        dtSaveSettings.Rows.Add("GenerateMic", IIf(GenerateMic = True, 1, 0), "Immunization - Generate Immunization Report")




        dtSaveSettings.Rows.Add("TrackVaccineInventory", IIf(TrackVaccineInventory = True, 1, 0), "Immunization - Track Inventory Of Vaccines")


        dtSaveSettings.Rows.Add("REQUIREFUNDING", IIf(RequireFunding = True, 1, 0), "Immunization - Require Funding Selection Of Immunizations")





        dtSaveSettings.Rows.Add("ENABLECOPYEXAM", IIf(EnableCopyExam = True, 1, 0), "Enable Copy Exam")




        dtSaveSettings.Rows.Add("ShowDxCPTScreenOnSmartDX", IIf(_ShowDxCPTScreenOnSmartDX = True, 1, 0), "Show DxCPT/CPTDx Screen on SmartDX")




        dtSaveSettings.Rows.Add("DefaultProblemDxForSmartDx", IIf(ProblemDxDefaultOnSmartTreatment = True, 1, 0), "SmartDx - Default Patient Problem Diagnosis")



        dtSaveSettings.Rows.Add("DefaultDxCPTPatientProblemDiagnosis", IIf(bDefaultDxCPTPatientProblemDiagnosis = True, 1, 0), "Exam Settings - Default Patient Problem Diagnosis on DxCPT")


        dtSaveSettings.Rows.Add("EnableSmartDxReviewScreen", IIf(bEnableSmartDxReviewScreen = True, 1, 0), "SmartDX - Enable SmartDX Review")


        dtSaveSettings.Rows.Add("OB Speciality", IIf(_OBSpeciality = True, 1, 0), "OB Speciality")


        dtSaveSettings.Rows.Add("Auto Case Close Days", _sAutoCaseCloseDays, "Auto Case Close Days")


        dtSaveSettings.Rows.Add("CPOE MU STAGE 1 2013", IIf(CPOE_MU1_Change = True, 1, 0))


        dtSaveSettings.Rows.Add("VITAL MU STAGE 1 2013", IIf(Vital_MU1_Change = True, 1, 0))


        dtSaveSettings.Rows.Add("VITAL ALL REQUIRED MU 2013", IIf(VitalAllRequired = True, 1, 0), "MU Stage 1 : All 3 Vitals required to increment numerator")


        dtSaveSettings.Rows.Add("VITAL BP REQUIRED MU 2013", IIf(VitalBPRequired = True, 1, 0), "MU Stage 1 : BP Only required to increment numerator")





        dtSaveSettings.Rows.Add("VITAL H/W REQUIRED MU 2013", IIf(VitalHeightWeightRequired = True, 1, 0), "MU Stage 1 : Height/Weight only required to increment numerator")



        dtSaveSettings.Rows.Add("VITAL ALL REQUIRED MU Stage2", IIf(VitalAllRequired_Stage2 = True, 1, 0), "MU Stage 2 : All 3 Vitals required to increment numerator")



        dtSaveSettings.Rows.Add("VITAL BP REQUIRED MU Stage2", IIf(VitalBPRequired_Stage2 = True, 1, 0), "MU Stage 2 : BP Only required to increment numerator")




        dtSaveSettings.Rows.Add("VITAL H/W REQUIRED MU Stage2", IIf(VitalHeightWeightRequired_Stage2 = True, 1, 0), "MU Stage 2 : Height/Weight only required to increment numerator")




        dtSaveSettings.Rows.Add("ELECTRONIC PRESCRIPTION MU 2013", IIf(eRx_MU1_Change = True, 1, 0), "MU Stage 1 -ELECTRONIC PRESCRIPTION")



        dtSaveSettings.Rows.Add("REPORT CLINICAL QM MU 2013", IIf(eRptClinicalQua_MU1_Change = True, 1, 0), "MU Stage 1 - REPORT CLINICAL Quality Measures")


        dtSaveSettings.Rows.Add("ELECTRONIC COPY OF PAT. INFO. MU 2013", IIf(eCopyPatHealthInfo_MU1_Change = True, 1, 0), "MU Stage 1 - Electronic COPY OF PAT. Health info.")



        dtSaveSettings.Rows.Add("ELECTRONICALLY EXCH CLINICAL INFO MU 2013", IIf(eExchangeClinInfor_MU1_Change = True, 1, 0), "MU Stage 1 - Electronically Exchange Clinical Info")



        dtSaveSettings.Rows.Add("MCIR Report Path", sMCIRReportPath, "Immunization - MCIR Report Path")


        dtSaveSettings.Rows.Add("CCD File Path", sCCDfilePath, "CDA/CCD File Path")


        dtSaveSettings.Rows.Add("CLINICAL DOCUMENTS EXPORT PATH", sClinicalDocumentExportPath, "Clinical Documents Export Path")


        dtSaveSettings.Rows.Add("Style Sheet Path", StylesheetfilePath, "CDA/CCD Style Sheet Path")



        dtSaveSettings.Rows.Add("CCD Default UserID", CCDDefaultUserId, "CDA/CCD Default User ID")


        dtSaveSettings.Rows.Add("CDAClinicalFamilyHistory", ClinicalSummaryFamilyHistory.GetHashCode(), "CDA/CCD Clinical Summary -Family History")

        dtSaveSettings.Rows.Add("CDAClinicalSocialHistory", ClinicalSummarySocialHistory.GetHashCode(), "CDA/CCD Clinical Summary -Social History")



        dtSaveSettings.Rows.Add("CDAClinicalProcedure", ClinicalSummaryProcedure.GetHashCode(), "Clinical Summary - Visit Specific Procedure")



        dtSaveSettings.Rows.Add("CDAClinicalVital", ClinicalSummaryVital.GetHashCode(), "Clinical Summary - Visit Specific Vital")


        dtSaveSettings.Rows.Add("FullCCDDefaultSections", FullCCDSettingsValue, "Default Sections For Full CCD")


        dtSaveSettings.Rows.Add("VisitCCDDefaultSections", visitCCDSettings, "Default Sections for Exam Summary CCD")


        dtSaveSettings.Rows.Add("MUCCDSections", IIf(MUCCDSettingsvalue = True, 1, 0), "Require Meaningful Use Sections in all CCD")

        dtSaveSettings.Rows.Add("CCDAAutoDelete", CCDAAutoDelete, "CDA/CCD - Auto Delete CCDA Files")



        dtSaveSettings.Rows.Add("CCDAClinicalSummarySections", ClinicalCCDASettingsValue, "Default Sections for CCDA - Clinical Summary")




        dtSaveSettings.Rows.Add("CCDAAmbulatorySummarySections", AmbulatoryCCDASettingsValue, "Default Sections for CCDA - Ambulatory Summary")


        dtSaveSettings.Rows.Add("Advanced Growth Chart", IIf(blnShowAdvancedGrowthChart = True, 1, 0), "Advance Growth Chart")

        Dim stradvpercentile As String = ""

        If (enumGrowthChartPercentile.GetHashCode = 0) Then
            stradvpercentile = "Dont Show Percentile"
        End If
        If (enumGrowthChartPercentile.GetHashCode = 1) Then
            stradvpercentile = "Show Percentile"
        End If
        If (enumGrowthChartPercentile.GetHashCode = 2) Then
            stradvpercentile = "Show Percentile On Mouse Hover"
        End If

        dtSaveSettings.Rows.Add("Advanced Growth Chart Percentile", enumGrowthChartPercentile.GetHashCode, "Advanced Growth Chart - " & stradvpercentile)



        dtSaveSettings.Rows.Add("Show Age in Days", IIf(ShowAgeInDays = True, 1, 0), "Show Age in Days")



        dtSaveSettings.Rows.Add("Age Limit", AgeLimit, "Age Limit to show age in days upto")


        '' End Add ClinicID, UserID,UserClinicFlag

        dtSaveSettings.Rows.Add("Age Limit For Weeks", AgeLimitForWeeks, "Age Limit For Weeks")



        dtSaveSettings.Rows.Add("Load Number Of Faxes", nLoadNoOfFaxes, "No. of Faxes to be loaded")

        '--------------------





        dtSaveSettings.Rows.Add("SignatureText", m_SignatureText, "Signature Text for Provider")





        dtSaveSettings.Rows.Add("CoSignatureText", m_CoSignatureText, "Signature Text for Co-Provider")





        dtSaveSettings.Rows.Add("DMSImageDPI", _nDMSImageDIP, "DMS - Import Images upto DPI")

        '--------------------



        dtSaveSettings.Rows.Add("UseFileCompression", IIf(_bUseFileCompression = True, 1, 0), "Use File Compession for Migration")


        dtSaveSettings.Rows.Add("MedHistory10Dot6Enable", IIf(_MedHistory10Dot6Enable = True, 1, 0), "Medication History 10.6-Enable 10.6 for Med History")


        dtSaveSettings.Rows.Add("MEDHXTENDOTSIXSTAGINGURL", sMedhxStagingURL, "Medication History 10.6 -Portal URL")


        dtSaveSettings.Rows.Add("MEDHXTENDOTSIXPRODUCTIONGURL", sMedhxProductionURL)

        '' End Add ClinicID, UserID,UserClinicFlag

        dtSaveSettings.Rows.Add("RecoverDMSV2Doc", IIf(blnRecoverDMSV2Doc = True, 1, 0), "Create DMS V2 Physical document while documnet is being migrated")



        '' End Add ClinicID, UserID,UserClinicFlag

        dtSaveSettings.Rows.Add("RecoveryDMSV2DocPath", strRecoveryDMSV2Path, "DMS V2 Physical document Path")



        '' End Add ClinicID, UserID,UserClinicFlag

        dtSaveSettings.Rows.Add("DeleteDMSDocumentAfterMigration", IIf(blnDeleteDMSDocumentAfterMigration = True, 1, 0), "Delete DMS v2 Documents after Migration")



        ' '' End Add ClinicID, UserID,UserClinicFlag
        dtSaveSettings.Rows.Add("OccMedDMSCategories", strOccMedDMSCategory, "OccMed DMS Categories")
        dtSaveSettings.Rows.Add("UseCodedHistory", IIf(blnUsecodedHistory = True, 1, 0), "Coded History - Use Coded History")




        dtSaveSettings.Rows.Add("ShowSmokingColumnInHistory", IIf(ShowSmokingColumn = 1, 1, 0), "Coded History - Use CDC Smoking Status Code Column in History")




        ' '' End Add ClinicID, UserID,UserClinicFlag

        dtSaveSettings.Rows.Add("CodeFieldsinHistory", strCodeFieldsinHistory, "Code Fields Appear in History")

        ''' ''
        'Sanjog DAS Setting 


        dtSaveSettings.Rows.Add("RetrieveESR", IIf(IsRetrieveESR = 1, 1, 0), "Lab - Retrieve ESR Value From Lab Results")


        dtSaveSettings.Rows.Add("ESRDays", ESRDay, "Lab - Days to look back for ESR")


        dtSaveSettings.Rows.Add("RetrieveCRP", IIf(IsRetrieveCRP = 1, 1, 0), "Lab - Retrieve CRP Value From Lab Results")



        dtSaveSettings.Rows.Add("CRPDays", CRPDay, "Lab - Days to look back for CRP")


        dtSaveSettings.Rows.Add("ShowCodedHistory", _sShowCodedHistory)


        dtSaveSettings.Rows.Add("OTCIssueWarning", IIf(_OTCIssueWarning = True, 1, 0))

        ''----xx


        '' End Add ClinicID, UserID,UserClinicFlag

        dtSaveSettings.Rows.Add("EM ChiefComplaint Type", _EMChiefComplaintType, "E&M Code Chief Complaint Type")




        dtSaveSettings.Rows.Add("E&M Enable", _EMOnOff, "E&M Enable ")



        dtSaveSettings.Rows.Add("OtherPatientType", IIf(_OtherPatientType = True, 1, 0), "E&M Code- Patient Type")



        dtSaveSettings.Rows.Add("IMReminderDays", IM_ReminderDays)








        dtSaveSettings.Rows.Add("Advance Rx Enabled", IIf(IsAdvanceRxEnabled = True, 1, 0), "Advance Rx Enabled")



        dtSaveSettings.Rows.Add("Advance Rx Staging Server", IIf(_bIsAdvanceRxStagingServer = True, 1, 0), "RxHUB Staging Server")



        '    .SqlDbType = SqlDbType.Int
        'End With


        dtSaveSettings.Rows.Add("eARDirectory", "", "eARDirectory")

        '---


        '' End Add ClinicID, UserID,UserClinicFlag

        dtSaveSettings.Rows.Add("SiteID", SiteID, "SiteID")



        dtSaveSettings.Rows.Add("RxHUB ParticipantID", ParticipantID, "RXHUB - ParticipantID")


        dtSaveSettings.Rows.Add("RxHUB Password", RxPassword, "RXHUB - Password")


        dtSaveSettings.Rows.Add("EMExamType", 0, "EMExamType")



        '' End Add ClinicID, UserID,UserClinicFlag
        dtSaveSettings.Rows.Add("DefaultPatientGender", _sDefaultPatientGender, "Clinic - Default Patient Gender")


        dtSaveSettings.Rows.Add("SET CPT TO ALL ICD9", IIf(blnSetCPTtoAllICD9 = True, 1, 0), "SET CPT TO ALL ICD9/10")


        dtSaveSettings.Rows.Add("EXAM DIAGNOSIS", IIf(_ICD9Driven = True, 1, 0), "Exam -ICD9/10 Driven")

        ''



        dtSaveSettings.Rows.Add("SHOW 8 ICD9", IIf(_Show8ICD9 = True, 1, 0), "Exam -Show 8 ICD9/10")

        ''



        dtSaveSettings.Rows.Add("SHOW 4 MODIFIER", IIf(_Show4Modifier = True, 1, 0), "Exam -Show 4 Modifiers")

        ''


        dtSaveSettings.Rows.Add("PATIENT QUESTIONNAIRE", IIf(_PatientQuestionnaire = True, 1, 0), "Enable PATIENT QUESTIONNAIRE")




        dtSaveSettings.Rows.Add("GeniusPath", m_GeniusPath.ToUpper, "Genius Path ")

        '''''''


        dtSaveSettings.Rows.Add("UseSignatureDelegates", IIf(_UseSignatureDelegates = True, 1, 0), "Use Signature Delegates")

        '''''''

        'End With


        dtSaveSettings.Rows.Add("GeniusCode", m_GeniusCode.ToUpper, "Genius Code")




        dtSaveSettings.Rows.Add("Country", _Country, "Default Country")


        dtSaveSettings.Rows.Add("gloLab User Name", EmdeonUsername, "Emdeon User Name")



        dtSaveSettings.Rows.Add("gloLab Password", EmdeonPassword, "Emdeon Password")

        ''Emdeon Password''


        dtSaveSettings.Rows.Add("gloLab URL", EmdeonURL, "Emdeon URL")


        dtSaveSettings.Rows.Add("gloLab Facility Code", EmdeonFacility, "Facility Code")


        dtSaveSettings.Rows.Add("gloLab hsi label", gloLab_Hsilb)



        dtSaveSettings.Rows.Add("gloLab default user", gloLab_defaultUserID, "Default User for Unmatched Lab Tasks")

        dtSaveSettings.Rows.Add("gloIM HxForecast default user", GloHxForecast_defaultUserID, "Default User for History Forecast Tasks")
        dtSaveSettings.Rows.Add("gloIM ForecastReconcileDone default user", GloForecastReconcileDone_defaultUserID, "Default User for Forecast Appointment Tasks")

        dtSaveSettings.Rows.Add("gloLab billing type", gloLab_billing, "Lab - Allow Client Billing")


        dtSaveSettings.Rows.Add("FormularyServerName", SureScriptServerName)


        ''dhruv ------------------------------------------ServerName



        dtSaveSettings.Rows.Add("FormularyDataBaseName", SureScriptDataBaseName)

        ''Dhruv ----------------------------------------------Database



        dtSaveSettings.Rows.Add("FormularyUserId", SureScriptUserName)

        ''Dhruv-----------------------------------UserId


        dtSaveSettings.Rows.Add("FormularyPassword", SureScriptPassword)

        ''Dhruv-----------------------------------Password



        '' End Add ClinicID, UserID,UserClinicFlag
        dtSaveSettings.Rows.Add("FormularyAuthentication", IIf(SureScriptAuthentication = True, 1, 0))



        dtSaveSettings.Rows.Add("PEDIATRICS", _IsPediatrics, "Pediatrics Settings")



        dtSaveSettings.Rows.Add("REQUIRESNOMEDCT", _IsrequireSNOMED, "Clinic - Problems Require SNOMED CT")



        dtSaveSettings.Rows.Add("AUTOGENERATEDPROBLEMFROMEXAM", _IsAutogeneratedProblemFromExam, "Exam - Autogenerate Problems")

        ''END ::   Autogenerated Problem  SETTINGS



        dtSaveSettings.Rows.Add("YESNOLAB", _IsYesNoLab, "Yes/No Labs")



        dtSaveSettings.Rows.Add("PATIENTDAEMOMERG", _IsPatDaemoMerge, "Patient Demographics Merge")





        dtSaveSettings.Rows.Add("UnAuthenticatedLoginBanner", _sUnAuthLogin, "Clinic - UnAuthenticated Login Banner")


        dtSaveSettings.Rows.Add("VitalsCustomization", VitalSettingsValue, "Vital Customization Settings")



        dtSaveSettings.Rows.Add("clinicalchartcustomization", sClinicalChartvalue)

        ''End ---x--




        dtSaveSettings.Rows.Add("obvitalscustomization", sOBVitalsCustomizationValue)

        ''End ---x--



        dtSaveSettings.Rows.Add("signatureformatvalue", _SignatureFormat)

        ''End ---x--



        dtSaveSettings.Rows.Add("FaxExceedspages", _FaxExceedsValue, "Warn user if Fax Exceeds pages")

        ''End ---x--

        ''Added By Mitesh Fax exceeds Settings


        dtSaveSettings.Rows.Add("AllowFaxespages", _AllowFaxesValue, "Do not allow Faxes longer than pages")

        ''End ---x--



        dtSaveSettings.Rows.Add("glolab provider usage", gloLab_Provider_Usage)



        dtSaveSettings.Rows.Add("UseSitePrefix", IIf(_UseSitePrefix = True, 1, 0), "Clinic - Use Site Prefix")



        dtSaveSettings.Rows.Add("Vitals Height Copy Forward", IIf(_IsVitalsHeightCopyForward = True, 1, 0), "Vitals Height Copy Forward")

        ''END ::  ''Vitals Height Copy Forward settings


        dtSaveSettings.Rows.Add("ExplicitlyAcceptTask", _ExplicitlyAcceptTask, "Require User to Explicitly Accept Task")

        '''''''''''''''''end of pradeep for auto acceptance of task '''''''''''''''''''''''''''''''''''''''''''''''''''''''


        dtSaveSettings.Rows.Add("PrintMultipleRx_PerScriptPage_setting", IIf(PrintMultipleRx_PerScriptPage_setting = True, 1, 0), "Print Multiple Prescriptions Per Script Page")



        dtSaveSettings.Rows.Add("CustomizeRxReportSetting", IIf(CustomizeReportSetting_local = True, 1, 0), "Enable Custom prescription Reports")




        dtSaveSettings.Rows.Add("PrintPharmacyOnRxReportSetting", IIf(PrintPharmacyOnRxReportSetting_local = True, 1, 0), "Display Pharmacy On Prescription Reports")




        dtSaveSettings.Rows.Add("DefaultLabTab", _DefaultLabTab, "Lab - Default View when accessing patient lab information")

        '  objCmd.Parameters.Clear()

        'Code added by Rohit for storing Setting of Device Database
        '------ For saving Device Database Setting -------'



        dtSaveSettings.Rows.Add("GLODEVICESERVERNAME", m_DeviceServerName, "Device ServerName")

        'objCmd.Parameters.Clear()


        dtSaveSettings.Rows.Add("GLODEVICEDBNAME", m_DeviceDatabaseName, "Device DataBaseName")


        ''For gloCommunity server setting on 03-jan-2012 by chetan 
        '     objCmd.Parameters.Clear()
        If _blnglocommfeature = True And _blnglocominstall = True Then
            'With objParaSettingsName
            '    .ParameterName = "@SettingsName"


            dtSaveSettings.Rows.Add("gloCommunityServerName", _sSharepointSrvNm, "gloCommunity Server Name")

            '----------
            '-----------------------------------------------

            '' End Add ClinicID, UserID,UserClinicFlag
            dtSaveSettings.Rows.Add("gloCommunitySiteName", _sSharepointSiteNm, "gloCommunity Site Name")

            '--------------------------------------



            '' End Add ClinicID, UserID,UserClinicFlag
            dtSaveSettings.Rows.Add("ADFSServerName", _sADFSServerName, "ADFS Server Name")

        End If

        'End With

        dtSaveSettings.Rows.Add("gloCommunity Feature", IIf(_blnglocommfeature = True, "True", "False"), "gloCommunity Feature")


        'End With

        dtSaveSettings.Rows.Add("HL7SENDOUTBOUNDGLOEMR", IIf(tgloblnhl7OutBound = True, 1, 0), "HL7 Outbound -Turn ON HL7 Outbound")




        dtSaveSettings.Rows.Add("HL7SENDPATIENTDETAILSDEFAULTGLOEMR", IIf(tgloblnhl7Sendpatientdet = True, 1, 0), "HL7 Outbound -Send Patient Details")




        dtSaveSettings.Rows.Add("HL7SENDAPPOINTMENTDETAILSDEFAULTGLOEMR", IIf(tgloblnhl7Sendapptdet = True, 1, 0), "HL7 Outbound -Send Appointment Details")



        'End With

        dtSaveSettings.Rows.Add("HL7SENDCHARGESSAVECLOSEDEFAULTGLOEMR", IIf(tgloblnhl7Sendchargeonsacl = True, 1, 0), "HL7 Outbound -Send Charges on Save and Close")



        dtSaveSettings.Rows.Add("HL7SENDCHARGESSAVEFINISHDEFAULTGLOEMR", IIf(tgloblnhl7Sendchronsafi = True, 1, 0), "HL7 Outbound -Send Charges on Save and Finish")



        dtSaveSettings.Rows.Add("HL7SENDVISITSUMSAVECLOSE", IIf(globlnhl7SendVisitsumonsacl = True, 1, 0), "HL7 Outbound -Send Visit Summary on Save and Close")



        dtSaveSettings.Rows.Add("HL7SENDVISITSUMSAVEFINISH", IIf(globlnhl7SendVisitsumonsafi = True, 1, 0), "HL7 Outbound -Send Visit Summary on Save and Finish")



        dtSaveSettings.Rows.Add("HL7SENDIMMUNIZATIONDETAILSDEFAULTGLOEMR", IIf(tgloblnhl7SendImmudet = True, 1, 0), "HL7 Outbound -Send Immunization Details")


        dtSaveSettings.Rows.Add("GENIUSSENDOUTBOUNDGLOEMR", IIf(tgloblnGenOutBound = True, 1, 0), "Genious Outbound - Turn On Genius Outbound")



        dtSaveSettings.Rows.Add("GENIUSSENDCHARGESSAVECLOSEDEFAULTGLOEMR", IIf(tgloblnGenSendchargeonsacl = True, 1, 0), "Genious Outbound - Send Charges on Save and Close")



        dtSaveSettings.Rows.Add("GENIUSSENDCHARGESSAVEFINISHDEFAULTGLOEMR", IIf(tgloblnGenSendchargeonsafi = True, 1, 0), "Genious Outbound - Send Charges on Save and Finish")



        '' End Add ClinicID, UserID,UserClinicFlag
        dtSaveSettings.Rows.Add("UseAreaCodeForPatient", IIf(UseAreaCodeForPatient = True, 1, 0), "Use 9 digit zip code for Patient Addresses")



        dtSaveSettings.Rows.Add("AllowRefillCancel", IIf(AllowRefillcancel = True, 1, 0), "Hide Refill Cancel Button")



        dtSaveSettings.Rows.Add("AutoEligibilityONorOFF", IIf(bAutoEligibility = True, 1, 0))


        ''---- End



        dtSaveSettings.Rows.Add("Enable MU2 Features", IIf(tgloblnEnableMU2Settings = True, 1, 0))




        dtSaveSettings.Rows.Add("MessageComunicationPref", nMessageComunicationPrefID, "MU Stage 2 - Message Comm. Preference")




        dtSaveSettings.Rows.Add("LetterComunicationPref", nLetterComunicationPrefID, "MU Stage 2 - Letter Comm. Preference")

        'objCmd.Parameters.Clear()




        dtSaveSettings.Rows.Add("SecureMessageComunicationPref", nSecureMessageComunicationPrefID, "MU Stage 2 - Patient Portal Comm. Preference")





        dtSaveSettings.Rows.Add("SERVICESSERVERNAME", m_ServicesServerName, "gloServices - Server Name")

        'objCmd.Parameters.Clear()


        dtSaveSettings.Rows.Add("SERVICESDATABASENAME", m_ServicesDatabaseName, "gloServices - Database Name")



        dtSaveSettings.Rows.Add("SERVICESUSERID", m_ServicesUserID, "gloServices - User ID")



        dtSaveSettings.Rows.Add("SERVICESPASSWORD", m_ServicesPassword, "gloServices - Password")



        dtSaveSettings.Rows.Add("SERVICESAUTHEN", m_ServicesAuthentication, "gloServices - Authentication")


        dtSaveSettings.Rows.Add("GLOFORMULARYURL", FormularyURL, "Formulary3.0 - Formulary Service URL")


        dtSaveSettings.Rows.Add("IsFormularyServiceEnabled", IIf(blnClinicFormularySettings = True, 1, 0), "SureScript - Formulary Enabled")


        dtSaveSettings.Rows.Add("GLODIBURL", _DIBServiceURL, "SureScript - DIB Service URL")


        dtSaveSettings.Rows.Add("GLOEPAURL", _ePAServiceURL, "SureScript - ePA Service URL")


        dtSaveSettings.Rows.Add("IsExamPTBillingEnabled", IIf(blnIsExamPTBillingEnabled = True, 1, 0), "Exam - PT Billing : Timed/Untimed Therapy")



        dtSaveSettings.Rows.Add("EmdeonGetLabOrdersFromDaysOnReload", _EmdeonGetLabOrdersFromDaysOnReload, "Lab - Reload Emdeon LAB Orders From Last")




        dtSaveSettings.Rows.Add("Preselect diagnosis while placing EMDEON Orders", bPreselectDiagnosisWhilePlacingEMDEONOrders, "Lab - Preselect diagnosis while placing EMDEON Orders")



        dtSaveSettings.Rows.Add("Close DMS Task Window", bCloseDmstaskwin, "Auto Close DMS Task Window")




        dtSaveSettings.Rows.Add("LockDateField", IIf(blnEnableLockField = True, "True", "False"), "Exam - Enable Lock Fields")




        dtSaveSettings.Rows.Add("IsVitalRequired", IIf(blnIsVitalRequired = True, "True", "False"), "Exam - Warn if Vitals are not updates for the Visit")
        ' 



        dtSaveSettings.Rows.Add("IsICD9CPTRequired", IIf(blnIsICD9CPTRequired = True, "True", "False"), "Exam - Warn if no DX/CPT Codes are present for the Exam")



        dtSaveSettings.Rows.Add("SaveLiquidData", IIf(blnSaveLiquidData = True, "True", "False"), "Save Liquid Data")




        dtSaveSettings.Rows.Add("UseSignaturepad", IIf(blnUseNewsignaturepad = True, "New", "Old"), "Interface - Signature Pad")

        dtSaveSettings.Rows.Add("RCM To DMS Category", sRCMtoDMSCategory, "RCM To DMS Category")

        dtSaveSettings.Rows.Add("CCDAValidatorAPIUrl", CDAValidatorUrl, "CDA/CCD API Validator Url")
        dtSaveSettings.Rows.Add("CCDAImportCategories", CCDAImportCategorySettings, "CDA Import Category")
        dtSaveSettings.Rows.Add("CCDAViewerUrl", CCDAViewerURl, "CDA Viewer URL")
        '' Added by Ujwala for certification criteria - 170.315(b)(7) Data Segmentation for Privacy – Send - Start
        dtSaveSettings.Rows.Add("CDAPrivacyText", CDAPrivacyText, "CDA Privacy Text")
        '' Added by Ujwala for certification criteria - 170.315(b)(7) Data Segmentation for Privacy – Send - End
        dtSaveSettings.Rows.Add("LoadProbOnMedication", IIf(_loadProbonMeds = True, 1, 0), "LoadProbonMedication")

        dtSaveSettings.Rows.Add("LoadProblemDxCodeonRxReport", IIf(_LoadProblemDxCodeonMeds = True, 1, 0), "LoadProblemDxCodeonRxReport")

        dtSaveSettings.Rows.Add("WelchAllyn ECG Category", sWelchAllynECGCategory, "WelchAllyn ECG Category")
        dtSaveSettings.Rows.Add("SendUnstructuredDocument", IIf(_IsXDMSecureMessageEnable = False, 0, 1))
        Return True


    End Function



    Public Function GetSettings() As Boolean
        Dim objCon As New SqlConnection
        objCon.ConnectionString = gloEMRAdmin.mdlGeneral.GetConnectionString()
        Dim objCmd As New SqlCommand
        'sarika 25th june 07
        '    Dim objSQLDataReader As SqlDataReader
        objCmd.CommandType = CommandType.StoredProcedure
        objCmd.CommandText = "gsp_FillSettings"
        objCmd.Connection = objCon
        objCmd.Connection = objCon
        objCon.Open()
        Dim objDA As New SqlDataAdapter(objCmd)
        Dim dsData As New DataSet
        objDA.Fill(dsData)
        objCon.Close()
        objCon = Nothing
        If dsData.Tables(0).Rows.Count = 0 Then
            Return False
        End If
        Dim nCount As Integer


        For nCount = 0 To dsData.Tables(0).Rows.Count - 1
            'sarika 25th june 07
            'Select Case dsData.Tables(0).Rows(nCount).Item(1)
            ''Sandip Darade 20090417
            '1.	Clinic Start Time
            '2.	Clinic Closing Time
            'Replace this setting internal name (database value) with
            '1. ClinicStartTime
            '2. ClinicEndTime
            Select Case dsData.Tables(0).Rows(nCount).Item(1).ToString.ToUpper
                'Case "Clinic Start Time".ToUpper
                'Added to set default CMS in Exam module
                Case "DefaultQCheckpointMeasures".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        DefaultSelectedCMS = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        Return False
                    End If

                Case "AUTO COMPLETE TASKS ON ACKNOWLEDGEMENT".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _isAutoCompleteTaskAck = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        Return False
                    End If

                Case "AUTO COMPLETE DMS TASKS ON ACKNOWLEDGEMENT".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _isAutoCompleteDMSTaskAck = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        Return False
                    End If

                Case "AUTO COMPLETE RCM TASKS ON ACKNOWLEDGEMENT".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _isAutoCompleteRCMTaskAck = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        Return False
                    End If

                    'Added ENABLE STATIC COLOR setting
                Case "ENABLE STATIC COLOR".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _isEnableStaticColor = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        Return False
                    End If

                Case "USECCDADATAEXPORTSERVICE".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _isCCDADataExportServiceEnabled = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        Return False
                    End If
                Case "ClinicStartTime".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _tmAppointmentStartTime = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        Return False
                    End If
                    'Case "Clinic Closing Time".ToUpper
                Case "ClinicEndTime".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _tmAppointmentEndTime = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        Return False
                    End If
                Case "Appointment Interval".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _nAppointmentInterval = CType(dsData.Tables(0).Rows(nCount).Item(2), Int16)
                    Else
                        Return False
                    End If

                    'added by Amit B
                Case "RegisterTemplateAppointmentOnly".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _RestrictedTemplateAppointtment = CType(dsData.Tables(0).Rows(nCount).Item(2), Integer)
                    Else
                        _RestrictedTemplateAppointtment = 0
                    End If

                Case "OverlapTemplateAppointment".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _OverlapTemplateAppointment = dsData.Tables(0).Rows(nCount).Item(2)
                    End If

                Case "Pull Chart Interval".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _nPULLCHARTSInterval = CType(dsData.Tables(0).Rows(nCount).Item(2), Int16)
                    Else
                        Return False
                    End If
                Case "Max FAX Retries".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _nMaxNoOfFAXRetries = CType(dsData.Tables(0).Rows(nCount).Item(2), Int16)
                    Else
                        Return False
                    End If
                Case "FAX Retry Interval".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _nFAXRetryInterval = CType(dsData.Tables(0).Rows(nCount).Item(2), Int16)
                    Else
                        Return False
                    End If
                Case "FAX Compression".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_FAXCompression = dsData.Tables(0).Rows(nCount).Item(2)
                    Else
                        Return False
                    End If
                Case "FAX Speaker Volume".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_FAXSpeakerVolume = dsData.Tables(0).Rows(nCount).Item(2)
                    Else
                        Return False
                    End If
                Case "FAX Receive".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_FAXReceiveEnabled = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        Return False
                    End If
                Case "HPI".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_HPIEnabled = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        Return False
                    End If
                Case "Pull Address".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_LocationAddressed = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        Return False
                    End If
                Case "OMR Category - History".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_OMRCategoryHistory = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        Return False
                    End If
                Case "OMR Category - ROS".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_OMRCategoryROS = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        Return False
                    End If
                Case "OMR Category - Patient Registration".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_OMRCategoryPatientRegistration = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        Return False
                    End If
                    '***********
                Case "OMR Category - Directive".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_OMRDirectiveCategory = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        Return False
                    End If
                Case "Lab Category".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_Labs = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    End If
                Case "Radiology Category".ToUpper

                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_Radiology = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    End If

                Case "RxMeds Category".ToUpper

                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_RxMeds = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    End If
                    'Developer: Mitesh Patel
                    'Date:17-Jan-2012
                    'PRD: Immunizations 
                Case "VISCategory".ToUpper

                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _CategoryVIS = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    End If
                Case "Password Complexity".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_blnPwdComplexity = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        Return False
                    End If

                    'sarika 12th feb
                Case "No. Of. Attempts".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_NoOfAttempts = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                        'Else
                        '    m_NoOfAttempts = 3
                    End If

                    'sarika 14th june 07
                Case "Clinic DI Settings".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_blnClinicDISettings = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        Return False
                    End If

                    'Clinic level Formulary  setting
                Case "IsFormularyServiceEnabled".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_blnClinicFormularySettings = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        Return False
                    End If

                Case "Record Level Locking".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _blnRecordLevelLocking = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _blnRecordLevelLocking = False
                    End If

                Case "LockDateField".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _blnEnableLockField = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _blnEnableLockField = False
                    End If
                Case "SaveLiquidData".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _blnSaveLiquidData = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _blnSaveLiquidData = False
                    End If
                    'case added by sagar on 31 july 2007 for accessing the threshold value
                Case "Threshold Value".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _nThresholdValue = CType(dsData.Tables(0).Rows(nCount).Item(2), Double)
                    Else
                        Return False
                    End If
                    'Code adde by Ravikiran on 13/02/2007 for Rx Report
                    ''Case " RxReportPath "
                    ''    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    ''        m_RxReportPath = CType(dsData.Tables(0).Rows(nCount).Item(2), String)

                    ''    End If

                    '*************
                    'Added by Mitesh
                Case "Rx eligibility threshold value".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _nRxEligibilitythresholdValue = CType(dsData.Tables(0).Rows(nCount).Item(2), Double)
                    Else
                        Return False
                    End If

                    'start of code commented by manoj jadhav on 20120730 for moving service setiings to Respective Service
                    'Case "HL7 System Path".ToUpper 
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _sHL7SystemPath = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _sHL7SystemPath = ""
                    '    End If
                    '    '******Sandip Deshmukh 22 Nov 2007
                    'Case "Sending Facility".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _sHL7SendingFacility = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _sHL7SendingFacility = ""
                    '    End If

                    'Case "Receiving Application".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _sHL7ReceivingApplication = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _sHL7ReceivingApplication = ""
                    '    End If

                    'Case "Receiving Facility".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _sHL7ReceivingFacility = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _sHL7ReceivingFacility = ""
                    '    End If
                    'end of code commented by manoj jadhav on 20120730 for moving service setiings to Respective Service

                    '****** 22 Nov 2007
                Case "OMR Category - Fax".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_OMRCategoryFax = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_OMRCategoryFax = ""
                    End If
                Case "Direct Message Attachment Category".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_InboxAttachCategory = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_InboxAttachCategory = ""
                    End If
                Case "DB Version".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sDBVersion = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sDBVersion = ""
                    End If
                Case "Application Version".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sAppVersion = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sAppVersion = ""
                    End If
                Case "gloAdmin Version".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sgloAdminVersion = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sgloAdminVersion = ""
                    End If
                    'sarika 5th sept 07
                Case "Pending Fax User".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _nPendingFaxUserID = CType(dsData.Tables(0).Rows(nCount).Item(2), Int64)
                    Else
                        _nPendingFaxUserID = 0
                    End If
                Case "Direct Message Attachment User".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _nInboxAttacheUserID = CType(dsData.Tables(0).Rows(nCount).Item(2), Int64)
                    Else
                        _nInboxAttacheUserID = 0
                    End If
                Case "Recieve Fax User".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _nRecieveFaxUserID = CType(dsData.Tables(0).Rows(nCount).Item(2), Int64)
                    Else
                        _nRecieveFaxUserID = 0
                    End If
                    '----------------
                    ''''''''''''''Code added by Anil on 20071119
                Case "Auto-Generate Patient Code".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _blnAutoPatientCode = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _blnAutoPatientCode = False
                    End If
                    '''''''''''''''''''''''''''''''''''''''''''''''''
                Case "Include Frequency Abbrevation In RxMeds".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _blnIncludeFrequencyAbbrevationInRxMeds = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _blnIncludeFrequencyAbbrevationInRxMeds = False
                    End If
                    '''''''''''''''''''''''''''''''''''''''''''''''''

                Case "Allow-Editable Patient Code".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _blnAllowEditablePatientCode = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _blnAllowEditablePatientCode = False
                    End If

                Case "Intuit feature enable setting".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _blnEnableIntuitFeature = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _blnEnableIntuitFeature = False
                    End If
                Case "Include Original message in reply".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _blnIncludeOriginalMessage = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _blnIncludeOriginalMessage = False
                    End If
                Case "IntuitPracticeID".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _nIntuitPracticeID = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _nIntuitPracticeID = String.Empty
                    End If
                Case "eRxStagingWebserviceURL".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sSurescriptUrlStaging = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sSurescriptUrlStaging = String.Empty
                    End If
                Case "eRxProductionWebserviceURL".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sSurescriptUrlProduction = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sSurescriptUrlProduction = String.Empty
                    End If
                Case "GLODIURL".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sDIServiceURL = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sDIServiceURL = String.Empty
                    End If
                Case "ShowDMAlert".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        If dsData.Tables(0).Rows(nCount).Item(2) <> "" Then
                            _ShowDMAlert = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                        Else
                            _ShowDMAlert = False
                        End If
                    End If
                    ''''code added by pradeep on 29/06/2010
                Case "UseSitePrefix".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _UseSitePrefix = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _UseSitePrefix = False
                    End If

                    '------------------------------------------
                Case "EnableSingleSignon".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _EnableSingleSignon = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _EnableSingleSignon = False
                    End If
                    ''Added Rahul for Unauthenticated Login Banner on 20101020
                Case "UnAuthenticatedLoginBanner".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sUnAuthLogin = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sUnAuthLogin = ""
                    End If
                    ''End

                    ''''code added by pradeep on 12/07/2010 for auto acceptance of task
                Case "ExplicitlyAcceptTask".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _ExplicitlyAcceptTask = CType(dsData.Tables(0).Rows(nCount).Item(2), Integer)
                    Else
                        _ExplicitlyAcceptTask = 0
                    End If
                    ''''code added by sarika 18th jan 08 for gloReporting authentication
                Case "UserName".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sRptUserName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    End If
                Case "Password".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sRptPassword = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    End If
                    ''code added by sarika 18th jan 08 for gloReporting authentication

                    ''sarika UseFaxNoPrefix 12th april 08
                Case "Use Fax No. Prefix".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _blnUseFaxNoPrefix = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _blnUseFaxNoPrefix = False
                    End If
                Case "Fax No. Prefix".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sFaxNoPrefix = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sFaxNoPrefix = ""
                    End If
                    '-------------sarika UseFaxNoPrefix 12th april 08---
                    'sarika internet fax
                Case "InternetFax".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _blnInternetFax = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _blnInternetFax = False
                    End If

                    'eFax login key
                    'Case "eFax User ID".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _seFaxUserID = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _seFaxUserID = ""
                    '    End If
                    'Case "eFax User Password".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _seFaxUserPassword = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _seFaxUserPassword = ""
                    '    End If
                    'sarika internet fax

                    'sarika internet fax'
                    '          Case "eFax Download Directory"
                Case "Fax Receive Path For DMS".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _seFaxDirDownload = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _seFaxDirDownload = ""
                    End If
                    'sarika internet fax'

                    'code added by supriya 11/7/2008
                Case "Surescript Enabled".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _IsSurescriptEnabled = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _IsSurescriptEnabled = False
                    End If
                Case "StagingServer".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _IsStagingServer = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _IsStagingServer = False
                    End If
                    'code added by supriya 11/7/2008

                    'code added for NCPDP 10.6 changes
                Case "NCPDP10dot6".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _IsNCPDP10dot6Ver = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _IsNCPDP10dot6Ver = False
                    End If

                Case "MedHistory10Dot6Enable".ToUpper

                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _IsMedHistory10Dot6Enable = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _IsMedHistory10Dot6Enable = False

                    End If


                Case "MEDHXTENDOTSIXSTAGINGURL".ToUpper

                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sMedhxSurescriptUrlStaging = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sMedhxSurescriptUrlStaging = String.Empty

                    End If

                Case "MEDHXTENDOTSIXPRODUCTIONGURL".ToUpper

                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sMedhxSurescriptUrlProduction = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sMedhxSurescriptUrlProduction = String.Empty

                    End If

                Case "AllowRefillCancel".ToUpper         ''Allow Refill Cancel Button
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _bAllowRefillcancel = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _bAllowRefillcancel = False
                    End If
                Case "AutoEligibilityONorOFF".ToUpper         ''Set "Individual auto eRx Eligibility ON/Off"
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _bAutoEligibility = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _bAutoEligibility = False
                    End If

                Case "Is8dot1PendingRefReqComplete".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _Is8dot1PendingRefReqComplete = dsData.Tables(0).Rows(nCount).Item(2)
                    Else
                        _Is8dot1PendingRefReqComplete = False
                    End If
                Case "eRx10dot6StagingWebserviceURL".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sSurescript10dot6UrlStaging = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sSurescript10dot6UrlStaging = String.Empty
                    End If
                Case "eRx10dot6ProductionWebserviceURL".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sSurescript10dot6UrlProduction = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sSurescript10dot6UrlProduction = String.Empty
                    End If


                Case "RXDECLARATION".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _RxDeclaration = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _RxDeclaration = ""
                    End If

                    'RxHub disclaimer
                Case "RXHUBDISCLAIMER".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _RxHUBDisclaimer = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _RxHUBDisclaimer = ""
                    End If
                    'RxHub disclaimer

                Case "GENERATEMIC".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _Generatemic = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _Generatemic = False
                    End If

                    'Added by Amit - 7010 TRACK INVENTORY OF VACCINE 
                Case "TRACKVACCINEINVENTORY".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _TrackVaccineInventory = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _TrackVaccineInventory = False
                    End If


                    'Added by Amit - 7020 Immunization Funding field mandatory
                Case "REQUIREFUNDING".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _RequireFunding = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _RequireFunding = False
                    End If


                    'Added by Amit - 7020 Enable Copy Exam
                Case "ENABLECOPYEXAM".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _EnableCopyExam = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _EnableCopyExam = False
                    End If

                    '27-Jan-15 Aniket: Addition of new setting to Show SmartDX screen on SmartDX save
                Case "ShowDxCPTScreenOnSmartDX".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        blnShowDxCPTScreenOnSmartDX = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        blnShowDxCPTScreenOnSmartDX = False
                    End If
                Case "IsExamPTBillingEnabled".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        blnIsExamPTBillingEnabled = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        blnIsExamPTBillingEnabled = False
                    End If

                    ''Start OB Setting
                Case "OB Speciality".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _bIsOBSpeciality = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _bIsOBSpeciality = False
                    End If

                Case "Auto Case Close Days".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sAutoCaseCloseDays = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        Return False
                    End If
                    ''End OB Setting

                    'Added by Amit - 7030 MU Stage 1 2013 changes
                Case "CPOE MU STAGE 1 2013".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _CPOE_MU1_Change = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _CPOE_MU1_Change = False
                    End If

                Case "VITAL MU STAGE 1 2013".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _Vital_MU1_Change = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _Vital_MU1_Change = False
                    End If

                Case "VITAL ALL REQUIRED MU 2013".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _VitalAllRequired = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _VitalAllRequired = False
                    End If

                Case "VITAL BP REQUIRED MU 2013".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _VitalBPRequired = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _VitalBPRequired = False
                    End If

                Case "VITAL H/W REQUIRED MU 2013".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _VitalHeightWeightRequired = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _VitalHeightWeightRequired = False
                    End If

                    'Stage 2 Vital Changes

                Case "VITAL ALL REQUIRED MU Stage2".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _VitalAllRequired_Stage2 = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _VitalAllRequired_Stage2 = False
                    End If

                Case "VITAL BP REQUIRED MU Stage2".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _VitalBPRequired_Stage2 = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _VitalBPRequired_Stage2 = False
                    End If

                Case "VITAL H/W REQUIRED MU Stage2".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _VitalHeightWeightRequired_Stage2 = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _VitalHeightWeightRequired_Stage2 = False
                    End If

                    'Stage 2 Vital Changes
                Case "ELECTRONIC PRESCRIPTION MU 2013".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _eRx_MU1_Change = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _eRx_MU1_Change = False
                    End If

                Case "REPORT CLINICAL QM MU 2013".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _eRptClinicalQua_MU1_Change = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _eRptClinicalQua_MU1_Change = False
                    End If

                Case "ELECTRONIC COPY OF PAT. INFO. MU 2013".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _eCopyPatHealthInfo_MU1_Change = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _eCopyPatHealthInfo_MU1_Change = False
                    End If

                Case "ELECTRONICALLY EXCH cLINICAL INFO MU 2013".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _eExchangeClinInfor_MU1_Change = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _eExchangeClinInfor_MU1_Change = False
                    End If



                    '' MCIR Report Path
                Case "MCIR Report Path".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _MCIRReportPath = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _MCIRReportPath = ""
                    End If

                Case "CCD File Path".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sCCDfilePath = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sCCDfilePath = ""
                    End If

                    '' Added by Ujwala for certification criteria - 170.315(b)(7) Data Segmentation for Privacy – Send - Start
                Case "CDAPrivacyText".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _CDAPrivacyText = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _CDAPrivacyText = ""
                    End If
                    '' Added by Ujwala for certification criteria - 170.315(b)(7) Data Segmentation for Privacy – Send - End

                Case "CLINICAL DOCUMENTS EXPORT PATH"
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sClinicalDocfilePath = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sClinicalDocfilePath = ""
                    End If
                Case "Style Sheet Path".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sStylesheetfilePath = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sStylesheetfilePath = ""
                    End If
                Case "CCDAValidatorAPIUrl".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _CDAValidateUrl = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _CDAValidateUrl = ""
                    End If

                    ''Cases for CDS Diagnosis one 
                    'Case "CDS PES URL".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _sCDS_PES_Url = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _sCDS_PES_Url = ""
                    '    End If
                    'Case "CDS PES USER NAME".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _sCDS_PES_UserName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _sCDS_PES_UserName = ""
                    '    End If
                    'Case "CDS PES PASSWORD".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _sCDS_PES_Password = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _sCDS_PES_Password = ""
                    '    End If
                    'Case "CDS PES ENABLED".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _sCDS_PES_Enabled = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _sCDS_PES_Enabled = ""
                    '    End If

                    '' Advanced Growth Chart
                Case "Advanced Growth Chart".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _ShowAdvancedGrowthChart = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _ShowAdvancedGrowthChart = False
                    End If

                    '' Advanced Growth Chart Percentile '' SUDHIR 20090721 ''
                Case "Advanced Growth Chart Percentile".ToUpper
                    _GrowthChartPercentile = CType(dsData.Tables(0).Rows(nCount).Item(2), frmSettings_New.enumGrowthChartPercentile)


                    '' by sudhir 20081111 
                    'Show Age in Days
                Case "Show Age in Days".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _ShowAgeInDays = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _ShowAgeInDays = False
                    End If

                    'To get Age Limit
                Case "Age Limit".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _AgeLimit = CType(dsData.Tables(0).Rows(nCount).Item(2), Int64)
                    Else
                        _AgeLimit = ""
                    End If


                    ''sudhir 20081124

                    'To get Age Limit for weeks
                Case "Age Limit for Weeks".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _AgeLimitForWeeks = CType(dsData.Tables(0).Rows(nCount).Item(2), Int64)
                    Else
                        _AgeLimitForWeeks = ""
                    End If
                    '' end sudhir

                    'sarika 
                    'DMS 20080908 -- for Loading no of recieved faxes in DMS

                Case "Load Number Of Faxes".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _nLoadNoOfFaxes = CType(dsData.Tables(0).Rows(nCount).Item(2), Int16)
                    Else
                        _nLoadNoOfFaxes = 1
                    End If


                    'sarika PM DB Credentials 20081128

                Case "AddPatientToPM".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_blnAddPatient = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        m_blnAddPatient = False
                    End If


                Case "PMServerName".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_PMServerName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_PMServerName = ""
                    End If

                Case "PMDatabaseName".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_PMDatabaseName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_PMDatabaseName = ""
                    End If

                Case "PMSQLAuthentication".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_blnSQLAuthentication = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        m_blnSQLAuthentication = False
                    End If


                Case "PMSQLPwd".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_PMSQLPwd = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_PMSQLPwd = ""
                    End If


                Case "PMSQLUserID".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_PMSQLUserId = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_PMSQLUserId = ""
                    End If

                Case "PMConnectionString".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_PMConnectionString = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_PMConnectionString = ""
                    End If
                Case "SignatureText".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_SignatureText = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_SignatureText = ""
                    End If
                Case "CoSignatureText".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_CoSignatureText = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_CoSignatureText = ""
                    End If
                Case "DMSImageDPI".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _nDMSImageDIP = CType(dsData.Tables(0).Rows(nCount).Item(2), Int32)
                    Else
                        _nDMSImageDIP = 0
                    End If
                Case "UseFileCompression".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _bUseFileCompression = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _bUseFileCompression = 0
                    End If
                    '---
                    'COMMENTED BY SHUBHANGI 20100507 
                    'Case "DMSFileSizeSplit".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _SplitDoc = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    '    Else
                    '        _SplitDoc = 0
                    '    End If
                    '\\ Suraj 20090128
                Case "RecoverDMSV2Doc".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_RecoverDMSV2 = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        m_RecoverDMSV2 = 0
                    End If
                    '\\ Suraj 20090128
                Case "RecoveryDMSV2DocPath".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_RecoverDMSV2Path = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_RecoverDMSV2Path = ""
                    End If
                    '\\ Suraj 20090128 for Delete 
                Case "DeleteDMSDocumentAfterMigration".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_DeleteDMSDoc = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        m_DeleteDMSDoc = 0
                    End If
                Case "OccMedDMSCategories".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        strOccMedDMSCategory = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        strOccMedDMSCategory = ""
                    End If

                    ' Sandip Darade 20090210  Use Code History
                Case "UseCodedHistory".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _bUsecodedhistory = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _bUsecodedhistory = 0
                    End If

                    ' Sandip Darade 20090210  Use Code History
                Case "ShowCodedHistory".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sShowCodedHistory = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    End If
                Case "CodeFieldsinHistory".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sCodeFieldsinHistory = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    End If
                Case "ShowSmokingColumnInHistory".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _ShowSmokingColumn = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    End If

                Case "RetrieveESR".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _IsRetrieveESR = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    End If
                Case "ESRDays".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _ESRDay = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    End If

                Case "RetrieveCRP".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _IsRetrieveCRP = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    End If
                Case "CRPDays".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _CRPDay = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    End If

                Case "EM ChiefComplaint Type".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _EMChiefComplaintType = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _EMChiefComplaintType = "ChiefComplaint"
                    End If
                Case "E&M Enable".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _EMOnOff = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _EMOnOff = 1
                    End If
                Case "OtherPatientType".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _OtherPatientType = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _OtherPatientType = False
                    End If
                Case "IMReminderDays".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _nIM_ReminderDays = CType(dsData.Tables(0).Rows(nCount).Item(2), Integer)
                    Else
                        _nIM_ReminderDays = 1
                    End If

                    'sarika SendEMail 20090502
                    'Case "IsSendEMail".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _bIsSendEMail = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    '    Else
                    '        _bIsSendEMail = False
                    '    End If

                    'Case "SendEMailAddress".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _sSendEmailAddress = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _sSendEmailAddress = ""
                    '    End If
                    '---

                    'sarika RxHUB Server Settings 20090602
                Case "Advance Rx Enabled".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _bIsAdvanceRxEnabled = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _bIsAdvanceRxEnabled = False
                    End If
                Case "Advance Rx Staging Server".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _bIsAdvanceRxStagingServer = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _bIsAdvanceRxStagingServer = False
                    End If
                Case "eARDirectory".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sEARDirectory = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sEARDirectory = False
                    End If
                Case "SiteID".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sSiteID = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sSiteID = False
                    End If

                    '\\ 20090819 rxhub participantID 
                Case "RxHUB ParticipantID".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _participantid = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _participantid = ""
                    End If

                Case "RxHUB Password".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _rxPassword = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _rxPassword = ""
                    End If

                    'OTC Warrning
                Case "OTCIssueWarning".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _bOTCIssueWarning = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _bOTCIssueWarning = 0
                    End If

                    ' Sandip  Darade 20090622
                    ' Read DefaultPatientGender setting
                Case "DefaultPatientGender".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sDefaultPatientGender = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sDefaultPatientGender = ""
                    End If
                    '\\ Sandip Darade 20090709
                    '       
                Case "DefaultFeeSpeciality".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _DefaultFeeSpeciality = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _DefaultFeeSpeciality = ""
                    End If
                Case "DefaultCarrierNumber".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _DefaultCarrierNumber = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _DefaultCarrierNumber = ""
                    End If
                Case "DefaultLocality".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _DefaultLocality = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _DefaultLocality = ""
                    End If
                Case "CLINICFEESCHEDULE".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _ClinicFeeSchedule = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _ClinicFeeSchedule = ""
                    End If
                    '     
                Case "NoOfClaimPerBatch".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _NoOfClaimPerBatch = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _NoOfClaimPerBatch = ""
                    End If
                Case "NoOfModifiers".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _NoOfModifiers = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _NoOfModifiers = ""
                    End If
                Case "ShowLabCol".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _ShowLabCol = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _ShowLabCol = "0"
                    End If
                Case "DEFAULTFEECHARGES".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _Defaultfeecharges = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _Defaultfeecharges = ""
                    End If
                    '------
                Case "SET CPT TO ALL ICD9".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _SetCPTtoAllICD9 = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _SetCPTtoAllICD9 = False
                    End If
                    ''Mayuri
                Case "EXAM DIAGNOSIS".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _ICD9Driven = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _ICD9Driven = True
                    End If

                Case "SHOW 8 ICD9".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _Show8ICD9 = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _Show8ICD9 = True
                    End If

                Case "SHOW 4 MODIFIER".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _Show4Modifier = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _Show4Modifier = True
                    End If

                    'removed setting in 7020 as per PRD discussion for Incident #00006175
                    'Case "PRESCRIPTION PROVIDER ASSOCIATION".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _PrescriptionProviderAssociation = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    '    Else
                    '        _PrescriptionProviderAssociation = False
                    '    End If

                Case "PATIENT QUESTIONNAIRE".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _PatientQuestionnaire = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _PatientQuestionnaire = False
                    End If

                    'case commented by manoj jadhav on 20120730 for moving service setiings to Respective Service
                    'Case "SEND UNASSOCIATED DIAGNOSIS".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _SendUnassociatedDiagnosis = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    '    Else
                    '        _SendUnassociatedDiagnosis = False
                    '    End If
                    ''Sandip Darade 20090830
                Case "GeniusPath".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_GeniusPath = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_GeniusPath = ""
                    End If
                    'COMMENTED BY SHUBHANGI 20110606
                    'Shubhangi
                    'Case "EMExamType".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _EMExamtype = CType(dsData.Tables(0).Rows(nCount).Item(2), enumExamControlType)
                    '    Else
                    '        _EMExamtype = enumExamControlType.None
                    '    End If
                    'End

                    ''Sandip Darade 20090830
                Case "GeniusCode".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_GeniusCode = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_GeniusCode = ""
                    End If
                    ''Sandip Darade 20091007
                Case "Country".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _Country = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _Country = ""
                    End If

                Case "Default AppointmentType for Same Day".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        SameDayApptType = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        SameDayApptType = ""
                    End If

                Case "Default AppointmentType for future".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        FutureApptType = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        FutureApptType = ""
                    End If

                    ''STARTs :: PEDIATRIC SETTINGS
                Case "PEDIATRICS".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _IsPediatrics = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _IsPediatrics = False
                    End If
                    ''ENDs :: PEDIATRIC SETTINGS

                    ''STARTs :: ''YES/No Labs

                Case "REQUIRESNOMEDCT".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _IsrequireSNOMED = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _IsPediatrics = False
                    End If
                    ''ENDs :: PEDIATRIC SETTINGS

                    ''STARTs :: ''AutogeneratedProblemFromExam


                Case "AUTOGENERATEDPROBLEMFROMEXAM".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _IsAutogeneratedProblemFromExam = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _IsAutogeneratedProblemFromExam = False
                    End If
                    ''ENDs :: ''AutogeneratedProblemFromExam

                    ''STARTs :: ''YES/No Labs

                Case "YESNOLAB".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _IsYesNoLab = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _IsYesNoLab = False
                    End If
                    ''ENDs ::''YES/No Labs


                    ''STATS :: PATIENT DEMOGRAPHIC MERGE
                Case "PATIENTDAEMOMERG".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _IsPatDaemoMerge = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _IsPatDaemoMerge = False
                    End If
                    ''END :: PATIENT DEMOGRAPHIC MERGE


                    'Shweta 20100125
                    ''Emdeon Settings ''
                Case "gloLab User Name".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _EmdeonUserName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _EmdeonUserName = ""
                    End If
                Case "gloLab Password".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _EmdeonPassword = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _EmdeonPassword = ""
                    End If

                Case "gloLab URL".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _EmdeonURL = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _EmdeonURL = ""
                    End If
                Case "UDI API URL".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        ParseUDIURL = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        ParseUDIURL = ""
                    End If
                Case "gloLab Facility Code".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _EmdeonFacilityCode = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _EmdeonFacilityCode = ""
                    End If
                    'Madan added for billing type
                    'Added on 20100227
                Case "gloLab billing type".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _gloLab_billing = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _gloLab_billing = ""
                    End If
                Case "gloIM HxForecast default USER".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _gloHxForecast_defaultUserID = CType(dsData.Tables(0).Rows(nCount).Item(2), Long)
                    Else
                        _gloHxForecast_defaultUserID = 0
                    End If
                Case "gloIM ForecastReconcileDone default user".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _gloForecastReconcileDone_defaultUserID = CType(dsData.Tables(0).Rows(nCount).Item(2), Long)
                    Else
                        _gloForecastReconcileDone_defaultUserID = 0
                    End If
                    'Added for default user
                Case "gloLab default user".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _gloLab_defaultUserID = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _gloLab_defaultUserID = ""

                    End If
                    'Removed on 22/2/2010--by Madan-- According to mail dated on 22/2/2010 from Durga Prasad
                    'Case "gloLab Description".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _EmdeonDescription = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _EmdeonDescription = ""
                    '    End If
                    'Removed on 20100219
                    'Madan 20100213-Added gloLab pat reg...
                    'Case "gloLab Patient Registration".ToUpper
                    '    If IsDBNull(Convert.ToBoolean(dsData.Tables(0).Rows(nCount).Item(2))) = False Then
                    '        _gloLab_Pat = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _gloLab_Pat = True
                    '    End If
                Case "gloLab Hsi Label".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _gloLab_Hsilb = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _gloLab_Hsilb = ""
                    End If
                    'end Madan
                    'start of code commented by manoj jadhav for providing common UI for device activation settings on 20111003
                    'Case "ECGInterfaceURL".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _ECG_InterfaceURL = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _ECG_InterfaceURL = ""
                    '    End If
                    'Case "ECGInstutionId".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _ECG_InstutionID = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _ECG_InstutionID = ""
                    '    End If
                    '    'end Madan

                    'Case "ECGUserProviderID".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _ECG_UserProviderId = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _ECG_UserProviderId = ""
                    '    End If


                    'Case "ECGEnabled".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _ECG_blnIsECGEnabled = Convert.ToBoolean(CType(dsData.Tables(0).Rows(nCount).Item(2), String))
                    '    Else
                    '        _ECG_blnIsECGEnabled = False
                    '    End If
                    'end of code commented by manoj jadhav for providing common UI for device activation settings on 20111003

                    ''Dhruv 20100216
                Case "FORMULARYSERVERNAME".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _FormularyServerName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _FormularyServerName = ""
                    End If
                Case "FORMULARYDATABASENAME".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _FormularyDataBaseName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _FormularyDataBaseName = ""
                    End If

                Case "FORMULARYUSERID".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _FormularyUserName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _FormularyUserName = ""
                    End If

                Case "FORMULARYPASSWORD".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _FormularyPassword = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _FormularyPassword = ""
                    End If

                    ''End------Dhruv
                    'Code Added by kanchan on 20100604
                Case "CCD Default UserID".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _CCDUserID = CType(dsData.Tables(0).Rows(nCount).Item(2), Int64)
                    Else
                        _CCDUserID = 0
                    End If

                    ''Added by Mayuri:20100608
                Case "VITALSCUSTOMIZATION".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _VitalSettingsValue = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _VitalSettingsValue = ""
                    End If

                    ''End code Added by Mayuri:20100608
                Case "clinicalchartcustomization".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        ClinicalChartSettingsValue = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        ClinicalChartSettingsValue = ""
                    End If

                Case "obvitalscustomization".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        OBVitalSettingsValue = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        OBVitalSettingsValue = ""
                    End If
                Case "signatureformatvalue".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        SignatureFormat = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        SignatureFormat = ""
                    End If
                Case "FaxExceedspages".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        FaxExceedsValue = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        FaxExceedsValue = ""
                    End If

                Case "AllowFaxespages".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        AllowFaxesValue = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        AllowFaxesValue = ""
                    End If


                Case "FullCCDDefaultSections".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _FullCCDSettingsValue = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _FullCCDSettingsValue = ""
                    End If
                Case "visitCCDDefaultSections".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _visitCCDSettings = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _visitCCDSettings = ""
                    End If
                    ''START CCDA Setting
                Case "CCDAClinicalSummarySections".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _ClinicalCCDASettingsValue = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _ClinicalCCDASettingsValue = ""
                    End If

                Case "CCDAAmbulatorySummarySections".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _AmbulatoryCCDASettingsValue = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _AmbulatoryCCDASettingsValue = ""
                    End If
                    ''END CCDA Setting
                Case "CCDAImportCategories".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _CCDAImportCategorySettings = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _CCDAImportCategorySettings = ""
                    End If
                Case "CCDAViewerUrl".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _CCDAViewerURl = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _CCDAViewerURl = ""
                    End If
                Case "MUCCDSECTIONS".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _MUSectionsValue = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _MUSectionsValue = ""
                    End If
                    'Added by Shirish 20100612


                    'Added for CCDA AUTO DELETE FILES
                Case "CCDAAUTODELETE".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _CCDAAutoDelete = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _CCDAAutoDelete = ""
                    End If
                    'Added for CCDA AUTO DELETE FILES


                Case "glolab provider usage".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _gloLab_Provider_Usage = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _gloLab_Provider_Usage = ""
                    End If

                    'End of Shirish  2010061


                    '' Chetan Integrated  on 04-Oct-2010
                Case "GloSmDbSetting".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_SMblnShowsmdbsetting = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        m_SMblnShowsmdbsetting = False
                    End If


                Case "GLOSMSERVERNAME".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_SMServerName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_SMServerName = ""
                    End If

                Case "GLOSMUSERID".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_SMSQLUserId = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_SMSQLUserId = ""
                    End If

                Case "GLOSMPASSWORD".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_SMSQLPwd = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_SMSQLPwd = ""
                    End If

                Case "GLOSMDBNAME".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_SMDatabaseName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_SMDatabaseName = ""
                    End If

                Case "GLOSMAUTHEN".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_SMblnSQLAuthentication = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        m_SMblnSQLAuthentication = False
                    End If


                Case "GLORxNDBSETTING".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_RxNblnShowRxNdbsetting = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        m_RxNblnShowRxNdbsetting = False
                    End If

                Case "GLORxNSERVERNAME".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_RxNServerName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_RxNServerName = ""
                    End If

                Case "GLORxNDBNAME".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_RxNDatabaseName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_RxNDatabaseName = ""
                    End If

                Case "GLORxNUSERID".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_RxNSQLUserId = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_RxNSQLUserId = ""
                    End If

                Case "GLORxNPASSWORD".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_RxNSQLPwd = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_RxNSQLPwd = ""
                    End If

                Case "GLORxNAUTHEN".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_RxNblnSQLAuthentication = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        m_RxNblnSQLAuthentication = False
                    End If

                    'Added by Ashish Tamhane on 2nd March 2015 for Centralized Formulary 3.0
                    'Case "USEGLOFORMULARYSERVICE".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        UseFormularyService = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    '    Else
                    '        UseFormularyService = False
                    '    End If
                Case "GLOEPAURL".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        Me.ePAServiceURL = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        ePAServiceURL = String.Empty
                    End If
                Case "GLODIBURL".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        Me.DIBServiceURL = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        DIBServiceURL = String.Empty
                    End If
                Case "GLOFORMULARYURL".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        Me.FormularyServiceURL = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        FormularyServiceURL = String.Empty
                    End If
                Case "GLOSMTRV".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_SMtrv = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_SMtrv = ""
                    End If


                    '' Chetan Integrated  on 04-Oct-2010
                    ''Integrated by Mayuri:20101020-Provider signature change
                Case "UseSignatureDelegates".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _UseSignatureDelegates = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _UseSignatureDelegates = False
                    End If

                    '--------Added by Rahul Patel on 26-10-2010 ----- '
                    '------For fetch Data  for DMS database Setting --'
                Case "GLODMSSERVERNAME".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_DMSServerName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                        'Added by Rahul patel on 29-10-2010
                        'For Retiriving DMS database setting
                        gDmsServerName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_DMSServerName = ""
                        gDmsDatabaseName = ""
                    End If

                Case "GLODMSDBNAME".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_DMSDatabaseName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                        'Added by Rahul patel on 29-10-2010
                        'For Retiriving DMS database setting
                        gDmsDatabaseName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_DMSDatabaseName = ""
                        gDmsDatabaseName = ""
                    End If

                Case "GLODMSUSERID".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_DMSSQLUserId = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                        'Added by Rahul patel on 29-10-2010
                        'For Retiriving DMS database setting
                        gDmsUserID = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_DMSSQLUserId = ""
                        gDmsUserID = ""
                    End If

                Case "GLODMSPASSWORD".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_DMSSQLPwd = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                        'Added by Rahul patel on 29-10-2010
                        'For Retiriving DMS database setting
                        gDmsPassWord = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_DMSSQLPwd = ""
                        gDmsPassWord = ""
                    End If

                Case "GLODMSAUTHEN".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_DMSblnSQLAuthentication = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                        'Added by Rahul patel on 29-10-2010
                        'For Retiriving DMS database setting
                        gDmsIsSQLAUTHEN = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        m_DMSblnSQLAuthentication = False
                        gDmsIsSQLAUTHEN = False
                    End If
                    '------End of Fetching data from DMS database Setting ----'

                    ' End of Code Added by Rahul Patel on 26-10-2010 -- '
                    'Code added by Rohit to retrieve the setting for Device Database  on 20110514
                Case "GLODEVICESERVERNAME".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_DeviceServerName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_DeviceServerName = String.Empty
                    End If

                Case "GLODEVICEDBNAME".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_DeviceDatabaseName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_DeviceDatabaseName = String.Empty
                    End If
                    'End of Code added by Rohit to retrieve the setting for Device Database  on 20110514

                    'added by nilesh on 20101025
                    'fetch the data for gloHL7 database settings
                Case "GLOHL7SERVERNAME".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_gloHL7ServerName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_gloHL7ServerName = ""
                    End If

                Case "GLOHL7DBNAME".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_gloHL7DatabaseName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_gloHL7DatabaseName = ""
                    End If

                Case "GLOHL7USERID".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_gloHL7SQLUserID = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_gloHL7SQLUserID = ""
                    End If

                Case "GLOHL7PASSWORD".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_gloHL7SQLPassword = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_gloHL7SQLPassword = ""
                    End If

                Case "GLOHL7AUTHEN".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_gloHL7blnSQLAuthentication = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        m_gloHL7blnSQLAuthentication = False
                    End If
                    'end by nilesh on 20101025
                    'Added by madan
                Case "GLOVAULTVISIBILITY".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _gloVaultVisiblility = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _gloVaultVisiblility = False
                    End If
                Case "USEINTUITINTERFACE".ToUpper
                    'If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '    _UseMedfusionInterface = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    'Else
                    '    _UseMedfusionInterface = False
                    'End If
                    ''Added by Abhijeet on 20101120

                    Try
                        Boolean.TryParse(Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)), UseMedfusionInterface)
                    Catch ex As Exception
                        UseMedfusionInterface = False
                        ex = Nothing
                    End Try

                    ''Added for MU2 Patient Portal implementation on 20130620
                Case "PatientPortalEnabled".ToUpper
                    Try
                        Boolean.TryParse(Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)), UsePatientPortal)
                    Catch ex As Exception
                        UsePatientPortal = False
                        ex = Nothing
                    End Try
                    ''End

                Case "PatientPortalLabAckNotification".ToUpper
                    Try
                        Boolean.TryParse(Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)), PatientPortalLabAckNotification)
                    Catch ex As Exception
                        PatientPortalLabAckNotification = False
                        ex = Nothing
                    End Try
                    ''End
                Case "PatientPortalStatementNotification".ToUpper
                    Try
                        Boolean.TryParse(Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)), PatientPortalStatementNotification)
                    Catch ex As Exception
                        PatientPortalStatementNotification = False
                        ex = Nothing
                    End Try
                Case "PatientPortalEmailService".ToUpper
                    Try
                        If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                            sCommonEmailServicePath = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                        Else
                            sCommonEmailServicePath = ""
                        End If
                    Catch ex As Exception

                        ex = Nothing
                    End Try
                    ''End
                Case "PatientPortalCoreServicePath".ToUpper
                    Try
                        If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                            sCommongloCoreServicePath = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                        Else
                            sCommongloCoreServicePath = ""
                        End If
                    Catch ex As Exception

                        ex = Nothing
                    End Try
                    ''End
                Case "UseSignaturepad".ToUpper
                    Try
                        If Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)).ToUpper = "NEW" Then
                            Signaturepadtouse = True
                        Else
                            Signaturepadtouse = False
                        End If
                        'Boolean.TryParse(Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)), Signaturepadtouse)
                    Catch ex As Exception
                        Signaturepadtouse = False
                        ex = Nothing
                    End Try
                    ''End

                Case "PatientSpecificResultRange".ToUpper()
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_PatientSpecificResultRange = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_PatientSpecificResultRange = "0"
                    End If
                    ''End of changes by Abhijeet on 20101120
                Case "Vitals Height Copy Forward".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _IsVitalsHeightCopyForward = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _IsVitalsHeightCopyForward = False
                    End If
                    ''Added by pradeep on 20110106 for page break on pharmacy change 
                Case "PrintMultipleRx_PerScriptPage_setting".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _bln_PrintMultipleRx_PerScriptPage_setting = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _bln_PrintMultipleRx_PerScriptPage_setting = False
                    End If
                    ''End of changes by pradeep
                    '''code added by pradeep on 03/02/2011 to suppress task on patient status change
                    ''' 
                Case "CustomizeRxReportSetting".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _bln_CustomizeRxReportPrintSetting = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _bln_CustomizeRxReportPrintSetting = False
                    End If
                Case "SingleRxStateCustiomizeReport".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _SingleRxStateCustiomizeReport = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _SingleRxStateCustiomizeReport = False
                    End If
                Case "MultipleRxStateCustiomizeReport".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _MultipleRxStateCustiomizeReport = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _MultipleRxStateCustiomizeReport = False
                    End If

                Case "PrintPharmacyOnRxReportSetting".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _bln_PrintPharmacyOnRxReportSetting = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _bln_PrintPharmacyOnRxReportSetting = False
                    End If

                Case "EnableTasksforPatientStatusChange".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _EnableTasksforPatientStatusChange = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _EnableTasksforPatientStatusChange = False
                    End If
                Case "DefaultLabTab".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _DefaultLabTab = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _DefaultLabTab = "Results"
                    End If

                    '' code added by Manoj Jadhav on 20110314
                Case "GENERALMESSAGELOGPAGESIZE"
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False And dsData.Tables(0).Rows(nCount).Item(2).ToString().Trim <> "" Then
                        _GENERALMESSAGELOGPAGESIZE = CType(dsData.Tables(0).Rows(nCount).Item(2), Long)

                    Else
                        _GENERALMESSAGELOGPAGESIZE = 1000
                    End If

                    '' ended by Manoj Jadhav on 20110314

                    ''Added by Abhijeet on 20110407
                Case "UseVitaldevice".ToUpper()
                    ' start code commented by manoj jadhav for providing common UI for device settings on 20111003
                    'If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '    UseVitalDevice = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    'Else
                    '    UseVitalDevice = False
                    'End If
                    'Case "VitalDeviceKey".ToUpper()
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        VitalDeviceKey = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        VitalDeviceKey = ""
                    '    End If
                    'Case "NoofAttempttoConnectVitalDevice".ToUpper()
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        NoofAttempttoConnectVitalDevice = CType(dsData.Tables(0).Rows(nCount).Item(2), Int32)
                    '    Else
                    '        NoofAttempttoConnectVitalDevice = 5
                    '    End If
                    ' end of code commented by manoj jadhav for providing common UI for device settings on 20111003

                    ''End of changes by Abhijeet on 20110407

                    ''Added by Abhijeet on 20110422 & 20110425
                    ' start code added by manoj jadhav for providing common UI for device settings on 20111003
                    Try
                        Boolean.TryParse(Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)), UseVitalDevice)
                    Catch ex As Exception
                        UseVitalDevice = False
                        ex = Nothing
                    End Try
                    ' end of code added by manoj jadhav for providing common UI for device settings on 20111003

                    'start of code commented by manoj jadhav on 20120730 for moving service setiings to Respective Service
                    'Case "IMRegistryHL7Format".ToUpper()
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        IMRegistryHL7Format = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    '    Else
                    '        IMRegistryHL7Format = False
                    '    End If
                    'Case "RegistryFileExportPath".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        RegistryFileExportPath = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        RegistryFileExportPath = ""
                    '    End If
                    'Case "RegistryFileIstobeExport".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        RegistryFileIstobeExport = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    '    Else
                    '        RegistryFileIstobeExport = False
                    '    End If
                    'Case "RegistryFileExportURL".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        RegistryFileExportURL = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        RegistryFileExportURL = ""
                    '    End If
                    'Case "RegistryFileExportUserID".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        RegistryFileExportUserID = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        RegistryFileExportUserID = ""
                    '    End If
                    'Case "RegistryFileExportPassword".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        RegistryFileExportPassword = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        RegistryFileExportPassword = ""
                    '    End If
                    'Case "RegistryFileExportFacilityID".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        RegistryFileExportFacilityID = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        RegistryFileExportFacilityID = ""
                    '    End If
                    'Case "RegistryFileExportEveryDayAt".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        RegistryFileExportEveryDayAt = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        RegistryFileExportEveryDayAt = ""
                    '    End If
                    'end of code commented by manoj jadhav on 20120730 for moving service setiings to Respective Service

                Case "USESPIROMETRYDEVICE".ToUpper()

                    Try
                        Boolean.TryParse(Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)), UseSpirometryDevice)
                    Catch ex As Exception
                        UseSpirometryDevice = False
                        ex = Nothing
                    End Try

                    ' start code commented by manoj jadhav for providing common UI for device settings on 20111003
                    'If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '    m_UseSpirometryDevice = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    'Else
                    '    m_UseSpirometryDevice = False
                    'End If
                    ''End of changes by Abhijeet on 20110422 & 20110425
                    'Case "SPIROMETRYDEVICEORDERPREFIX"
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        m_SpirometryDevicePrefix = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        m_SpirometryDevicePrefix = String.Empty
                    '    End If
                    ' end of code commented by manoj jadhav for providing common UI for device settings on 20111003
                    ' start code added by manoj jadhav for providing common UI for device settings on 20111003
                Case "ECGENABLED".ToUpper()

                    Try
                        Boolean.TryParse(Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)), UseCardioScinceECGDevice)
                    Catch ex As Exception
                        UseCardioScinceECGDevice = False
                        ex = Nothing
                    End Try

                Case "USEWELCHALLYNECGDEVICE".ToUpper()

                    Try
                        Boolean.TryParse(Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)), UseWelchAllynECGDevice)
                    Catch ex As Exception
                        UseWelchAllynECGDevice = False
                        ex = Nothing
                    End Try

                    ' end code added by manoj jadhav for providing common UI for device settings on 20111003

                    ' Case Added by manoj jadhav for Midmark IQ ECG Device Integration on 20120419
                Case "USEMIDMARKECGDEVICE".ToUpper()
                    Try
                        Boolean.TryParse(Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)), UseMidmarkECGDevice)
                    Catch ex As Exception
                        UseMidmarkECGDevice = False
                        ex = Nothing
                    End Try

                Case "GLORECOVEREXAM".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _IsRecoverExam = CType(dsData.Tables(0).Rows(nCount).Item(2), Integer)
                    Else
                        _IsRecoverExam = 0
                    End If

                    ''Added by Abhijeet for Failed Lab Task user selection on 20111122
                Case "GLOLAB FAILURE DEFAULT USER".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _gloLabFailure_DefaultUserID = CType(dsData.Tables(0).Rows(nCount).Item(2), Long)
                    Else
                        _gloLabFailure_DefaultUserID = 0
                    End If
                    ''End of changes by Abhijeet for Failed Lab Task user selection on 20111122



                    ''Added For gloCommunity setting on 03-jan-2012 by chetan

                Case "gloCommunityServerName".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sSharepointSrvNm = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sSharepointSrvNm = ""
                    End If

                Case "gloCommunitySiteName".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sSharepointSiteNm = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sSharepointSiteNm = ""
                    End If

                Case "ADFSServerName".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sADFSServerName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sADFSServerName = ""
                    End If

                    ''Case "DomainName".ToUpper
                    ''    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    ''        _sDomainName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    ''    Else
                    ''        _sDomainName = ""
                    ''    End If


                    'Case "CommunityConnect".ToUpper
                    '    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                    '        _sSPCommSrvNm = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    '    Else
                    '        _sSPCommSrvNm = ""
                    '    End If

                Case "gloCommunity Feature".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _blnglocommfeature = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _blnglocommfeature = False
                    End If

                Case "gloCommunityInstalled".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _blnglocomminstalled = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _blnglocomminstalled = False
                    End If
                Case "CommunityEnvironment".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _IsCommunitystaging = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _IsCommunitystaging = True
                    End If
                    ''End  For gloCommunity setting
                    'Case Added by kanchan on 20120801
                Case "gloCommunityAuthentication".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sSharepointAuthentication = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sSharepointAuthentication = String.Empty
                    End If
                Case "Multiple Supervisors for Paper Rx".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _blnMultipleSupervisorsforPaperRx = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _blnMultipleSupervisorsforPaperRx = True
                    End If


                    ''added for global genius and hl7 outbound settings on 7-dec-2012

                Case "HL7SENDOUTBOUNDGLOEMR".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        globlnhl7OutBound = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        globlnhl7OutBound = False
                    End If




                Case "HL7SENDPATIENTDETAILSDEFAULTGLOEMR".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        globlnhl7Sendpatientdet = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        globlnhl7Sendpatientdet = False
                    End If


                Case "HL7SENDAPPOINTMENTDETAILSDEFAULTGLOEMR".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        globlnhl7Sendapptdet = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        globlnhl7Sendapptdet = False
                    End If


                Case "HL7SENDCHARGESSAVECLOSEDEFAULTGLOEMR".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        globlnhl7Sendchargeonsacl = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        globlnhl7Sendchargeonsacl = False
                    End If
                    'start of code by manoj jadhav on 0140220 V8010 for MDM_T02 event
                Case "HL7SENDVISITSUMSAVECLOSE".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        globlnhl7SendVisitsumonsacl = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        globlnhl7SendVisitsumonsacl = False
                    End If
                Case "HL7SENDVISITSUMSAVEFINISH".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        globlnhl7SendVisitsumonsafi = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        globlnhl7SendVisitsumonsafi = False
                    End If
                    'End of code by manoj jadhav on 0140220 V8010 for MDM_T02 event

                Case "HL7SENDCHARGESSAVEFINISHDEFAULTGLOEMR".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        globlnhl7Sendchronsafi = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        globlnhl7Sendchronsafi = False
                    End If

                Case "HL7SENDIMMUNIZATIONDETAILSDEFAULTGLOEMR".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        globlnhl7SendImmudet = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        globlnhl7SendImmudet = False
                    End If


                Case "GENIUSSENDOUTBOUNDGLOEMR".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        globlnGenOutBound = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        globlnGenOutBound = False
                    End If

                Case "GENIUSSENDCHARGESSAVECLOSEDEFAULTGLOEMR".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        globlnGenSendchargeonsacl = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        globlnGenSendchargeonsacl = False
                    End If

                Case "GENIUSSENDCHARGESSAVEFINISHDEFAULTGLOEMR".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        globlnGenSendchargeonsafi = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        globlnGenSendchargeonsafi = False
                    End If

                    ''7022Items: Home Billing- Added to save setting for USEAREACODEFORPATIENT in database
                    ''Save false if No is selected and true if Yes is selected
                Case "USEAREACODEFORPATIENT"
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _UseAreaCodeForPatient = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _UseAreaCodeForPatient = False
                    End If

                    'Enable MU2 Features Setting
                Case "ENABLE MU2 FEATURES".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        globlnEnableMultipleRaceFeatures = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        globlnEnableMultipleRaceFeatures = False
                    End If

                    '04-Dec-14 Aniket: Exclude Non NDC Drugs From Erx Measure. Mail by Phill with subject ' prescriptions without an NCD code: OTC'S and Neutraceuticals'
                Case "ExcludeNonNDCDrugsFromErxMeasure".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        ExcludeNonNDCDrugsFromErxMeasure = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        ExcludeNonNDCDrugsFromErxMeasure = False
                    End If
                    '' -- Exclude Control Substance Drugs From Erx Measure
                Case "ExcludeControlSubstanceDrugsFromErxMeasure".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        ExcludeControlSubstanceDrugsFromErxMeasure = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        ExcludeControlSubstanceDrugsFromErxMeasure = False
                    End If

                Case "EnableSpecializedRegistryReporting".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        EnableSpecializedRegistryReporting = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        EnableSpecializedRegistryReporting = False
                    End If

                Case "MESSAGECOMUNICATIONPREF".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        nMessageComunicationPrefID = CType(dsData.Tables(0).Rows(nCount).Item(2), Int64)
                    Else
                        nMessageComunicationPrefID = 0
                    End If
                Case "LETTERCOMUNICATIONPREF".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        nLetterComunicationPrefID = CType(dsData.Tables(0).Rows(nCount).Item(2), Int64)
                    Else
                        nLetterComunicationPrefID = 0
                    End If
                Case "SECUREMESSAGECOMUNICATIONPREF".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        nSecureMessageComunicationPrefID = CType(dsData.Tables(0).Rows(nCount).Item(2), Int64)
                    Else
                        nSecureMessageComunicationPrefID = 0
                    End If
                Case "SECURE MESSAGE ENABLED".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        IsSecureMessageEnabled = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        IsSecureMessageEnabled = False
                    End If
                Case "SECUREMSGSTAGINGSERVER".ToUpper()
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        IsSecureStagingServer = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        IsSecureStagingServer = False
                    End If

                Case "SECUREMSGSTAGINGWEBSERVICEURL".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sSecuremsgUrlStaging = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sSecuremsgUrlStaging = String.Empty
                    End If
                Case "SECUREMSGPRODUCTIONWEBSERVICEURL".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sSecuremsgUrlProduction = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sSecuremsgUrlProduction = String.Empty
                    End If
                Case "INFOBUTTON_URL".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        InfobuttonURL = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        InfobuttonURL = String.Empty
                    End If
                Case "OPENINFOBUTTON_URL".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        OpenInfobuttonURL = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        OpenInfobuttonURL = String.Empty
                    End If
                Case "ICD10 START DOS".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        dtICD10StartDOS = CType(dsData.Tables(0).Rows(nCount).Item(2), Date)
                    Else
                        dtICD10StartDOS = Nothing
                    End If
                Case "TIMESERVER".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        TimeServerName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        TimeServerName = String.Empty
                    End If
                Case "PatientSavingMessageEnabled".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        IsPatientSavingMessageEnabled = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        IsPatientSavingMessageEnabled = False
                    End If
                Case "SHOWPATIENTSAVINGDIRECTMESSAGE"
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        IsPatientSavingInboxEnabled = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        IsPatientSavingMessageEnabled = False
                    End If
                    ''value should be 2273
                Case "STAGING10DOT6PORTALID"
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sSTAGING10DOT6PORTALID = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sSTAGING10DOT6PORTALID = ""
                    End If
                    ''value should be 422
                Case "STAGING8DOT1PORTALID"
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sSTAGING8DOT1PORTALID = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sSTAGING8DOT1PORTALID = ""
                    End If
                    ''value should be 338, for staging we have single account with 2 protal ids of 8.1 and 10.6
                Case "STAGING10DOT6ACCOUNTID"
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sSTAGING10DOT6ACCOUNTID = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sSTAGING10DOT6ACCOUNTID = ""
                    End If
                    ''value should be 264
                Case "SSPRODUCTIONPORTALID"
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sSSPRODUCTIONPORTALID = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sSSPRODUCTIONPORTALID = ""
                    End If
                    ''value should be 261, for production we have single account and 2 portal ids of 8.1 and 10.6
                Case "SSPRODUCTIONACCOUNTID"
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sSSPRODUCTIONACCOUNTID = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sSSPRODUCTIONACCOUNTID = ""
                    End If
                    ''value should be 1018
                Case "SSPRODUCTION10DOT6PORTALID"
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _sSSPRODUCTION10DOT6PORTALID = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _sSSPRODUCTION10DOT6PORTALID = ""
                    End If
                Case "CDAClinicalFamilyHistory".ToUpper()

                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False And Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)).Trim() <> "" Then
                        _ClinicalSummaryFamilyHistory = CType(dsData.Tables(0).Rows(nCount).Item(2), ClinicalSummaryHistory)
                    Else
                        _ClinicalSummaryFamilyHistory = ClinicalSummaryHistory.None
                    End If

                Case "CDAClinicalSocialHistory".ToUpper()

                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False And Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)).Trim() <> "" Then
                        _ClinicalSummarySocialHistory = CType(dsData.Tables(0).Rows(nCount).Item(2), ClinicalSummaryHistory)
                    Else
                        _ClinicalSummarySocialHistory = ClinicalSummaryHistory.None
                    End If
                Case "CDACLINICALPROCEDURE".ToUpper()

                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False And Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)).Trim() <> "" Then
                        _ClinicalSummaryProcedure = CType(dsData.Tables(0).Rows(nCount).Item(2), ClinicalSummaryHistory)
                    Else
                        _ClinicalSummaryProcedure = ClinicalSummaryHistory.None
                    End If
                Case "CDACLINICALVITAL".ToUpper()

                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False And Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)).Trim() <> "" Then
                        _ClinicalSummaryVital = CType(dsData.Tables(0).Rows(nCount).Item(2), ClinicalSummaryHistory)
                    Else
                        _ClinicalSummaryVital = ClinicalSummaryHistory.None
                    End If
                Case "SERVICESSERVERNAME".ToUpper()
                    ''Added SERVICESSERVERNAME by Ujwala on 02032015 to get ServicesDB Name from settings table     
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False And Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)).Trim() <> "" Then
                        m_ServicesServerName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_ServicesServerName = ""
                    End If
                    ''Added SERVICESSERVERNAME by Ujwala on 02032015 to get ServicesDB Name from settings table   
                Case "SERVICESDATABASENAME".ToUpper()
                    ''Added ServicesDatabaseName by Ujwala on 20022015 to get ServicesDB Name from settings table     
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False And Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)).Trim() <> "" Then
                        m_ServicesDatabaseName = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_ServicesDatabaseName = "gloServices"
                    End If
                    ''Added ServicesDatabaseName by Ujwala on 02032015 to get ServicesDB Name from settings table   
                Case "LuhnDigitCheckAlgorithmEnable".ToUpper()
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        IsLuhnDigitCheckAlgorithmEnable = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        IsLuhnDigitCheckAlgorithmEnable = True
                    End If
                Case "AllowPrintForCSSetting".ToUpper()
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        IsAllowPrintForCS = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        IsAllowPrintForCS = True
                    End If
                Case "EpcsEnableSetting".ToUpper()
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        IsEpcsEnble = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        IsEpcsEnble = False
                    End If
                Case "SERVICESUSERID".ToUpper()
                    ''Added SERVICESUSERID by Ujwala on 02032015 to get ServicesDB Name from settings table     
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False And Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)).Trim() <> "" Then
                        m_ServicesUserID = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_ServicesUserID = ""
                    End If
                    ''Added SERVICESUSERID by Ujwala on 02032015 to get ServicesDB Name from settings table   
                Case "SERVICESPASSWORD".ToUpper()
                    ''Added ServicesDatabaseName by Ujwala on 02032015 to get ServicesDB Name from settings table     
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False And Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)).Trim() <> "" Then
                        m_ServicesPassword = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_ServicesPassword = ""
                    End If
                    ''Added SERVICESPASSWORD by Ujwala on 02032015 to get ServicesDB Name from settings table  
                Case "SERVICESAUTHEN".ToUpper()
                    ''Added SERVICESAUTHEN by Ujwala on 02032015 to get ServicesDB Name from settings table     
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False And Convert.ToString(dsData.Tables(0).Rows(nCount).Item(2)).Trim() <> "" Then
                        m_ServicesAuthentication = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        m_ServicesAuthentication = False
                    End If
                    ''Added SERVICESAUTHEN by Ujwala on 02032015 to get ServicesDB Name from settings table 
                Case "DefaultProblemDxForSmartDx".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _SetProblemDxAsDefaultForSmartDx = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _SetProblemDxAsDefaultForSmartDx = False
                    End If
                Case "DefaultDxCPTPatientProblemDiagnosis".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _bDefaultDxCPTPatientProblemDiagnosis = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _bDefaultDxCPTPatientProblemDiagnosis = False
                    End If
                Case "EnableSmartDxReviewScreen".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _bEnableSmartDxReviewScreen = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _bEnableSmartDxReviewScreen = False
                    End If

                Case "Preselect diagnosis while placing EMDEON Orders".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        bPreselectDiagnosisWhilePlacingEMDEONOrders = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        bPreselectDiagnosisWhilePlacingEMDEONOrders = False
                    End If

                Case "Close DMS Task Window".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        bCloseDmstaskwin = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        bCloseDmstaskwin = False
                    End If

                Case "EmdeonGetLabOrdersFromDaysOnReload".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _EmdeonGetLabOrdersFromDaysOnReload = CType(dsData.Tables(0).Rows(nCount).Item(2), Int16)
                    Else
                        _EmdeonGetLabOrdersFromDaysOnReload = 90
                    End If

                Case "ISVITALREQUIRED"

                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _blnIsVitalRequired = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _blnIsVitalRequired = False
                    End If

                Case "ISICD9CPTREQUIRED"

                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _blnIsICD9CPTRequired = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _blnIsICD9CPTRequired = False
                    End If

                Case "RCM To DMS Category".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_RCMtoDMSCategory = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_RCMtoDMSCategory = ""
                    End If
                Case "GLOAUSPORTALURL".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        gloAusPortalUrl = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        gloAusPortalUrl = ""
                    End If
                Case "DEMONPIS".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        DemoNPIs = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        DemoNPIs = ""
                    End If
                Case "ShowUserNoteFirst".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _showUserNoteFirst = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        Return False
                    End If
                Case "LoadProbonMedication".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _LoadProbonMedication = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        _LoadProbonMedication = False
                    End If
                Case "LoadProblemDxCodeonRxReport".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        LoadProblemDxCodeonMeds = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        LoadProblemDxCodeonMeds = False
                    End If
                Case "WelchAllyn ECG Category".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        m_WelchAllynECGCategory = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        m_WelchAllynECGCategory = ""
                    End If
                Case "HoosKoosSurveyService".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        HoosKoosSurveyService = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        HoosKoosSurveyService = ""
                    End If
                Case "PDMPService".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        PDMPService = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        PDMPService = ""
                    End If
                Case "MedHxRestriction".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        MedHxRestriction = CType(dsData.Tables(0).Rows(nCount).Item(2), Int32)
                    Else
                        MedHxRestriction = 1
                    End If
                Case "PDMPAutoSettingEnable".ToUpper()
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        IsPDMPAuto = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        IsPDMPAuto = False
                    End If
                Case "PDMP_Username".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _PDMPparticipantid = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _PDMPparticipantid = ""
                    End If

                Case "PDMP_Password".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _PDMPPassword = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _PDMPPassword = ""
                    End If
                Case "PDMPSendToDMS".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        _IsPDMPSendToDMS = CType(dsData.Tables(0).Rows(nCount).Item(2), String)
                    Else
                        _IsPDMPSendToDMS = ""
                    End If
                Case "SendUnstructuredDocument".ToUpper
                    If IsDBNull(dsData.Tables(0).Rows(nCount).Item(2)) = False Then
                        IsXDMSecureMessageEnable = CType(dsData.Tables(0).Rows(nCount).Item(2), Boolean)
                    Else
                        IsXDMSecureMessageEnable = False
                    End If
            End Select
        Next
        Return True
    End Function

    'Public Function SetPwdComplexitySettings(ByVal NoofCapitalLetters As Integer, ByVal NoofLetters As Integer, ByVal NoofDigits As Integer, ByVal NoOfSpecialChars As Integer, ByVal NoofDays As Integer, ByVal strSQL As String) As Boolean
    Public Function SetPwdComplexitySettings(ByVal strSQL As String) As Boolean
        Dim conn As New SqlConnection(gloEMRAdmin.mdlGeneral.GetConnectionString)
        Dim cmd As SqlCommand
        Dim cnt As Integer = 0
        'Dim _strSQL As String = ""

        Try
            conn.Open()
            cmd = New SqlCommand(strSQL, conn)

            cmd.ExecuteNonQuery()

            Return True
        Catch ex As Exception
            MsgBox(ex.Message)
            Return False
        Finally
            conn.Close()
        End Try
    End Function


    '' Sandip Darade 20090709

    Public Sub Get_gloEMRSetting(ByVal SettingName As String, ByRef Value As Object)
        Dim oDB As New gloDatabaseLayer.DBLayer(gstrConnectionString)
        Dim oDBParameters As New gloDatabaseLayer.DBParameters()
        Try
            oDB.Connect(False)
            oDBParameters.Add("@sSettingsName", SettingName, System.Data.ParameterDirection.Input, System.Data.SqlDbType.VarChar)

            Value = oDB.ExecuteScalar_Query("SELECT ISNULL(sSettingsValue,'') AS sSettingsValue FROM Settings WHERE sSettingsName = '" & SettingName & "'")
        Catch DBErr As gloDatabaseLayer.DBException

            Value = Nothing
            DBErr.ERROR_Log(DBErr.Message)
        Catch ex As Exception

            Value = Nothing
        Finally
            oDB.Disconnect()
            oDBParameters.Dispose()
            oDB.Dispose()
        End Try
    End Sub

    '' Method Commented on 20091009
    '' Parameters passed were incomplete to this method. Used at only one place, respective modifications done
    'Public Sub Add_gloEMRSetting(ByVal SettingName As String, ByVal Value As String)
    '    Dim oDB As New gloDatabaseLayer.DBLayer(gstrConnectionString)
    '    Dim oDBParameters As New gloDatabaseLayer.DBParameters()
    '    Try
    '        oDB.Connect(False)
    '        oDBParameters.Add("@sSettingsName", SettingName, System.Data.ParameterDirection.Input, System.Data.SqlDbType.VarChar)
    '        oDBParameters.Add("@sSettingsValue", Value, System.Data.ParameterDirection.Input, System.Data.SqlDbType.VarChar)
    '        oDBParameters.Add("@nClinicID", gnClinicID, System.Data.ParameterDirection.Input, System.Data.SqlDbType.BigInt)
    '        oDBParameters.Add("@nUserID", 0, System.Data.ParameterDirection.Input, System.Data.SqlDbType.BigInt)
    '        oDBParameters.Add("@nUserClinicFlag", SettingFlag.Clinic, System.Data.ParameterDirection.Input, System.Data.SqlDbType.BigInt)

    '        oDB.Execute("gsp_InUpSettings", oDBParameters)
    '    Catch DBErr As gloDatabaseLayer.DBException
    '        DBErr.ERROR_Log(DBErr.Message)
    '    Catch ex As Exception
    '        MessageBox.Show(ex.ToString, gstrMessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Error)
    '    Finally
    '        oDB.Disconnect()
    '        oDBParameters.Dispose()
    '        oDB.Dispose()
    '    End Try
    'End Sub

    ''added by kishor 20141411
    Public Shared Function AddOrUpdateSettings(ByVal _sSingleCustiomizeReport As String, ByVal _sMultipleCustiomizeReport As String, ByVal _IsEpcsEnblelocal As Boolean, ByVal _IsAllowPrintForCSlocal As Boolean, ByRef dtSaveSettings As DataTable) As Boolean
        'Dim objCon As New SqlConnection
        'objCon.ConnectionString = gloEMRAdmin.mdlGeneral.GetConnectionString()
        'Dim objCmd As New SqlCommand
        'objCmd.CommandType = CommandType.StoredProcedure
        'objCmd.CommandText = "gsp_UpdateSettings"
        'Dim objParaSettingsName As New SqlParameter
        'Dim objParaSettingsValue As New SqlParameter
        'Dim objParaSettingsClinicID As New SqlParameter
        'Dim objParaSettingsUserID As New SqlParameter
        'Dim objParaSettingsUserClinicFlag As New SqlParameter
        'objCmd.Connection = objCon
        'objCon.Open()
        Try
            '    '' added by kishor 20141411
            '    objCmd.Parameters.Clear()
            '    With objParaSettingsName
            '        .ParameterName = "@SettingsName"
            '        .Value = "SingleRxStateCustiomizeReport"
            '        .Direction = ParameterDirection.Input
            '        .SqlDbType = SqlDbType.VarChar
            '    End With
            '    objCmd.Parameters.Add(objParaSettingsName)
            '    With objParaSettingsValue
            '        .ParameterName = "@SettingsValue"
            '        .Value = _sSingleCustiomizeReport
            '        .Direction = ParameterDirection.Input
            '        .SqlDbType = SqlDbType.VarChar
            '    End With

            '    objCmd.Parameters.Add(objParaSettingsValue)


            dtSaveSettings.Rows.Add("SingleRxStateCustiomizeReport", _sSingleCustiomizeReport, "SingleRxStateCustiomizeReport")

            dtSaveSettings.Rows.Add("MultipleRxStateCustiomizeReport", _sMultipleCustiomizeReport, "MultipleRxStateCustiomizeReport")
            dtSaveSettings.Rows.Add("EpcsEnableSetting", IIf(_IsEpcsEnblelocal = True, 1, 0), "EpcsEnableSetting")
            dtSaveSettings.Rows.Add("AllowPrintForCSSetting", IIf(_IsAllowPrintForCSlocal = True, 1, 0), "AllowPrintForCSSetting")



            'With objParaSettingsClinicID
            '    .ParameterName = "@nClinicID"
            '    .Value = 1
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.BigInt
            'End With
            'objCmd.Parameters.Add(objParaSettingsClinicID)

            'With objParaSettingsUserID
            '    .ParameterName = "@nUserID"
            '    .Value = 0
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.BigInt
            'End With
            'objCmd.Parameters.Add(objParaSettingsUserID)

            'With objParaSettingsUserClinicFlag
            '    .ParameterName = "@nUserClinicFlag"
            '    .Value = SettingFlag.Clinic
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.Int
            'End With
            'objCmd.Parameters.Add(objParaSettingsUserClinicFlag)
            'objCmd.ExecuteNonQuery()
            ' '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
            'objCmd.Parameters.Clear()
            'With objParaSettingsName
            '    .ParameterName = "@SettingsName"
            '    .Value = "MultipleRxStateCustiomizeReport"
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.VarChar
            'End With
            'objCmd.Parameters.Add(objParaSettingsName)
            'With objParaSettingsValue
            '    .ParameterName = "@SettingsValue"
            '    .Value = _sMultipleCustiomizeReport
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.VarChar
            'End With

            'objCmd.Parameters.Add(objParaSettingsValue)

            'With objParaSettingsClinicID
            '    .ParameterName = "@nClinicID"
            '    .Value = 1
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.BigInt
            'End With
            'objCmd.Parameters.Add(objParaSettingsClinicID)

            'With objParaSettingsUserID
            '    .ParameterName = "@nUserID"
            '    .Value = 0
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.BigInt
            'End With
            'objCmd.Parameters.Add(objParaSettingsUserID)

            'With objParaSettingsUserClinicFlag
            '    .ParameterName = "@nUserClinicFlag"
            '    .Value = SettingFlag.Clinic
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.Int
            'End With
            'objCmd.Parameters.Add(objParaSettingsUserClinicFlag)
            'objCmd.ExecuteNonQuery()
            ''''''''''''''''''''''''''''''''
            'objCmd.Parameters.Clear()
            'With objParaSettingsName
            '    .ParameterName = "@SettingsName"
            '    .Value = "EpcsEnableSetting"
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.VarChar
            'End With
            'objCmd.Parameters.Add(objParaSettingsName)
            'With objParaSettingsValue
            '    .ParameterName = "@SettingsValue"
            '    .Value = _IsEpcsEnblelocal
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.Bit
            'End With

            'objCmd.Parameters.Add(objParaSettingsValue)

            'With objParaSettingsClinicID
            '    .ParameterName = "@nClinicID"
            '    .Value = 1
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.BigInt
            'End With
            'objCmd.Parameters.Add(objParaSettingsClinicID)

            'With objParaSettingsUserID
            '    .ParameterName = "@nUserID"
            '    .Value = 0
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.BigInt
            'End With
            'objCmd.Parameters.Add(objParaSettingsUserID)

            'With objParaSettingsUserClinicFlag
            '    .ParameterName = "@nUserClinicFlag"
            '    .Value = SettingFlag.Clinic
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.Int
            'End With
            'objCmd.Parameters.Add(objParaSettingsUserClinicFlag)
            'objCmd.ExecuteNonQuery()
            ' ''''''''''''''''''''''''''''''''
            'objCmd.Parameters.Clear()
            'With objParaSettingsName
            '    .ParameterName = "@SettingsName"
            '    .Value = "AllowPrintForCSSetting"
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.VarChar
            'End With
            'objCmd.Parameters.Add(objParaSettingsName)
            'With objParaSettingsValue
            '    .ParameterName = "@SettingsValue"
            '    .Value = _IsAllowPrintForCSlocal
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.Bit
            'End With

            'objCmd.Parameters.Add(objParaSettingsValue)

            'With objParaSettingsClinicID
            '    .ParameterName = "@nClinicID"
            '    .Value = 1
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.BigInt
            'End With
            'objCmd.Parameters.Add(objParaSettingsClinicID)

            'With objParaSettingsUserID
            '    .ParameterName = "@nUserID"
            '    .Value = 0
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.BigInt
            'End With
            'objCmd.Parameters.Add(objParaSettingsUserID)

            'With objParaSettingsUserClinicFlag
            '    .ParameterName = "@nUserClinicFlag"
            '    .Value = SettingFlag.Clinic
            '    .Direction = ParameterDirection.Input
            '    .SqlDbType = SqlDbType.Int
            'End With
            'objCmd.Parameters.Add(objParaSettingsUserClinicFlag)
            'objCmd.ExecuteNonQuery()
            ''''''''''''''''''''''''''''''''EpcsChange


            Return True
            'Catch DBErr As gloDatabaseLayer.DBException

            '    Return False
        Catch ex As Exception
            Return False
            'Finally
            '    If Not IsNothing(objCmd) Then
            '        objCmd.Dispose()
            '        objCmd = Nothing
            '    End If
            '    If Not IsNothing(objCon) Then
            '        objCon.Close()
            '        objCon.Dispose()
            '        objCon = Nothing
            '    End If
            '    objParaSettingsName = Nothing
            '    objParaSettingsValue = Nothing
            '    objParaSettingsClinicID = Nothing
            '    objParaSettingsUserID = Nothing
        End Try
    End Function


    Public Function Add(ByVal Name As String, ByVal Value As String, ByVal ClinicID As Int64, ByVal UserID As Int64, ByVal UserClinicFlag As SettingFlag) As Boolean
        Dim oDB As New gloDatabaseLayer.DBLayer(gstrConnectionString)
        Dim oDBParameters As New gloDatabaseLayer.DBParameters()
        Try
            oDB.Connect(False)

            oDBParameters.Add("@sSettingsName", Name, System.Data.ParameterDirection.Input, System.Data.SqlDbType.VarChar)
            oDBParameters.Add("@sSettingsValue", Value, System.Data.ParameterDirection.Input, System.Data.SqlDbType.VarChar)
            oDBParameters.Add("@nClinicID", ClinicID, System.Data.ParameterDirection.Input, System.Data.SqlDbType.VarChar)
            oDBParameters.Add("@nUserID", 0, System.Data.ParameterDirection.Input, System.Data.SqlDbType.VarChar)
            oDBParameters.Add("@nUserClinicFlag", UserClinicFlag.GetHashCode(), System.Data.ParameterDirection.Input, System.Data.SqlDbType.VarChar)

            oDB.Execute("gsp_InUpSettings", oDBParameters)

            Return True
        Catch DBErr As gloDatabaseLayer.DBException

            Return False
        Catch ex As Exception

            Return False
        Finally
            oDB.Disconnect()
            oDBParameters.Dispose()
            oDB.Dispose()
        End Try
    End Function

    Public Sub AddSettings(ByVal ProviderID As Int64, ByVal SettingName As String, ByVal SettingValue As String, ByVal UserID As Long, ByVal ClinicID As Long, ByVal OthersID As Int64, ByVal SettingsType As String)
        Dim oDB As New gloDatabaseLayer.DBLayer(gstrConnectionString)
        Dim oDBParameters As New gloDatabaseLayer.DBParameters()

        Try
            oDB.Connect(False)

            oDBParameters.Add("@SettingName", SettingName, ParameterDirection.Input, SqlDbType.VarChar)
            oDBParameters.Add("@SettingValue", SettingValue, ParameterDirection.Input, SqlDbType.VarChar)
            oDBParameters.Add("@SettingFlag", False, ParameterDirection.Input, SqlDbType.Bit)
            oDBParameters.Add("@ProviderID", ProviderID, ParameterDirection.Input, SqlDbType.BigInt)
            oDBParameters.Add("@UserID", UserID, ParameterDirection.Input, SqlDbType.BigInt)
            oDBParameters.Add("@ClinicID", ClinicID, ParameterDirection.Input, SqlDbType.BigInt)
            oDBParameters.Add("@nOthersID", OthersID, ParameterDirection.Input, SqlDbType.BigInt)
            oDBParameters.Add("@sSettingsType", SettingsType, ParameterDirection.Input, SqlDbType.VarChar)

            oDB.Execute("gsp_InUpProviderSettings", oDBParameters)
        Catch dbex As gloDatabaseLayer.DBException
            dbex.ERROR_Log(dbex.ToString())
        Catch ex As Exception
        Finally
            If oDBParameters IsNot Nothing Then
                oDBParameters.Dispose()
            End If
            If oDB IsNot Nothing Then
                oDB.Dispose()
            End If
        End Try
    End Sub

    Public Sub GetSetting(ByVal SettingName As String, ByVal UserID As Int64, ByVal ClinicID As Int64, ByRef Value As Object)
        Dim oDB As New gloDatabaseLayer.DBLayer(gstrConnectionString)
        Try
            oDB.Connect(False)
            Dim _sqlQuery As String = "SELECT ISNULL(sSettingsValue,'') AS sSettingsValue FROM Settings WHERE sSettingsName = '" & SettingName & "' AND nClinicID = " & ClinicID & ""
            Value = oDB.ExecuteScalar_Query(_sqlQuery)
        Catch DBErr As gloDatabaseLayer.DBException
            Value = Nothing
            DBErr.ERROR_Log(DBErr.Message)
        Catch ex As Exception
            Value = Nothing
        Finally
            oDB.Disconnect()
            oDB.Dispose()
        End Try
    End Sub


    Public Sub IsSettingExsits(ByVal SettingName As String, ByVal UserID As Int64, ByVal ClinicID As Int64, ByRef Value As Object)
        Dim oDB As New gloDatabaseLayer.DBLayer(gstrConnectionString)
        Try
            oDB.Connect(False)
            Dim _sqlQuery As String = "SELECT Count(*) As Count FROM Settings WHERE sSettingsName = '" & SettingName & "' AND nClinicID = " & ClinicID & ""
            Value = oDB.ExecuteScalar_Query(_sqlQuery)
        Catch DBErr As gloDatabaseLayer.DBException
            Value = Nothing
            DBErr.ERROR_Log(DBErr.Message)
        Catch ex As Exception
            Value = Nothing
        Finally
            oDB.Disconnect()
            oDB.Dispose()
        End Try
    End Sub


    Public Sub AddPaymentSettings(ByVal InsuranceTypeCode As String, ByVal InsuranceTypeDesc As String, ByVal Payrow As String, ByVal PayrowIndex As String)
        Dim oDB As New gloDatabaseLayer.DBLayer(gstrConnectionString)
        Dim oDBParameters As New gloDatabaseLayer.DBParameters()
        'nSettingID, sInsTypeCode, sInsTypeDesc, sRowName, sRowIndex, sSettingsName, sSettingsValue, 
        'nProviderID, nUserID, nClinicID, nUserClinicProviderFlag
        Try
            oDB.Connect(False)
            '  oDBParameters.Add("@nSettingID", SettingName, ParameterDirection.Input, SqlDbType.VarChar)
            oDBParameters.Add("@sInsTypeCode", Convert.ToString(InsuranceTypeCode), ParameterDirection.Input, SqlDbType.VarChar)
            oDBParameters.Add("@sInsTypeDesc", InsuranceTypeDesc, ParameterDirection.Input, SqlDbType.VarChar)
            oDBParameters.Add("@sRowName", Payrow, ParameterDirection.Input, SqlDbType.VarChar)
            oDBParameters.Add("@sRowIndex", Convert.ToString(PayrowIndex), ParameterDirection.Input, SqlDbType.VarChar)
            oDBParameters.Add("@sSettingsName", "", ParameterDirection.Input, SqlDbType.VarChar)
            oDBParameters.Add("@sSettingsValue", "", ParameterDirection.Input, SqlDbType.VarChar)
            oDBParameters.Add("@nUserID", 0, ParameterDirection.Input, SqlDbType.BigInt)
            oDBParameters.Add("@nClinicID", 1, ParameterDirection.Input, SqlDbType.BigInt)
            oDBParameters.Add("@nProviderID", 0, ParameterDirection.Input, SqlDbType.BigInt)
            oDBParameters.Add("@nUserClinicProviderFlag", 0, ParameterDirection.Input, SqlDbType.BigInt)
            oDB.Execute("gsp_UpdatePaymentSettings", oDBParameters)
        Catch dbex As gloDatabaseLayer.DBException
            dbex.ERROR_Log(dbex.ToString())
        Catch ex As Exception
        Finally
            If oDBParameters IsNot Nothing Then
                oDBParameters.Dispose()
            End If
            If oDB IsNot Nothing Then
                oDB.Dispose()
            End If
        End Try
    End Sub

    Public Sub DeletePaymentsetting(ByVal InsuranceType As String)
        Try

            Dim oDB As New gloDatabaseLayer.DBLayer(gstrConnectionString)
            oDB.Connect(False)
            Dim _result As Integer
            _result = oDB.Execute_Query("DELETE Settings_Payment WHERE sInsTypeCode='" & InsuranceType & "'")

        Catch ex As Exception

        End Try
    End Sub
    Public Sub AddEMSettings(ByVal SettingName As String, ByVal SettingValue As String)
        '''''''''''''''Added by Ujwala Atre as on 2010/07/28 - For EM Coding Changes - Admin Settings
        Dim oDB As New gloDatabaseLayer.DBLayer(gstrConnectionString)
        Dim oDBParameters As New gloDatabaseLayer.DBParameters()

        Try
            oDB.Connect(False)

            oDBParameters.Add("@SettingsName", SettingName, ParameterDirection.Input, SqlDbType.VarChar)
            oDBParameters.Add("@SettingsValue", SettingValue, ParameterDirection.Input, SqlDbType.VarChar)
            oDBParameters.Add("@nClinicID", 1, ParameterDirection.Input, SqlDbType.BigInt)
            oDBParameters.Add("@nUserID", 0, ParameterDirection.Input, SqlDbType.BigInt)
            oDBParameters.Add("@nUserClinicFlag", enumSettingFlag.User, ParameterDirection.Input, SqlDbType.BigInt)

            oDB.Execute("gsp_UpdateSettings", oDBParameters)
        Catch dbex As gloDatabaseLayer.DBException
            dbex.ERROR_Log(dbex.ToString())
        Catch ex As Exception
        Finally
            If oDBParameters IsNot Nothing Then
                oDBParameters.Dispose()
            End If
            If oDB IsNot Nothing Then
                oDB.Dispose()
            End If
        End Try
        '''''''''''''''Added by Ujwala Atre as on 2010/07/28 - For EM Coding Changes - Admin Settings
    End Sub
    Public Function GetEMSettings() As DataTable
        '''''''''''''''Added by Ujwala Atre as on 2010/07/28 - For EM Coding Changes - Admin Settings
        Dim objCon As New SqlConnection
        Dim objCmd As New SqlCommand
        Dim dsData As New DataSet
        Try
            objCon.ConnectionString = gloEMRAdmin.mdlGeneral.GetConnectionString()

            objCmd.CommandType = CommandType.Text
            objCmd.CommandText = "Select nSettingsID as SettingsID,sSettingsName as SettingsName,sSettingsValue as SettingsValue from Settings where sSettingsName in ('EMEXAMTYPES','EMVISITTYPE')"
            objCmd.Connection = objCon

            objCon.Open()
            Dim objDA As New SqlDataAdapter(objCmd)
            objDA.Fill(dsData)

            '''''''''''''''
            Return dsData.Tables(0)
        Catch ex As Exception
        Finally
            objCon.Close()
            objCon = Nothing
            objCmd = Nothing
        End Try
        ''Return dsData.Tables(0)
        '''''''''''''''Added by Ujwala Atre as on 2010/07/28 - For EM Coding Changes - Admin Settings
    End Function


    Public Function SetLinkSetting(ByVal LinkName As String)
        Try
            Dim conn As New SqlConnection
            Dim cmd As New SqlCommand
            Dim _strSQL As String = ""
            _strSQL = "Update Settings SET sSettingsValue  = " & LinkName & " WHERE UPPER(sSettingsName) = 'MEDICATIONINFO'"
            conn.ConnectionString = gloEMRAdmin.mdlGeneral.GetConnectionString()
            conn.Open()
            cmd = New SqlCommand(_strSQL, conn)
            _strSQL = cmd.ExecuteNonQuery
            'If _strSQL <> "" Then
            '    gstrBannerName = _strSQL
            'Else
            '    gstrBannerName = ""
            'End If
            'lblLoginBaner.Text = gstrBannerName
            conn.Close()
        Catch ex As Exception

        Finally
        End Try
    End Function

    Public Function UpdatebIsEpcsEnable(ByVal IsEpcsEnable As Boolean) As Boolean
        Dim conn As SqlConnection
        Dim cmd As SqlCommand
        conn = New SqlConnection(gloEMRAdmin.mdlGeneral.GetConnectionString())
        Try
            conn.Open()
            cmd = New SqlCommand
            cmd.CommandType = CommandType.Text
            cmd.Connection = conn
            cmd.CommandText = "Update Clinic_MST set bIsEpcsEnable = '" & IsEpcsEnable & "'"
            cmd.ExecuteNonQuery()
        Catch ex As Exception
            MessageBox.Show(ex.Message, "Epcs Organizaion", MessageBoxButtons.OK, MessageBoxIcon.Error)
        Finally
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
                conn = Nothing
            End If
            If Not IsNothing(cmd) Then
                cmd.Dispose()
                cmd = Nothing
            End If

        End Try
    End Function

    Public Function FillAssociation() As DataTable

        Dim _oDBLayer As New gloDatabaseLayer.DBLayer(gloEMRAdmin.mdlGeneral.GetConnectionString())
        Dim _dtTemplates As New DataTable
        Dim _strSQL As String = String.Empty

        Try
            _strSQL = "SELECT nTemplateId FROM OBTemplates"

            _oDBLayer.Connect(False)
            _oDBLayer.Retrive_Query(_strSQL, _dtTemplates)

            Return _dtTemplates

        Catch ex As Exception
            MessageBox.Show(ex.ToString(), "OB Templates", MessageBoxButtons.OK, MessageBoxIcon.Error)
            Throw ex
            Return Nothing

        Finally

            If Not IsNothing(_dtTemplates) Then
                _dtTemplates.Dispose()
                _dtTemplates = Nothing
            End If

            If Not IsNothing(_oDBLayer) Then
                _oDBLayer.Disconnect()
                _oDBLayer.Dispose()
                _oDBLayer = Nothing
            End If

            _strSQL = String.Empty

        End Try

    End Function

    Public Sub SaveOBTemplates(ByVal ArrTemplate As Collection)


        Dim odb As New gloDatabaseLayer.DBLayer(gloEMRAdmin.mdlGeneral.GetConnectionString())

        Dim dtProvider As New DataTable
        Dim _strSQL As String = ""
        Dim dt As New DataTable
        Dim _sqlQuery As String = ""
        'Dim oParameter As gloDatabaseLayer.DBParameter = Nothing
        ' Dim oParameters As gloDatabaseLayer.DBParameters = Nothing
        Try
            odb.Connect(False)
            _strSQL = "DELETE FROM OBTemplates"

            odb.Execute_Query(_strSQL)
            odb.Disconnect()

            Dim dtTemplate As New DataTable()
            odb.Connect(False)

            For i As Int32 = 1 To ArrTemplate.Count
                Using oParameters As New gloDatabaseLayer.DBParameters()
                    oParameters.Clear()

                    Using oParameter As New gloDatabaseLayer.DBParameter

                        oParameter.DataType = SqlDbType.BigInt
                        oParameter.ParameterDirection = ParameterDirection.Input
                        oParameter.ParameterName = "@TemplateId"
                        oParameter.Value = ArrTemplate(i)
                        oParameters.Add(oParameter)

                    End Using

                    odb.Execute("gsp_SaveOBTemplates", oParameters)
                End Using


            Next

        Catch ex As Exception
            MessageBox.Show(ex.ToString, "OB Templates", MessageBoxButtons.OK, MessageBoxIcon.Error)
            ex = Nothing

        Finally

            ArrTemplate = Nothing

            If Not IsNothing(odb) Then
                odb.Disconnect()
                odb.Dispose()
                odb = Nothing
            End If

            _strSQL = String.Empty
        End Try
    End Sub

    Public Function GetOBTemplatesList() As DataTable

        Dim oDBLayer As New gloDatabaseLayer.DBLayer(gloEMRAdmin.mdlGeneral.GetConnectionString())
        Dim dtTemplate As New DataTable()

        Try
            oDBLayer.Connect(False)
            oDBLayer.Retrive("gsp_GetOBTemplates", dtTemplate)

            Return dtTemplate

        Catch ex As Exception
            MessageBox.Show(ex.ToString, "OB Templates", MessageBoxButtons.OK, MessageBoxIcon.Error)
            Throw ex
            Return Nothing

        Finally
            If Not IsNothing(dtTemplate) Then
                dtTemplate.Dispose()
                dtTemplate = Nothing
            End If

            If Not IsNothing(oDBLayer) Then
                oDBLayer.Disconnect()
                oDBLayer.Dispose()
                oDBLayer = Nothing
            End If

        End Try
    End Function

#End Region


End Class

Friend Class clsSettingsGeneral
    ''' <summary>
    ''' This method is called for reading Settings stored per user per Clinic information.
    ''' </summary>
    ''' <param name="SettingName">Name of Setting </param>
    ''' <param name="UserID">User Identifier</param>
    ''' <param name="ClinicID">Clinic ID</param>
    ''' <param name="Value">Setting Value</param>
    ''' <remarks></remarks>
    Public Shared Sub GetSetting(ByVal SettingName As String, ByVal UserID As Int64, ByVal ClinicID As Int64, ByRef Value As Object)
        Dim oDB As New gloDatabaseLayer.DBLayer(gstrConnectionString)
        Try
            oDB.Connect(False)
            Dim _sqlQuery As String = "SELECT Top 1 ISNULL(sSettingsValue,'') AS sSettingsValue FROM Settings WHERE sSettingsName = '" & SettingName & "' AND nClinicID = " & ClinicID & ""
            Value = oDB.ExecuteScalar_Query(_sqlQuery)
            oDB.Disconnect()

        Catch DBErr As gloDatabaseLayer.DBException
            Value = Nothing
            DBErr.ERROR_Log(DBErr.Message)
        Catch ex As Exception
            Value = Nothing
        Finally
            If Not IsNothing(oDB) Then

                oDB.Disconnect()
                oDB.Dispose()
            End If

        End Try
    End Sub
    ''' <summary>
    ''' This method is need to be called for only in case USERs are not required/Stored and Settings are global in Clinic.
    ''' </summary>
    ''' <param name="SettingName">Name of Setting </param>
    ''' <param name="ClinicID">Clinic ID</param>
    ''' <param name="Value">Setting Value</param>
    ''' <remarks></remarks>
    Public Shared Sub GetSetting(ByVal SettingName As String, ByVal ClinicID As Int64, ByRef Value As Object)
        Dim oDB As New gloDatabaseLayer.DBLayer(gstrConnectionString)
        Try
            oDB.Connect(False)
            Dim _sqlQuery As String = "SELECT Top 1 ISNULL(sSettingsValue,'') AS sSettingsValue FROM Settings WHERE sSettingsName = '" & SettingName & "' AND nClinicID = " & ClinicID & ""
            Value = oDB.ExecuteScalar_Query(_sqlQuery)
            oDB.Disconnect()

        Catch DBErr As gloDatabaseLayer.DBException
            Value = Nothing
            DBErr.ERROR_Log(DBErr.Message & ": ProviderDetails exception :" + DBErr.ToString())
            '  MessageBox.Show(gstrMessageBoxCaption, MessageBoxButtons.OK, MessageBoxIcon.Error, )
        Catch ex As Exception
            Value = Nothing
            '  DBErr.ERROR_Log(DBErr.Message & ": ProviderDetails exception :" + ex.ToString())

        Finally

            If Not IsNothing(oDB) Then
                oDB.Disconnect()
                oDB.Dispose()
            End If

        End Try
    End Sub
    ''' <summary>
    ''' This method is need to be called for only in case Clinic and User levels are not required and Settings are global in Clinic.
    ''' </summary>
    ''' <param name="SettingName">Name of Setting </param>
    ''' <param name="Value">Setting Value</param>
    ''' <remarks></remarks>
    Public Shared Sub GetSetting(ByVal SettingName As String, ByRef Value As Object)
        Dim oDB As New gloDatabaseLayer.DBLayer(gstrConnectionString)
        Try
            oDB.Connect(False)
            Dim _sqlQuery As String = "SELECT Top 1 ISNULL(sSettingsValue,'') AS sSettingsValue FROM Settings WHERE sSettingsName = '" & SettingName & "'"
            Value = oDB.ExecuteScalar_Query(_sqlQuery)
            oDB.Disconnect()

        Catch DBErr As gloDatabaseLayer.DBException
            Value = Nothing
            DBErr.ERROR_Log(DBErr.Message)
        Catch ex As Exception
            Value = Nothing
        Finally
            If Not IsNothing(oDB) Then

                oDB.Disconnect()
                oDB.Dispose()
            End If
        End Try
    End Sub
End Class
