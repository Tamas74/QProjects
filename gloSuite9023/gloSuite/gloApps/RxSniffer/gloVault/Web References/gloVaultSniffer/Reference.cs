//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace gloVault.gloVaultSniffer {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="gloVaultSnifferSoap", Namespace="http://tempuri.org/")]
    public partial class gloVaultSniffer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessElementRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CProcessCDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRequestAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyApprovalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessKeyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public gloVaultSniffer() {
            this.Url = global::gloVault.Properties.Settings.Default.gloVault_gloVaultSniffer_gloVaultSniffer;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event ProcessElementRequestCompletedEventHandler ProcessElementRequestCompleted;
        
        /// <remarks/>
        public event CProcessCDCompletedEventHandler CProcessCDCompleted;
        
        /// <remarks/>
        public event SendRequestAccessCompletedEventHandler SendRequestAccessCompleted;
        
        /// <remarks/>
        public event GetMyApprovalsCompletedEventHandler GetMyApprovalsCompleted;
        
        /// <remarks/>
        public event GetAccessKeyCompletedEventHandler GetAccessKeyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcessElementRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProcessElementRequest([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] ProElement, string _Key, out string _Message) {
            object[] results = this.Invoke("ProcessElementRequest", new object[] {
                        ProElement,
                        _Key});
            _Message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessElementRequestAsync(byte[] ProElement, string _Key) {
            this.ProcessElementRequestAsync(ProElement, _Key, null);
        }
        
        /// <remarks/>
        public void ProcessElementRequestAsync(byte[] ProElement, string _Key, object userState) {
            if ((this.ProcessElementRequestOperationCompleted == null)) {
                this.ProcessElementRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessElementRequestOperationCompleted);
            }
            this.InvokeAsync("ProcessElementRequest", new object[] {
                        ProElement,
                        _Key}, this.ProcessElementRequestOperationCompleted, userState);
        }
        
        private void OnProcessElementRequestOperationCompleted(object arg) {
            if ((this.ProcessElementRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessElementRequestCompleted(this, new ProcessElementRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CProcessCD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CProcessCD([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] ProElement, string _proId, string _Key, out string _Message) {
            object[] results = this.Invoke("CProcessCD", new object[] {
                        ProElement,
                        _proId,
                        _Key});
            _Message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CProcessCDAsync(byte[] ProElement, string _proId, string _Key) {
            this.CProcessCDAsync(ProElement, _proId, _Key, null);
        }
        
        /// <remarks/>
        public void CProcessCDAsync(byte[] ProElement, string _proId, string _Key, object userState) {
            if ((this.CProcessCDOperationCompleted == null)) {
                this.CProcessCDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCProcessCDOperationCompleted);
            }
            this.InvokeAsync("CProcessCD", new object[] {
                        ProElement,
                        _proId,
                        _Key}, this.CProcessCDOperationCompleted, userState);
        }
        
        private void OnCProcessCDOperationCompleted(object arg) {
            if ((this.CProcessCDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CProcessCDCompleted(this, new CProcessCDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendRequestAccess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendRequestAccess([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] ProList, string _Key, out string strOutmessatge) {
            object[] results = this.Invoke("SendRequestAccess", new object[] {
                        ProList,
                        _Key});
            strOutmessatge = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendRequestAccessAsync(byte[] ProList, string _Key) {
            this.SendRequestAccessAsync(ProList, _Key, null);
        }
        
        /// <remarks/>
        public void SendRequestAccessAsync(byte[] ProList, string _Key, object userState) {
            if ((this.SendRequestAccessOperationCompleted == null)) {
                this.SendRequestAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRequestAccessOperationCompleted);
            }
            this.InvokeAsync("SendRequestAccess", new object[] {
                        ProList,
                        _Key}, this.SendRequestAccessOperationCompleted, userState);
        }
        
        private void OnSendRequestAccessOperationCompleted(object arg) {
            if ((this.SendRequestAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRequestAccessCompleted(this, new SendRequestAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyApprovals", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetMyApprovals(string _Key, string _reQuestId) {
            object[] results = this.Invoke("GetMyApprovals", new object[] {
                        _Key,
                        _reQuestId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMyApprovalsAsync(string _Key, string _reQuestId) {
            this.GetMyApprovalsAsync(_Key, _reQuestId, null);
        }
        
        /// <remarks/>
        public void GetMyApprovalsAsync(string _Key, string _reQuestId, object userState) {
            if ((this.GetMyApprovalsOperationCompleted == null)) {
                this.GetMyApprovalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyApprovalsOperationCompleted);
            }
            this.InvokeAsync("GetMyApprovals", new object[] {
                        _Key,
                        _reQuestId}, this.GetMyApprovalsOperationCompleted, userState);
        }
        
        private void OnGetMyApprovalsOperationCompleted(object arg) {
            if ((this.GetMyApprovalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyApprovalsCompleted(this, new GetMyApprovalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccessKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetAccessKey(string _reQuestId, string _locId, out string _Key) {
            object[] results = this.Invoke("GetAccessKey", new object[] {
                        _reQuestId,
                        _locId});
            _Key = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessKeyAsync(string _reQuestId, string _locId) {
            this.GetAccessKeyAsync(_reQuestId, _locId, null);
        }
        
        /// <remarks/>
        public void GetAccessKeyAsync(string _reQuestId, string _locId, object userState) {
            if ((this.GetAccessKeyOperationCompleted == null)) {
                this.GetAccessKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessKeyOperationCompleted);
            }
            this.InvokeAsync("GetAccessKey", new object[] {
                        _reQuestId,
                        _locId}, this.GetAccessKeyOperationCompleted, userState);
        }
        
        private void OnGetAccessKeyOperationCompleted(object arg) {
            if ((this.GetAccessKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessKeyCompleted(this, new GetAccessKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProcessElementRequestCompletedEventHandler(object sender, ProcessElementRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessElementRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessElementRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string _Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CProcessCDCompletedEventHandler(object sender, CProcessCDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CProcessCDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CProcessCDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string _Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendRequestAccessCompletedEventHandler(object sender, SendRequestAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendRequestAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendRequestAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strOutmessatge {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMyApprovalsCompletedEventHandler(object sender, GetMyApprovalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyApprovalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyApprovalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccessKeyCompletedEventHandler(object sender, GetAccessKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string _Key {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591